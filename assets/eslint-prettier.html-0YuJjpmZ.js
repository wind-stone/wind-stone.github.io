import { r as resolveComponent, c as createElementBlock, d as createBaseVNode, a as createVNode, e as withCtx, b as createStaticVNode, o as openBlock, f as createTextVNode } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
const _hoisted_1 = { class: "table-of-contents" };
function _sfc_render(_ctx, _cache) {
  const _component_router_link = resolveComponent("router-link");
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[13] || (_cache[13] = createBaseVNode("h1", {
      id: "eslint-与-prettier-的集成",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#eslint-与-prettier-的集成"
      }, [
        createBaseVNode("span", null, "ESLint - 与 Prettier 的集成")
      ])
    ], -1)),
    createBaseVNode("nav", _hoisted_1, [
      createBaseVNode("ul", null, [
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#prettier-简介" }, {
            default: withCtx(() => _cache[0] || (_cache[0] = [
              createTextVNode("Prettier 简介")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#为什么使用-prettier" }, {
                default: withCtx(() => _cache[1] || (_cache[1] = [
                  createTextVNode("为什么使用 Prettier")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#prettier-与-linters" }, {
                default: withCtx(() => _cache[2] || (_cache[2] = [
                  createTextVNode("Prettier 与 Linters")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#eslint-config-prettier" }, {
            default: withCtx(() => _cache[3] || (_cache[3] = [
              createTextVNode("eslint-config-prettier")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#eslint-plugin-prettier" }, {
            default: withCtx(() => _cache[4] || (_cache[4] = [
              createTextVNode("eslint-plugin-prettier")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#eslint-config-prettier-和-eslint-plugin-prettier-的集成" }, {
            default: withCtx(() => _cache[5] || (_cache[5] = [
              createTextVNode("eslint-config-prettier 和 eslint-plugin-prettier 的集成")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#推荐配置" }, {
            default: withCtx(() => _cache[6] || (_cache[6] = [
              createTextVNode("推荐配置")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#安装依赖" }, {
                default: withCtx(() => _cache[7] || (_cache[7] = [
                  createTextVNode("安装依赖")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#配置-eslintrc" }, {
                default: withCtx(() => _cache[8] || (_cache[8] = [
                  createTextVNode("配置 .eslintrc.*")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#配置-prettier-规则" }, {
                default: withCtx(() => _cache[9] || (_cache[9] = [
                  createTextVNode("配置 Prettier 规则")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#prettier-所有配置项" }, {
                    default: withCtx(() => _cache[10] || (_cache[10] = [
                      createTextVNode("Prettier 所有配置项")
                    ])),
                    _: 1
                  })
                ])
              ])
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#集成其他-eslint-插件" }, {
            default: withCtx(() => _cache[11] || (_cache[11] = [
              createTextVNode("集成其他 ESLint 插件")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#vs-code-配置" }, {
            default: withCtx(() => _cache[12] || (_cache[12] = [
              createTextVNode("VS Code 配置")
            ])),
            _: 1
          })
        ])
      ])
    ]),
    _cache[14] || (_cache[14] = createStaticVNode('<h2 id="prettier-简介" tabindex="-1"><a class="header-anchor" href="#prettier-简介"><span>Prettier 简介</span></a></h2><p>Prettier 是由 Facebook 公司开发的<code>opinionated</code>的代码格式化工具，它移除了代码的原始风格，并确保所有输出的代码遵守一致的风格。</p><p>所谓<code>opinionated</code>，就是指 Prettier 强制规定了一些风格，你必须按照它指定的方式去组织代码。要是不赞成 Prettier 的风格，就不要使用它。</p><p>Prettier 也提供了极少的、必要的配置项，允许用户对一些较有争议的选项进行定制，除此之外的大部分规则都不允许配置，因为配置项越多，关于风格的争吵就会越多。</p><p>Prettier 会忽略代码的原始风格，并将代码解析为 AST，按照 Prettier 自己的规则并将最大行长度纳入考虑范围内，将 AST 重新输出为新的风格的代码。</p><h3 id="为什么使用-prettier" tabindex="-1"><a class="header-anchor" href="#为什么使用-prettier"><span>为什么使用 Prettier</span></a></h3><ul><li>构建和强制一套风格指南 <ul><li>到目前为止，采用 Prettier 最大的原因是，停止一切正在进行的关于风格的争吵。众所周知，通用的风格指南对项目和团队都是特别有价值的，但是达成通用的风格指南是非常痛苦的过程，也是不值得的。人们对以一种特定的方式写代码是非常有情绪的，没有人愿意花时间写和接受<code>nits</code>。</li><li>因此，选择 Prettier 而不是其他风格指南的原因是，它是唯一自动化的风格指南。即使 Prettier 不能 100% 按照你想要的方式格式化所有的代码，但是鉴于 Prettier 独一无二的优势，有一些“牺牲”也是值得的。</li></ul></li><li>帮助新手，比如 <ul><li>以前使用另一个代码风格指南的人</li><li>从其他编程语言转过的人</li></ul></li><li>编写代码 <ul><li>帮助开发者自动格式化代码，节省大量时间</li></ul></li><li>易于采用</li><li>...</li></ul><h3 id="prettier-与-linters" tabindex="-1"><a class="header-anchor" href="#prettier-与-linters"><span>Prettier 与 Linters</span></a></h3><p>校验工具如 ESLint 等，一般有两类规则：</p><ul><li>格式化类的规则，比如 <ul><li><a href="https://eslint.org/docs/rules/max-len" target="_blank" rel="noopener noreferrer">max-len</a></li><li><a href="https://eslint.org/docs/rules/no-mixed-spaces-and-tabs" target="_blank" rel="noopener noreferrer">no-mixed-spaces-and-tabs</a></li><li><a href="https://eslint.org/docs/rules/keyword-spacing" target="_blank" rel="noopener noreferrer">keyword-spacing</a></li><li><a href="https://eslint.org/docs/rules/comma-style" target="_blank" rel="noopener noreferrer">comma-style</a></li></ul></li><li>代码质量类的规则，比如 <ul><li><a href="https://eslint.org/docs/rules/no-unused-vars" target="_blank" rel="noopener noreferrer">no-unused-vars</a></li><li><a href="https://eslint.org/docs/rules/no-extra-bind" target="_blank" rel="noopener noreferrer">no-extra-bind</a></li><li><a href="https://eslint.org/docs/rules/no-implicit-globals" target="_blank" rel="noopener noreferrer">no-implicit-globals</a></li><li><a href="https://eslint.org/docs/rules/prefer-promise-reject-errors" target="_blank" rel="noopener noreferrer">prefer-promise-reject-errors</a></li></ul></li></ul><p>Prettier 可以完全消除对整个格式化类规则的需要！Prettier 将以一致化的风格重新输出整个项目，因此程序员再也不会有格式化方面的错误了。</p><p>但是 Prettier 对代码质量类的规则毫无用处，这也是校验工具提供的最重要的功能，因为它们可以捕获你代码里真正的 bug。</p><h2 id="eslint-config-prettier" tabindex="-1"><a class="header-anchor" href="#eslint-config-prettier"><span>eslint-config-prettier</span></a></h2><p><a href="https://github.com/prettier/eslint-config-prettier" target="_blank" rel="noopener noreferrer"><code>eslint-config-prettier</code></a>是 ESLint 的配置库，用于关闭那些不需要或与 Prettier 冲突的 ESLint 规则。这可以让你在使用 Prettier 时，可以使用你最喜欢的 ESLint 共享配置而不使用该共享配置里有关样式的规则。注意，这个配置只是关闭规则，因此仅在与其他配置一起使用时才有意义。</p><p>若是单独使用<code>eslint-config-prettier</code>（即不使用<code>eslint-plugin-prettier</code>），则应该如下继承配置:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// .eslintrc.*</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;extends&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;some-other-config-you-use&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为<code>eslint-config-prettier</code>是要关闭其他配置的样式规则，所以必须放在其他 ESLint 配置之后。</p><h2 id="eslint-plugin-prettier" tabindex="-1"><a class="header-anchor" href="#eslint-plugin-prettier"><span>eslint-plugin-prettier</span></a></h2><p><a href="https://github.com/prettier/eslint-plugin-prettier" target="_blank" rel="noopener noreferrer"><code>eslint-plugin-prettier</code></a>是使用 Prettier 进行格式化的 ESLint 插件，它会将 Pretter 作为 ESLint 的一条规则来运行并进行格式化，然后与格式化之前的代码进行对比，如果出现了不一致，这个地方就会被 Prettier 进行标记并报告出来。</p><p>若是单独使用<code>eslint-plugin-prettier</code>（即不使用<code>eslint-config-prettier</code>），则应该如下进行配置:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// .eslintrc.*</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;plugins&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;rules&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;prettier/prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;error&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若是你禁用了所有其他与代码格式化相关的 ESLint 规则，则<code>eslint-plugin-prettier</code>插件将工作地最好。若是使用了另一个在代码格式化方面与 Prettier 不一致的 ESLint 规则，则引起校验错误是无可避免的。正如上面<code>eslint-config-prettier</code>所介绍的，你可以使用<code>eslint-config-prettier</code>来禁用所有 ESLint 的与格式化相关的规则。</p><h2 id="eslint-config-prettier-和-eslint-plugin-prettier-的集成" tabindex="-1"><a class="header-anchor" href="#eslint-config-prettier-和-eslint-plugin-prettier-的集成"><span>eslint-config-prettier 和 eslint-plugin-prettier 的集成</span></a></h2><p>因此，正常情况下，会同时使用<code>eslint-plugin-prettier</code>和<code>eslint-config-prettier</code>，其配置为:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// .eslintrc.*</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;extends&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;some-other-config-you-use&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;plugins&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;rules&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;prettier/prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;error&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="推荐配置" tabindex="-1"><a class="header-anchor" href="#推荐配置"><span>推荐配置</span></a></h2><p>以上这种方式的集成配置较为繁琐，<code>eslint-plugin-prettier</code>提供了一种简单的配置方式。</p><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --save-exact</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prettier</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eslint-plugin-prettier</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eslint-config-prettier</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置-eslintrc" tabindex="-1"><a class="header-anchor" href="#配置-eslintrc"><span>配置 .eslintrc.*</span></a></h3><p><code>.eslintrc.*</code>文件:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;extends&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;plugin:prettier/recommended&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这一行配置做了三件事情:</p><ul><li>启用了<code>eslint-plugin-prettier</code>插件</li><li>设置了<code>&quot;prettier/prettier&quot;</code>规则为<code>&quot;error&quot;</code></li><li>继承了<code>eslint-config-prettier</code>配置</li></ul><p>若是打开<code>node_modules/eslint-plugin-prettier/eslint-plugin-prettier.js</code>文件，可以看到:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  configs</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    recommended</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      extends</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      plugins</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      rules</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;prettier/prettier&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;error&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>即<code>&quot;extends&quot;: [&quot;plugin:prettier/recommended&quot;]</code>这一行实际上是以下配置的缩写方式。</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;extends&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;plugins&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;rules&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;prettier/prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;error&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置-prettier-规则" tabindex="-1"><a class="header-anchor" href="#配置-prettier-规则"><span>配置 Prettier 规则</span></a></h3><p>以上的配置都是使用的 Prettier 的默认配置，若是想要自定义 Prettier 的配置，需要做两件事情:、</p><ol><li>针对不会被 ESLint 格式化的文件类型，需要在项目根目录添加一个<code>.prettierrc</code>的配置文件</li><li>针对会被 ESLint 格式化的文件类型，Prettier 会作为 ESLint 的一个规则运行并格式化文件，因此需要在<code>.eslintrc.*</code>的<code>rule</code>里添加如下配置</li></ol><p><code>.prettierrc</code>配置如下:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;tabWidth&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;singleQuote&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.eslintrc.*</code>配置如下:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;extends&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;plugin:prettier/recommended&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;rules&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;prettier/prettier&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;error&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 针对会被 ESLint 格式化的文件类型，Prettier 会作为 ESLint 的一个规则运行并格式化文件，因此需要添加如下配置</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;tabWidth&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;singleQuote&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="prettier-所有配置项" tabindex="-1"><a class="header-anchor" href="#prettier-所有配置项"><span>Prettier 所有配置项</span></a></h4><table><thead><tr><th>配置项</th><th>默认值</th><th>建议取值</th><th>意义</th></tr></thead><tbody><tr><td>printWidth</td><td>80</td><td>120</td><td>行宽</td></tr><tr><td>tabWidth</td><td>2</td><td>4</td><td>指定每个缩进的空格数量</td></tr><tr><td>useTabs</td><td>false</td><td>false</td><td>行的缩进是否使用 Tab 而不是空格</td></tr><tr><td>semi</td><td>true</td><td>true</td><td>语句行尾是否添加分号</td></tr><tr><td>singleQuote</td><td>false</td><td>true</td><td>字符串是否使用单引号而不是双引号</td></tr><tr><td>quoteProps</td><td>&quot;as-needed&quot;</td><td>&quot;as-needed&quot;</td><td>对象的属性是否要加引号</td></tr><tr><td>jsxSingleQuote</td><td>false</td><td>false</td><td>JSX 里是否使用单引号而不是双引号</td></tr><tr><td>trailingComma</td><td>&quot;none&quot;</td><td>&quot;es5&quot;</td><td>多行时任何可能的地方是否添加尾逗号</td></tr><tr><td>bracketSpacing</td><td>true</td><td>true</td><td>对象字面量的大括号内部是否添加空格</td></tr><tr><td>jsxBracketSameLine</td><td>true</td><td>false</td><td>是否将<code>&gt;</code>放置在多行 JSX 元素最后一行的结尾，而不是放在下一行</td></tr><tr><td>arrowParens</td><td>&quot;avoid&quot;</td><td>&quot;avoid&quot;</td><td>箭头函数只有一个参数时，参数是否使用圆括号</td></tr><tr><td>rangeStart</td><td>0</td><td>0</td><td>被格式化文件的行起点</td></tr><tr><td>rangeEnd</td><td>Infinity</td><td>Infinity</td><td>被格式化文件的行终点</td></tr><tr><td>parser</td><td>-</td><td>-</td><td>指定使用的解析器</td></tr><tr><td>filepath</td><td>-</td><td>-</td><td>指定使用哪个文件来指明使用哪个解析器</td></tr><tr><td>requirePragma</td><td>false</td><td>false</td><td>是否在文件顶部包含<code>@prettier</code>或<code>@format</code>的注释时才格式化</td></tr><tr><td>insertPragma</td><td>false</td><td>false</td><td>是否在文件顶部添加<code>@format</code>标记来指明该文件已经被格式化</td></tr><tr><td>proseWrap</td><td>&quot;preserve&quot;</td><td>&quot;preserve&quot;</td><td>指定如何处理 Markdown 文本的换行</td></tr><tr><td>htmlWhitespaceSensitivity</td><td>&quot;css&quot;</td><td>&quot;strict&quot;</td><td>指定如何 HTML 文件里的全局空白敏感的行为</td></tr><tr><td>endOfLine</td><td>&quot;auto&quot;</td><td>&quot;lf&quot;</td><td>采用哪一种行尾换行符</td></tr></tbody></table><h2 id="集成其他-eslint-插件" tabindex="-1"><a class="header-anchor" href="#集成其他-eslint-插件"><span>集成其他 ESLint 插件</span></a></h2><p>此外，为了支持特殊的 ESLint 插件（比如，<code>eslint-plugin-vue</code>），你可以如下添加额外的配置:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;extends&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;plugin:prettier/recommended&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prettier/vue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vs-code-配置" tabindex="-1"><a class="header-anchor" href="#vs-code-配置"><span>VS Code 配置</span></a></h2><p>安装 VS Code 的 ESLint 插件和 Prettier - Code formatter 插件，并在 Code -&gt; 首选项（<code>Preferences</code>） -&gt; 设置（<code>Settings</code>），添加如下配置：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Format a file on save. A formatter must be available, the file must not be auto-saved, and editor must not be shutting down.</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;editor.formatOnSave&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 设置文件默认的格式化工具为 Prettier - Code formatter</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 当文件存在多个 VS Code 的 formatter 插件对同一个文件类型进行格式化时，需要手动选择 prettier-vscode 即 Prettier - Code formatter 插件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;[jsonc]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;editor.defaultFormatter&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;esbenp.prettier-vscode&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;[javascript]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 关闭编辑器对 js 文件的格式化，交给 ESLint 来做格式化，否则会格式化两次</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;editor.formatOnSave&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">false</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Eslint 插件配置，详见 https://github.com/microsoft/vscode-eslint</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Enables auto fix on save. Please note auto fix on save is only available if VS Code&#39;s files.autoSave is either off, onFocusChange or onWindowChange. It will not work with afterDelay.</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;eslint.autoFixOnSave&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;eslint.alwaysShowStatus&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // An array of language ids which should be validated by ESLint</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;eslint.validate&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;language&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;html&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;autoFix&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;language&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;javascript&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;autoFix&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;language&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;vue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;autoFix&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ],</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Vetur（若安装了此插件的话）</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 关闭 vetur 的格式化功能</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;vetur.format.enable&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 关闭 vetur 对 template 的检查，交给 eslint，详见：https://vuejs.github.io/vetur/linting-error.html#linting-for-template</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;vetur.validation.template&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">false</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主要的配置内容有:</p><ul><li>关闭 Vetur 对文件的格式化及对<code>&lt;template&gt;</code>的检查（若是存在 Vetur 插件）</li><li>启用 ESLint 插件对文件的自动格式化和修复功能</li><li>设置文件的格式化工具为 Prettier - Code formatter（当出现对同一文件类型的多个 formatter 时，需要手动选择使用 Prettier - Code formatter）</li></ul>', 55)),
    createVNode(_component_global_config)
  ]);
}
const eslintPrettier_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "eslint-prettier.html.vue"]]);
const data = JSON.parse('{"path":"/front-end-engineering/tools/style-guide/code-formatter/eslint/eslint-prettier.html","title":"ESLint - 与 Prettier 的集成","lang":"en-US","frontmatter":{"description":"ESLint - 与 Prettier 的集成 Prettier 简介 Prettier 是由 Facebook 公司开发的opinionated的代码格式化工具，它移除了代码的原始风格，并确保所有输出的代码遵守一致的风格。 所谓opinionated，就是指 Prettier 强制规定了一些风格，你必须按照它指定的方式去组织代码。要是不赞成 Pret...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/front-end-engineering/tools/style-guide/code-formatter/eslint/eslint-prettier.html"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"ESLint - 与 Prettier 的集成"}],["meta",{"property":"og:description","content":"ESLint - 与 Prettier 的集成 Prettier 简介 Prettier 是由 Facebook 公司开发的opinionated的代码格式化工具，它移除了代码的原始风格，并确保所有输出的代码遵守一致的风格。 所谓opinionated，就是指 Prettier 强制规定了一些风格，你必须按照它指定的方式去组织代码。要是不赞成 Pret..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-31T12:47:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-31T12:47:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ESLint - 与 Prettier 的集成\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-31T12:47:00.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Prettier 简介","slug":"prettier-简介","link":"#prettier-简介","children":[{"level":3,"title":"为什么使用 Prettier","slug":"为什么使用-prettier","link":"#为什么使用-prettier","children":[]},{"level":3,"title":"Prettier 与 Linters","slug":"prettier-与-linters","link":"#prettier-与-linters","children":[]}]},{"level":2,"title":"eslint-config-prettier","slug":"eslint-config-prettier","link":"#eslint-config-prettier","children":[]},{"level":2,"title":"eslint-plugin-prettier","slug":"eslint-plugin-prettier","link":"#eslint-plugin-prettier","children":[]},{"level":2,"title":"eslint-config-prettier 和 eslint-plugin-prettier 的集成","slug":"eslint-config-prettier-和-eslint-plugin-prettier-的集成","link":"#eslint-config-prettier-和-eslint-plugin-prettier-的集成","children":[]},{"level":2,"title":"推荐配置","slug":"推荐配置","link":"#推荐配置","children":[{"level":3,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":3,"title":"配置 .eslintrc.*","slug":"配置-eslintrc","link":"#配置-eslintrc","children":[]},{"level":3,"title":"配置 Prettier 规则","slug":"配置-prettier-规则","link":"#配置-prettier-规则","children":[]}]},{"level":2,"title":"集成其他 ESLint 插件","slug":"集成其他-eslint-插件","link":"#集成其他-eslint-插件","children":[]},{"level":2,"title":"VS Code 配置","slug":"vs-code-配置","link":"#vs-code-配置","children":[]}],"git":{"createdTime":1572314538000,"updatedTime":1730378820000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":1}]},"readingTime":{"minutes":7.49,"words":2246},"filePathRelative":"front-end-engineering/tools/style-guide/code-formatter/eslint/eslint-prettier.md","localizedDate":"October 29, 2019","autoDesc":true}');
export {
  eslintPrettier_html as comp,
  data
};
