import { r as resolveComponent, c as createElementBlock, b as createStaticVNode, a as createVNode, o as openBlock } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
function _sfc_render(_ctx, _cache) {
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[0] || (_cache[0] = createStaticVNode('<h1 id="_5-风险治理-稳定性的屏障" tabindex="-1"><a class="header-anchor" href="#_5-风险治理-稳定性的屏障"><span>5. 风险治理：稳定性的屏障</span></a></h1><p>风险治理是稳定性建设的重要防线和屏障，通过系统化的风险管控措施，最大限度规避和降低风险的影响。 风险治理主要包括告警管理和风险冒泡两大板块。</p><h2 id="告警管理" tabindex="-1"><a class="header-anchor" href="#告警管理"><span>告警管理</span></a></h2><p><strong>告警是风险的重要信号</strong>，高效的告警管理可以显著提升风险发现和处置的效率。告警管理主要包括以下环节：</p><ol><li><p>告警规则管理</p><ul><li>根据系统架构和业务特点，设置合理的告警规则和阈值。</li><li>定期评估和优化告警规则，持续提高告警的准确性和时效性。</li></ul></li><li><p>告警通知管理</p><ul><li>建立告警通知渠道，确保告警及时、准确送达相关责任人。比如通过公司即时 IM 工具、短信、电话等。</li><li>设置告警通知策略，根据告警级别和时段，采用短信、电话、邮件等多种通知方式。</li></ul></li><li><p>告警分析</p><ul><li>建立告警分析机制，对告警数据进行统计和分析，识别告警的规律和根因。</li><li>对高频告警进行重点关注，找出优化方向，制定改进措施。</li></ul></li><li><p>告警闭环管理</p><ul><li>建立告警处理流程，明确告警分派、处理、反馈、总结等环节的职责和要求。</li><li>跟踪告警处理进展，确保每个告警都得到及时、有效地处置和闭环。</li></ul></li></ol><p>前端的告警及风险和后端不同，其有自己独特的特点：</p><ul><li><strong>用户直观感受</strong>：前端性能问题直接影响用户体验，如页面加载慢、交互卡顿等，用户可以直观地感受到。相比之下，后端性能问题可能不会立即被用户察觉。</li><li><strong>设备和网络多样性</strong>：前端运行在各种设备和网络环境下，如不同的浏览器、操作系统、屏幕尺寸、网络状况等。这增加了前端性能问题的复杂性和不可预测性。</li><li><strong>报错收集难</strong>：前端错误发生在用户的设备上，不像服务端错误那样可以直接在日志中捕获。需要专门的前端错误收集和上报机制，如 Sentry、FrontJS 等。并且，线上环境的代码通常是压缩和混淆后的，错误堆栈信息难以定位到原始代码。需要通过 Sourcemap 映射，将错误信息还原到开发环境的代码中，方便问题定位和修复。</li><li><strong>用户操作路径多</strong>：用户在前端有多种操作路径和使用方式，不像后端那样请求路径相对固定。这增加了前端性能问题的复现难度和定位难度。</li></ul><p>针对这些问题，我们需要做更多的事情来处理以达到告警出来后的内容可分析，可定位，可优化。</p><h2 id="风险冒泡" tabindex="-1"><a class="header-anchor" href="#风险冒泡"><span>风险冒泡</span></a></h2><p>风险冒泡是一种主动的风险管理机制，通过自下而上地识别和评估风险，实现风险的早发现、早处置。风险冒泡主要包括以下环节：</p><ol><li>风险识别 <ul><li>在架构设计、变更管理、故障处理等环节中，鼓励团队主动识别风险点。（比如开发前的技术方案设计、开发后的 Code Review、上线前的 Check List 等）</li><li>建立风险登记机制，为风险识别提供渠道和工具支撑。</li></ul></li><li>风险分析 <ul><li>对识别出的风险进行分析评估，判断风险的可能性和影响程度。</li><li>根据风险分析结果，确定风险的优先级和处置策略。</li></ul></li><li>风险闭环 <ul><li>建立风险处置机制，明确风险处置的流程、职责和要求。</li><li>跟踪风险处置进展，确保风险得到有效管控和闭环。</li><li>定期回顾风险管理成效，持续优化风险管理流程和机制。</li></ul></li></ol><p>通过告警管理和风险冒泡等机制，提高风险管理的主动性和有效性，筑牢风险防范的堤坝，为系统稳定性提供坚实保障。</p>', 12)),
    createVNode(_component_global_config)
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
const data = JSON.parse('{"path":"/front-end-engineering/frontend-stability-construction/risk-management/","title":"5. 风险治理：稳定性的屏障","lang":"en-US","frontmatter":{"description":"5. 风险治理：稳定性的屏障 风险治理是稳定性建设的重要防线和屏障，通过系统化的风险管控措施，最大限度规避和降低风险的影响。 风险治理主要包括告警管理和风险冒泡两大板块。 告警管理 告警是风险的重要信号，高效的告警管理可以显著提升风险发现和处置的效率。告警管理主要包括以下环节： 告警规则管理 根据系统架构和业务特点，设置合理的告警规则和阈值。 定期评估...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/front-end-engineering/frontend-stability-construction/risk-management/"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"5. 风险治理：稳定性的屏障"}],["meta",{"property":"og:description","content":"5. 风险治理：稳定性的屏障 风险治理是稳定性建设的重要防线和屏障，通过系统化的风险管控措施，最大限度规避和降低风险的影响。 风险治理主要包括告警管理和风险冒泡两大板块。 告警管理 告警是风险的重要信号，高效的告警管理可以显著提升风险发现和处置的效率。告警管理主要包括以下环节： 告警规则管理 根据系统架构和业务特点，设置合理的告警规则和阈值。 定期评估..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-13T04:57:19.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-13T04:57:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5. 风险治理：稳定性的屏障\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-13T04:57:19.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"告警管理","slug":"告警管理","link":"#告警管理","children":[]},{"level":2,"title":"风险冒泡","slug":"风险冒泡","link":"#风险冒泡","children":[]}],"git":{"createdTime":1728795439000,"updatedTime":1728795439000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":1}]},"readingTime":{"minutes":3.53,"words":1058},"filePathRelative":"front-end-engineering/frontend-stability-construction/risk-management/index.md","localizedDate":"October 13, 2024","autoDesc":true}');
export {
  index_html as comp,
  data
};
