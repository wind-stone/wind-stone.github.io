import { r as resolveComponent, c as createElementBlock, b as createStaticVNode, a as createVNode, o as openBlock } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
function _sfc_render(_ctx, _cache) {
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[0] || (_cache[0] = createStaticVNode('<h1 id="cors" tabindex="-1"><a class="header-anchor" href="#cors"><span>CORS</span></a></h1><h2 id="简单请求和非简单请求" tabindex="-1"><a class="header-anchor" href="#简单请求和非简单请求"><span>简单请求和非简单请求</span></a></h2><p>浏览器将 CORS 请求分成两类：简单请求（<code>simple request</code>）和非简单请求（<code>not-so-simple request</code>）。</p><p>简单请求不会发起预检请求，而非简单请求需要在发起实际请求之前，必须首先使用 OPTIONS 方法发起一个预检请求到服务器，以获知服务器是否允许该实际请求。&quot;预检请求“的使用，可以避免跨域请求对服务器的用户数据产生未预期的影响。</p><p>若请求满足所有下述条件，则该请求可视为“简单请求”：</p><ul><li>使用下列方法之一： <ul><li>GET</li><li>HEAD</li><li>POST</li></ul></li><li>除了被用户代理自动设置的首部字段（例如 Connection ，User-Agent）和在 Fetch 规范中定义为<a href="https://fetch.spec.whatwg.org/#forbidden-header-name" target="_blank" rel="noopener noreferrer">禁用首部名称</a>的其他首部，允许人为设置的字段为 Fetch 规范定义的 对 CORS 安全的首部字段集合。该集合为： <ul><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>Content-Type （需要注意额外的限制）</li><li>DPR</li><li>Downlink</li><li>Save-Data</li><li>Viewport-Width</li><li>Width</li></ul></li><li>Content-Type 的值仅限于下列三者之一： <ul><li><code>text/plain</code></li><li><code>multipart/form-data</code></li><li><code>application/x-www-form-urlencoded</code></li></ul></li><li>请求中的任意 XMLHttpRequestUpload 对象均没有注册任何事件监听器；XMLHttpRequestUpload 对象可以使用<code>XMLHttpRequest.upload</code>属性访问。</li><li>请求中没有使用 ReadableStream 对象。</li></ul><h3 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接</span></a></h3><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS" target="_blank" rel="noopener noreferrer">MDN - 跨源资源共享（CORS）</a></li><li><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html" target="_blank" rel="noopener noreferrer">阮一峰 - 跨域资源共享 CORS 详解</a></li></ul>', 8)),
    createVNode(_component_global_config)
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
const data = JSON.parse('{"path":"/browser-env/network/cors/","title":"CORS","lang":"en-US","frontmatter":{"description":"CORS 简单请求和非简单请求 浏览器将 CORS 请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。 简单请求不会发起预检请求，而非简单请求需要在发起实际请求之前，必须首先使用 OPTIONS 方法发起一个预检请求到服务器，以获知服务器是否允许该实际请求。\\"预检请求“的使用，可以避免跨域...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/browser-env/network/cors/"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"CORS"}],["meta",{"property":"og:description","content":"CORS 简单请求和非简单请求 浏览器将 CORS 请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。 简单请求不会发起预检请求，而非简单请求需要在发起实际请求之前，必须首先使用 OPTIONS 方法发起一个预检请求到服务器，以获知服务器是否允许该实际请求。\\"预检请求“的使用，可以避免跨域..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2021-06-14T18:01:52.000Z"}],["meta",{"property":"article:modified_time","content":"2021-06-14T18:01:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CORS\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-06-14T18:01:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简单请求和非简单请求","slug":"简单请求和非简单请求","link":"#简单请求和非简单请求","children":[{"level":3,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}]}],"git":{"createdTime":1623693712000,"updatedTime":1623693712000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":1}]},"readingTime":{"minutes":1.21,"words":363},"filePathRelative":"browser-env/network/cors/README.md","localizedDate":"June 15, 2021","autoDesc":true}');
export {
  index_html as comp,
  data
};
