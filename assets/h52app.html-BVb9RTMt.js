import { r as resolveComponent, c as createElementBlock, d as createBaseVNode, a as createVNode, e as withCtx, b as createStaticVNode, o as openBlock, f as createTextVNode } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _imports_0 = "/assets/kuaishou-nebula-app-detail-yP_Vbf42.jpg";
const _sfc_main = {};
const _hoisted_1 = { class: "table-of-contents" };
function _sfc_render(_ctx, _cache) {
  const _component_router_link = resolveComponent("router-link");
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[13] || (_cache[13] = createBaseVNode("h1", {
      id: "h5-唤起-app",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#h5-唤起-app"
      }, [
        createBaseVNode("span", null, "h5 唤起 APP")
      ])
    ], -1)),
    createBaseVNode("nav", _hoisted_1, [
      createBaseVNode("ul", null, [
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#deep-linking" }, {
            default: withCtx(() => _cache[0] || (_cache[0] = [
              createTextVNode("Deep Linking")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#url-scheme" }, {
                default: withCtx(() => _cache[1] || (_cache[1] = [
                  createTextVNode("URL scheme")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#客户端注册-scheme-协议" }, {
                    default: withCtx(() => _cache[2] || (_cache[2] = [
                      createTextVNode("客户端注册 scheme 协议")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#如何判断设备里是否安装指定的-app" }, {
                    default: withCtx(() => _cache[3] || (_cache[3] = [
                      createTextVNode("如何判断设备里是否安装指定的 APP")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#url-scheme-的兼容性问题" }, {
                    default: withCtx(() => _cache[4] || (_cache[4] = [
                      createTextVNode("URL scheme 的兼容性问题")
                    ])),
                    _: 1
                  })
                ])
              ])
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#跳转到应用市场-app-store" }, {
            default: withCtx(() => _cache[5] || (_cache[5] = [
              createTextVNode("跳转到应用市场/App Store")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#ios-跳转到-app-store" }, {
                default: withCtx(() => _cache[6] || (_cache[6] = [
                  createTextVNode("iOS，跳转到 App Store")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#ios-app-内显示-app-store-详情页" }, {
                    default: withCtx(() => _cache[7] || (_cache[7] = [
                      createTextVNode("iOS APP 内显示 APP Store 详情页")
                    ])),
                    _: 1
                  })
                ])
              ])
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#android-跳转到应用市场" }, {
                default: withCtx(() => _cache[8] || (_cache[8] = [
                  createTextVNode("Android，跳转到应用市场")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#兼容性问题" }, {
            default: withCtx(() => _cache[9] || (_cache[9] = [
              createTextVNode("兼容性问题")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#兼容性概括" }, {
                default: withCtx(() => _cache[10] || (_cache[10] = [
                  createTextVNode("兼容性概括")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#微信" }, {
                default: withCtx(() => _cache[11] || (_cache[11] = [
                  createTextVNode("微信")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#reference" }, {
            default: withCtx(() => _cache[12] || (_cache[12] = [
              createTextVNode("Reference")
            ])),
            _: 1
          })
        ])
      ])
    ]),
    _cache[14] || (_cache[14] = createStaticVNode('<p>h5 里若是想唤起指定 APP，一般会出现两种情况：</p><ol><li>设备里安装了该 APP，期望可以直接唤起该 APP。</li><li>设置里没安装该 APP，期望（跳转到应用市场/App Store）下载 APP。</li></ol><p>而 h5 唤起 APP 的能力或者说方式，一般称之为 Deep linking: 跳转到原生 iOS 和 Android 移动应用内部特定页面的能力。</p><p>目前，Deep linking 实现的方式有：</p><ul><li>Universal Link（&gt;= iOS 9）</li><li>Android App Link（&gt;= Android 6）</li><li>URI Scheme</li><li>Chrome Intent</li></ul><h2 id="deep-linking" tabindex="-1"><a class="header-anchor" href="#deep-linking"><span>Deep Linking</span></a></h2><h3 id="url-scheme" tabindex="-1"><a class="header-anchor" href="#url-scheme"><span>URL scheme</span></a></h3><h4 id="客户端注册-scheme-协议" tabindex="-1"><a class="header-anchor" href="#客户端注册-scheme-协议"><span>客户端注册 scheme 协议</span></a></h4><p>以 Android 为例：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">activity</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> android:name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;.MainActivity&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">intent-filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">action</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> android:name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;android.intent.action.MAIN&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">category</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> android:name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;android.intent.category.LAUNCHER&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">intent-filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">intent-filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">action</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> android:name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;android.intent.action.VIEW&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">category</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> android:name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;android.intent.category.DEFAULT&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">category</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> android:name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;android.intent.category.BROWSABLE&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> android:scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cxl&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> android:host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;wind-stone.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">intent-filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">activity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>h5 页面里即可通过各种方式大概该 scheme，比如<code>a</code>标签：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cxl://wind-stone.com/path?params=xxx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;打开app&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><a href="https://blog.csdn.net/sinat_31057219/article/details/78362326" target="_blank" rel="noopener noreferrer">android-Scheme与网页跳转原生的三种方式</a></li><li><a href="https://www.jianshu.com/p/138b44833cda" target="_blank" rel="noopener noreferrer">iOS scheme跳转机制</a></li></ul><p>一般会优先使用<code>iframe</code>打开自定义的\b<code>scheme</code>：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> iframe</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;iframe&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">iframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">src</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;URL scheme&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">iframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">display</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;none&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">iframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有些系统会拦截<code>iframe</code>的<code>src</code>（这只是造成唤醒 APP 失败的其中一种原因）,因为这个<code>src</code>属性是一个法外<code>hacker</code>，很多漏洞都是利用他造成的。所以这时候就要判断跳转 APP 失败的情况了。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> timer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 执行成功后移除iframe</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">removeChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">iframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // setTimeout 小于 2000 通常认为是唤起 APP 失败</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> last</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 执行失败函数</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 也有可能是浏览器弹窗询问是否跳转 APP，导致时间超过 2000 ms</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //  执行成功函数</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若是成功唤起 APP，则原 h5 页面会切换到后台（导致定时器停止运行）。即使用户再用唤起的 APP 切换到原来的 h5 页面，这个时间差必然是大于 2000ms 的。</p><p>若是唤起 APP 失败，定时器会按预期时间执行，这时候绝大多数情况下都是小于 2s 的。（主线程长时间执行可能会导致定时器延迟，因此此处不是 100% 正确，但是基本相差不大）</p><h4 id="如何判断设备里是否安装指定的-app" tabindex="-1"><a class="header-anchor" href="#如何判断设备里是否安装指定的-app"><span>如何判断设备里是否安装指定的 APP</span></a></h4><p>实际上，不管是 iOS 还是 Android，我们都无法通过浏览器预知本地是否安装了指定的 APP。<br> （即使浏览器可以读取本地安装的应用列表，但是目前没有任何一家浏览器实现了提供查询的 API）</p><p>但是 APP 在安装时，可以注册 URL scheme，当浏览器打开注册的 scheme 时，会唤起对应 APP。若是唤起失败，则代表没有安装对应的 APP。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> url</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  open</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;app://xxxxx&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  down</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;xxxxxxxx&#39;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> iframe</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;iframe&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> body</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">iframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cssText</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;display:none;width=0;height=0&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> timer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 立即打开的按钮</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> openapp</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;openapp&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">openapp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;click&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/MicroMessenger/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">gi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">navigator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">userAgent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 引导用户在浏览器中打开</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">iframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    iframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">src</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    timer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">      wondow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">href</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">down</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上代码的逻辑是，当用户点击“立即打开”按钮，通过<code>iframe</code>的方式跳转到 URL scheme，延时 500ms 后跳转到下载页面。</p><p>但是存在的问题是，若是本地安装了 APP 并成功唤起了，h5 页面 500ms 后还是会跳转到下载页面。</p><p>因此要做以下补充：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;visibilitychange webkitvisibilitychange&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> tag</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">hidden</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">webkitHidden</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">tag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    timer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> clearTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;pagehide&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  timer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> clearTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监听<code>window</code>的<code>pagehide</code>事件以及<code>document</code>的<code>visibilitychange</code>事件（由于各个浏览器的支持情况不同，我们需要同事监听这两个事件），当页面隐藏时，及时清除定时器。</p><p>Tips：</p><ul><li>为什么不使用<code>location.href</code>？ <ul><li>在有的浏览器中，当我们使用<code>location.href</code>尝试跳转到 scheme link 的时候，若本地没有安装 APP，则会跳转到浏览器默认的错误页面</li></ul></li><li>iOS 9+ 不支持通过<code>iframe</code>跳转到自定义协议 <ul><li><a href="https://stackoverflow.com/questions/31891777/ios-9-safari-iframe-src-with-custom-url-scheme-not-working" target="_blank" rel="noopener noreferrer">Stack Overflow - iOS 9 safari iframe src with custom url scheme not working</a></li></ul></li></ul><h4 id="url-scheme-的兼容性问题" tabindex="-1"><a class="header-anchor" href="#url-scheme-的兼容性问题"><span>URL scheme 的兼容性问题</span></a></h4><p>Android 原生的 Chrome 浏览器（Chrome for Android）里，如下两种情况下，给定一个 Intent URI 时，Chrome 将不会拉起外部应用：</p><ul><li>Intent URI 是根据键入的 URL 重定向得到的</li><li>在未经过用户交互（比如用户点击）的情况下，初始化 Intent URI</li></ul><p>详见：<a href="https://developer.chrome.com/multidevice/android/intents" target="_blank" rel="noopener noreferrer">Android Intents with Chrome</a></p><h2 id="跳转到应用市场-app-store" tabindex="-1"><a class="header-anchor" href="#跳转到应用市场-app-store"><span>跳转到应用市场/App Store</span></a></h2><h3 id="ios-跳转到-app-store" tabindex="-1"><a class="header-anchor" href="#ios-跳转到-app-store"><span>iOS，跳转到 App Store</span></a></h3><p>在浏览器里打开类似：<code>https://itunes.apple.com/app/apple-store/id440948110?pt=572643&amp;mt=8&amp;ct=</code>的链接，可以唤起 App Store，并进入到 快手 APP 的详情页面。</p><p>链接里的<code>mt</code>代表<code>meta-type</code>，有效值如下：</p><ul><li>1：Music</li><li>2：Podcasts</li><li>3：Audiobooks</li><li>4：TV Shows</li><li>5：Music Videos</li><li>6：Movies</li><li>7：iPod Games</li><li>8：Mobile Software Applications</li><li>9：Ringtones</li><li>10：iTunes U</li><li>11：E-Books</li><li>12：Desktop Apps</li></ul><p>（猜测：针对每个 APP，App Store 都会生成类似上面的唯一链接）</p><h4 id="ios-app-内显示-app-store-详情页" tabindex="-1"><a class="header-anchor" href="#ios-app-内显示-app-store-详情页"><span>iOS APP 内显示 APP Store 详情页</span></a></h4><p>在有些 iOS APP 内，APP 内实现了对 App Store 链接的拦截功能，其会阻止你跳转到 App Store；取而代之的是，在 APP 内弹出另一个 APP 在 App Store 的应用详情页。</p><figure><img src="' + _imports_0 + '" alt="快手极速版-视频广告" tabindex="0" loading="lazy"><figcaption>快手极速版-视频广告</figcaption></figure><p>比如在快手极速版里，图一是个广告的视频；图二是点击第一张图里的“玩游戏”后从页面底部弹出来的广告 APP 对应的 App Store 应用详情页；滑动应用详情页可以修改页面显示区域或滚动应用详情页里的内容区域，如图三所示。</p><p>更多信息可参考：</p><ul><li><a href="https://blog.csdn.net/NB_Token/article/details/78674618" target="_blank" rel="noopener noreferrer">iOS在应用内显示App的详情以及评分内容</a></li></ul><h3 id="android-跳转到应用市场" tabindex="-1"><a class="header-anchor" href="#android-跳转到应用市场"><span>Android，跳转到应用市场</span></a></h3><p>通过<code>window.location.href = &#39;market://details?id=com.smile.gifmaker&#39;</code>可以吊起应用市场，其中<code>id</code>参数是要定位到的 APP 的包名，比如快手的包名为<code>com.smile.gifmaker</code>。</p><h2 id="兼容性问题" tabindex="-1"><a class="header-anchor" href="#兼容性问题"><span>兼容性问题</span></a></h2><h3 id="兼容性概括" tabindex="-1"><a class="header-anchor" href="#兼容性概括"><span>兼容性概括</span></a></h3><p>Android:</p><p>微信、QQ：URL Scheme 不可用，可通过应用宝中转，APP 必须在腾讯商店上架。<br> 浏览器：URL Scheme 可用。<br> 其他APP：提示用浏览器打开。</p><p>iOS &gt;= 9（支持 Universal Links）：</p><p>微信：URL Scheme 和 Universal Links 均不可用，通过应用宝中转。<br> QQ：Universal Links 尚且可用。<br> QQ浏览器：Universal Links 不可用，但 URL Scheme 可用。<br> 其他APP：Universal Links 可用。</p><p>iOS &lt; 9（不支持 Universal Links）：</p><p>微信、QQ：URL Scheme 不可用，提示用浏览器打开。<br> 各浏览器：URL Scheme 可用。<br> 其他APP：提示用浏览器打开。</p><p>以上兼容性数据来源于：<a href="https://blog.csdn.net/weixin_39921345/article/details/79892920?utm_source=copy" target="_blank" rel="noopener noreferrer">H5唤醒APP或打开应用商店下载（未完成）</a></p><h3 id="微信" tabindex="-1"><a class="header-anchor" href="#微信"><span>微信</span></a></h3><p>微信对 URL scheme 协议做了屏蔽，无法通过 URL scheme 的方式唤起其他 APP。（除非\b<code>scheme</code>在微信的白名单里）</p><p>微信也不支持 Universal Links。</p><p>针对微信，有两个解决办法：</p><ul><li>通过应用宝跳转（<a href="http://wiki.open.qq.com/index.php?title=mobile/%E5%BA%94%E7%94%A8%E5%AE%9D%E5%BE%AE%E4%B8%8B%E8%BD%BD" target="_blank" rel="noopener noreferrer">应用宝微下载</a>）</li><li>提示用户在浏览器里打开</li></ul><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li><a href="https://harttle.land/2017/12/24/launch-app-from-browser.html" target="_blank" rel="noopener noreferrer">Deep Linking：从浏览器调起 APP</a></li><li><a href="https://awhisper.github.io/2017/09/02/universallink/" target="_blank" rel="noopener noreferrer">Universal Link 前端部署采坑记</a></li><li><a href="http://wiki.open.qq.com/index.php?title=mobile/%E5%BA%94%E7%94%A8%E5%AE%9D%E5%BE%AE%E4%B8%8B%E8%BD%BD" target="_blank" rel="noopener noreferrer">应用宝微下载</a></li></ul>', 64)),
    createVNode(_component_global_config)
  ]);
}
const h52app_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "h52app.html.vue"]]);
const data = JSON.parse('{"path":"/browser-env/hybrid/h52app.html","title":"h5 唤起 APP","lang":"en-US","frontmatter":{"description":"h5 唤起 APP h5 里若是想唤起指定 APP，一般会出现两种情况： 设备里安装了该 APP，期望可以直接唤起该 APP。 设置里没安装该 APP，期望（跳转到应用市场/App Store）下载 APP。 而 h5 唤起 APP 的能力或者说方式，一般称之为 Deep linking: 跳转到原生 iOS 和 Android 移动应用内部特定页面的...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/browser-env/hybrid/h52app.html"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"h5 唤起 APP"}],["meta",{"property":"og:description","content":"h5 唤起 APP h5 里若是想唤起指定 APP，一般会出现两种情况： 设备里安装了该 APP，期望可以直接唤起该 APP。 设置里没安装该 APP，期望（跳转到应用市场/App Store）下载 APP。 而 h5 唤起 APP 的能力或者说方式，一般称之为 Deep linking: 跳转到原生 iOS 和 Android 移动应用内部特定页面的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2021-06-14T10:58:48.000Z"}],["meta",{"property":"article:modified_time","content":"2021-06-14T10:58:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"h5 唤起 APP\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-06-14T10:58:48.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Deep Linking","slug":"deep-linking","link":"#deep-linking","children":[{"level":3,"title":"URL scheme","slug":"url-scheme","link":"#url-scheme","children":[]}]},{"level":2,"title":"跳转到应用市场/App Store","slug":"跳转到应用市场-app-store","link":"#跳转到应用市场-app-store","children":[{"level":3,"title":"iOS，跳转到 App Store","slug":"ios-跳转到-app-store","link":"#ios-跳转到-app-store","children":[]},{"level":3,"title":"Android，跳转到应用市场","slug":"android-跳转到应用市场","link":"#android-跳转到应用市场","children":[]}]},{"level":2,"title":"兼容性问题","slug":"兼容性问题","link":"#兼容性问题","children":[{"level":3,"title":"兼容性概括","slug":"兼容性概括","link":"#兼容性概括","children":[]},{"level":3,"title":"微信","slug":"微信","link":"#微信","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"createdTime":1539165620000,"updatedTime":1623668328000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":1}]},"readingTime":{"minutes":6.01,"words":1804},"filePathRelative":"browser-env/hybrid/h52app.md","localizedDate":"October 10, 2018","autoDesc":true}');
export {
  h52app_html as comp,
  data
};
