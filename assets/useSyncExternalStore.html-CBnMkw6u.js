import { r as resolveComponent, c as createElementBlock, b as createStaticVNode, a as createVNode, o as openBlock } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
function _sfc_render(_ctx, _cache) {
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[0] || (_cache[0] = createStaticVNode('<h1 id="usesyncexternalstore" tabindex="-1"><a class="header-anchor" href="#usesyncexternalstore"><span>useSyncExternalStore</span></a></h1><ul><li><a href="https://zh-hans.react.dev/reference/react/useSyncExternalStore" target="_blank" rel="noopener noreferrer">React 官方文档 - useSyncExternalStore</a></li></ul><h2 id="用法" tabindex="-1"><a class="header-anchor" href="#用法"><span>用法</span></a></h2><p><code>useSyncExternalStore</code> 是一个让你订阅外部 <code>store</code> 的 React Hook。</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li><code>subscribe</code> 参数需要自己实现，实现的内容是如何监听 <code>store</code> 的变更。</li></ul><h2 id="重新渲染时要传入相同的-subscribe-参数-否则-subscribe-会被再次调用" tabindex="-1"><a class="header-anchor" href="#重新渲染时要传入相同的-subscribe-参数-否则-subscribe-会被再次调用"><span>重新渲染时要传入相同的 subscribe 参数，否则 subscribe 会被再次调用</span></a></h2><p>如果在重新渲染时传入一个不同的 <code>subscribe</code> 函数，React 会用新传入的 <code>subscribe</code> 函数重新订阅该 <code>store</code>。你可以通过在组件外声明 <code>subscribe</code> 来避免。</p><h2 id="getsnapshot-返回的-store-快照必须是不可变的" tabindex="-1"><a class="header-anchor" href="#getsnapshot-返回的-store-快照必须是不可变的"><span>getSnapshot 返回的 store 快照必须是不可变的</span></a></h2><p><code>getSnapshot</code> 返回的 <code>store</code> 快照必须是不可变的。如果底层 <code>store</code> 有可变数据，要在数据改变时返回一个新的不可变快照。否则，返回上次缓存的快照。</p>', 10)),
    createVNode(_component_global_config)
  ]);
}
const useSyncExternalStore_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "useSyncExternalStore.html.vue"]]);
const data = JSON.parse('{"path":"/react/hooks/useSyncExternalStore.html","title":"useSyncExternalStore","lang":"en-US","frontmatter":{"description":"useSyncExternalStore React 官方文档 - useSyncExternalStore 用法 useSyncExternalStore 是一个让你订阅外部 store 的 React Hook。 注意事项 subscribe 参数需要自己实现，实现的内容是如何监听 store 的变更。 重新渲染时要传入相同的 subscribe ...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/react/hooks/useSyncExternalStore.html"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"useSyncExternalStore"}],["meta",{"property":"og:description","content":"useSyncExternalStore React 官方文档 - useSyncExternalStore 用法 useSyncExternalStore 是一个让你订阅外部 store 的 React Hook。 注意事项 subscribe 参数需要自己实现，实现的内容是如何监听 store 的变更。 重新渲染时要传入相同的 subscribe ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-26T08:58:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-26T08:58:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"useSyncExternalStore\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-26T08:58:55.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"用法","slug":"用法","link":"#用法","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":2,"title":"重新渲染时要传入相同的 subscribe 参数，否则 subscribe 会被再次调用","slug":"重新渲染时要传入相同的-subscribe-参数-否则-subscribe-会被再次调用","link":"#重新渲染时要传入相同的-subscribe-参数-否则-subscribe-会被再次调用","children":[]},{"level":2,"title":"getSnapshot 返回的 store 快照必须是不可变的","slug":"getsnapshot-返回的-store-快照必须是不可变的","link":"#getsnapshot-返回的-store-快照必须是不可变的","children":[]}],"git":{"createdTime":1729933135000,"updatedTime":1729933135000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":1}]},"readingTime":{"minutes":0.65,"words":195},"filePathRelative":"react/hooks/useSyncExternalStore.md","localizedDate":"October 26, 2024","autoDesc":true}');
export {
  useSyncExternalStore_html as comp,
  data
};
