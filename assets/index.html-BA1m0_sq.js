import { r as resolveComponent, c as createElementBlock, d as createBaseVNode, a as createVNode, e as withCtx, b as createStaticVNode, o as openBlock, f as createTextVNode } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
const _hoisted_1 = { class: "table-of-contents" };
function _sfc_render(_ctx, _cache) {
  const _component_router_link = resolveComponent("router-link");
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[14] || (_cache[14] = createBaseVNode("h1", {
      id: "nginx",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#nginx"
      }, [
        createBaseVNode("span", null, "Nginx")
      ])
    ], -1)),
    createBaseVNode("nav", _hoisted_1, [
      createBaseVNode("ul", null, [
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#基本操作" }, {
            default: withCtx(() => _cache[0] || (_cache[0] = [
              createTextVNode("基本操作")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#mac-下安装-nginx" }, {
                default: withCtx(() => _cache[1] || (_cache[1] = [
                  createTextVNode("MAC 下安装 nginx")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#查找-nginx-配置文件路径" }, {
                default: withCtx(() => _cache[2] || (_cache[2] = [
                  createTextVNode("查找 nginx 配置文件路径")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#方式一" }, {
                    default: withCtx(() => _cache[3] || (_cache[3] = [
                      createTextVNode("方式一")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#方式二" }, {
                    default: withCtx(() => _cache[4] || (_cache[4] = [
                      createTextVNode("方式二")
                    ])),
                    _: 1
                  })
                ])
              ])
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#查看-nginx-监听的端口" }, {
                default: withCtx(() => _cache[5] || (_cache[5] = [
                  createTextVNode("查看 nginx 监听的端口")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#nginx-基本命令" }, {
                default: withCtx(() => _cache[6] || (_cache[6] = [
                  createTextVNode("nginx 基本命令")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#模块" }, {
            default: withCtx(() => _cache[7] || (_cache[7] = [
              createTextVNode("模块")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#core-functionality" }, {
                default: withCtx(() => _cache[8] || (_cache[8] = [
                  createTextVNode("core functionality")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#include" }, {
                    default: withCtx(() => _cache[9] || (_cache[9] = [
                      createTextVNode("include")
                    ])),
                    _: 1
                  })
                ])
              ])
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#健康检查" }, {
            default: withCtx(() => _cache[10] || (_cache[10] = [
              createTextVNode("健康检查")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#被动检查模式" }, {
                default: withCtx(() => _cache[11] || (_cache[11] = [
                  createTextVNode("被动检查模式")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#主动检查模式" }, {
                default: withCtx(() => _cache[12] || (_cache[12] = [
                  createTextVNode("主动检查模式")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#nginx-错误码" }, {
            default: withCtx(() => _cache[13] || (_cache[13] = [
              createTextVNode("Nginx 错误码")
            ])),
            _: 1
          })
        ])
      ])
    ]),
    _cache[15] || (_cache[15] = createStaticVNode('<h2 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作"><span>基本操作</span></a></h2><h3 id="mac-下安装-nginx" tabindex="-1"><a class="header-anchor" href="#mac-下安装-nginx"><span>MAC 下安装 nginx</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 请先确保安装了 homebrew</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检查 nginx 是否已经安装</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> search</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装 nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>nginx</code>的安装目录为<code>/usr/local/etc/nginx/</code>，<code>nginx.conf</code>文件就在该目录下。</p><p><code>nginx</code>主页的文件在<code>/usr/local/var/www</code>目录下。</p><h3 id="查找-nginx-配置文件路径" tabindex="-1"><a class="header-anchor" href="#查找-nginx-配置文件路径"><span>查找 nginx 配置文件路径</span></a></h3><p>若不知道 nginx 的安装目录和配置文件路径，则可以通过以下方式查找（可直接通过方式二查找）。</p><h4 id="方式一" tabindex="-1"><a class="header-anchor" href="#方式一"><span>方式一</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">locate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx.conf</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/local/etc/nginx/nginx.conf</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/local/etc/nginx/nginx.conf.default</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若服务器中存在多个<code>nginx.conf</code>文件，我们并不知道实际上调用的是哪个配置文件，因此我们必须找到实际调用的配置文件才能进行修改。</p><h4 id="方式二" tabindex="-1"><a class="header-anchor" href="#方式二"><span>方式二</span></a></h4><p>先查看<code>nginx</code>进程状态，获取<code>nginx</code>主进程的可执行文件位置，这里是<code>/usr/sbin/nginx</code>。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aux</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">          62</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 120896</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  2196</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        Ss</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   Sep16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> process</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/sbin/nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">         63</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 121428</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  6752</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    Sep16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> worker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> process</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       63707</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  10676</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  1668</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    S+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   20:09</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --color</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>ps</code>命令是 Process Status 的缩写，<code>aux</code>是命令参数，表示列出所有（包括其他用户的）有关<code>nginx</code>的进程。</p><p>之后，通过命令<code>/usr/sbin/nginx -t</code>进行配置检查，即可知道实际调用的配置文件路径及是否调用有效。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/sbin/nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> configuration</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/nginx/nginx.conf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> syntax</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ok</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> configuration</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/nginx/nginx.conf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> successful</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>疑问：方式二是不是直接执行<code>nginx -t</code>就可以了？！！</p><h3 id="查看-nginx-监听的端口" tabindex="-1"><a class="header-anchor" href="#查看-nginx-监听的端口"><span>查看 nginx 监听的端口</span></a></h3><p>先执行<code>ps aux|grep nginx</code>命令获取到<code>nginx master</code>进程的 PID，再执行<code>netstat -anp | grep PID</code>查看<code>nginx</code>监听的端口。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aux</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">          62</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 120896</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  2196</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        Ss</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   Sep16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> process</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/sbin/nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">         63</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 121428</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  6752</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    Sep16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> worker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> process</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       63707</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  10676</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  1668</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts/2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    S+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   20:09</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --color</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">netstat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -anp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 62</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:80</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              0.0.0.0:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">               LISTEN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      62/nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pr</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:8888</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            0.0.0.0:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">               LISTEN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      62/nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pr</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :::80</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                   :::</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    LISTEN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      62/nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pr</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :::8888</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 :::</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    LISTEN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      62/nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pr</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unix</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         STREAM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     CONNECTED</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">     538840891</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 62/nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pr</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unix</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         STREAM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     CONNECTED</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">     538840892</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 62/nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pr</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>netstat</code>命令用于显示与 IP、TCP、UDP 和 ICMP 协议相关的统计数据，一般用于检验本机各端口的网络连接情况。</p><p>命令参数里，</p><ul><li><code>-a</code>: 显示所有连线中的 Socket。</li><li><code>-n</code>: 直接使用 IP 地址，而不通过域名服务器。</li><li><code>-p</code>: 显示正在使用 Socket 的程序识别码和程序名称。</li></ul><p>上述示例里，<code>nginx</code>监听在<code>80</code>和<code>8888</code>端口。</p><h3 id="nginx-基本命令" tabindex="-1"><a class="header-anchor" href="#nginx-基本命令"><span>nginx 基本命令</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -h</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx/1.15.2</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Usage:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-?hvVtTq] [-s signal] [-c filename] [-p prefix] [-g directives]</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Options:</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -?,-h</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> this</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> help</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exit</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -V</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> configure</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> options</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exit</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> configuration</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exit</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -T</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> configuration,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dump</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exit</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -q</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> suppress</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> non-error</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> messages</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> during</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> configuration</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> testing</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> signal</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> send</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> signal</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> process:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> quit,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reopen,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reload</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prefix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prefix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (default: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/local/Cellar/nginx/1.15.2/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> filename</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> configuration</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (default: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/local/etc/nginx/nginx.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> directives</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> directives</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> out</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> configuration</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用的命令有:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动 nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 停止 nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检查 NGINX 配置是否正确</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重启 nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reload</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重新打开 nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reopen</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置配置文件，默认为 /usr/local/etc/nginx/nginx.conf</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> filename</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模块" tabindex="-1"><a class="header-anchor" href="#模块"><span>模块</span></a></h2><h3 id="core-functionality" tabindex="-1"><a class="header-anchor" href="#core-functionality"><span>core functionality</span></a></h3><h4 id="include" tabindex="-1"><a class="header-anchor" href="#include"><span>include</span></a></h4><div class="hint-container tip"><p class="hint-container-title">include 使用</p><p>Syntax: <code>include file | mask;</code></p><p>Default: —</p><p>Context: any</p></div><p>将另一个文件或匹配特定<code>mask</code>的文件包含到配置里。被包含的文件应该由语法正确的指令和块组成。示例:</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">mime.types;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">vhosts/*.conf;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="健康检查" tabindex="-1"><a class="header-anchor" href="#健康检查"><span>健康检查</span></a></h2><p>Nginx 主要有两种主流的健康检查模式：被动检查模式、主动检查模式。</p><h3 id="被动检查模式" tabindex="-1"><a class="header-anchor" href="#被动检查模式"><span>被动检查模式</span></a></h3><p>Reference: <a href="https://docs.nginx.com/nginx/admin-guide/load-balancer/http-health-check/" target="_blank" rel="noopener noreferrer">Nginx 官网 - 健康检查</a></p><p>Nginx 在代理请求过程中会自动地监测每个后端服务器对请求的响应状态，若某个后端服务器在<code>fail_timeout</code>时间内累计发送请求失败或未接收到响应达到<code>max_fails</code>次时，Nginx 将会标记该服务器不可用，并在之后的<code>fail_timeout</code>时间内不往该服务器上发送请求。<code>fail_timeout</code>时间之后，Nginx 还是会转发少量的请求到该后端服务器来探测它的返回状态，以便识别该服务器是否恢复。</p><p>被动检查模式是 Nginx 内置的功能，可以直接通过参数设置来开启。</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">upstream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> backend {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> backend1.example.com;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> backend2.example.com </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">max_fails</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fail_timeout=30s;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>fail_timeout</code>: 该参数有两个含义，默认为<code>10s</code><ul><li>在该时间内，若 Nginx 请求失败或未接收到请求达到<code>max_fails</code>次，Nginx 将标记该服务器不可用</li><li>表示服务器被标记为不可用的持续时间。该时间后，Nginx 将再次发送请求来检查服务器状态</li></ul></li><li><code>max_fails</code>: 设置 Nginx 请求失败或未接收到请求的最大次数，达到该次数，服务器将被标记为不可用。默认是 1 次</li></ul><h3 id="主动检查模式" tabindex="-1"><a class="header-anchor" href="#主动检查模式"><span>主动检查模式</span></a></h3><p>Nginx 服务端会按照设定的时间间隔<code>interval</code>主动向后端服务器发出检查请求，来验证后端服务器的可用状态。若某个服务器返回失败超过设定的次数，Nginx 就会将该服务器标记为异常，在此次<code>interval</code>期间将不再分发流量到该服务器，而是分发到其他服务器上。经过<code>interval</code>间隔之后，Nginx 会再次发出检查请求，若此时服务器可用，Nginx 将会标记该服务器为正常，进而继续向该服务器分发流量。</p><p>使用这种方式，一般需要后端服务器为 Nginx 提供一个低消耗的接口，用于检查该服务器状态。</p><h2 id="nginx-错误码" tabindex="-1"><a class="header-anchor" href="#nginx-错误码"><span>Nginx 错误码</span></a></h2><ul><li>499，<a href="https://www.webfx.com/web-development/glossary/http-status-codes/what-is-a-499-status-code/" target="_blank" rel="noopener noreferrer">What Is a 499 Status Code?</a></li></ul>', 47)),
    createVNode(_component_global_config)
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
const data = JSON.parse('{"path":"/full-stack/software/nginx/","title":"Nginx","lang":"en-US","frontmatter":{"description":"Nginx 基本操作 MAC 下安装 nginx nginx的安装目录为/usr/local/etc/nginx/，nginx.conf文件就在该目录下。 nginx主页的文件在/usr/local/var/www目录下。 查找 nginx 配置文件路径 若不知道 nginx 的安装目录和配置文件路径，则可以通过以下方式查找（可直接通过方式二查找）。 ...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/full-stack/software/nginx/"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"Nginx"}],["meta",{"property":"og:description","content":"Nginx 基本操作 MAC 下安装 nginx nginx的安装目录为/usr/local/etc/nginx/，nginx.conf文件就在该目录下。 nginx主页的文件在/usr/local/var/www目录下。 查找 nginx 配置文件路径 若不知道 nginx 的安装目录和配置文件路径，则可以通过以下方式查找（可直接通过方式二查找）。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-10T11:20:32.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-10T11:20:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-10T11:20:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"基本操作","slug":"基本操作","link":"#基本操作","children":[{"level":3,"title":"MAC 下安装 nginx","slug":"mac-下安装-nginx","link":"#mac-下安装-nginx","children":[]},{"level":3,"title":"查找 nginx 配置文件路径","slug":"查找-nginx-配置文件路径","link":"#查找-nginx-配置文件路径","children":[]},{"level":3,"title":"查看 nginx 监听的端口","slug":"查看-nginx-监听的端口","link":"#查看-nginx-监听的端口","children":[]},{"level":3,"title":"nginx 基本命令","slug":"nginx-基本命令","link":"#nginx-基本命令","children":[]}]},{"level":2,"title":"模块","slug":"模块","link":"#模块","children":[{"level":3,"title":"core functionality","slug":"core-functionality","link":"#core-functionality","children":[]}]},{"level":2,"title":"健康检查","slug":"健康检查","link":"#健康检查","children":[{"level":3,"title":"被动检查模式","slug":"被动检查模式","link":"#被动检查模式","children":[]},{"level":3,"title":"主动检查模式","slug":"主动检查模式","link":"#主动检查模式","children":[]}]},{"level":2,"title":"Nginx 错误码","slug":"nginx-错误码","link":"#nginx-错误码","children":[]}],"git":{"createdTime":1552379057000,"updatedTime":1728559232000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":2}]},"readingTime":{"minutes":4.64,"words":1393},"filePathRelative":"full-stack/software/nginx/README.md","localizedDate":"March 12, 2019","autoDesc":true}');
export {
  index_html as comp,
  data
};
