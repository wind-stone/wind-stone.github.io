import { r as resolveComponent, c as createElementBlock, d as createBaseVNode, a as createVNode, e as withCtx, b as createStaticVNode, o as openBlock, f as createTextVNode } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
const _hoisted_1 = { class: "table-of-contents" };
function _sfc_render(_ctx, _cache) {
  const _component_router_link = resolveComponent("router-link");
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[7] || (_cache[7] = createBaseVNode("h1", {
      id: "第三方配置工具",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#第三方配置工具"
      }, [
        createBaseVNode("span", null, "第三方配置工具")
      ])
    ], -1)),
    createBaseVNode("nav", _hoisted_1, [
      createBaseVNode("ul", null, [
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#webpack-merge" }, {
            default: withCtx(() => _cache[0] || (_cache[0] = [
              createTextVNode("webpack-merge")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#webpack-chain" }, {
            default: withCtx(() => _cache[1] || (_cache[1] = [
              createTextVNode("webpack-chain")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#vue-config-js" }, {
            default: withCtx(() => _cache[2] || (_cache[2] = [
              createTextVNode("vue.config.js")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#configurewebpack" }, {
                default: withCtx(() => _cache[3] || (_cache[3] = [
                  createTextVNode("configureWebpack")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#chainwebpack" }, {
                default: withCtx(() => _cache[4] || (_cache[4] = [
                  createTextVNode("chainWebpack")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#配置合并优先级" }, {
                default: withCtx(() => _cache[5] || (_cache[5] = [
                  createTextVNode("配置合并优先级")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#常用配置说明" }, {
                default: withCtx(() => _cache[6] || (_cache[6] = [
                  createTextVNode("常用配置说明")
                ])),
                _: 1
              })
            ])
          ])
        ])
      ])
    ]),
    _cache[8] || (_cache[8] = createStaticVNode('<h2 id="webpack-merge" tabindex="-1"><a class="header-anchor" href="#webpack-merge"><span>webpack-merge</span></a></h2><p><a href="https://github.com/survivejs/webpack-merge" target="_blank" rel="noopener noreferrer">webpack-merge</a>提供一个<code>merge</code>函数去联结数组和合并对象，以创建一个新的对象。</p><ul><li><code>merge(...configuration | [...configuration])</code>，合并配置对象</li><li><code>mergeWithCustomize({ customizeArray, customizeObject })(...configuration | [...configuration])</code>，自定义策略来合并配置对象 <ul><li><code>customizeArray</code>，自定义合并数组类型的配置项</li><li><code>customizeObject</code>，自定义合并对象类型的配置项</li><li><code>unique(&lt;field&gt;, &lt;fields&gt;, field =&gt; field)</code>，强制使某个配置项具有唯一性，最常用于插件，可确保某个插件只有一个实例。</li></ul></li><li><code>mergeWithRules</code>，主要用于合并<code>rules</code></li></ul><h2 id="webpack-chain" tabindex="-1"><a class="header-anchor" href="#webpack-chain"><span>webpack-chain</span></a></h2><h2 id="vue-config-js" tabindex="-1"><a class="header-anchor" href="#vue-config-js"><span>vue.config.js</span></a></h2><p>参考文档：</p><ul><li><a href="https://cli.vuejs.org/zh/config/#configurewebpack" target="_blank" rel="noopener noreferrer">vue.config.js - configureWebpack</a></li><li><a href="https://cli.vuejs.org/zh/config/#chainwebpack" target="_blank" rel="noopener noreferrer">vue.config.js - chainwebpack</a></li><li><a href="https://cli.vuejs.org/zh/guide/webpack.html" target="_blank" rel="noopener noreferrer">vue.config.js - webpack 相关</a></li></ul><p><code>vue-cli</code>工具的配置文件<code>vue.config.js</code>里既可以通过<code>webpack-merge</code>也可以通过<code>webpack-chain</code>来新增/修改 Webpack 的配置项。</p><h3 id="configurewebpack" tabindex="-1"><a class="header-anchor" href="#configurewebpack"><span>configureWebpack</span></a></h3><p><code>configureWebpack</code>配置项支持两种配置方式，</p><ol><li>提供一个对象，该对象将会被<code>webpack-merge</code>合并入最终的 webpack 配置。</li><li>提供一个函数，函数的第一个参数是已经解析好的配置（包含了内置的配置和调用<code>chainWebpack</code>获得的配置）。在函数内，你可以直接修改配置，或者返回一个将会被合并的对象。</li></ol><h3 id="chainwebpack" tabindex="-1"><a class="header-anchor" href="#chainwebpack"><span>chainWebpack</span></a></h3><h3 id="配置合并优先级" tabindex="-1"><a class="header-anchor" href="#配置合并优先级"><span>配置合并优先级</span></a></h3><p><code>configureWebpack</code> &gt; <code>chainWebpack</code> &gt; <code>vue-cli</code>内置配置</p><p>这个结论是学习<code>vue-cli</code>的源码里的<a href="https://github.com/vuejs/vue-cli/blob/7f3d51133635114528848b29e27084ee89d53e1c/packages/%40vue/cli-service/lib/Service.js#L58" target="_blank" rel="noopener noreferrer">Service.init</a>方法和<a href="https://github.com/vuejs/vue-cli/blob/7f3d51133635114528848b29e27084ee89d53e1c/packages/%40vue/cli-service/lib/Service.js#L256" target="_blank" rel="noopener noreferrer">Service.resolveWebpackConfig</a>方法得出的：</p><ul><li><code>Service.init</code>方法里，会将<code>vue.config.js</code>里的<code>configureWebpack</code>选项<code>push</code>到<code>service.webpackRawConfigFns</code>数组，<code>chainWebpack</code>选项<code>push</code>到<code>service.webpackChainFns</code>数组</li><li><code>Service.resolveWebpackConfig</code>方法里，在解析 Webpack 配置时，会先执行<code>service.webpackChainFns</code>数组里的所有函数，再执行<code>service.webpackRawConfigFns</code>数组里的所有函数</li></ul><p>因此<code>configureWebpack</code>的优先级高于<code>chainWebpack</code>。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>在合并<code>configureWebpack</code>选项的配置对象之前（无论选项的值是个配置对象，还是个返回配置对象的函数），都会先将内置的<code>webpack-chain</code>的<code>config</code>对象（可能经过<code>chainWebpack</code>选项做了修改）转换为 Webpack 原生的配置对象，代码详见<a href="https://github.com/vuejs/vue-cli/blob/7f3d51133635114528848b29e27084ee89d53e1c/packages/%40vue/cli-service/lib/Service.js#L261" target="_blank" rel="noopener noreferrer">https://github.com/vuejs/vue-cli/blob/7f3d51133635114528848b29e27084ee89d53e1c/packages/%40vue/cli-service/lib/Service.js#L261</a>。</p><p>因此，<code>configureWebpack</code>选项（值为函数时）的参数<code>config</code>与<code>chainWebpack</code>选项的参数<code>config</code>不是同一类对象。</p><ul><li><code>chainWebpack: config =&gt; { ... }</code>: <code>config</code>参数是由<code>webpack-chain</code>里通过<code>new Config()</code>产生的实例对象</li><li><code>configureWebpack: config =&gt; { ... }</code>: <code>config</code>参数是由<code>webpack-chain</code>的<code>config</code>实例经过<code>config.toConfig()</code>产生的 Webpack 原生配置对象</li></ul></div><h3 id="常用配置说明" tabindex="-1"><a class="header-anchor" href="#常用配置说明"><span>常用配置说明</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// vue.config.js</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> BundleAnalyzerPlugin</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;webpack-bundle-analyzer&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">BundleAnalyzerPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // ...</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    chainWebpack</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> config</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 注意，这里的 config 参数是 webpack-chain 里通过 new Config() 获取来的，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 与 configureWebpack 配置项（值为函数时）的 config 参数不一样</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 可视化依赖分析</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;bundle-analyzer&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">BundleAnalyzerPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">                generateStatsFile</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ]);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 关闭代码压缩（方式一），可在追查 bug 时关闭，详见 https://webpack.js.org/configuration/optimization/#optimizationminimize</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">optimization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">minimize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 删除 ts 规则上的 cache-loader。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // BTW，vue-cli 默认会给 .vue/.ts/.tsx 添加 cache-loader</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ts&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">delete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;cache-loader&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    configureWebpack</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> config</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 注意，这里的 config 参数是个 webpack raw object，与 chainWebpack 里拿到的 config 不一样</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 可参考 关闭代码压缩 的两种方式，比较这两个 config 的区别</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 设置 devtool</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> rocess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">NODE_ENV</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;production&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">devtool</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;source-map&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">output</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sourceMapFilename</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                &#39;../&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">UNI_PLATFORM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/[name].js.map&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 关闭代码压缩（方式二）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">optimization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">minimize</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 默认情况下 babel-loader 会忽略所有 node_modules 中的文件。如果你想要通过 Babel 显式转译一个依赖，可以在这个选项中列出来。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // https://cli.vuejs.org/zh/config/#transpiledependencies</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    transpileDependencies</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;vue&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 仅示例，实际上引用 vue 之前其已经编译过</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ],</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 20)),
    createVNode(_component_global_config)
  ]);
}
const configTools_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "config-tools.html.vue"]]);
const data = JSON.parse('{"path":"/front-end-engineering/tools/build/webpack/config/config-tools.html","title":"第三方配置工具","lang":"en-US","frontmatter":{"description":"第三方配置工具 webpack-merge webpack-merge提供一个merge函数去联结数组和合并对象，以创建一个新的对象。 merge(...configuration | [...configuration])，合并配置对象 mergeWithCustomize({ customizeArray, customizeObject })(....","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/front-end-engineering/tools/build/webpack/config/config-tools.html"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"第三方配置工具"}],["meta",{"property":"og:description","content":"第三方配置工具 webpack-merge webpack-merge提供一个merge函数去联结数组和合并对象，以创建一个新的对象。 merge(...configuration | [...configuration])，合并配置对象 mergeWithCustomize({ customizeArray, customizeObject })(...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-31T12:47:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-31T12:47:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第三方配置工具\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-31T12:47:00.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"webpack-merge","slug":"webpack-merge","link":"#webpack-merge","children":[]},{"level":2,"title":"webpack-chain","slug":"webpack-chain","link":"#webpack-chain","children":[]},{"level":2,"title":"vue.config.js","slug":"vue-config-js","link":"#vue-config-js","children":[{"level":3,"title":"configureWebpack","slug":"configurewebpack","link":"#configurewebpack","children":[]},{"level":3,"title":"chainWebpack","slug":"chainwebpack","link":"#chainwebpack","children":[]},{"level":3,"title":"配置合并优先级","slug":"配置合并优先级","link":"#配置合并优先级","children":[]},{"level":3,"title":"常用配置说明","slug":"常用配置说明","link":"#常用配置说明","children":[]}]}],"git":{"createdTime":1643183100000,"updatedTime":1730378820000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":1}]},"readingTime":{"minutes":2.9,"words":869},"filePathRelative":"front-end-engineering/tools/build/webpack/config/config-tools.md","localizedDate":"January 26, 2022","autoDesc":true}');
export {
  configTools_html as comp,
  data
};
