import { r as resolveComponent, c as createElementBlock, b as createStaticVNode, a as createVNode, o as openBlock } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
function _sfc_render(_ctx, _cache) {
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[0] || (_cache[0] = createStaticVNode('<h1 id="babel-preset-env" tabindex="-1"><a class="header-anchor" href="#babel-preset-env"><span>@babel/preset-env</span></a></h1><p><a href="https://www.babeljs.cn/docs/babel-preset-env" target="_blank" rel="noopener noreferrer">@babel/preset-env</a>是一个灵活的预设，你可以无需管理目标环境需要的语法转换或浏览器<code>polyfill</code>，就可以使用最新的 JavaScript。这将让你的生活更简单，也会让 JavaScript 打包文件更小。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># with npm</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --save-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @babel/preset-env</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># with yarn</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yarn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @babel/preset-env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="它如何工作" tabindex="-1"><a class="header-anchor" href="#它如何工作"><span>它如何工作</span></a></h2><p><code>@babel/preset-env</code>是基于一些优秀的开源项目，比如<a href="https://github.com/browserslist/browserslist" target="_blank" rel="noopener noreferrer">browserslist</a>、<a href="https://github.com/kangax/compat-table" target="_blank" rel="noopener noreferrer">compat-table</a>、<a href="https://github.com/Kilian/electron-to-chromium" target="_blank" rel="noopener noreferrer">electron-to-chromium</a>，要是没有它们，也就没有<code>@babel/preset-env</code>。</p><p>我们利用这些数据源来维护一些映射表：</p><ul><li>我们支持的设备环境的哪个版本需要获得哪些 JavaScript 语法或浏览器特性的支持的映射</li><li>这些语法和特性到 Babel 转换插件和<code>core-js</code>的<code>polyfill</code>的映射</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>尤其需要注意的是，<code>@babel/preset-env</code>不支持<code>stage-x</code>的插件。</p></div><p><code>@babel/preset-env</code>拿到你指定的目标环境，检查这些映射表来编译一系列的插件并传给 Babel。</p><h2 id="browserslist-集成" tabindex="-1"><a class="header-anchor" href="#browserslist-集成"><span>Browserslist 集成</span></a></h2><p>针对基于浏览器的或<code>Electron-based</code>的项目，我们推荐使用<a href="https://github.com/browserslist/browserslist" target="_blank" rel="noopener noreferrer">.browserslistrc</a>文件来指定目标环境。你可能已经有了这个配置文件，因为它会被生态系统里的许多工具用到，比如<a href="https://github.com/postcss/autoprefixer" target="_blank" rel="noopener noreferrer">autoprefixer</a>、<a href="https://stylelint.io/" target="_blank" rel="noopener noreferrer">stylelint</a>、<a href="https://github.com/amilajack/eslint-plugin-compat" target="_blank" rel="noopener noreferrer">eslint-plugin-compat</a>等等。</p><p>若是没设置<code>targets</code>或<code>ignoreBrowserslistConfig</code>配置项，<code>@babel/preset-env</code>默认会使用<a href="https://github.com/browserslist/browserslist#queries" target="_blank" rel="noopener noreferrer">browserslist config sources</a>。</p><p>比如，仅仅包含<code>&gt;0.25%</code>市场份额浏览器的那些<code>polyfill</code>和代码转换：</p><p>Options:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;presets&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;@babel/preset-env&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 原文档是这样的</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // &quot;useBuiltIns&quot;: &quot;entry&quot;,</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 实际上应该是这样</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;targets&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&gt; 0.25%, not dead&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>browserslist:</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&gt; 0.25%</span></span>\n<span class="line"><span>not dead</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>或<code>package.json</code>:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;browserslist&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&gt; 0.25%, not dead&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>Options</span></a></h2><p>关于更多设置预设的配置项，可参考<a href="https://www.babeljs.cn/docs/presets#preset-options" target="_blank" rel="noopener noreferrer">preset options</a>文档。</p><h3 id="targets" tabindex="-1"><a class="header-anchor" href="#targets"><span>targets</span></a></h3><p><code>string | Array&lt;string&gt; | { [string]: string }</code>，默认为<code>{}</code>。</p><p>描述你项目支持的目标环境。</p><p>这可以使用<a href="https://github.com/browserslist/browserslist" target="_blank" rel="noopener noreferrer">browserslist-compatible</a>形式的<code>query</code>：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;targets&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&gt; 0.25%, not dead&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者支持的最小环境版本的对象：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;targets&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;chrome&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;58&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;ie&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;11&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些环境可以是：</p><ul><li><code>chrome</code></li><li><code>opera</code></li><li><code>edge</code></li><li><code>firefox</code></li><li><code>safari</code></li><li><code>ie</code></li><li><code>ios</code></li><li><code>android</code></li><li><code>node</code></li><li><code>electron</code></li></ul><p>若是没有指定环境，<code>@babel/preset-env</code>默认将转换所有的 ECMAScript 2015+ 代码。</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;presets&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;@babel/preset-env&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>我们不推荐使用<code>preset-env</code>时不指定环境，因为这样就无法发挥它指定目标浏览器能力的优势。</p></div><h4 id="targets-esmodules" tabindex="-1"><a class="header-anchor" href="#targets-esmodules"><span>targets.esmodules</span></a></h4><p><code>boolean</code></p><p>你要支持的目标浏览器可能支持<a href="https://www.ecma-international.org/ecma-262/6.0/#sec-modules" target="_blank" rel="noopener noreferrer">ES 模块</a>。当指定该选项，指定的目标浏览器将被忽略。你可以结合<code>&lt;script type=&quot;module&quot;&gt;&lt;/script&gt;</code>来使用这样方式，这样就会产生更小的脚本文件（<a href="https://jakearchibald.com/2017/es-modules-in-browsers/#nomodule-for-backwards-compatibility" target="_blank" rel="noopener noreferrer">https://jakearchibald.com/2017/es-modules-in-browsers/#nomodule-for-backwards-compatibility</a>）。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>请注意，当指定<code>esmodules</code>后，将忽略浏览器目标环境。</p></div><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;presets&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;@babel/preset-env&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;targets&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          &quot;esmodules&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="targets-node" tabindex="-1"><a class="header-anchor" href="#targets-node"><span>targets.node</span></a></h4><p><code>string | &quot;current&quot; | true</code></p><p>若是你想要针对当前<code>node</code>版本编译，你可以指定<code>&quot;node&quot;: true</code>或<code>&quot;node&quot;: &quot;current&quot;</code>，这与<code>&quot;node&quot;: process.versions.node</code>是一样的。</p><h4 id="targets-safari" tabindex="-1"><a class="header-anchor" href="#targets-safari"><span>targets.safari</span></a></h4><p><code>string | &quot;tp&quot;</code></p><p>若是你想要针对 Safari 的 technology preview 版本编译，你可以指定<code>&quot;safari&quot;: &quot;tp&quot;</code>。</p><h4 id="targets-browsers" tabindex="-1"><a class="header-anchor" href="#targets-browsers"><span>targets.browsers</span></a></h4><p>即将在下个版本移除。</p><h3 id="spec" tabindex="-1"><a class="header-anchor" href="#spec"><span>spec</span></a></h3><p><code>boolean</code>, 默认为<code>false</code>。</p><p>Enable more spec compliant, but potentially slower, transformations for any plugins in this preset that support them.</p><h3 id="loose" tabindex="-1"><a class="header-anchor" href="#loose"><span>loose</span></a></h3><p><code>boolean</code>, 默认为<code>false</code>。</p><p>开启<a href="https://2ality.com/2015/12/babel6-loose-mode.html" target="_blank" rel="noopener noreferrer">&quot;loose&quot; transformations</a>，针对预设里允许<code>loose</code>转换的任何插件。</p><h3 id="modules" tabindex="-1"><a class="header-anchor" href="#modules"><span>modules</span></a></h3><p><code>&quot;amd&quot; | &quot;umd&quot; | &quot;systemjs&quot; | &quot;commonjs&quot; | &quot;cjs&quot; | &quot;auto&quot; | false</code>，默认为<code>&quot;auto&quot;</code>。</p><p>Enable transformation of ES6 module syntax to another module type.</p><p>开启将 ES6 模块语法转换为其他模块语法。设置为<code>false</code>将不转换模块。</p><p><code>cjs</code>是<code>commonjs</code>的别名。</p><h3 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>debug</span></a></h3><p><code>boolean</code>, 默认为<code>false</code>。</p><p>将使用的插件/目标环境以及<a href="https://github.com/babel/babel/blob/master/packages/babel-preset-env/data/plugins.json" target="_blank" rel="noopener noreferrer">plugin data version</a>指定的版本输入到<code>console.log</code>。</p><h3 id="include" tabindex="-1"><a class="header-anchor" href="#include"><span>include</span></a></h3><p><code>Array&lt;string|RegExp&gt;</code>, 默认为<code>[]</code>。</p><p>插件数组，这些插件总是被使用（即使目标环境不需要）。</p><p>有效的选项包括：</p><ul><li>Babel 插件，带前缀或不带前缀都支持，比如<code>@babel/plugin-transform-spread</code>或<code>plugin-transform-spread</code>。</li><li>内置对象，比如<code>es6.map</code>、<code>es6.set</code>、或<code>es6.object.assign</code>。</li></ul><p>插件名称可以全部或部分指定（或使用正则表达式）。</p><p>可接受的输入有：</p><ul><li>全部名称，<code>string</code>：<code>&quot;es6.math.sign&quot;</code></li><li>部分名称，<code>string</code>：<code>&quot;es6.math.*&quot;</code>（解析为所有以<code>es6.math</code>为前缀的插件）</li><li><code>RegExp</code>对象：<code>/^transform-.*$/</code>或<code>new RegExp(&quot;^transform-modules-.*&quot;)</code></li></ul><p>注意，上面的<code>.</code>是<code>RegExp</code>的一部分，等同于任何字符，而不是实际的字符<code>.</code>。另外注意在<code>RegExp</code>里使用<code>.*</code>匹配任何字符，类似于<code>glob</code>格式里的<code>*</code>。</p><p>若是原生实现里有<code>bug</code>，或者只实现了特性的一部分时，这个配置项将尤其有用。</p><p>比如，Node 4 支持原生的类但是不支持函数参数的扩展运算符。若是调用<code>super</code>时使用扩展运算符，则需要引入<code>@babel/plugin-transform-classes</code>进行转换。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意，<code>include</code>和<code>exclude</code>选项仅能作用于包含在预设里的插件。因此，若是使用<code>include</code>包含<code>@babel/plugin-proposal-do-expressions</code>插件或是使用<code>exclude</code>排除<code>@babel/plugin-proposal-function-bind</code>，都会抛错。若是想使用不包含在预设里的插件，可以直接添加在<code>plugins</code>里。</p></div><h3 id="exclude" tabindex="-1"><a class="header-anchor" href="#exclude"><span>exclude</span></a></h3><p><code>Array&lt;string|RegExp&gt;</code>，默认为<code>[]</code>。</p><p>插件数组，这些插件将不会被使用（即使目标环境需要）。</p><p>可能的选项与<code>include</code>相同。</p><p>该选项设置了一个转换插件的黑名单，比如不使用<code>@babel/plugin-transform-regenerator</code>，若是你不使用生成器函数<code>generators</code>以及不想包含<code>regeneratorRuntime</code>（当使用<code>useBuiltIns</code>时）或使用另一个插件比如<a href="https://github.com/MatAtBread/fast-async" target="_blank" rel="noopener noreferrer">fast-async</a>而不是<a href="https://www.babeljs.cn/docs/babel-plugin-proposal-async-generator-functions" target="_blank" rel="noopener noreferrer">Babel 的<code>async-to-gen</code></a>。</p><h3 id="usebuiltins" tabindex="-1"><a class="header-anchor" href="#usebuiltins"><span>useBuiltIns</span></a></h3><p><code>&quot;usage&quot;</code> | <code>&quot;entry&quot;</code> | <code>false</code>，默认是<code>false</code>。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>该选项会直接添加对<code>core-js</code>模块的引用。因此<code>core-js</code>将相对于文件自身进行解析，这要求<code>core-js</code>是可访问的。在你的项目，若是没有<code>core-js</code>依赖或是有多个版本，你可能需要指定<code>core-js@2</code>作为顶级依赖。</p></div><p>这选项配置<code>@babel/preset-env</code>如何处理<code>polyfill</code>。</p><h4 id="usebuiltins-entry" tabindex="-1"><a class="header-anchor" href="#usebuiltins-entry"><span>useBuiltIns: &#39;entry&#39;</span></a></h4><div class="hint-container warning"><p class="hint-container-title">注意</p><p>整个项目里能且仅能有一次使用<code>require(&quot;@babel/polyfill&quot;);</code>。多次引入<code>@babel/polyfill</code>将抛错，因为这将导致全局冲突以及其他难以追踪的问题。我们推荐创建一个单独的入口你文件，仅仅包含<code>require</code>语句。</p></div><p>该选项启用一个新的插件，该插件将基于你环境单独引入<code>core-js</code>的各个文件，以此来替换掉<code>import &quot;@babel/polyfill&quot;</code>或<code>require(&quot;@babel/polyfill&quot;)</code>语句。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">npm</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">babel</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">polyfill</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> --</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">save</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输入：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;@babel/polyfill&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出（基于环境而不同）：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;core-js/modules/es7.string.pad-start&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;core-js/modules/es7.string.pad-end&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这对直接引入<code>core-js</code>也是有效的（<code>import &quot;core-js&quot;;</code>或<code>require(&#39;core-js&#39;);</code>）。</p><h4 id="usebuiltins-usage-实验性的" tabindex="-1"><a class="header-anchor" href="#usebuiltins-usage-实验性的"><span>useBuiltIns: &#39;usage&#39;（实验性的）</span></a></h4><p>添加对每个文件中使用的特定的<code>polyfill</code>的引入。我们利用了“一个打包文件将只加载一次相同的<code>polyfill</code>”这一事实。</p><p>输入：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// a.js</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Promise</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// b.js</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出（若是环境不支持）：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;core-js/modules/es6.promise&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Promise</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;core-js/modules/es6.map&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出（若是环境支持）：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Promise</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="usebuiltins-false" tabindex="-1"><a class="header-anchor" href="#usebuiltins-false"><span>useBuiltIns: false</span></a></h4><p>每个文件里不自动添加<code>polyfill</code>，或不将<code>import &quot;@babel/polyfill&quot;</code>转换为单独的<code>polyfill</code>。</p><h3 id="forcealltransforms" tabindex="-1"><a class="header-anchor" href="#forcealltransforms"><span>forceAllTransforms</span></a></h3><p><code>boolean</code>，默认为<code>false</code>。</p><p>有了 Babel 7 的<a href="https://www.babeljs.cn/docs/config-files#javascript" target="_blank" rel="noopener noreferrer">Javascipt config file</a>支持，若是<code>env</code>被设置为<code>product</code>，你可以强制使用所有的转换。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">api</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    presets</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      [</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;@babel/preset-env&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          targets</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            chrome</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 59</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            edge</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 13</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            firefox</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          },</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          // for uglifyjs...</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          forceAllTransforms</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> api</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;production&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ],</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ],</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  };</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p><code>targets.uglify</code>已经废弃并将在下个主版本移除。</p></div><p>默认情况下，这个预设将会按需运行目标环境需要的所有转换。若是你想要运行所有的转换（而忽略目标环境是否需要），则需要开启该选项，这对于输出代码在 UglifyJS 上或仅支持 ES5 的环境上运行来说将是非常有用的。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Uglify 有一个在建的&quot;Harmony&quot;分支来设法解决 ES6 支持缺失的问题，但是这还不太稳定。你可以在<a href="https://github.com/mishoo/UglifyJS2/issues/448" target="_blank" rel="noopener noreferrer">UglifyJS2 issue #448</a>关注这个进度。如果你想要一个支持 ES6 语法的可选的压缩工具，我们推荐使用<a href="https://www.babeljs.cn/docs/babel-preset-minify" target="_blank" rel="noopener noreferrer">babel-minify</a></p></div><h3 id="configpath" tabindex="-1"><a class="header-anchor" href="#configpath"><span>configPath</span></a></h3><p><code>string</code>，默认为<code>process.cwd()</code>。</p><p>搜索 Browserslist 配置的开始点，会基于此开始点向上搜索到系统根目录，直到发现配置文件。</p><h3 id="ignorebrowserslistconfig" tabindex="-1"><a class="header-anchor" href="#ignorebrowserslistconfig"><span>ignoreBrowserslistConfig</span></a></h3><p><code>boolean</code>，默认为<code>false</code>。</p><p>切换是否使用<a href="https://github.com/browserslist/browserslist#queries" target="_blank" rel="noopener noreferrer">browserslist config sources</a>，这将决定是否要搜索任何的 Browserslist 配置文件或<code>package.json</code>里的<code>browserslist</code>选项。当项目里存在 Browserslist 配置文件但是不用于 Babel 编译时，这将非常有用。</p><h3 id="shippedproposals" tabindex="-1"><a class="header-anchor" href="#shippedproposals"><span>shippedProposals</span></a></h3><p>切换是否开启对处于提案中的且浏览器已经实现的内置对象/特性的支持。若是你的目标环境已经有了对某提案特性的原生支持，将开启与其相匹配的解析器语法插件，而不是执行任何的转换。注意，这不会开启与<a href="https://www.babeljs.cn/docs/babel-preset-stage-3" target="_blank" rel="noopener noreferrer">@babel/preset-stage-3</a>相同的转换，因为这些提案在正式落地到浏览器之前还会继续改变。</p><p>当前以下内容是支持的：</p><p>Builtins</p><ul><li><a href="https://github.com/tc39/proposal-flatMap" target="_blank" rel="noopener noreferrer">es7.array.flat-map</a></li></ul><p>Features</p><ul><li>None</li></ul><h2 id="vue-babel-preset-env" tabindex="-1"><a class="header-anchor" href="#vue-babel-preset-env"><span>@vue/babel-preset-env</span></a></h2><p><a href="https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/babel-preset-app" target="_blank" rel="noopener noreferrer">@vue/babel-preset-env</a>是针对 Vue.js 项目，基于<code>@babel/preset-env</code>、<code>@vue/babel-preset-jsx</code>、<code>@babel/plugin-transform-runtime</code>等等预设和插件的封装，主要包含了以下内容：</p><ul><li><a href="https://github.com/vuejs/vue-cli/blob/9272ead6e8d36257d530f6bec00a290220e9c62a/packages/%40vue/babel-preset-app/index.js#L141" target="_blank" rel="noopener noreferrer">@babel/preset-env</a>：主要使用该预设，并基于用户输入和目标环境等对参数进行了处理。 <ul><li><code>polyfills</code><ul><li><code>@vue/babel-preset-env</code>里默认包含了以下<code>polyfill</code>，详见<a href="https://github.com/vuejs/vue-cli/blob/9272ead6e8d36257d530f6bec00a290220e9c62a/packages/%40vue/babel-preset-app/index.js#L3" target="_blank" rel="noopener noreferrer">源码</a>，但是这些<code>polyfill</code>会根据目标环境来确定最终是否会传入<code>@babel/preset-env</code>预设里。假设目标环境都实现了这些内置对象或特性，则最终不会包含这些<code>polyfill</code>。详见<a href="https://github.com/vuejs/vue-cli/blob/9272ead6e8d36257d530f6bec00a290220e9c62a/packages/%40vue/babel-preset-app/index.js#L110" target="_blank" rel="noopener noreferrer">源码</a>。 <ul><li><code>es6.array.iterator</code></li><li><code>es6.promise</code></li><li><code>es6.object.assign</code></li><li><code>es7.promise.finally</code></li></ul></li></ul></li></ul></li><li><a href="https://github.com/vuejs/vue-cli/blob/9272ead6e8d36257d530f6bec00a290220e9c62a/packages/%40vue/babel-preset-app/index.js#L156" target="_blank" rel="noopener noreferrer">@babel/plugin-transform-runtime</a>：仅使用了该插件引入模块化的<code>helpers</code>替换内联的 Babel<code>helpers</code>。</li><li><code>@babel/plugin-syntax-dynamic-import</code></li><li><code>@babel/plugin-proposal-decorators</code></li><li><code>@babel/plugin-proposal-class-properties</code></li><li>等等</li></ul>', 128)),
    createVNode(_component_global_config)
  ]);
}
const presetEnv_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "preset-env.html.vue"]]);
const data = JSON.parse('{"path":"/es6/babel/@babel/preset-env.html","title":"@babel/preset-env","lang":"en-US","frontmatter":{"description":"@babel/preset-env @babel/preset-env是一个灵活的预设，你可以无需管理目标环境需要的语法转换或浏览器polyfill，就可以使用最新的 JavaScript。这将让你的生活更简单，也会让 JavaScript 打包文件更小。 安装 它如何工作 @babel/preset-env是基于一些优秀的开源项目，比如browser...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/es6/babel/@babel/preset-env.html"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"@babel/preset-env"}],["meta",{"property":"og:description","content":"@babel/preset-env @babel/preset-env是一个灵活的预设，你可以无需管理目标环境需要的语法转换或浏览器polyfill，就可以使用最新的 JavaScript。这将让你的生活更简单，也会让 JavaScript 打包文件更小。 安装 它如何工作 @babel/preset-env是基于一些优秀的开源项目，比如browser..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2019-11-09T10:22:30.000Z"}],["meta",{"property":"article:modified_time","content":"2019-11-09T10:22:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"@babel/preset-env\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2019-11-09T10:22:30.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"它如何工作","slug":"它如何工作","link":"#它如何工作","children":[]},{"level":2,"title":"Browserslist 集成","slug":"browserslist-集成","link":"#browserslist-集成","children":[]},{"level":2,"title":"Options","slug":"options","link":"#options","children":[{"level":3,"title":"targets","slug":"targets","link":"#targets","children":[]},{"level":3,"title":"spec","slug":"spec","link":"#spec","children":[]},{"level":3,"title":"loose","slug":"loose","link":"#loose","children":[]},{"level":3,"title":"modules","slug":"modules","link":"#modules","children":[]},{"level":3,"title":"debug","slug":"debug","link":"#debug","children":[]},{"level":3,"title":"include","slug":"include","link":"#include","children":[]},{"level":3,"title":"exclude","slug":"exclude","link":"#exclude","children":[]},{"level":3,"title":"useBuiltIns","slug":"usebuiltins","link":"#usebuiltins","children":[]},{"level":3,"title":"forceAllTransforms","slug":"forcealltransforms","link":"#forcealltransforms","children":[]},{"level":3,"title":"configPath","slug":"configpath","link":"#configpath","children":[]},{"level":3,"title":"ignoreBrowserslistConfig","slug":"ignorebrowserslistconfig","link":"#ignorebrowserslistconfig","children":[]},{"level":3,"title":"shippedProposals","slug":"shippedproposals","link":"#shippedproposals","children":[]}]},{"level":2,"title":"@vue/babel-preset-env","slug":"vue-babel-preset-env","link":"#vue-babel-preset-env","children":[]}],"git":{"createdTime":1573122262000,"updatedTime":1573294950000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":2}]},"readingTime":{"minutes":8.38,"words":2514},"filePathRelative":"es6/babel/@babel/preset-env.md","localizedDate":"November 7, 2019","autoDesc":true}');
export {
  presetEnv_html as comp,
  data
};
