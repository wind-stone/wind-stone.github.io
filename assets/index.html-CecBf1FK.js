import { r as resolveComponent, c as createElementBlock, b as createStaticVNode, a as createVNode, o as openBlock } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
function _sfc_render(_ctx, _cache) {
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[0] || (_cache[0] = createStaticVNode('<h1 id="总览" tabindex="-1"><a class="header-anchor" href="#总览"><span>总览</span></a></h1><p>Hook 这个单词的意思是&quot;钩子&quot;。</p><p>React Hooks 的意思是，组件尽量写成纯函数，如果需要外部功能和副作用，就用钩子把外部代码&quot;钩&quot;进来。 React Hooks 就是那些钩子。</p><h2 id="hooks-的使用" tabindex="-1"><a class="header-anchor" href="#hooks-的使用"><span>Hooks 的使用</span></a></h2><ul><li>所有 Hooks 只能在组件的顶层或自己的 Hook 中调用它，而不能在循环或者条件内部调用。如果需要，抽离出一个新组件并将 <code>state</code> 移入其中。</li></ul><h3 id="依赖项" tabindex="-1"><a class="header-anchor" href="#依赖项"><span>依赖项</span></a></h3><p>Hooks 里涉及依赖项的如 <code>useEffect</code>、<code>useMemo</code>、<code>useCallback</code> 等，需要注意：</p><ul><li>依赖项包括 <code>props</code>、<code>state</code> 以及所有直接在组件内部声明的变量和函数。</li><li>React 将使用 <code>Object.is</code> 来比较每个依赖项和它先前的值。</li><li>如果省略此依赖项，则在每次重新渲染组件之后，将重新运行对应的 Hooks。</li></ul><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><h3 id="哪些-hooks-会触发组件的重新渲染" tabindex="-1"><a class="header-anchor" href="#哪些-hooks-会触发组件的重新渲染"><span>哪些 hooks 会触发组件的重新渲染？</span></a></h3><ul><li><code>useState</code> 里的 <code>setState</code> 调用后</li><li><code>useReducer</code> 里的 <code>dispatch</code> 调用后</li><li><code>useContext</code> 里返回的 <code>context</code> 变化后</li></ul><h3 id="哪些-hooks-不会触发组件的重新渲染" tabindex="-1"><a class="header-anchor" href="#哪些-hooks-不会触发组件的重新渲染"><span>哪些 hooks 不会触发组件的重新渲染？</span></a></h3><ul><li><code>useRef</code>，修改 <code>ref.current</code> 不会触发组件的重新渲染</li></ul><h2 id="react-hooks-原理" tabindex="-1"><a class="header-anchor" href="#react-hooks-原理"><span>React Hooks 原理</span></a></h2><ul><li><a href="https://juejin.cn/post/6944863057000529933?searchId=202410161135220DEF57CA5A80F097A5FB" target="_blank" rel="noopener noreferrer">「react进阶」一文吃透react-hooks原理</a></li></ul>', 15)),
    createVNode(_component_global_config)
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
const data = JSON.parse('{"path":"/react/hooks/","title":"总览","lang":"en-US","frontmatter":{"description":"总览 Hook 这个单词的意思是\\"钩子\\"。 React Hooks 的意思是，组件尽量写成纯函数，如果需要外部功能和副作用，就用钩子把外部代码\\"钩\\"进来。 React Hooks 就是那些钩子。 Hooks 的使用 所有 Hooks 只能在组件的顶层或自己的 Hook 中调用它，而不能在循环或者条件内部调用。如果需要，抽离出一个新组件并将 state ...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/react/hooks/"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"总览"}],["meta",{"property":"og:description","content":"总览 Hook 这个单词的意思是\\"钩子\\"。 React Hooks 的意思是，组件尽量写成纯函数，如果需要外部功能和副作用，就用钩子把外部代码\\"钩\\"进来。 React Hooks 就是那些钩子。 Hooks 的使用 所有 Hooks 只能在组件的顶层或自己的 Hook 中调用它，而不能在循环或者条件内部调用。如果需要，抽离出一个新组件并将 state ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-24T07:40:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-24T07:40:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"总览\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-24T07:40:51.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Hooks 的使用","slug":"hooks-的使用","link":"#hooks-的使用","children":[{"level":3,"title":"依赖项","slug":"依赖项","link":"#依赖项","children":[]}]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[{"level":3,"title":"哪些 hooks 会触发组件的重新渲染？","slug":"哪些-hooks-会触发组件的重新渲染","link":"#哪些-hooks-会触发组件的重新渲染","children":[]},{"level":3,"title":"哪些 hooks 不会触发组件的重新渲染？","slug":"哪些-hooks-不会触发组件的重新渲染","link":"#哪些-hooks-不会触发组件的重新渲染","children":[]}]},{"level":2,"title":"React Hooks 原理","slug":"react-hooks-原理","link":"#react-hooks-原理","children":[]}],"git":{"createdTime":1729500051000,"updatedTime":1729755651000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":3}]},"readingTime":{"minutes":1.01,"words":302},"filePathRelative":"react/hooks/index.md","localizedDate":"October 21, 2024","autoDesc":true}');
export {
  index_html as comp,
  data
};
