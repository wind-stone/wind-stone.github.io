import { r as resolveComponent, c as createElementBlock, d as createBaseVNode, a as createVNode, e as withCtx, b as createStaticVNode, o as openBlock, f as createTextVNode } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
const _hoisted_1 = { class: "table-of-contents" };
function _sfc_render(_ctx, _cache) {
  const _component_router_link = resolveComponent("router-link");
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[13] || (_cache[13] = createBaseVNode("h1", {
      id: "nginx-conf",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#nginx-conf"
      }, [
        createBaseVNode("span", null, "nginx.conf")
      ])
    ], -1)),
    createBaseVNode("nav", _hoisted_1, [
      createBaseVNode("ul", null, [
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#配置示例" }, {
            default: withCtx(() => _cache[0] || (_cache[0] = [
              createTextVNode("配置示例")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#全局块" }, {
                default: withCtx(() => _cache[1] || (_cache[1] = [
                  createTextVNode("全局块")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#events-块" }, {
                default: withCtx(() => _cache[2] || (_cache[2] = [
                  createTextVNode("events 块")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#http-块" }, {
                default: withCtx(() => _cache[3] || (_cache[3] = [
                  createTextVNode("http 块")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#http-全局块" }, {
                    default: withCtx(() => _cache[4] || (_cache[4] = [
                      createTextVNode("http 全局块")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#server-全局块" }, {
                    default: withCtx(() => _cache[5] || (_cache[5] = [
                      createTextVNode("server 全局块")
                    ])),
                    _: 1
                  })
                ])
              ])
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#模块" }, {
            default: withCtx(() => _cache[6] || (_cache[6] = [
              createTextVNode("模块")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#core-functionality" }, {
                default: withCtx(() => _cache[7] || (_cache[7] = [
                  createTextVNode("Core functionality")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#ngx-http-core-module" }, {
                default: withCtx(() => _cache[8] || (_cache[8] = [
                  createTextVNode("ngx_http_core_module")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#location" }, {
                    default: withCtx(() => _cache[9] || (_cache[9] = [
                      createTextVNode("location")
                    ])),
                    _: 1
                  })
                ])
              ])
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#upstream-模块" }, {
                default: withCtx(() => _cache[10] || (_cache[10] = [
                  createTextVNode("upstream 模块")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#ngx-http-index-module" }, {
                default: withCtx(() => _cache[11] || (_cache[11] = [
                  createTextVNode("ngx_http_index_module")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#reference" }, {
            default: withCtx(() => _cache[12] || (_cache[12] = [
              createTextVNode("Reference")
            ])),
            _: 1
          })
        ])
      ])
    ]),
    _cache[14] || (_cache[14] = createStaticVNode('<h2 id="配置示例" tabindex="-1"><a class="header-anchor" href="#配置示例"><span>配置示例</span></a></h2><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 全局块</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># events 块</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">events</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># http 块</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # http 全局块</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # ...</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 虚拟主机 server 块</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # server 全局块</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # ...</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # location块</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [PATTERN] {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [PATTERN] {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全局块" tabindex="-1"><a class="header-anchor" href="#全局块"><span>全局块</span></a></h3><p>全局块，配置影响<code>nginx</code>全局的指令。</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 全局块</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 配置用户或者组，默认为 nobody nobody</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">user </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">administrator administrators;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 允许生成的进程数，默认为 1</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">worker_processes </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定 nginx 进程运行文件存放地址</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">pid </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/nginx/pid/nginx.pid;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 制定日志路径，级别。这个设置可以放入全局块，http 块，server 块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">error_log </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">log/error.log </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="events-块" tabindex="-1"><a class="header-anchor" href="#events-块"><span>events 块</span></a></h3><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># events 块</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">events</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 设置网路连接序列化，防止惊群现象发生，默认为 on</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  accept_mutex </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 设置一个进程是否同时接受多个网络连接，默认为 off</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  multi_accept </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  use </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">epoll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 最大连接数，默认为 512</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  worker_connections </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="http-块" tabindex="-1"><a class="header-anchor" href="#http-块"><span>http 块</span></a></h3><h4 id="http-全局块" tabindex="-1"><a class="header-anchor" href="#http-全局块"><span>http 全局块</span></a></h4><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # http 全局块</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="server-全局块" tabindex="-1"><a class="header-anchor" href="#server-全局块"><span>server 全局块</span></a></h4><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # server 全局块</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 服务域名</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    server_name </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">www.windstone.com windstone.com; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 支持多域名配置</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    server_name </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">*.windstone.com;                 </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 支持泛域名解析</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    server_name </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">~</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">^\\.windstone\\.com$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;             </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 支持对于域名的正则匹配</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模块" tabindex="-1"><a class="header-anchor" href="#模块"><span>模块</span></a></h2><h3 id="core-functionality" tabindex="-1"><a class="header-anchor" href="#core-functionality"><span>Core functionality</span></a></h3><h3 id="ngx-http-core-module" tabindex="-1"><a class="header-anchor" href="#ngx-http-core-module"><span>ngx_http_core_module</span></a></h3><h4 id="location" tabindex="-1"><a class="header-anchor" href="#location"><span>location</span></a></h4><p>Syntax: <code>location [ = | ~ | ~* | ^~ ] uri { ... }</code><br> location @name { ... }<br> Default: —<br> Context: <code>server</code>, <code>location</code></p><p>根据请求的 URI 设置配置。</p><p>通过以下处理后，生成标准化的 URI，并执行匹配。</p><ul><li>解码<code>%xx</code>形式的加密文本</li><li>解析相对路径的<code>.</code>和<code>..</code>部分的引用</li><li>压缩两个或多个毗邻的斜杠为单个斜杠</li></ul><p><code>location</code>的定义，要么为前缀字符串，要么为正则表达式。正则表达式的前面可以指定<code>~*</code>修饰符（忽略大小写的匹配）或<code>~</code>修饰符（区分大小写的匹配）。为了查找到能匹配给定请求的<code>location</code>，<code>nginx</code>首先检查以前缀字符串定义的<code>location</code>（即前缀<code>location</code>）。在这些<code>location</code>中，将选择并记录具有最长匹配前缀的<code>location</code>。之后，按照正则表达式出现在配置文件里的顺序，再检查正则表达式。正则表达式的搜索将在发现第一个匹配之后终止，且会使用对应的配置。若是不存在匹配的正则表达式，则会使用之前记录的前缀字符串对应的配置。</p><p><code>location</code>块可以嵌套，除了下面提及的一些例外。</p><p>对于忽略大小写的操作系统，比如 macOS 和 Cygwin，匹配前缀字符串时将忽略大小写（0.7.7）。但是，对比仅限制在单字节的区域。</p><p>正则表达式可以包含捕获（0.7.40），可以之后在其他指令里使用。</p><p>若是最长匹配的前缀字符串带有<code>^~</code>修饰符，则不再检查正则表达式。</p><p>此外，使用<code>=</code>修饰符，会定义一个 URI 和<code>location</code>的精确匹配。如果查找到了一个精确匹配，搜索将终止。比如，若是频繁发生<code>/</code>请求，定义<code>location = /</code>将加速这些请求的处理，因为搜索在第一个比较之后就终止了。这样的<code>location</code>显然不能包含嵌套的<code>location</code>。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在 0.7.1 到 0.8.41 版本，若请求匹配了的前缀<code>location</code>没有<code>=</code>和<code>^~</code>修饰符，搜索也会终止，且不会检查正则表达式。</p></div><div class="hint-container warning"><p class="hint-container-title">译者注</p><p>注意，前缀字符串的匹配，都是从请求 URI 的最开始部分进行。</p></div><p>让我们通过一个例子，说明上述的规则。</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/ </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [ </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> A ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> / {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [ </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> B ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /documents/ {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [ </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> C ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 若 ^~ 之后的字符串匹配了，则不会检查正则表达式</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ^~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/images/ </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [ </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> D ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 忽略大小写的正则匹配</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ~* </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\.(gif|jpg|jpeg)$ </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [ </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> E ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>/</code>请求将匹配<code>configuration A</code>，<code>/index.html</code>请求将匹配<code>configuration B</code>，<code>/documents/document.html</code>请求将匹配<code>configuration C</code>，<code>/images/1.gif</code>请求将匹配<code>configuration D</code>，<code>/documents/1.jpg</code>请求将匹配<code>configuration E</code>。</p><p><code>@</code>前缀定义了一个命名的<code>location</code>。这样的<code>location</code>不是用于常规的请求处理，而是用于请求重定向。它们不能被嵌套，也不能包含嵌套的<code>location</code>。</p><p>若是前缀字符串定义的<code>location</code>以斜杠字符结尾，且请求被<code>proxy_pass</code>/<code>fastcgi_pass</code>/<code>uwsgi_pass</code>/<code>scgi_pass</code>/<code>memcached_pass</code>/<code>grpc_pass</code>之一处理，则特殊的处理逻辑将被执行: 针对有相同 URI 但没有尾斜杠的请求，将返回一个响应码为 301 的持久化的重定向到带有尾斜杠的相同 URI 的响应。若是不想要这样的效果，可以像如下这样定义一个 URI 与<code>location</code>的精确匹配。</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /user/ {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    proxy_pass </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">http://user.example.com;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/user </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    proxy_pass </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">http://login.example.com;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="upstream-模块" tabindex="-1"><a class="header-anchor" href="#upstream-模块"><span>upstream 模块</span></a></h3><p>该模块提供一个简单方法来实现在轮询和客户端 IP 之间的后端服务器负荷平衡。</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">upstream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> backend {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  ip_hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   backend1.example.com;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   backend2.example.com;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   backend3.example.com  down;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   backend4.example.com;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> / {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        proxy_pass </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> http://backend;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>ip_hash</code>: 配置该指令，会将请求按客户端的 IP 地址分发到各个服务器上。<code>hash</code>的<code>key</code>是客户端的 C 类网络地址。这种方式保证客户端请求总是转发到相同的服务器上。但是，如果被转发到的服务器不可用，则请求将转发到其他的服务器上。这为客户端总是连接到相同的服务器提供了较高的可能性。（译者注：但不能完全保证同一客户端总是连接到同一服务器上，因此不能在服务器上存放<code>session</code>等信息）</li></ul><h3 id="ngx-http-index-module" tabindex="-1"><a class="header-anchor" href="#ngx-http-index-module"><span>ngx_http_index_module</span></a></h3><p><code>ngx_http_index_module</code>模块处理以斜杠字符<code>/</code>结尾的请求。这些请求可以被<code>ngx_http_autoindex_module</code>和<code>ngx_http_random_index_module</code>模块处理。</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 配置示例</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> / {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    index </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">index.$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">geo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.html index.html;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Syntax: <code>index file ...;</code><br> Default: <code>index index.html;</code><br> Context: <code>http</code>, <code>server</code>, <code>location</code></p><p>该指令用来指定用来做默认文档的文件名。<code>file</code>文件名里可以包含变量。这些文件会以指定的顺序逐个查找。文件列表的最后一个元素可以是一个绝对路径的文件，比如:</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">index </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">index.$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">geo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.html index.0.html /index.html;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>需要注意，使用<code>index</code>文件会因此一个内部重定向，且请求可以在另一个不同的<code>location</code>里处理，比如如下的配置:</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 精确匹配 /</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/ </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    index </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">index.html;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> / {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个<code>/</code>的请求来了之后，会先匹配第一个<code>location</code>，得到结果<code>/index.html</code>，紧接着会作为<code>/index.html</code>继续在第二个<code>location</code><br> 里处理。</p><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/34943332" target="_blank" rel="noopener noreferrer">8分钟带你深入浅出搞懂Nginx</a></li><li><a href="https://juejin.im/post/5aa7704c6fb9a028bb18a993" target="_blank" rel="noopener noreferrer">Nginx 基本配置详解</a></li></ul>', 49)),
    createVNode(_component_global_config)
  ]);
}
const nginxConf_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "nginx-conf.html.vue"]]);
const data = JSON.parse('{"path":"/full-stack/software/nginx/nginx-conf.html","title":"nginx.conf","lang":"en-US","frontmatter":{"description":"nginx.conf 配置示例 全局块 全局块，配置影响nginx全局的指令。 events 块 http 块 http 全局块 server 全局块 模块 Core functionality ngx_http_core_module location Syntax: location [ = | ~ | ~* | ^~ ] uri { ... } ...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/full-stack/software/nginx/nginx-conf.html"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"nginx.conf"}],["meta",{"property":"og:description","content":"nginx.conf 配置示例 全局块 全局块，配置影响nginx全局的指令。 events 块 http 块 http 全局块 server 全局块 模块 Core functionality ngx_http_core_module location Syntax: location [ = | ~ | ~* | ^~ ] uri { ... } ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-10T11:20:32.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-10T11:20:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nginx.conf\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-10T11:20:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"配置示例","slug":"配置示例","link":"#配置示例","children":[{"level":3,"title":"全局块","slug":"全局块","link":"#全局块","children":[]},{"level":3,"title":"events 块","slug":"events-块","link":"#events-块","children":[]},{"level":3,"title":"http 块","slug":"http-块","link":"#http-块","children":[]}]},{"level":2,"title":"模块","slug":"模块","link":"#模块","children":[{"level":3,"title":"Core functionality","slug":"core-functionality","link":"#core-functionality","children":[]},{"level":3,"title":"ngx_http_core_module","slug":"ngx-http-core-module","link":"#ngx-http-core-module","children":[]},{"level":3,"title":"upstream 模块","slug":"upstream-模块","link":"#upstream-模块","children":[]},{"level":3,"title":"ngx_http_index_module","slug":"ngx-http-index-module","link":"#ngx-http-index-module","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"createdTime":1557452176000,"updatedTime":1728559232000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":2}]},"readingTime":{"minutes":5.38,"words":1613},"filePathRelative":"full-stack/software/nginx/nginx-conf.md","localizedDate":"May 10, 2019","autoDesc":true}');
export {
  nginxConf_html as comp,
  data
};
