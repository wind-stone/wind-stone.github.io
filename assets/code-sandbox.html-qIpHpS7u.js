import { r as resolveComponent, c as createElementBlock, b as createStaticVNode, a as createVNode, o as openBlock } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
function _sfc_render(_ctx, _cache) {
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[0] || (_cache[0] = createStaticVNode('<h1 id="codesandbox" tabindex="-1"><a class="header-anchor" href="#codesandbox"><span>CodeSandbox</span></a></h1><h2 id="入门文章" tabindex="-1"><a class="header-anchor" href="#入门文章"><span>入门文章</span></a></h2><ul><li><a href="https://bobi.ink/2019/06/20/codesandbox/" target="_blank" rel="noopener noreferrer">CodeSandbox 如何工作? 上篇</a>，强烈推荐</li><li><a href="https://www.yuque.com/wangxiangzhong/aob8up" target="_blank" rel="noopener noreferrer">CodeSandbox - 从入门到实现原理解析</a></li><li><a href="https://www.yuque.com/wangxiangzhong/aob8up/uf99c5" target="_blank" rel="noopener noreferrer">CodeSandbox是如何让npm上的模块直接在浏览器端运行的</a></li></ul><h3 id="背景知识" tabindex="-1"><a class="header-anchor" href="#背景知识"><span>背景知识</span></a></h3><ul><li><a href="https://juejin.cn/post/6844903777296728072" target="_blank" rel="noopener noreferrer">使用 Webpack 的 DllPlugin 提升项目构建速度</a></li></ul><h2 id="依赖加载" tabindex="-1"><a class="header-anchor" href="#依赖加载"><span>依赖加载</span></a></h2><p>依赖加载主要有两种方式：</p><ol><li>浏览器上直接请求<code>unpkg.com</code>上的单个文件</li><li>浏览器请求服务端的打包器，打包器通过<code>yarn</code>下载依赖并返回（这种方式可以在浏览器做依赖的缓存，如果是依赖的已缓存的相同依赖，则后续可以离线运行）</li></ol>', 8)),
    createVNode(_component_global_config)
  ]);
}
const codeSandbox_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "code-sandbox.html.vue"]]);
const data = JSON.parse('{"path":"/front-end-engineering/environment/ide/code-sandbox.html","title":"CodeSandbox","lang":"en-US","frontmatter":{"description":"CodeSandbox 入门文章 CodeSandbox 如何工作? 上篇，强烈推荐 CodeSandbox - 从入门到实现原理解析 CodeSandbox是如何让npm上的模块直接在浏览器端运行的 背景知识 使用 Webpack 的 DllPlugin 提升项目构建速度 依赖加载 依赖加载主要有两种方式： 浏览器上直接请求unpkg.com上的单个...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/front-end-engineering/environment/ide/code-sandbox.html"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"CodeSandbox"}],["meta",{"property":"og:description","content":"CodeSandbox 入门文章 CodeSandbox 如何工作? 上篇，强烈推荐 CodeSandbox - 从入门到实现原理解析 CodeSandbox是如何让npm上的模块直接在浏览器端运行的 背景知识 使用 Webpack 的 DllPlugin 提升项目构建速度 依赖加载 依赖加载主要有两种方式： 浏览器上直接请求unpkg.com上的单个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-31T12:47:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-31T12:47:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CodeSandbox\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-31T12:47:00.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"入门文章","slug":"入门文章","link":"#入门文章","children":[{"level":3,"title":"背景知识","slug":"背景知识","link":"#背景知识","children":[]}]},{"level":2,"title":"依赖加载","slug":"依赖加载","link":"#依赖加载","children":[]}],"git":{"createdTime":1661752778000,"updatedTime":1730378820000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":1}]},"readingTime":{"minutes":0.57,"words":171},"filePathRelative":"front-end-engineering/environment/ide/code-sandbox.md","localizedDate":"August 29, 2022","autoDesc":true}');
export {
  codeSandbox_html as comp,
  data
};
