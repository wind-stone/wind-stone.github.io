import { r as resolveComponent, c as createElementBlock, d as createBaseVNode, a as createVNode, e as withCtx, b as createStaticVNode, o as openBlock, f as createTextVNode } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
const _hoisted_1 = { class: "table-of-contents" };
function _sfc_render(_ctx, _cache) {
  const _component_router_link = resolveComponent("router-link");
  const _component_RouteLink = resolveComponent("RouteLink");
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[11] || (_cache[11] = createBaseVNode("h1", {
      id: "uni-app",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#uni-app"
      }, [
        createBaseVNode("span", null, "uni-app")
      ])
    ], -1)),
    createBaseVNode("nav", _hoisted_1, [
      createBaseVNode("ul", null, [
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#uni-app-学习记录" }, {
            default: withCtx(() => _cache[0] || (_cache[0] = [
              createTextVNode("uni-app 学习记录")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#为什么在-uni-app-的项目里可以直接使用-html-标签" }, {
                default: withCtx(() => _cache[1] || (_cache[1] = [
                  createTextVNode("为什么在 uni-app 的项目里可以直接使用 HTML 标签")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#原生微信小程序与-uni-app-里组件生命周期的对象关系" }, {
                default: withCtx(() => _cache[2] || (_cache[2] = [
                  createTextVNode("原生微信小程序与 uni-app 里组件生命周期的对象关系")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#app-级" }, {
                    default: withCtx(() => _cache[3] || (_cache[3] = [
                      createTextVNode("App 级")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#page、component-级" }, {
                    default: withCtx(() => _cache[4] || (_cache[4] = [
                      createTextVNode("Page、Component 级")
                    ])),
                    _: 1
                  }),
                  createBaseVNode("ul", null, [
                    createBaseVNode("li", null, [
                      createVNode(_component_router_link, { to: "#page" }, {
                        default: withCtx(() => _cache[5] || (_cache[5] = [
                          createTextVNode("Page")
                        ])),
                        _: 1
                      })
                    ])
                  ])
                ])
              ])
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#uni-app-之-webpack-打包" }, {
                default: withCtx(() => _cache[6] || (_cache[6] = [
                  createTextVNode("uni-app 之 Webpack 打包")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#踩过的坑" }, {
            default: withCtx(() => _cache[7] || (_cache[7] = [
              createTextVNode("踩过的坑")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#父子组件销毁顺序" }, {
                default: withCtx(() => _cache[8] || (_cache[8] = [
                  createTextVNode("父子组件销毁顺序")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#列表循环里的-key-不生效" }, {
                default: withCtx(() => _cache[9] || (_cache[9] = [
                  createTextVNode("列表循环里的 key 不生效")
                ])),
                _: 1
              })
            ])
          ])
        ])
      ])
    ]),
    _cache[12] || (_cache[12] = createStaticVNode('<h2 id="uni-app-学习记录" tabindex="-1"><a class="header-anchor" href="#uni-app-学习记录"><span>uni-app 学习记录</span></a></h2><p>PS: 本人熟悉 h5 和 Vue.js 开发，不熟悉小程序和 uni-app 开发，因此如下的记录</p><h3 id="为什么在-uni-app-的项目里可以直接使用-html-标签" tabindex="-1"><a class="header-anchor" href="#为什么在-uni-app-的项目里可以直接使用-html-标签"><span>为什么在 uni-app 的项目里可以直接使用 HTML 标签</span></a></h3><p>出于降低 h5 应用向 uni-app 迁移成本的考虑，写成<code>div</code>、<code>span</code>也可以运行在 app 和小程序上，因为 uni-app 编译器会在编译时会把这些 HTML 标签编译为小程序标签。但不推荐这种用法，因为这样调试 H5 端时容易混乱。此外，仍然建议养成新习惯，使用 uni-app 的标签。</p><table><thead><tr><th>HTML 标签</th><th>uni-app 标签</th><th>转换说明</th></tr></thead><tbody><tr><td>div/ul/li</td><td>view</td><td>-</td></tr><tr><td>span/font</td><td>text</td><td>-</td></tr><tr><td>a</td><td>navigator</td><td>-</td></tr><tr><td>img</td><td>image</td><td>-</td></tr><tr><td>select</td><td>picker</td><td>-</td></tr><tr><td>iframe</td><td>web-view</td><td>-</td></tr><tr><td>input</td><td>没变化</td><td>type 属性改成了 confirmtype</td></tr><tr><td>audio</td><td>没变化</td><td>不再推荐使用，改成 API 方式</td></tr><tr><td>form/button/checkbox/radio/label/textarea/canvas/video</td><td>没变化</td><td>-</td></tr></tbody></table><p>参考: <a href="https://ask.dcloud.net.cn/article/id-35657" target="_blank" rel="noopener noreferrer">白话uni-app 【也是html、vue、小程序的区别】</a></p><h3 id="原生微信小程序与-uni-app-里组件生命周期的对象关系" tabindex="-1"><a class="header-anchor" href="#原生微信小程序与-uni-app-里组件生命周期的对象关系"><span>原生微信小程序与 uni-app 里组件生命周期的对象关系</span></a></h3><h4 id="app-级" tabindex="-1"><a class="header-anchor" href="#app-级"><span>App 级</span></a></h4><p>原生微信小程序<code>App.onLaunch</code>触发之后，开始触发 uni-app 组件的<code>mounted</code>和<code>onLaunch</code>。</p><h4 id="page、component-级" tabindex="-1"><a class="header-anchor" href="#page、component-级"><span>Page、Component 级</span></a></h4><p>uni-app 里，不管是页面实例还是组件实例，最终都是使用的原生微信小程序的 Component 构造器来创建实例的。</p><p>传给构造器的<code>PageOrComponentOptions</code>选项的如下生命周期被调用时，会触发<code>$vm</code>上对应的钩子和操作。</p><ul><li><p>原生微信小程序的<code>PageOrComponentOptions.lifetimes.attached</code>里时会初始化创建该组件对应的 Vue 实例<code>$vm</code>，随之调用<code>$vm.$mount()</code>方法。</p></li><li><p>原生微信小程序的<code>PageOrComponentOptions.lifetimes.ready</code>里触发<code>$vm.mounted</code>和<code>$vm.onReady</code>钩子。</p></li><li><p>原生微信小程序的<code>PageOrComponentOptions.lifetimes.detached</code>里调用<code>$vm.$destroy()</code>方法。</p></li><li><p>原生微信小程序的<code>PageOrComponentOptions.pageLifetimes.show</code>里触发<code>$vm.onPageShow</code>钩子。</p></li><li><p>原生微信小程序的<code>PageOrComponentOptions.pageLifetimes.hide</code>里触发<code>$vm.onPageHide</code>钩子。</p></li><li><p>原生微信小程序的<code>PageOrComponentOptions.pageLifetimes.resize</code>里触发<code>$vm.onPageResize</code>钩子。</p></li></ul><h5 id="page" tabindex="-1"><a class="header-anchor" href="#page"><span>Page</span></a></h5><p>针对页面组件，在 uni-app 里最终也是使用原生小程序的 Component 构造器来创建页面实例的。</p><p>且页面实例的生命周期触发时，会调用<code>PageOptions.methods.xxx</code>方法，进而调用了页面实例对应的 Vue 实例的<code>$vm.xxx</code>钩子。具体的钩子如下：</p><ul><li>原生微信小程序的<code>PageOptions.methods.onShow</code>里触发<code>$vm.onShow</code></li><li>原生微信小程序的<code>PageOptions.methods.onLoad</code>里触发<code>$vm.onLoad</code></li><li>原生微信小程序的<code>PageOptions.methods.onHide</code>里触发<code>$vm.onHide</code></li><li>原生微信小程序的<code>PageOptions.methods.onUnload</code>里触发<code>$vm.onUnload</code></li><li>原生微信小程序的<code>PageOptions.methods.onPullDownRefresh</code>里触发<code>$vm.onPullDownRefresh</code></li><li>原生微信小程序的<code>PageOptions.methods.onReachBottom</code>里触发<code>$vm.onReachBottom</code></li><li>原生微信小程序的<code>PageOptions.methods.onShareAppMessage</code>里触发<code>$vm.onShareAppMessage</code></li><li>原生微信小程序的<code>PageOptions.methods.onShareTimeline</code>里触发<code>$vm.onShareTimeline</code></li><li>原生微信小程序的<code>PageOptions.methods.onPageScroll</code>里触发<code>$vm.onPageScroll</code></li><li>原生微信小程序的<code>PageOptions.methods.onResize</code>里触发<code>$vm.onResize</code></li><li>原生微信小程序的<code>PageOptions.methods.onTabItemTap</code>里触发<code>$vm.onTabItemTap</code></li></ul><p>PS: 实际上，原生微信小程序里，Page 构造器是 Component 构造器的简化版本。（微信官方文档没有明确这么说，但是官方技术专员在<a href="https://developers.weixin.qq.com/community/develop/doc/000e48667d80001b7ebad1c0d56c00?highLine=component%2520%25E6%259E%2584%25E5%25BB%25BA%25E9%25A1%25B5%25E9%259D%25A2" target="_blank" rel="noopener noreferrer">回答问题时有提到</a>，在一篇<a href="https://developers.weixin.qq.com/community/develop/article/doc/0000a8d54acaf0c962e820a1a5e413" target="_blank" rel="noopener noreferrer">官方的技术文章</a>里也有提到）</p><h3 id="uni-app-之-webpack-打包" tabindex="-1"><a class="header-anchor" href="#uni-app-之-webpack-打包"><span>uni-app 之 Webpack 打包</span></a></h3><p>Webpack 打包 uni-app 代码时，会将页面组件作为一个<code>entry chunk</code>，加载<code>entry chunk</code>之后会立即执行入口<code>module</code>；页面组件里引用的自定义组件会作为异步<code>chunk</code>；且不管是页面组件的<code>entry chunk</code>还是自定义组件的异步<code>chunk</code>，都会为<code>chunk</code>生成一个单独的文件，即与<code>comp.wxss</code>、<code>comp.json</code>、<code>comp.wxml</code>平级的<code>comp.js</code>文件。</p><p>常规情况下，Webpack 产生的异步<code>chunk</code>只是将<code>chunk</code>和<code>module</code>添加到全局，但是不会立即调用其中的<code>module</code>，而是等待外部主动调用。</p><p>但是，小程序里加载自定义组件的<code>comp.js</code>文件后，是需要立即执行<code>Component(options)</code>之类的代码来初始化组件的。因此，uni-app 在打包时，自定义组件对应的异步<code>chunk</code>里添加一段自执行的代码：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// comp.js</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;../../../../common/vendor.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 组件的异步 chunk</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">webpackJsonp</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">webpackJsonp</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;pages/comp/comp/index&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;7dd2&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {},</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;9c1f&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;use strict&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> t</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;41fe&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">                o</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a100&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;f0c5&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">                p</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">o</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">                    t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                        var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> e</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">$createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">                        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">_self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">_c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    [],</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">                    !</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                    null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    &#39;74eb&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                    null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">                    !</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                    undefined</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                    undefined</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                );</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">default</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">exports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        a100</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;use strict&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> t</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;7dd2&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 这段是针对小程序增加的自执行的代码，实现的源码可参考：https://github.com/dcloudio/uni-app/blob/f3b901ce37bcb3977efc3c3f04956cce80824f66/packages/webpack-uni-mp-loader/lib/plugin/generate-component.js#L111</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;webpackJsonp&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;webpackJsonp&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;145&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        a145</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">exports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">__webpack_require__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            __webpack_require__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;543d&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;createComponent&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">](</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                __webpack_require__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;9c1f&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            );</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 区别在第三个参数，传入的话，会立即执行 module</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a145&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]],</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="踩过的坑" tabindex="-1"><a class="header-anchor" href="#踩过的坑"><span>踩过的坑</span></a></h2><h3 id="父子组件销毁顺序" tabindex="-1"><a class="header-anchor" href="#父子组件销毁顺序"><span>父子组件销毁顺序</span></a></h3><p>在 Vue 里，父子组件的销毁顺序是：</p><p>父组件 beforeDestroy -&gt; 子组件 beforeDestroy -&gt; 子组件 destroyed -&gt; 父组件 destroyed</p><p>但是，经过测试<code>uni-app</code>里组件的销毁顺序如下：</p><p>子组件 beforeDestroy -&gt; 子组件 destroyed -&gt; 父组件 beforeDestroy -&gt; 父组件 destroyed</p><p>猜测：小程序组件生命周期里，与组件销毁相关的钩子只有<code>detached</code>，可能是这个原因导致的。</p><p>若是子组件先<code>detached</code>、父组件后<code>detached</code>，因此没办法做到跟 Vue 一样的销毁顺序？</p><h3 id="列表循环里的-key-不生效" tabindex="-1"><a class="header-anchor" href="#列表循环里的-key-不生效"><span>列表循环里的 key 不生效</span></a></h3>', 32)),
    createBaseVNode("p", null, [
      createVNode(_component_RouteLink, { to: "/mini-program/uni-app/v-for-key.html" }, {
        default: withCtx(() => _cache[10] || (_cache[10] = [
          createTextVNode("列表循环里的 key 不生效")
        ])),
        _: 1
      })
    ]),
    createVNode(_component_global_config)
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
const data = JSON.parse('{"path":"/mini-program/uni-app/","title":"uni-app","lang":"en-US","frontmatter":{"description":"uni-app uni-app 学习记录 PS: 本人熟悉 h5 和 Vue.js 开发，不熟悉小程序和 uni-app 开发，因此如下的记录 为什么在 uni-app 的项目里可以直接使用 HTML 标签 出于降低 h5 应用向 uni-app 迁移成本的考虑，写成div、span也可以运行在 app 和小程序上，因为 uni-app 编译器会在编译...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/mini-program/uni-app/"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"uni-app"}],["meta",{"property":"og:description","content":"uni-app uni-app 学习记录 PS: 本人熟悉 h5 和 Vue.js 开发，不熟悉小程序和 uni-app 开发，因此如下的记录 为什么在 uni-app 的项目里可以直接使用 HTML 标签 出于降低 h5 应用向 uni-app 迁移成本的考虑，写成div、span也可以运行在 app 和小程序上，因为 uni-app 编译器会在编译..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2021-06-14T18:08:13.000Z"}],["meta",{"property":"article:modified_time","content":"2021-06-14T18:08:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"uni-app\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-06-14T18:08:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"uni-app 学习记录","slug":"uni-app-学习记录","link":"#uni-app-学习记录","children":[{"level":3,"title":"为什么在 uni-app 的项目里可以直接使用 HTML 标签","slug":"为什么在-uni-app-的项目里可以直接使用-html-标签","link":"#为什么在-uni-app-的项目里可以直接使用-html-标签","children":[]},{"level":3,"title":"原生微信小程序与 uni-app 里组件生命周期的对象关系","slug":"原生微信小程序与-uni-app-里组件生命周期的对象关系","link":"#原生微信小程序与-uni-app-里组件生命周期的对象关系","children":[]},{"level":3,"title":"uni-app 之 Webpack 打包","slug":"uni-app-之-webpack-打包","link":"#uni-app-之-webpack-打包","children":[]}]},{"level":2,"title":"踩过的坑","slug":"踩过的坑","link":"#踩过的坑","children":[{"level":3,"title":"父子组件销毁顺序","slug":"父子组件销毁顺序","link":"#父子组件销毁顺序","children":[]},{"level":3,"title":"列表循环里的 key 不生效","slug":"列表循环里的-key-不生效","link":"#列表循环里的-key-不生效","children":[]}]}],"git":{"createdTime":1592033323000,"updatedTime":1623694093000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":8}]},"readingTime":{"minutes":4.35,"words":1304},"filePathRelative":"mini-program/uni-app/README.md","localizedDate":"June 13, 2020","autoDesc":true}');
export {
  index_html as comp,
  data
};
