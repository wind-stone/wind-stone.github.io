import { r as resolveComponent, c as createElementBlock, d as createBaseVNode, a as createVNode, e as withCtx, b as createStaticVNode, o as openBlock, f as createTextVNode } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
const _hoisted_1 = { class: "table-of-contents" };
function _sfc_render(_ctx, _cache) {
  const _component_router_link = resolveComponent("router-link");
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[16] || (_cache[16] = createBaseVNode("h1", {
      id: "微信小程序",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#微信小程序"
      }, [
        createBaseVNode("span", null, "微信小程序")
      ])
    ], -1)),
    createBaseVNode("nav", _hoisted_1, [
      createBaseVNode("ul", null, [
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#独有特性" }, {
            default: withCtx(() => _cache[0] || (_cache[0] = [
              createTextVNode("独有特性")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#分享卡片进入会创建新页面栈" }, {
                default: withCtx(() => _cache[1] || (_cache[1] = [
                  createTextVNode("分享卡片进入会创建新页面栈")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#wxs" }, {
                default: withCtx(() => _cache[2] || (_cache[2] = [
                  createTextVNode("WXS")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#生命周期" }, {
            default: withCtx(() => _cache[3] || (_cache[3] = [
              createTextVNode("生命周期")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#父子组件生命周期顺序" }, {
                default: withCtx(() => _cache[4] || (_cache[4] = [
                  createTextVNode("父子组件生命周期顺序")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#疑难杂症" }, {
            default: withCtx(() => _cache[5] || (_cache[5] = [
              createTextVNode("疑难杂症")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#如何隐藏-scroll-view-滚动条" }, {
                default: withCtx(() => _cache[6] || (_cache[6] = [
                  createTextVNode("如何隐藏 scroll-view 滚动条")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#禁止页面顶部下拉或底部上滑的弹性效果" }, {
                default: withCtx(() => _cache[7] || (_cache[7] = [
                  createTextVNode("禁止页面顶部下拉或底部上滑的弹性效果")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#_1rpx-圆角边框缺失或不清晰" }, {
                default: withCtx(() => _cache[8] || (_cache[8] = [
                  createTextVNode("1rpx 圆角边框缺失或不清晰")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#子组件上添加样式" }, {
                default: withCtx(() => _cache[9] || (_cache[9] = [
                  createTextVNode("子组件上添加样式")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#包含自定义组件的元素的-opacity-的-transition-无效" }, {
                default: withCtx(() => _cache[10] || (_cache[10] = [
                  createTextVNode("包含自定义组件的元素的 opacity 的 transition 无效")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#开发" }, {
            default: withCtx(() => _cache[11] || (_cache[11] = [
              createTextVNode("开发")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#反编译" }, {
                default: withCtx(() => _cache[12] || (_cache[12] = [
                  createTextVNode("反编译")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#小程序上传打包产物" }, {
                default: withCtx(() => _cache[13] || (_cache[13] = [
                  createTextVNode("小程序上传打包产物")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#miniprogram-api-typings" }, {
                default: withCtx(() => _cache[14] || (_cache[14] = [
                  createTextVNode("miniprogram-api-typings")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#miniprogram-api-promise" }, {
                default: withCtx(() => _cache[15] || (_cache[15] = [
                  createTextVNode("miniprogram-api-promise")
                ])),
                _: 1
              })
            ])
          ])
        ])
      ])
    ]),
    _cache[17] || (_cache[17] = createStaticVNode('<h2 id="独有特性" tabindex="-1"><a class="header-anchor" href="#独有特性"><span>独有特性</span></a></h2><h3 id="分享卡片进入会创建新页面栈" tabindex="-1"><a class="header-anchor" href="#分享卡片进入会创建新页面栈"><span>分享卡片进入会创建新页面栈</span></a></h3><p>小程序已启动且切换到后台的情况下，再通过分享卡片进入，会新创建新的页面栈，之前的页面栈会销毁。目前没有相关文档记载，但实际情况就是如此。</p><h3 id="wxs" tabindex="-1"><a class="header-anchor" href="#wxs"><span>WXS</span></a></h3><p>WXS 运行于视图层，与 WXML 是在同一个线程运行，避免了跨线程与逻辑层通信的开销。详见：<a href="https://www.zhihu.com/question/64322737/answer/223446446" target="_blank" rel="noopener noreferrer">如何评价微信新推出的WXS语言？ - 鲁小夫的回答 - 知乎</a></p><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期"><span>生命周期</span></a></h2><h3 id="父子组件生命周期顺序" tabindex="-1"><a class="header-anchor" href="#父子组件生命周期顺序"><span>父子组件生命周期顺序</span></a></h3><p>假设首页页面里引用组件 Parent，组件 Parent 里引用组件 Child，组件 Parent 和 Child 里都有<code>pageLifetimes.show/hide</code>生命周期。</p><p>首次打开小程序并进入页面时，各生命周期的调用顺序为：</p><ul><li>App.onLaunch</li><li>App.onShow</li><li>ComponentChild.created</li><li>ComponentParent.created</li><li>ComponentParent.attached</li><li>ComponentChild.attached</li><li>Page.onLoad</li><li>ComponentParent.pageLifetimes.show</li><li>ComponentChild.pageLifetimes.show</li><li>Page.onShow</li><li>ComponentChild.ready</li><li>ComponentParent.ready</li><li>Page.onReady</li></ul><p>切到后台时，各生命周期的调用顺序为：</p><ul><li>ComponentParent.pageLifetimes.hide</li><li>ComponentChild.pageLifetimes.hide</li><li>Page.onHide</li><li>App.onHide</li></ul><p>切回前台时，各生命周期的调用顺序为：</p><ul><li>App.onShow</li><li>ComponentParent.pageLifetimes.show</li><li>ComponentChild.pageLifetimes.show</li><li>Page.onShow</li></ul><p>页面销毁时，各生命周期的调用顺序为：</p><ul><li>Page.onUnload</li><li>ComponentChild.detached</li><li>ComponentParent.detached</li></ul><p>测试所用代码片段：<a href="https://developers.weixin.qq.com/s/HeI1uAm87kjE" target="_blank" rel="noopener noreferrer">https://developers.weixin.qq.com/s/HeI1uAm87kjE</a></p><p>其他：</p><ul><li>组件加载后注册了<code>pageLifetimes.show</code>之后，会在后续的页面<code>onShow</code>时触发</li></ul><h2 id="疑难杂症" tabindex="-1"><a class="header-anchor" href="#疑难杂症"><span>疑难杂症</span></a></h2><h3 id="如何隐藏-scroll-view-滚动条" tabindex="-1"><a class="header-anchor" href="#如何隐藏-scroll-view-滚动条"><span>如何隐藏 scroll-view 滚动条</span></a></h3><ul><li><a href="https://developers.weixin.qq.com/community/develop/doc/00006473cf08f8c29da606b2d56c00" target="_blank" rel="noopener noreferrer">微信小程序如何隐藏scroll-view滚动条</a></li></ul><p>以<code>scroll-view</code>为横向滚动为例，该方式是给<code>scroll-view</code>增加一个父元素，父元素的高度固定，并设置<code>overflow: hidden</code>；<code>scroll-view</code>作为子元素，其高度超过父元素高度，以便将滚动条置于父元素高度之外。注意，若是直接给<code>scroll-view</code>增加<code>padding-bottom</code>不能将滚动条置于最底部，可尝试给<code>scroll-view</code>的子元素添加<code>padding-bottom</code>。</p><p>此外，可尝试设置<code>scroll-view</code>的<code>show-scrollbar</code>属性为<code>false</code>，以隐藏滚动条。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scroll-view</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> :enhanced</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> :show-scrollbar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scroll-view</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意，需要开启<code>enhanced</code>属性之后，设置<code>show-scrollbar</code>方才有效。</p><h3 id="禁止页面顶部下拉或底部上滑的弹性效果" tabindex="-1"><a class="header-anchor" href="#禁止页面顶部下拉或底部上滑的弹性效果"><span>禁止页面顶部下拉或底部上滑的弹性效果</span></a></h3><p>若是页面只有一屏，可设置页面配置里的<code>disableScroll: true</code>。</p><p>若是页面内容较多，需要竖向滚动，可以使用<code>scroll-view</code>包裹所有内容，并设置：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scroll-view</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> :scroll-y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> :enhanced</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> :bounces</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">view</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">view</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scroll-view</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，需要开启<code>enhanced</code>属性之后，设置<code>bounces</code>方才有效。</p><h3 id="_1rpx-圆角边框缺失或不清晰" tabindex="-1"><a class="header-anchor" href="#_1rpx-圆角边框缺失或不清晰"><span>1rpx 圆角边框缺失或不清晰</span></a></h3><p>若使用 1rpx 的边框但不设置圆角，正常情况下都会显示正常；但若是设置了圆角，会出现边框缺失或者不清晰的问题。</p><p>解决方案：按 2rpx 或 3rpx 的边宽实现，再 scale 为原来的 1/2 或 1/3，详见<a href="https://github.com/wind-stone/retina-border" target="_blank" rel="noopener noreferrer">retina-border</a></p><h3 id="子组件上添加样式" tabindex="-1"><a class="header-anchor" href="#子组件上添加样式"><span>子组件上添加样式</span></a></h3><p>若是想在子组件上添加样式，比如<code>background-color</code>、<code>margin</code>等，请先将子组件的<code>display</code>置为非<code>inline</code>即可。但是理论上来说，即使是<code>display: inline</code>，<code>background-color</code>也是能生效的，没明白是怎么回事。</p><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">child-component</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;child-component&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">child-componet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;less&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> scoped</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    .child-component</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        display: </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">block</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 只要不是 inline 即可</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        margin-top: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rpx;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="包含自定义组件的元素的-opacity-的-transition-无效" tabindex="-1"><a class="header-anchor" href="#包含自定义组件的元素的-opacity-的-transition-无效"><span>包含自定义组件的元素的 opacity 的 transition 无效</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">view</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ctn&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">child-component</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">child-component</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">view</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.ctn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    position: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">absolute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    transition: opacity </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    opacity: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* 解决 opacity 不生效的问题 */</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    z-index: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.ctn.visible</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    opacity: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当元素是<code>position: absolute/fixed</code>时，且包含了自定义组件，若不设置<code>z-index</code>为大于<code>0</code>的数值，则<code>opacity</code>的<code>transition</code>对自定义组件不会生效。</p><h2 id="开发" tabindex="-1"><a class="header-anchor" href="#开发"><span>开发</span></a></h2><h3 id="反编译" tabindex="-1"><a class="header-anchor" href="#反编译"><span>反编译</span></a></h3><ul><li><a href="https://github.com/xuedingmiaojun/mp-unpack" target="_blank" rel="noopener noreferrer">解包工具 - mp-unpack</a></li><li><a href="https://cloud.tencent.com/developer/article/1545940" target="_blank" rel="noopener noreferrer">反编译步骤 - 以中银E路通小程序为例10分钟带你学会微信小程序的反编译</a></li></ul><h3 id="小程序上传打包产物" tabindex="-1"><a class="header-anchor" href="#小程序上传打包产物"><span>小程序上传打包产物</span></a></h3><h3 id="miniprogram-api-typings" tabindex="-1"><a class="header-anchor" href="#miniprogram-api-typings"><span>miniprogram-api-typings</span></a></h3><p>安装并配置<a href="https://github.com/wechat-miniprogram/api-typings" target="_blank" rel="noopener noreferrer">miniprogram-api-typings</a>。配置好之后，<code>miniprogram-api-typings</code>里的绝大部分的声明都在<code>WechatMiniprogram</code>这个命名空间之下，且<code>WechatMiniprogram</code>是个全局的命名空间对象。如下以微信卡券相关方法为例，简单介绍使用方法。</p><p>假设项目里将<code>wx.addCard</code>封装成 Promise 调用。</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 方式一：直接获取命令空间下的声明 WechatMiniprogram.xxx</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> addCard</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">card</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B;"> WechatMiniprogram</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">AddCardRequestInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Promise</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B;">WechatMiniprogram</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">AddCardResponseInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Promise</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">reject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        wx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addCard</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            cardList</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">card</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            success</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cardList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            },</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            fail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                reject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 方式二：采用命名空间的别名（推荐）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> AddCardRequestInfo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B;"> WechatMiniprogram</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">AddCardRequestInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> addCard</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">card</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> AddCardRequestInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Promise</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">AddCardResponseInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Promise</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">reject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        wx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addCard</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            cardList</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">card</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            success</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cardList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            },</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            fail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                reject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="miniprogram-api-promise" tabindex="-1"><a class="header-anchor" href="#miniprogram-api-promise"><span>miniprogram-api-promise</span></a></h3><p><a href="https://github.com/wechat-miniprogram/miniprogram-api-promise" target="_blank" rel="noopener noreferrer">miniprogram-api-promise</a>，扩展微信小程序的 API，以支持 Promise 形式调用。</p>', 52)),
    createVNode(_component_global_config)
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
const data = JSON.parse('{"path":"/mini-program/weixin/","title":"微信小程序","lang":"en-US","frontmatter":{"description":"微信小程序 独有特性 分享卡片进入会创建新页面栈 小程序已启动且切换到后台的情况下，再通过分享卡片进入，会新创建新的页面栈，之前的页面栈会销毁。目前没有相关文档记载，但实际情况就是如此。 WXS WXS 运行于视图层，与 WXML 是在同一个线程运行，避免了跨线程与逻辑层通信的开销。详见：如何评价微信新推出的WXS语言？ - 鲁小夫的回答 - 知乎 生...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/mini-program/weixin/"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"微信小程序"}],["meta",{"property":"og:description","content":"微信小程序 独有特性 分享卡片进入会创建新页面栈 小程序已启动且切换到后台的情况下，再通过分享卡片进入，会新创建新的页面栈，之前的页面栈会销毁。目前没有相关文档记载，但实际情况就是如此。 WXS WXS 运行于视图层，与 WXML 是在同一个线程运行，避免了跨线程与逻辑层通信的开销。详见：如何评价微信新推出的WXS语言？ - 鲁小夫的回答 - 知乎 生..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2021-06-14T18:08:13.000Z"}],["meta",{"property":"article:modified_time","content":"2021-06-14T18:08:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"微信小程序\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-06-14T18:08:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"独有特性","slug":"独有特性","link":"#独有特性","children":[{"level":3,"title":"分享卡片进入会创建新页面栈","slug":"分享卡片进入会创建新页面栈","link":"#分享卡片进入会创建新页面栈","children":[]},{"level":3,"title":"WXS","slug":"wxs","link":"#wxs","children":[]}]},{"level":2,"title":"生命周期","slug":"生命周期","link":"#生命周期","children":[{"level":3,"title":"父子组件生命周期顺序","slug":"父子组件生命周期顺序","link":"#父子组件生命周期顺序","children":[]}]},{"level":2,"title":"疑难杂症","slug":"疑难杂症","link":"#疑难杂症","children":[{"level":3,"title":"如何隐藏 scroll-view 滚动条","slug":"如何隐藏-scroll-view-滚动条","link":"#如何隐藏-scroll-view-滚动条","children":[]},{"level":3,"title":"禁止页面顶部下拉或底部上滑的弹性效果","slug":"禁止页面顶部下拉或底部上滑的弹性效果","link":"#禁止页面顶部下拉或底部上滑的弹性效果","children":[]},{"level":3,"title":"1rpx 圆角边框缺失或不清晰","slug":"_1rpx-圆角边框缺失或不清晰","link":"#_1rpx-圆角边框缺失或不清晰","children":[]},{"level":3,"title":"子组件上添加样式","slug":"子组件上添加样式","link":"#子组件上添加样式","children":[]},{"level":3,"title":"包含自定义组件的元素的 opacity 的 transition 无效","slug":"包含自定义组件的元素的-opacity-的-transition-无效","link":"#包含自定义组件的元素的-opacity-的-transition-无效","children":[]}]},{"level":2,"title":"开发","slug":"开发","link":"#开发","children":[{"level":3,"title":"反编译","slug":"反编译","link":"#反编译","children":[]},{"level":3,"title":"小程序上传打包产物","slug":"小程序上传打包产物","link":"#小程序上传打包产物","children":[]},{"level":3,"title":"miniprogram-api-typings","slug":"miniprogram-api-typings","link":"#miniprogram-api-typings","children":[]},{"level":3,"title":"miniprogram-api-promise","slug":"miniprogram-api-promise","link":"#miniprogram-api-promise","children":[]}]}],"git":{"createdTime":1592033323000,"updatedTime":1623694093000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":10}]},"readingTime":{"minutes":3.83,"words":1149},"filePathRelative":"mini-program/weixin/README.md","localizedDate":"June 13, 2020","autoDesc":true}');
export {
  index_html as comp,
  data
};
