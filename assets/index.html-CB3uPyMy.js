import { r as resolveComponent, c as createElementBlock, b as createStaticVNode, a as createVNode, o as openBlock } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
function _sfc_render(_ctx, _cache) {
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[0] || (_cache[0] = createStaticVNode('<h1 id="rem-组件" tabindex="-1"><a class="header-anchor" href="#rem-组件"><span>rem 组件</span></a></h1><h2 id="组件说明" tabindex="-1"><a class="header-anchor" href="#组件说明"><span>组件说明</span></a></h2><p>移动端开发中，使用 rem 作为尺寸单位</p><h2 id="组件功能说明" tabindex="-1"><a class="header-anchor" href="#组件功能说明"><span>组件功能说明</span></a></h2><ul><li>使用 less 的 rem 函数写尺寸</li></ul><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 引入 rem/index.js 去动态修改 rootElement 的 font-size 值为屏幕款的 1/10</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rem</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;./rem&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 引入 rem/index.less 以便使用 .rem 函数 */</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;.rem/index.less&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 其中 640 为该元素的设计稿宽度，单位是px（设计稿宽度为 640px，如需修改，可更改 rem/index.less 文件） */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.class-name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .rem(width, 640);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 8)),
    createVNode(_component_global_config)
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
const data = JSON.parse('{"path":"/code-snippet/practices/css/%E6%A0%B9%E6%8D%AE%E5%85%84%E5%BC%9F%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%B0%E9%87%8F%E6%9D%A5%E8%AE%BE%E7%BD%AE%E6%A0%B7%E5%BC%8F/rem/","title":"rem 组件","lang":"en-US","frontmatter":{"description":"rem 组件 组件说明 移动端开发中，使用 rem 作为尺寸单位 组件功能说明 使用 less 的 rem 函数写尺寸 使用方式","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/code-snippet/practices/css/%E6%A0%B9%E6%8D%AE%E5%85%84%E5%BC%9F%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%B0%E9%87%8F%E6%9D%A5%E8%AE%BE%E7%BD%AE%E6%A0%B7%E5%BC%8F/rem/"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"rem 组件"}],["meta",{"property":"og:description","content":"rem 组件 组件说明 移动端开发中，使用 rem 作为尺寸单位 组件功能说明 使用 less 的 rem 函数写尺寸 使用方式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2021-10-25T16:43:10.000Z"}],["meta",{"property":"article:modified_time","content":"2021-10-25T16:43:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"rem 组件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-10-25T16:43:10.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"组件说明","slug":"组件说明","link":"#组件说明","children":[]},{"level":2,"title":"组件功能说明","slug":"组件功能说明","link":"#组件功能说明","children":[]},{"level":2,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[]}],"git":{"createdTime":1612941360000,"updatedTime":1635180190000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":1}]},"readingTime":{"minutes":0.42,"words":126},"filePathRelative":"code-snippet/practices/css/根据兄弟元素的数量来设置样式/rem/README.md","localizedDate":"February 10, 2021","autoDesc":true}');
export {
  index_html as comp,
  data
};
