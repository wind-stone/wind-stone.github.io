const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index.html-GwaVK1vp.js","assets/plugin-vue_export-helper-1tPrXgE0.js","assets/study-plan.html-Cmv_balm.js","assets/todo.html-CeJRvO0e.js","assets/complicated-animations-with-animation-delay.html-Xw2p3Tsb.js","assets/gradient-shadows.html-KjS_7Wz0.js","assets/index.html-B97SPbi1.js","assets/scroll-elements-fade-up.html-rYxLP6EF.js","assets/index.html-OhRENpp9.js","assets/index.html-BcDgnOJc.js","assets/index.html-yfW91MEC.js","assets/basic.html-CiA7vuhg.js","assets/index.html-3H_KJudX.js","assets/render.html-CcXrbDDB.js","assets/index.html-BtIgQlNZ.js","assets/index.html-C6C9ep-Y.js","assets/composition-api.html-YHfywPTm.js","assets/state-management.html-DWQjfch4.js","assets/tools.html-BRR4HRSZ.js","assets/index.html-DtChMxee.js","assets/index.html-DSSdvS9C.js","assets/javascript.html-DPcw_Q0F.js","assets/index.html-CGE-I5Yh.js","assets/index.html-CI5ebDm-.js","assets/index.html-B9QO35Dr.js","assets/sourcemap.html-DppSwt-a.js","assets/index.html-Cs3iNUHi.js","assets/overlap-text.html-CjkMPPMt.js","assets/title-animations.html-qLQ1q4E3.js","assets/index.html-Db8R7Vi6.js","assets/base-marquee.html-B29EYqlC.js","assets/common-popup.html-DmC-yU8p.js","assets/browser-api.html-BjLkHjc5.js","assets/browser-requests.html-TwEgh_FA.js","assets/cache.html-gZSz6tiF.js","assets/event-loop.html-nZgERgl5.js","assets/faq.html-Db3DbCOK.js","assets/fingerprint.html-CnFKMhel.js","assets/first-paint.html-ToJiBT9c.js","assets/how-browsers-work.html-CG7j67bE.js","assets/process-thread.html-BdOwdiR0.js","assets/index.html-CRp4gu3-.js","assets/audio.html-Dmwd6Q68.js","assets/video.html-BNwCR4nQ.js","assets/index.html-CIsu4urb.js","assets/blur.html-CqJU4oNI.js","assets/virtual-dom.html-CTMiTW4e.js","assets/h52app.html-BVb9RTMt.js","assets/jsbridge.html-DenM3AmW.js","assets/universal-links.html-Bl36iK4Z.js","assets/dns.html-BTpmRnh5.js","assets/index.html-qsUUx95W.js","assets/chrome-security-policy.html-DZ4Kj4kP.js","assets/cross-domain.html-zZahFwWW.js","assets/same-site.html-iNefBdkR.js","assets/index.html-gmQzglR_.js","assets/click-delay.html-DdC9bHRF.js","assets/fastclick.html-D_HuwKZp.js","assets/no-bg-scroll.html-C9sXQL0-.js","assets/touch-event.html-BoIGzAmF.js","assets/file-system.html-BoCKUPLZ.js","assets/keyboard.html-Co1VJK-Z.js","assets/pwa.html-BbjT2Uhu.js","assets/web-components.html-Dg1Uwdd-.js","assets/index.html-DE28Uzzl.js","assets/index.html-Be1HGytD.js","assets/index.html-BfAyGqiN.js","assets/index.html-k-PqtS1j.js","assets/index.html-DQSDag34.js","assets/babel-v7.html-CoaJ_bMd.js","assets/index.html-CvJFAzEA.js","assets/index.html-C9YbcPSn.js","assets/index.html-BETJWE81.js","assets/index.html-CRrIYKY0.js","assets/index.html-C199WFSD.js","assets/index.html-BfnIdwwF.js","assets/promise-skills.html-CExusFKU.js","assets/index.html-HPx99b_z.js","assets/proxy-practice.html-B5yZXxUm.js","assets/index.html-Cg2YmhW0.js","assets/summary.html-BH_TlHzd.js","assets/ES.html-Do0fyMiw.js","assets/mongodb.html-BjGrHnQ-.js","assets/mongoosejs.html-Cu2YterL.js","assets/singleton-pattern.html-Cx_PK1qc.js","assets/google-cloud.html-B2ssHz4O.js","assets/index.html-CDwUN0fZ.js","assets/css-font-metrics-line-height-and-vertical-align.html-BrUGGYO0.js","assets/index.html-B9WeuS73.js","assets/index.html-CcTmAHsU.js","assets/index.html-Cvkuqgo9.js","assets/properties-order.html-CPQo3UWM.js","assets/less.html-UH0QfbBy.js","assets/stylus.html-R3iHg30C.js","assets/index.html-pDS_q2Bf.js","assets/index.html-z1x9j4CZ.js","assets/dog-ear.html-OTqwv6v2.js","assets/line-boxes-truncation-style.html-DFMRHHrJ.js","assets/safe-area.html-o8dLyMOg.js","assets/text-ellipsis.html-BUShf_wy.js","assets/position-fixed.html-CcWSofMV.js","assets/a-tale-of-viewports-one.html-sdcYiFgs.js","assets/a-tale-of-viewports-two.html-DG8J7jeG.js","assets/compatibility.html-vhIlLBLr.js","assets/skill-pitfall.html-CwbdLpgX.js","assets/user-experience.html-X7hNkuzn.js","assets/index.html-1HslgC2V.js","assets/the-process-of-input-an-url.html-CsmAJdVE.js","assets/the-reason-for-the-position-of-css-and-js-in-html.html-BtVjXJ1S.js","assets/hide-elements-methods.html-mqf1f2Ov.js","assets/index.html-BZZPE4ET.js","assets/self-fit-square.html-DT9xFjJC.js","assets/binary-tree.html-au4EZPSS.js","assets/index.html-Dk5iHRz8.js","assets/index.html-CPqifITK.js","assets/index.html-BBuUkIV2.js","assets/index.html-Dexx6jza.js","assets/large-file-upload.html-D6ou8wCp.js","assets/index.html-Cd0zOQqR.js","assets/browser-error-handling.html-BFScR_Q3.js","assets/log.html-C2G2fxlG.js","assets/try-catch.html-BOd5a1-T.js","assets/index.html-BS_I4eL6.js","assets/event-loop.html-yMoZQ9xh.js","assets/execution-context.html-CnczWXHg.js","assets/prototype.html-BIjov9uO.js","assets/this.html-BQSGR2zT.js","assets/index.html-BEPj2jkr.js","assets/type-conversion.html-DJij4hiO.js","assets/index.html-D-iWUexh.js","assets/functional-programming.html-BeBR43Zm.js","assets/pitfall.html-V94pJpK6.js","assets/index.html-Cqvr0JlB.js","assets/index.html-3bCnzacb.js","assets/v-for-key.html-_bVTQCJI.js","assets/index.html-C2vnr491.js","assets/bitwise-operators.html-DFaHkUVC.js","assets/index.html-BPtd2OkY.js","assets/custom-hooks.html-Ho2nGGnC.js","assets/index.html-CecBf1FK.js","assets/useContext.html-giTZnx8M.js","assets/useEffect.html-QJZQofZN.js","assets/useMemo.html-BASK4xoW.js","assets/useReducer.html-CPXKFf6c.js","assets/useRef.html-1_4fRZmf.js","assets/useState.html-CFH4MElZ.js","assets/useSyncExternalStore.html-CBnMkw6u.js","assets/index.html-BAFIDYEt.js","assets/array.html-DXaxjJ9t.js","assets/class.html-CWkcEkVM.js","assets/enum.html-Db1v-i9I.js","assets/function.html-CUf714g9.js","assets/object-type.html-CrCQYDAD.js","assets/primitive-types.html-BDyBKCBM.js","assets/index.html-Bu1iXgVf.js","assets/index.html-xZI6kIiP.js","assets/index.html-Cw_jO-yb.js","assets/type-challenges.html-okcZT0dm.js","assets/type-operators.html-D7cje0_O.js","assets/index.html-DAusnEx4.js","assets/generics.html-CkW-LEib.js","assets/property-modifiers.html-D2cz7q_f.js","assets/utility-types.html-O5A5U1LO.js","assets/index.html-D27on0mY.js","assets/declaration-files.html-sXKEWxwK.js","assets/publish.html-BwlfCIcA.js","assets/tsconfig-json.html-la6mfLRb.js","assets/index.html-tKhaC9p-.js","assets/vue-constructor.html-P43plbaf.js","assets/use-difference.html-C0SLYdEX.js","assets/index.html-CcblYgDc.js","assets/comparison.html-DLz36jWr.js","assets/tianya-post.html-CSmZKuDe.js","assets/index.html-DE16wuek.js","assets/stocks.html-CrOGn4GP.js","assets/apple-mac.html-D3F39REQ.js","assets/mac-shortcut-keys.html-COW7eAfb.js","assets/quotes.html-CBxxl_HT.js","assets/theories.html-DXNTOO7h.js","assets/word-pronunciation.html-BimY0VZK.js","assets/index.html-DFRy9K0m.js","assets/index.html-Bc22n7qM.js","assets/class.html-iTOeMMiT.js","assets/clipboard.html-V5L5OQcG.js","assets/cookie.html-N81XuLh4.js","assets/load-script.html-DiaWWRFV.js","assets/storage.html-CohJSJ4h.js","assets/url.html-C1Lxe_Wu.js","assets/data-type.html-Bul2dXTh.js","assets/env.html-BOaIzyCD.js","assets/event-emitter.html-Udc39D95.js","assets/format.html-DF5BhCH3.js","assets/queen-next.html-BVL0izUG.js","assets/version.html-CM1z50jL.js","assets/index.html-BdWcDDJb.js","assets/index.html-CYAy7tdA.js","assets/index.html-BKyEiPJb.js","assets/index.html-Dx2Nkkgp.js","assets/index.html-DWBxiZTB.js","assets/index.html-CcgbCRoJ.js","assets/safari-script-block-render.html-Bq52wE-5.js","assets/attributes.html-Da0KziEE.js","assets/differences-between-properties-and-attributes.html-DshgYeJk.js","assets/properties.html-DdHI4mMI.js","assets/index.html-CASX8tOQ.js","assets/image-lazy-load.html-BeKdxQVu.js","assets/index.html-tBK4t-zj.js","assets/index.html-rKch0FAt.js","assets/index.html-DS0WELiu.js","assets/index.html-DjvBt_3n.js","assets/index.html-Cgw-MLUo.js","assets/index.html-SzhB1IeW.js","assets/index.html-JvcPNkWb.js","assets/android-weixin-auto-open-browser.html-DWJZCXGc.js","assets/plugin-transform-runtime.html-BzLl9de-.js","assets/preset-env.html-HD2Mg9SR.js","assets/runtime-corejs2.html-CcaXuq4N.js","assets/runtime.html-BBhl6t4k.js","assets/array-prototype-forEach.html-DFNktEUD.js","assets/array-prototype-reduce.html-Cu_bKzXb.js","assets/new.html-b5riIlsT.js","assets/object-assign.html-CzGhJSr_.js","assets/object-create.html-DFQLX9pf.js","assets/promise-allSettled.html-vB6Eq6eb.js","assets/promise-race.html-en6Mwnhb.js","assets/padStart.html-DaIiYjLM.js","assets/css-style.html-DI-trbUk.js","assets/index.html-DZKSpGEx.js","assets/local-mock.html-BWaiLZuM.js","assets/code-sandbox.html-qIpHpS7u.js","assets/vscode.html-DOIn3M4U.js","assets/api.html-DrykKdvu.js","assets/commonjs.html-BXJpBeVS.js","assets/index.html-BAUGXEK3.js","assets/node-api.html-D--sB_SG.js","assets/pm2.html-BtSLrBzO.js","assets/server.html-C87CMpco.js","assets/semantic-version.html-BVjE1Rhd.js","assets/monorepo.html-w6LIrCeL.js","assets/automated-testing.html-Bj5p5mzB.js","assets/index.html-xn1XWLD3.js","assets/index.html-BrDxZkYd.js","assets/cdn-disaster-tolerance.html-DHjRdO55.js","assets/index.html-BYcfmKZt.js","assets/index.html-D2zNaSuR.js","assets/index.html-CsG4BS10.js","assets/index.html-i5TcJjR3.js","assets/index.html-FAuGLCrP.js","assets/rollup.html-DsvWHWZy.js","assets/source-map.html-DbTBdSuF.js","assets/changelog.html-Bz2HKXSB.js","assets/axios.html-CZLSPXRB.js","assets/index.html-DPfPpQ7n.js","assets/clickhouse.html-BawcE2t9.js","assets/sql.html-DKFrYuAN.js","assets/index.html-BnDWjKGo.js","assets/index.html-DxQ0Jtfo.js","assets/index.html-BdSrLJQ7.js","assets/git-command.html-DebKS1qc.js","assets/git-commit-guidelines.html-Dyga-gla.js","assets/gitlab.html-D-rzdmzj.js","assets/index.html-DaW15a08.js","assets/environment-variables.html-C_G3eMmc.js","assets/glob.html-BVU8zGG8.js","assets/linux-command.html-ssf3engU.js","assets/shell.html-DlUYTKPb.js","assets/index.html-BA1m0_sq.js","assets/nginx-conf.html-B4LDJLif.js","assets/ngx_http_proxy_module.html-Cgus6HAj.js","assets/ngx_http_upstream_module.html-BbLZZ7g3.js","assets/practices.html-CFJez20s.js","assets/index.html-DF26zbOh.js","assets/border-image.html-Cd6tHyQZ.js","assets/index.html-h6qnfrNz.js","assets/fibonacci-sequence.html-C20xCRwq.js","assets/binary-search.html-nssXGCF2.js","assets/index.html-BPslFTUW.js","assets/the-all-nodes-of-binary-tree.html-BScIGl-V.js","assets/the-self-closing-string.html-DXL68Lll.js","assets/index.html-B7GgJSox.js","assets/event-delegation.html-jcfOcGg2.js","assets/flip-ul.html-D9EOR8Ob.js","assets/the-difference-between-dom-property-and-html-attribute.html-DF2YAjXk.js","assets/footer-attach-to-the-bottom.html-BCBX4apL.js","assets/two-columns-layout.html-pavbKFdl.js","assets/position-question-1.html-CnYp1lur.js","assets/position-question-2.html-DjnqeMfS.js","assets/index.html-qaNI2TOQ.js","assets/implement-queue-with-two-stacks.html-CUz5k5-4.js","assets/index.html-FqI1PLhz.js","assets/index.html-CZZxach8.js","assets/vue.html-CW4jrwIB.js","assets/index.html-xEJlP2wM.js","assets/index.html-Cq_tpLg-.js","assets/index.html-GsdoNIBx.js","assets/index.html-PwEQFZ1m.js","assets/index.html-B08FB0ed.js","assets/floating.html-CAQYhIY8.js","assets/index.html-5ihBy0lS.js","assets/class.html-NynH1Yiu.js","assets/index.html-W_CkrnfP.js","assets/index.html-1GGmfsrw.js","assets/unicode.html-DStCO__N.js","assets/async-component.html-CSeq6KiB.js","assets/extend.html-M3UnP_9K.js","assets/functional-component.html-nIQ3qov7.js","assets/options.html-BHF09BSu.js","assets/register.html-wVMQmd1k.js","assets/index.html-Cnu5LxBH.js","assets/base-compile.html-DGZpj7dQ.js","assets/codegen.html-B25xjGFB.js","assets/compile-process.html-DJuNPud1.js","assets/optimize.html-BoG6ZgML.js","assets/parse-html.html-VfpADya6.js","assets/parse.html-BNdXQJr0.js","assets/index.html-Ci2y_QMb.js","assets/create.html-DAwSfso0.js","assets/directives.html-h6qN8iYY.js","assets/events.html-ZKR6RSWn.js","assets/use.html-DiluNTfq.js","assets/index.html-QqSq2XuO.js","assets/array-observe-limit.html-ByWBfT6_.js","assets/dep-collection.html-DcrHbwp4.js","assets/dep.html-Dt-26yDa.js","assets/notify-update.html-86u-CNeN.js","assets/scheduler.html-BieOjpjQ.js","assets/watcher.html-DKcbKO2P.js","assets/index.html-_w84xyvm.js","assets/hydrate.html-BSGzs60c.js","assets/vue-server-renderer.html-BAYNkvib.js","assets/lifecycle-hook-event.html-BCD17nfo.js","assets/next-tick.html-BuGMF7C9.js","assets/index.html-CcRWkNLO.js","assets/child-component-create.html-R3LQx8QJ.js","assets/patch-fn.html-CnUgUzPC.js","assets/patch-vnode.html-DbziMvaS.js","assets/patch.html-CDU2yoym.js","assets/vnode-tree-create.html-DsZzxA20.js","assets/index.html-Cjgvfkqf.js","assets/scoped-css.html-BCVjYr6f.js","assets/index.html-BaC8iapu.js","assets/index.html-BZEZvWts.js","assets/get-state-after-mutation.html-DqpgrCn7.js","assets/register-module.html-vF4PfXoc.js","assets/reset-child-module-state.html-DfUYEOMI.js","assets/index.html-Bv7cXlCP.js","assets/changpingxiannanyan-BN58ujTt.js","assets/index.html-BCg-nXtU.js","assets/index.html-C09GlSnQ.js","assets/index.html-DVecNgXb.js","assets/index.html-w0_OKqHk.js","assets/index.html-BX8f8ppi.js","assets/index.html-TaFMX11g.js","assets/index.html-KkDOdPdb.js","assets/index.html-CknbdulZ.js","assets/index.html-DrPAFOwU.js","assets/index.html-DTl47xSu.js","assets/index.html-BCTgYpir.js","assets/index.html-Bw4eBeW5.js","assets/index.html-CS6Va8Li.js","assets/index.html-B8e1-rlT.js","assets/npm-command.html-Q7d-FUx0.js","assets/npm-config.html-DRWuW_8y.js","assets/npm-scripts.html-ChSzogbJ.js","assets/npmrc.html-tnYnLRId.js","assets/package-lock.json.html-DqLaOpFN.js","assets/package.json.html-mCmkIBTg.js","assets/index.html-pWktRUDW.js","assets/koa.html-DOtQmncZ.js","assets/index.html-3incSQ4H.js","assets/webpack-runtime.html-B-R9C9RH.js","assets/webpack-todo.html-BxUWLdkc.js","assets/webpack4-import.html-DoLgiw3N.js","assets/js.html-4kORKOfo.js","assets/naming-references.html-DE_TVwgJ.js","assets/index.html-C5atDoVD.js","assets/index.html-CnpBRQJA.js","assets/index.html-BW-GNQ8Y.js","assets/index.html-o22MvTf6.js","assets/index.html-C2Yu6D1L.js","assets/kth-largest-element-in-an-array.html-DgD-QFoK.js","assets/partition-array-into-three-parts-with-equal-sum.html-Ci2oldrP.js","assets/index.html-BOMQ5sjl.js","assets/index.html-C5QVwCs0.js","assets/index.html-3bXFimlA.js","assets/index.html-dhhc3QRs.js","assets/index.html-CA7OYjo_.js","assets/create-a-random-valid-hex-color.html-C0j6SZjS.js","assets/index.html-BVTVXvI7.js","assets/rgb-to-hex.html-BSL4xeFF.js","assets/variable-naming-style.html-CyUIgiQN.js","assets/deep-clone.html-BI505Rv1.js","assets/event-emitter.html-VDX9YBJy.js","assets/index.html-DSJcZaKT.js","assets/max-parallel-request-count-control.html-CthT1n1E.js","assets/index.html-Dwz97NYU.js","assets/the-value-of-the-params-passed-to-function.html-F4AHNznr.js","assets/typeof.html-Cqo2-WVZ.js","assets/index.html-DSPTmTFm.js","assets/index.html-CPCCScT9.js","assets/index.html-BTXCC_G0.js","assets/console-log-event.html-D5nUSAPm.js","assets/index.html-DwqxYrFF.js","assets/index.html-DqGbId4b.js","assets/event.html-DVth2e0t.js","assets/slot.html-eBgoRWSB.js","assets/v-model.html-MivK9cmc.js","assets/index.html-BVMNQJDS.js","assets/computed.html-cW68nEk3.js","assets/data.html-D-3otn8B.js","assets/methods.html-7ZWKXkep.js","assets/props.html-CTelLBEH.js","assets/watch.html-CZTJ5NC4.js","assets/index.html-C4feoLLV.js","assets/attrs.html-SckOF5a9.js","assets/class.html-B5wzZWrv.js","assets/dom-props.html-BJhqAHh0.js","assets/ref.html-C4ft4GhQ.js","assets/style.html-B6P3e4cl.js","assets/dom-binding.html-Cy7ksVYI.js","assets/index.html-CB3uPyMy.js","assets/cross-env.html-NUeUSJ22.js","assets/npx.html-BAswDUcT.js","assets/nrm.html-DqQ5550q.js","assets/nvm.html-H3gBJwgq.js","assets/config-tools.html-BhlZ_Twj.js","assets/dead-code.html-NgcwL3Mq.js","assets/practical-config.html-DR5aXZKW.js","assets/whole-config.html-B3OZzl-y.js","assets/index.html-CrSnumag.js","assets/tapable-readme.html-CiXp576O.js","assets/eslint-prettier.html-0YuJjpmZ.js","assets/eslint-vscode.html-Cz41q0D5.js","assets/eslint-vue.html-sh0Z41Rk.js","assets/how-to-write-a-custom-eslint-rule.html-DyUXQh9f.js","assets/index.html-BF4IcbIn.js","assets/array-elements-deduplication.html-C8NN_ZUA.js","assets/flat-array-elements-and-deduplicate.html-69CW4IlK.js","assets/merge-sorted-array.html-B_Mp52gU.js","assets/synchronous-event-listener-with-proxy.html-DoYMvLPb.js","assets/repeat-invoke-functions-with-times.html-BHSkmLY0.js","assets/array-prototype-flat.html-Cog1rkFx.js","assets/promise-race-and-allsettled.html-B3vytGIx.js","assets/function-call-stack.html-CZfzThu9.js","assets/prototype-extend-input.html-DTC9cpp1.js","assets/prototype-input.html-BdvqJqq2.js","assets/the-relationship-between-and-constructor-prototype.html-DnnpEn1d.js","assets/closure-input.html-CEtV_oR3.js","assets/modify-closure.html-Cj-fPp6x.js","assets/new-operator.html-Dzmy3eJQ.js","assets/concept.html-B96CdD19.js","assets/var-scope.html-DFSbCIjb.js","assets/this-input.html-D5DRqNkh.js","assets/variable-promotion.html-CGnX6Atk.js","assets/index.html-B8VCiiwh.js","assets/404.html-tnCdexY1.js","assets/index.html-C-1peJd_.js","assets/index.html-DYk3nyLG.js","assets/index.html-B-KuSocN.js","assets/index.html-MjvI-idy.js","assets/index.html-BBf7kb-t.js","assets/index.html-O0vtgNrN.js","assets/index.html-DjJAdxXV.js","assets/index.html-D6Dd-gHp.js","assets/index.html-DqJdiyPA.js","assets/index.html-XObDuN4C.js","assets/index.html-tuiR816L.js","assets/index.html-B-lZSHiD.js","assets/index.html-D36dAm5d.js","assets/index.html-CV1eobPV.js","assets/index.html-ByNax9nG.js","assets/index.html-DQRwY8Jx.js","assets/index.html-DYyrgWLD.js","assets/index.html-D2SyheMj.js","assets/index.html-8-0lwW-6.js","assets/index.html-AUmiYXoF.js","assets/index.html-CiX_aVV-.js","assets/index.html-BkOW4IJN.js","assets/index.html-Dli-1zcU.js","assets/index.html-S4QFoQd2.js","assets/index.html-BclguFpm.js","assets/index.html-BnLXj17B.js","assets/index.html-1m9BsYn-.js","assets/index.html-CrLgw10i.js","assets/index.html-Cbs2I2j2.js","assets/index.html-B5A_uYB2.js","assets/index.html-DGQr8VQk.js","assets/index.html-RMHsqq38.js","assets/index.html-BiFfbYUR.js","assets/index.html-Y9Hns1sd.js","assets/index.html-CpN2N-Nc.js","assets/index.html-P89gtSWJ.js","assets/index.html-B47cO7Et.js","assets/index.html-FE6uOXA8.js","assets/index.html-Dcq4v6LW.js","assets/index.html-DPZr6qGy.js","assets/index.html-BiFbvvqd.js","assets/index.html-BzqFKubv.js","assets/index.html-BXR2bRwZ.js","assets/index.html-2te0OGqk.js","assets/index.html-IeRU1fSG.js","assets/index.html-t_Dsb2h4.js","assets/index.html-bsI16-BX.js","assets/index.html-C5p80Q1J.js","assets/index.html-BaF0ZWXk.js","assets/index.html-pU1QQsc3.js","assets/index.html-DZxSMUUl.js","assets/index.html-CV7dcSqM.js","assets/index.html-CwJjz7SI.js","assets/index.html-BZfBC5cH.js","assets/index.html-CGkxKn8l.js","assets/index.html-qZ_VU6Ym.js","assets/index.html-Bc70ShHI.js","assets/index.html-Bq_qs8MQ.js","assets/index.html-BBvm8Buj.js","assets/index.html-CATdEoHn.js","assets/index.html-D98OJD2b.js","assets/index.html-jn03fDRK.js","assets/index.html-dUGJUM8X.js","assets/index.html-B3ct9rBB.js","assets/index.html-k-EKoYsM.js","assets/index.html-3t1o7doq.js","assets/index.html-Dx46KKQJ.js","assets/index.html-ChkKfnSF.js","assets/index.html-DV_Rethv.js","assets/index.html-B03Up3pw.js","assets/index.html-08-aT6RV.js","assets/index.html-BPihYQUV.js","assets/index.html-rZu-boT4.js","assets/index.html-DH7pGTcN.js","assets/index.html-D5OW7tYm.js","assets/index.html-Dnv1tiA2.js","assets/index.html-Mux8Ptw9.js","assets/index.html-CzXVQYK4.js","assets/index.html-DXzJzm-w.js","assets/index.html-CJNQCzEO.js","assets/index.html-BZJXJB9M.js","assets/index.html-BfOVPbSS.js","assets/index.html-C8ovTL4R.js","assets/index.html-CQgfzwCn.js","assets/index.html-Dt3rrplG.js","assets/index.html-BgBHpPnf.js","assets/index.html-B_xTOziG.js","assets/index.html-kYhEXagv.js","assets/index.html-BWb4LSxn.js","assets/index.html-BkcGdQiX.js","assets/index.html-BImPGpKe.js","assets/index.html-CjCYY4l-.js","assets/global-config-CGQv8cM5.js","assets/gradient-shadows-BrzVm63j.js","assets/scroll-element-fade-up-D1Jkbrpw.js","assets/border-image-linear-gradient-BgXPUn8H.js","assets/ball-translate-BgM1xWLD.js","assets/give-scores-DJ-TK6sq.js","assets/overlap-text-DKb3x4tN.js","assets/title-animations-ClBdzcYt.js","assets/different-fon-family-BLuvXV49.js","assets/fastclick-bug-DlHv5lOB.js","assets/box-self-Copd0yF3.js","assets/complicated-CSBi5AqZ.js","assets/first-solution-Dvmo9HX0.js","assets/fourth-solution-DsskiDTB.js","assets/second-solution-DOrx_4wl.js","assets/third-solution-2d-Cg2x3Am9.js","assets/third-solution-3d-CiF5n887.js","assets/example-MhcdfJ6b.js","assets/index-BL2feH6j.js","assets/example-DgLC7IBO.js","assets/index-BFPkyeJ0.js","assets/stop-blur-after-A-OxBI7m.js","assets/stop-blur-before-Byry_zfc.js","assets/aspect-radio-D5JYvqG7.js","assets/synchronous-event-listener-with-proxy-DPc-R-Dm.js"])))=>i.map(i=>d[i]);
const scriptRel = "modulepreload";
const assetsURL = function(dep) {
  return "/" + dep;
};
const seen = {};
const __vitePreload = function preload(baseModule, deps, importerUrl) {
  let promise = Promise.resolve();
  if (deps && deps.length > 0) {
    document.getElementsByTagName("link");
    const cspNonceMeta = document.querySelector(
      "meta[property=csp-nonce]"
    );
    const cspNonce = (cspNonceMeta == null ? void 0 : cspNonceMeta.nonce) || (cspNonceMeta == null ? void 0 : cspNonceMeta.getAttribute("nonce"));
    promise = Promise.allSettled(
      deps.map((dep) => {
        dep = assetsURL(dep);
        if (dep in seen) return;
        seen[dep] = true;
        const isCss = dep.endsWith(".css");
        const cssSelector = isCss ? '[rel="stylesheet"]' : "";
        if (document.querySelector(`link[href="${dep}"]${cssSelector}`)) {
          return;
        }
        const link = document.createElement("link");
        link.rel = isCss ? "stylesheet" : scriptRel;
        if (!isCss) {
          link.as = "script";
        }
        link.crossOrigin = "";
        link.href = dep;
        if (cspNonce) {
          link.setAttribute("nonce", cspNonce);
        }
        document.head.appendChild(link);
        if (isCss) {
          return new Promise((res, rej) => {
            link.addEventListener("load", res);
            link.addEventListener(
              "error",
              () => rej(new Error(`Unable to preload CSS for ${dep}`))
            );
          });
        }
      })
    );
  }
  function handlePreloadError(err) {
    const e2 = new Event("vite:preloadError", {
      cancelable: true
    });
    e2.payload = err;
    window.dispatchEvent(e2);
    if (!e2.defaultPrevented) {
      throw err;
    }
  }
  return promise.then((res) => {
    for (const item of res || []) {
      if (item.status !== "rejected") continue;
      handlePreloadError(item.reason);
    }
    return baseModule().catch(handlePreloadError);
  });
};
/**
* @vue/shared v3.5.11
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function makeMap(str) {
  const map2 = /* @__PURE__ */ Object.create(null);
  for (const key of str.split(",")) map2[key] = 1;
  return (val) => val in map2;
}
const EMPTY_OBJ = Object.freeze({});
const EMPTY_ARR = Object.freeze([]);
const NOOP = () => {
};
const NO = () => false;
const isOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // uppercase letter
(key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97);
const isModelListener = (key) => key.startsWith("onUpdate:");
const extend = Object.assign;
const remove = (arr, el) => {
  const i2 = arr.indexOf(el);
  if (i2 > -1) {
    arr.splice(i2, 1);
  }
};
const hasOwnProperty$1 = Object.prototype.hasOwnProperty;
const hasOwn = (val, key) => hasOwnProperty$1.call(val, key);
const isArray$3 = Array.isArray;
const isMap$1 = (val) => toTypeString(val) === "[object Map]";
const isSet$1 = (val) => toTypeString(val) === "[object Set]";
const isFunction$1 = (val) => typeof val === "function";
const isString$3 = (val) => typeof val === "string";
const isSymbol$1 = (val) => typeof val === "symbol";
const isObject$1 = (val) => val !== null && typeof val === "object";
const isPromise = (val) => {
  return (isObject$1(val) || isFunction$1(val)) && isFunction$1(val.then) && isFunction$1(val.catch);
};
const objectToString = Object.prototype.toString;
const toTypeString = (value) => objectToString.call(value);
const toRawType = (value) => {
  return toTypeString(value).slice(8, -1);
};
const isPlainObject$1 = (val) => toTypeString(val) === "[object Object]";
const isIntegerKey = (key) => isString$3(key) && key !== "NaN" && key[0] !== "-" && "" + parseInt(key, 10) === key;
const isReservedProp = /* @__PURE__ */ makeMap(
  // the leading comma is intentional so empty string "" is also included
  ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
);
const isBuiltInDirective = /* @__PURE__ */ makeMap(
  "bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"
);
const cacheStringFunction = (fn) => {
  const cache = /* @__PURE__ */ Object.create(null);
  return (str) => {
    const hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
};
const camelizeRE = /-(\w)/g;
const camelize = cacheStringFunction(
  (str) => {
    return str.replace(camelizeRE, (_2, c) => c ? c.toUpperCase() : "");
  }
);
const hyphenateRE = /\B([A-Z])/g;
const hyphenate = cacheStringFunction(
  (str) => str.replace(hyphenateRE, "-$1").toLowerCase()
);
const capitalize = cacheStringFunction((str) => {
  return str.charAt(0).toUpperCase() + str.slice(1);
});
const toHandlerKey = cacheStringFunction(
  (str) => {
    const s2 = str ? `on${capitalize(str)}` : ``;
    return s2;
  }
);
const hasChanged = (value, oldValue) => !Object.is(value, oldValue);
const invokeArrayFns = (fns, ...arg) => {
  for (let i2 = 0; i2 < fns.length; i2++) {
    fns[i2](...arg);
  }
};
const def = (obj, key, value, writable = false) => {
  Object.defineProperty(obj, key, {
    configurable: true,
    enumerable: false,
    writable,
    value
  });
};
const looseToNumber = (val) => {
  const n2 = parseFloat(val);
  return isNaN(n2) ? val : n2;
};
const toNumber = (val) => {
  const n2 = isString$3(val) ? Number(val) : NaN;
  return isNaN(n2) ? val : n2;
};
let _globalThis;
const getGlobalThis = () => {
  return _globalThis || (_globalThis = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {});
};
function normalizeStyle(value) {
  if (isArray$3(value)) {
    const res = {};
    for (let i2 = 0; i2 < value.length; i2++) {
      const item = value[i2];
      const normalized = isString$3(item) ? parseStringStyle(item) : normalizeStyle(item);
      if (normalized) {
        for (const key in normalized) {
          res[key] = normalized[key];
        }
      }
    }
    return res;
  } else if (isString$3(value) || isObject$1(value)) {
    return value;
  }
}
const listDelimiterRE = /;(?![^(]*\))/g;
const propertyDelimiterRE = /:([^]+)/;
const styleCommentRE = /\/\*[^]*?\*\//g;
function parseStringStyle(cssText) {
  const ret = {};
  cssText.replace(styleCommentRE, "").split(listDelimiterRE).forEach((item) => {
    if (item) {
      const tmp = item.split(propertyDelimiterRE);
      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return ret;
}
function stringifyStyle(styles) {
  let ret = "";
  if (!styles || isString$3(styles)) {
    return ret;
  }
  for (const key in styles) {
    const value = styles[key];
    if (isString$3(value) || typeof value === "number") {
      const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);
      ret += `${normalizedKey}:${value};`;
    }
  }
  return ret;
}
function normalizeClass(value) {
  let res = "";
  if (isString$3(value)) {
    res = value;
  } else if (isArray$3(value)) {
    for (let i2 = 0; i2 < value.length; i2++) {
      const normalized = normalizeClass(value[i2]);
      if (normalized) {
        res += normalized + " ";
      }
    }
  } else if (isObject$1(value)) {
    for (const name in value) {
      if (value[name]) {
        res += name + " ";
      }
    }
  }
  return res.trim();
}
const HTML_TAGS = "html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot";
const SVG_TAGS = "svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view";
const MATH_TAGS = "annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics";
const isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);
const isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);
const isMathMLTag = /* @__PURE__ */ makeMap(MATH_TAGS);
const specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;
const isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);
const isBooleanAttr = /* @__PURE__ */ makeMap(
  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`
);
function includeBooleanAttr(value) {
  return !!value || value === "";
}
const isKnownHtmlAttr = /* @__PURE__ */ makeMap(
  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`
);
const isKnownSvgAttr = /* @__PURE__ */ makeMap(
  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`
);
function isRenderableAttrValue(value) {
  if (value == null) {
    return false;
  }
  const type = typeof value;
  return type === "string" || type === "number" || type === "boolean";
}
const cssVarNameEscapeSymbolsRE = /[ !"#$%&'()*+,./:;<=>?@[\\\]^`{|}~]/g;
function getEscapedCssVarName(key, doubleEscape) {
  return key.replace(
    cssVarNameEscapeSymbolsRE,
    (s2) => `\\${s2}`
  );
}
const isRef$2 = (val) => {
  return !!(val && val["__v_isRef"] === true);
};
const toDisplayString = (val) => {
  return isString$3(val) ? val : val == null ? "" : isArray$3(val) || isObject$1(val) && (val.toString === objectToString || !isFunction$1(val.toString)) ? isRef$2(val) ? toDisplayString(val.value) : JSON.stringify(val, replacer, 2) : String(val);
};
const replacer = (_key, val) => {
  if (isRef$2(val)) {
    return replacer(_key, val.value);
  } else if (isMap$1(val)) {
    return {
      [`Map(${val.size})`]: [...val.entries()].reduce(
        (entries2, [key, val2], i2) => {
          entries2[stringifySymbol(key, i2) + " =>"] = val2;
          return entries2;
        },
        {}
      )
    };
  } else if (isSet$1(val)) {
    return {
      [`Set(${val.size})`]: [...val.values()].map((v) => stringifySymbol(v))
    };
  } else if (isSymbol$1(val)) {
    return stringifySymbol(val);
  } else if (isObject$1(val) && !isArray$3(val) && !isPlainObject$1(val)) {
    return String(val);
  }
  return val;
};
const stringifySymbol = (v, i2 = "") => {
  var _a25;
  return (
    // Symbol.description in es2019+ so we need to cast here to pass
    // the lib: es2016 check
    isSymbol$1(v) ? `Symbol(${(_a25 = v.description) != null ? _a25 : i2})` : v
  );
};
/**
* @vue/reactivity v3.5.11
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
function warn$3(msg, ...args) {
  console.warn(`[Vue warn] ${msg}`, ...args);
}
let activeEffectScope;
class EffectScope {
  constructor(detached = false) {
    this.detached = detached;
    this._active = true;
    this.effects = [];
    this.cleanups = [];
    this._isPaused = false;
    this.parent = activeEffectScope;
    if (!detached && activeEffectScope) {
      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(
        this
      ) - 1;
    }
  }
  get active() {
    return this._active;
  }
  pause() {
    if (this._active) {
      this._isPaused = true;
      let i2, l2;
      if (this.scopes) {
        for (i2 = 0, l2 = this.scopes.length; i2 < l2; i2++) {
          this.scopes[i2].pause();
        }
      }
      for (i2 = 0, l2 = this.effects.length; i2 < l2; i2++) {
        this.effects[i2].pause();
      }
    }
  }
  /**
   * Resumes the effect scope, including all child scopes and effects.
   */
  resume() {
    if (this._active) {
      if (this._isPaused) {
        this._isPaused = false;
        let i2, l2;
        if (this.scopes) {
          for (i2 = 0, l2 = this.scopes.length; i2 < l2; i2++) {
            this.scopes[i2].resume();
          }
        }
        for (i2 = 0, l2 = this.effects.length; i2 < l2; i2++) {
          this.effects[i2].resume();
        }
      }
    }
  }
  run(fn) {
    if (this._active) {
      const currentEffectScope = activeEffectScope;
      try {
        activeEffectScope = this;
        return fn();
      } finally {
        activeEffectScope = currentEffectScope;
      }
    } else {
      warn$3(`cannot run an inactive effect scope.`);
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  on() {
    activeEffectScope = this;
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  off() {
    activeEffectScope = this.parent;
  }
  stop(fromParent) {
    if (this._active) {
      let i2, l2;
      for (i2 = 0, l2 = this.effects.length; i2 < l2; i2++) {
        this.effects[i2].stop();
      }
      for (i2 = 0, l2 = this.cleanups.length; i2 < l2; i2++) {
        this.cleanups[i2]();
      }
      if (this.scopes) {
        for (i2 = 0, l2 = this.scopes.length; i2 < l2; i2++) {
          this.scopes[i2].stop(true);
        }
      }
      if (!this.detached && this.parent && !fromParent) {
        const last = this.parent.scopes.pop();
        if (last && last !== this) {
          this.parent.scopes[this.index] = last;
          last.index = this.index;
        }
      }
      this.parent = void 0;
      this._active = false;
    }
  }
}
function getCurrentScope() {
  return activeEffectScope;
}
function onScopeDispose(fn, failSilently = false) {
  if (activeEffectScope) {
    activeEffectScope.cleanups.push(fn);
  } else if (!failSilently) {
    warn$3(
      `onScopeDispose() is called when there is no active effect scope to be associated with.`
    );
  }
}
let activeSub;
const pausedQueueEffects = /* @__PURE__ */ new WeakSet();
class ReactiveEffect {
  constructor(fn) {
    this.fn = fn;
    this.deps = void 0;
    this.depsTail = void 0;
    this.flags = 1 | 4;
    this.next = void 0;
    this.cleanup = void 0;
    this.scheduler = void 0;
    if (activeEffectScope && activeEffectScope.active) {
      activeEffectScope.effects.push(this);
    }
  }
  pause() {
    this.flags |= 64;
  }
  resume() {
    if (this.flags & 64) {
      this.flags &= ~64;
      if (pausedQueueEffects.has(this)) {
        pausedQueueEffects.delete(this);
        this.trigger();
      }
    }
  }
  /**
   * @internal
   */
  notify() {
    if (this.flags & 2 && !(this.flags & 32)) {
      return;
    }
    if (!(this.flags & 8)) {
      batch(this);
    }
  }
  run() {
    if (!(this.flags & 1)) {
      return this.fn();
    }
    this.flags |= 2;
    cleanupEffect(this);
    prepareDeps(this);
    const prevEffect = activeSub;
    const prevShouldTrack = shouldTrack;
    activeSub = this;
    shouldTrack = true;
    try {
      return this.fn();
    } finally {
      if (activeSub !== this) {
        warn$3(
          "Active effect was not restored correctly - this is likely a Vue internal bug."
        );
      }
      cleanupDeps(this);
      activeSub = prevEffect;
      shouldTrack = prevShouldTrack;
      this.flags &= ~2;
    }
  }
  stop() {
    if (this.flags & 1) {
      for (let link = this.deps; link; link = link.nextDep) {
        removeSub(link);
      }
      this.deps = this.depsTail = void 0;
      cleanupEffect(this);
      this.onStop && this.onStop();
      this.flags &= ~1;
    }
  }
  trigger() {
    if (this.flags & 64) {
      pausedQueueEffects.add(this);
    } else if (this.scheduler) {
      this.scheduler();
    } else {
      this.runIfDirty();
    }
  }
  /**
   * @internal
   */
  runIfDirty() {
    if (isDirty(this)) {
      this.run();
    }
  }
  get dirty() {
    return isDirty(this);
  }
}
let batchDepth = 0;
let batchedSub;
let batchedComputed;
function batch(sub, isComputed = false) {
  sub.flags |= 8;
  if (isComputed) {
    sub.next = batchedComputed;
    batchedComputed = sub;
    return;
  }
  sub.next = batchedSub;
  batchedSub = sub;
}
function startBatch() {
  batchDepth++;
}
function endBatch() {
  if (--batchDepth > 0) {
    return;
  }
  if (batchedComputed) {
    let e2 = batchedComputed;
    batchedComputed = void 0;
    while (e2) {
      const next = e2.next;
      e2.next = void 0;
      e2.flags &= ~8;
      e2 = next;
    }
  }
  let error;
  while (batchedSub) {
    let e2 = batchedSub;
    batchedSub = void 0;
    while (e2) {
      const next = e2.next;
      e2.next = void 0;
      e2.flags &= ~8;
      if (e2.flags & 1) {
        try {
          ;
          e2.trigger();
        } catch (err) {
          if (!error) error = err;
        }
      }
      e2 = next;
    }
  }
  if (error) throw error;
}
function prepareDeps(sub) {
  for (let link = sub.deps; link; link = link.nextDep) {
    link.version = -1;
    link.prevActiveLink = link.dep.activeLink;
    link.dep.activeLink = link;
  }
}
function cleanupDeps(sub) {
  let head;
  let tail = sub.depsTail;
  let link = tail;
  while (link) {
    const prev = link.prevDep;
    if (link.version === -1) {
      if (link === tail) tail = prev;
      removeSub(link);
      removeDep(link);
    } else {
      head = link;
    }
    link.dep.activeLink = link.prevActiveLink;
    link.prevActiveLink = void 0;
    link = prev;
  }
  sub.deps = head;
  sub.depsTail = tail;
}
function isDirty(sub) {
  for (let link = sub.deps; link; link = link.nextDep) {
    if (link.dep.version !== link.version || link.dep.computed && (refreshComputed(link.dep.computed) || link.dep.version !== link.version)) {
      return true;
    }
  }
  if (sub._dirty) {
    return true;
  }
  return false;
}
function refreshComputed(computed2) {
  if (computed2.flags & 4 && !(computed2.flags & 16)) {
    return;
  }
  computed2.flags &= ~16;
  if (computed2.globalVersion === globalVersion) {
    return;
  }
  computed2.globalVersion = globalVersion;
  const dep = computed2.dep;
  computed2.flags |= 2;
  if (dep.version > 0 && !computed2.isSSR && computed2.deps && !isDirty(computed2)) {
    computed2.flags &= ~2;
    return;
  }
  const prevSub = activeSub;
  const prevShouldTrack = shouldTrack;
  activeSub = computed2;
  shouldTrack = true;
  try {
    prepareDeps(computed2);
    const value = computed2.fn(computed2._value);
    if (dep.version === 0 || hasChanged(value, computed2._value)) {
      computed2._value = value;
      dep.version++;
    }
  } catch (err) {
    dep.version++;
    throw err;
  } finally {
    activeSub = prevSub;
    shouldTrack = prevShouldTrack;
    cleanupDeps(computed2);
    computed2.flags &= ~2;
  }
}
function removeSub(link, soft = false) {
  const { dep, prevSub, nextSub } = link;
  if (prevSub) {
    prevSub.nextSub = nextSub;
    link.prevSub = void 0;
  }
  if (nextSub) {
    nextSub.prevSub = prevSub;
    link.nextSub = void 0;
  }
  if (dep.subs === link) {
    dep.subs = prevSub;
  }
  if (dep.subsHead === link) {
    dep.subsHead = nextSub;
  }
  if (!dep.subs && dep.computed) {
    dep.computed.flags &= ~4;
    for (let l2 = dep.computed.deps; l2; l2 = l2.nextDep) {
      removeSub(l2, true);
    }
  }
  if (!soft && !--dep.sc && dep.map) {
    dep.map.delete(dep.key);
  }
}
function removeDep(link) {
  const { prevDep, nextDep } = link;
  if (prevDep) {
    prevDep.nextDep = nextDep;
    link.prevDep = void 0;
  }
  if (nextDep) {
    nextDep.prevDep = prevDep;
    link.nextDep = void 0;
  }
}
let shouldTrack = true;
const trackStack = [];
function pauseTracking() {
  trackStack.push(shouldTrack);
  shouldTrack = false;
}
function resetTracking() {
  const last = trackStack.pop();
  shouldTrack = last === void 0 ? true : last;
}
function cleanupEffect(e2) {
  const { cleanup } = e2;
  e2.cleanup = void 0;
  if (cleanup) {
    const prevSub = activeSub;
    activeSub = void 0;
    try {
      cleanup();
    } finally {
      activeSub = prevSub;
    }
  }
}
let globalVersion = 0;
class Link {
  constructor(sub, dep) {
    this.sub = sub;
    this.dep = dep;
    this.version = dep.version;
    this.nextDep = this.prevDep = this.nextSub = this.prevSub = this.prevActiveLink = void 0;
  }
}
class Dep {
  constructor(computed2) {
    this.computed = computed2;
    this.version = 0;
    this.activeLink = void 0;
    this.subs = void 0;
    this.map = void 0;
    this.key = void 0;
    this.sc = 0;
    {
      this.subsHead = void 0;
    }
  }
  track(debugInfo) {
    if (!activeSub || !shouldTrack || activeSub === this.computed) {
      return;
    }
    let link = this.activeLink;
    if (link === void 0 || link.sub !== activeSub) {
      link = this.activeLink = new Link(activeSub, this);
      if (!activeSub.deps) {
        activeSub.deps = activeSub.depsTail = link;
      } else {
        link.prevDep = activeSub.depsTail;
        activeSub.depsTail.nextDep = link;
        activeSub.depsTail = link;
      }
      addSub(link);
    } else if (link.version === -1) {
      link.version = this.version;
      if (link.nextDep) {
        const next = link.nextDep;
        next.prevDep = link.prevDep;
        if (link.prevDep) {
          link.prevDep.nextDep = next;
        }
        link.prevDep = activeSub.depsTail;
        link.nextDep = void 0;
        activeSub.depsTail.nextDep = link;
        activeSub.depsTail = link;
        if (activeSub.deps === link) {
          activeSub.deps = next;
        }
      }
    }
    if (activeSub.onTrack) {
      activeSub.onTrack(
        extend(
          {
            effect: activeSub
          },
          debugInfo
        )
      );
    }
    return link;
  }
  trigger(debugInfo) {
    this.version++;
    globalVersion++;
    this.notify(debugInfo);
  }
  notify(debugInfo) {
    startBatch();
    try {
      if (true) {
        for (let head = this.subsHead; head; head = head.nextSub) {
          if (head.sub.onTrigger && !(head.sub.flags & 8)) {
            head.sub.onTrigger(
              extend(
                {
                  effect: head.sub
                },
                debugInfo
              )
            );
          }
        }
      }
      for (let link = this.subs; link; link = link.prevSub) {
        if (link.sub.notify()) {
          ;
          link.sub.dep.notify();
        }
      }
    } finally {
      endBatch();
    }
  }
}
function addSub(link) {
  link.dep.sc++;
  if (link.sub.flags & 4) {
    const computed2 = link.dep.computed;
    if (computed2 && !link.dep.subs) {
      computed2.flags |= 4 | 16;
      for (let l2 = computed2.deps; l2; l2 = l2.nextDep) {
        addSub(l2);
      }
    }
    const currentTail = link.dep.subs;
    if (currentTail !== link) {
      link.prevSub = currentTail;
      if (currentTail) currentTail.nextSub = link;
    }
    if (link.dep.subsHead === void 0) {
      link.dep.subsHead = link;
    }
    link.dep.subs = link;
  }
}
const targetMap = /* @__PURE__ */ new WeakMap();
const ITERATE_KEY = Symbol(
  "Object iterate"
);
const MAP_KEY_ITERATE_KEY = Symbol(
  "Map keys iterate"
);
const ARRAY_ITERATE_KEY = Symbol(
  "Array iterate"
);
function track(target2, type, key) {
  if (shouldTrack && activeSub) {
    let depsMap = targetMap.get(target2);
    if (!depsMap) {
      targetMap.set(target2, depsMap = /* @__PURE__ */ new Map());
    }
    let dep = depsMap.get(key);
    if (!dep) {
      depsMap.set(key, dep = new Dep());
      dep.map = depsMap;
      dep.key = key;
    }
    {
      dep.track({
        target: target2,
        type,
        key
      });
    }
  }
}
function trigger(target2, type, key, newValue, oldValue, oldTarget) {
  const depsMap = targetMap.get(target2);
  if (!depsMap) {
    globalVersion++;
    return;
  }
  const run = (dep) => {
    if (dep) {
      {
        dep.trigger({
          target: target2,
          type,
          key,
          newValue,
          oldValue,
          oldTarget
        });
      }
    }
  };
  startBatch();
  if (type === "clear") {
    depsMap.forEach(run);
  } else {
    const targetIsArray = isArray$3(target2);
    const isArrayIndex = targetIsArray && isIntegerKey(key);
    if (targetIsArray && key === "length") {
      const newLength = Number(newValue);
      depsMap.forEach((dep, key2) => {
        if (key2 === "length" || key2 === ARRAY_ITERATE_KEY || !isSymbol$1(key2) && key2 >= newLength) {
          run(dep);
        }
      });
    } else {
      if (key !== void 0) {
        run(depsMap.get(key));
      }
      if (isArrayIndex) {
        run(depsMap.get(ARRAY_ITERATE_KEY));
      }
      switch (type) {
        case "add":
          if (!targetIsArray) {
            run(depsMap.get(ITERATE_KEY));
            if (isMap$1(target2)) {
              run(depsMap.get(MAP_KEY_ITERATE_KEY));
            }
          } else if (isArrayIndex) {
            run(depsMap.get("length"));
          }
          break;
        case "delete":
          if (!targetIsArray) {
            run(depsMap.get(ITERATE_KEY));
            if (isMap$1(target2)) {
              run(depsMap.get(MAP_KEY_ITERATE_KEY));
            }
          }
          break;
        case "set":
          if (isMap$1(target2)) {
            run(depsMap.get(ITERATE_KEY));
          }
          break;
      }
    }
  }
  endBatch();
}
function getDepFromReactive(object, key) {
  const depMap = targetMap.get(object);
  return depMap && depMap.get(key);
}
function reactiveReadArray(array) {
  const raw = toRaw$1(array);
  if (raw === array) return raw;
  track(raw, "iterate", ARRAY_ITERATE_KEY);
  return isShallow(array) ? raw : raw.map(toReactive);
}
function shallowReadArray(arr) {
  track(arr = toRaw$1(arr), "iterate", ARRAY_ITERATE_KEY);
  return arr;
}
const arrayInstrumentations = {
  __proto__: null,
  [Symbol.iterator]() {
    return iterator(this, Symbol.iterator, toReactive);
  },
  concat(...args) {
    return reactiveReadArray(this).concat(
      ...args.map((x2) => isArray$3(x2) ? reactiveReadArray(x2) : x2)
    );
  },
  entries() {
    return iterator(this, "entries", (value) => {
      value[1] = toReactive(value[1]);
      return value;
    });
  },
  every(fn, thisArg) {
    return apply(this, "every", fn, thisArg, void 0, arguments);
  },
  filter(fn, thisArg) {
    return apply(this, "filter", fn, thisArg, (v) => v.map(toReactive), arguments);
  },
  find(fn, thisArg) {
    return apply(this, "find", fn, thisArg, toReactive, arguments);
  },
  findIndex(fn, thisArg) {
    return apply(this, "findIndex", fn, thisArg, void 0, arguments);
  },
  findLast(fn, thisArg) {
    return apply(this, "findLast", fn, thisArg, toReactive, arguments);
  },
  findLastIndex(fn, thisArg) {
    return apply(this, "findLastIndex", fn, thisArg, void 0, arguments);
  },
  // flat, flatMap could benefit from ARRAY_ITERATE but are not straight-forward to implement
  forEach(fn, thisArg) {
    return apply(this, "forEach", fn, thisArg, void 0, arguments);
  },
  includes(...args) {
    return searchProxy(this, "includes", args);
  },
  indexOf(...args) {
    return searchProxy(this, "indexOf", args);
  },
  join(separator) {
    return reactiveReadArray(this).join(separator);
  },
  // keys() iterator only reads `length`, no optimisation required
  lastIndexOf(...args) {
    return searchProxy(this, "lastIndexOf", args);
  },
  map(fn, thisArg) {
    return apply(this, "map", fn, thisArg, void 0, arguments);
  },
  pop() {
    return noTracking(this, "pop");
  },
  push(...args) {
    return noTracking(this, "push", args);
  },
  reduce(fn, ...args) {
    return reduce(this, "reduce", fn, args);
  },
  reduceRight(fn, ...args) {
    return reduce(this, "reduceRight", fn, args);
  },
  shift() {
    return noTracking(this, "shift");
  },
  // slice could use ARRAY_ITERATE but also seems to beg for range tracking
  some(fn, thisArg) {
    return apply(this, "some", fn, thisArg, void 0, arguments);
  },
  splice(...args) {
    return noTracking(this, "splice", args);
  },
  toReversed() {
    return reactiveReadArray(this).toReversed();
  },
  toSorted(comparer) {
    return reactiveReadArray(this).toSorted(comparer);
  },
  toSpliced(...args) {
    return reactiveReadArray(this).toSpliced(...args);
  },
  unshift(...args) {
    return noTracking(this, "unshift", args);
  },
  values() {
    return iterator(this, "values", toReactive);
  }
};
function iterator(self2, method, wrapValue) {
  const arr = shallowReadArray(self2);
  const iter = arr[method]();
  if (arr !== self2 && !isShallow(self2)) {
    iter._next = iter.next;
    iter.next = () => {
      const result = iter._next();
      if (result.value) {
        result.value = wrapValue(result.value);
      }
      return result;
    };
  }
  return iter;
}
const arrayProto = Array.prototype;
function apply(self2, method, fn, thisArg, wrappedRetFn, args) {
  const arr = shallowReadArray(self2);
  const needsWrap = arr !== self2 && !isShallow(self2);
  const methodFn = arr[method];
  if (methodFn !== arrayProto[method]) {
    const result2 = methodFn.apply(self2, args);
    return needsWrap ? toReactive(result2) : result2;
  }
  let wrappedFn = fn;
  if (arr !== self2) {
    if (needsWrap) {
      wrappedFn = function(item, index) {
        return fn.call(this, toReactive(item), index, self2);
      };
    } else if (fn.length > 2) {
      wrappedFn = function(item, index) {
        return fn.call(this, item, index, self2);
      };
    }
  }
  const result = methodFn.call(arr, wrappedFn, thisArg);
  return needsWrap && wrappedRetFn ? wrappedRetFn(result) : result;
}
function reduce(self2, method, fn, args) {
  const arr = shallowReadArray(self2);
  let wrappedFn = fn;
  if (arr !== self2) {
    if (!isShallow(self2)) {
      wrappedFn = function(acc, item, index) {
        return fn.call(this, acc, toReactive(item), index, self2);
      };
    } else if (fn.length > 3) {
      wrappedFn = function(acc, item, index) {
        return fn.call(this, acc, item, index, self2);
      };
    }
  }
  return arr[method](wrappedFn, ...args);
}
function searchProxy(self2, method, args) {
  const arr = toRaw$1(self2);
  track(arr, "iterate", ARRAY_ITERATE_KEY);
  const res = arr[method](...args);
  if ((res === -1 || res === false) && isProxy(args[0])) {
    args[0] = toRaw$1(args[0]);
    return arr[method](...args);
  }
  return res;
}
function noTracking(self2, method, args = []) {
  pauseTracking();
  startBatch();
  const res = toRaw$1(self2)[method].apply(self2, args);
  endBatch();
  resetTracking();
  return res;
}
const isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);
const builtInSymbols = new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== "arguments" && key !== "caller").map((key) => Symbol[key]).filter(isSymbol$1)
);
function hasOwnProperty(key) {
  if (!isSymbol$1(key)) key = String(key);
  const obj = toRaw$1(this);
  track(obj, "has", key);
  return obj.hasOwnProperty(key);
}
class BaseReactiveHandler {
  constructor(_isReadonly = false, _isShallow = false) {
    this._isReadonly = _isReadonly;
    this._isShallow = _isShallow;
  }
  get(target2, key, receiver) {
    const isReadonly2 = this._isReadonly, isShallow2 = this._isShallow;
    if (key === "__v_isReactive") {
      return !isReadonly2;
    } else if (key === "__v_isReadonly") {
      return isReadonly2;
    } else if (key === "__v_isShallow") {
      return isShallow2;
    } else if (key === "__v_raw") {
      if (receiver === (isReadonly2 ? isShallow2 ? shallowReadonlyMap : readonlyMap : isShallow2 ? shallowReactiveMap : reactiveMap).get(target2) || // receiver is not the reactive proxy, but has the same prototype
      // this means the receiver is a user proxy of the reactive proxy
      Object.getPrototypeOf(target2) === Object.getPrototypeOf(receiver)) {
        return target2;
      }
      return;
    }
    const targetIsArray = isArray$3(target2);
    if (!isReadonly2) {
      let fn;
      if (targetIsArray && (fn = arrayInstrumentations[key])) {
        return fn;
      }
      if (key === "hasOwnProperty") {
        return hasOwnProperty;
      }
    }
    const res = Reflect.get(
      target2,
      key,
      // if this is a proxy wrapping a ref, return methods using the raw ref
      // as receiver so that we don't have to call `toRaw` on the ref in all
      // its class methods
      isRef$1(target2) ? target2 : receiver
    );
    if (isSymbol$1(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {
      return res;
    }
    if (!isReadonly2) {
      track(target2, "get", key);
    }
    if (isShallow2) {
      return res;
    }
    if (isRef$1(res)) {
      return targetIsArray && isIntegerKey(key) ? res : res.value;
    }
    if (isObject$1(res)) {
      return isReadonly2 ? readonly(res) : reactive(res);
    }
    return res;
  }
}
class MutableReactiveHandler extends BaseReactiveHandler {
  constructor(isShallow2 = false) {
    super(false, isShallow2);
  }
  set(target2, key, value, receiver) {
    let oldValue = target2[key];
    if (!this._isShallow) {
      const isOldValueReadonly = isReadonly$1(oldValue);
      if (!isShallow(value) && !isReadonly$1(value)) {
        oldValue = toRaw$1(oldValue);
        value = toRaw$1(value);
      }
      if (!isArray$3(target2) && isRef$1(oldValue) && !isRef$1(value)) {
        if (isOldValueReadonly) {
          return false;
        } else {
          oldValue.value = value;
          return true;
        }
      }
    }
    const hadKey = isArray$3(target2) && isIntegerKey(key) ? Number(key) < target2.length : hasOwn(target2, key);
    const result = Reflect.set(
      target2,
      key,
      value,
      isRef$1(target2) ? target2 : receiver
    );
    if (target2 === toRaw$1(receiver)) {
      if (!hadKey) {
        trigger(target2, "add", key, value);
      } else if (hasChanged(value, oldValue)) {
        trigger(target2, "set", key, value, oldValue);
      }
    }
    return result;
  }
  deleteProperty(target2, key) {
    const hadKey = hasOwn(target2, key);
    const oldValue = target2[key];
    const result = Reflect.deleteProperty(target2, key);
    if (result && hadKey) {
      trigger(target2, "delete", key, void 0, oldValue);
    }
    return result;
  }
  has(target2, key) {
    const result = Reflect.has(target2, key);
    if (!isSymbol$1(key) || !builtInSymbols.has(key)) {
      track(target2, "has", key);
    }
    return result;
  }
  ownKeys(target2) {
    track(
      target2,
      "iterate",
      isArray$3(target2) ? "length" : ITERATE_KEY
    );
    return Reflect.ownKeys(target2);
  }
}
class ReadonlyReactiveHandler extends BaseReactiveHandler {
  constructor(isShallow2 = false) {
    super(true, isShallow2);
  }
  set(target2, key) {
    {
      warn$3(
        `Set operation on key "${String(key)}" failed: target is readonly.`,
        target2
      );
    }
    return true;
  }
  deleteProperty(target2, key) {
    {
      warn$3(
        `Delete operation on key "${String(key)}" failed: target is readonly.`,
        target2
      );
    }
    return true;
  }
}
const mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();
const readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();
const shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(true);
const shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(true);
const toShallow = (value) => value;
const getProto = (v) => Reflect.getPrototypeOf(v);
function get(target2, key, isReadonly2 = false, isShallow2 = false) {
  target2 = target2["__v_raw"];
  const rawTarget = toRaw$1(target2);
  const rawKey = toRaw$1(key);
  if (!isReadonly2) {
    if (hasChanged(key, rawKey)) {
      track(rawTarget, "get", key);
    }
    track(rawTarget, "get", rawKey);
  }
  const { has: has2 } = getProto(rawTarget);
  const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
  if (has2.call(rawTarget, key)) {
    return wrap(target2.get(key));
  } else if (has2.call(rawTarget, rawKey)) {
    return wrap(target2.get(rawKey));
  } else if (target2 !== rawTarget) {
    target2.get(key);
  }
}
function has(key, isReadonly2 = false) {
  const target2 = this["__v_raw"];
  const rawTarget = toRaw$1(target2);
  const rawKey = toRaw$1(key);
  if (!isReadonly2) {
    if (hasChanged(key, rawKey)) {
      track(rawTarget, "has", key);
    }
    track(rawTarget, "has", rawKey);
  }
  return key === rawKey ? target2.has(key) : target2.has(key) || target2.has(rawKey);
}
function size(target2, isReadonly2 = false) {
  target2 = target2["__v_raw"];
  !isReadonly2 && track(toRaw$1(target2), "iterate", ITERATE_KEY);
  return Reflect.get(target2, "size", target2);
}
function add(value, _isShallow = false) {
  if (!_isShallow && !isShallow(value) && !isReadonly$1(value)) {
    value = toRaw$1(value);
  }
  const target2 = toRaw$1(this);
  const proto = getProto(target2);
  const hadKey = proto.has.call(target2, value);
  if (!hadKey) {
    target2.add(value);
    trigger(target2, "add", value, value);
  }
  return this;
}
function set(key, value, _isShallow = false) {
  if (!_isShallow && !isShallow(value) && !isReadonly$1(value)) {
    value = toRaw$1(value);
  }
  const target2 = toRaw$1(this);
  const { has: has2, get: get2 } = getProto(target2);
  let hadKey = has2.call(target2, key);
  if (!hadKey) {
    key = toRaw$1(key);
    hadKey = has2.call(target2, key);
  } else {
    checkIdentityKeys(target2, has2, key);
  }
  const oldValue = get2.call(target2, key);
  target2.set(key, value);
  if (!hadKey) {
    trigger(target2, "add", key, value);
  } else if (hasChanged(value, oldValue)) {
    trigger(target2, "set", key, value, oldValue);
  }
  return this;
}
function deleteEntry(key) {
  const target2 = toRaw$1(this);
  const { has: has2, get: get2 } = getProto(target2);
  let hadKey = has2.call(target2, key);
  if (!hadKey) {
    key = toRaw$1(key);
    hadKey = has2.call(target2, key);
  } else {
    checkIdentityKeys(target2, has2, key);
  }
  const oldValue = get2 ? get2.call(target2, key) : void 0;
  const result = target2.delete(key);
  if (hadKey) {
    trigger(target2, "delete", key, void 0, oldValue);
  }
  return result;
}
function clear() {
  const target2 = toRaw$1(this);
  const hadItems = target2.size !== 0;
  const oldTarget = isMap$1(target2) ? new Map(target2) : new Set(target2);
  const result = target2.clear();
  if (hadItems) {
    trigger(target2, "clear", void 0, void 0, oldTarget);
  }
  return result;
}
function createForEach(isReadonly2, isShallow2) {
  return function forEach2(callback, thisArg) {
    const observed = this;
    const target2 = observed["__v_raw"];
    const rawTarget = toRaw$1(target2);
    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
    !isReadonly2 && track(rawTarget, "iterate", ITERATE_KEY);
    return target2.forEach((value, key) => {
      return callback.call(thisArg, wrap(value), wrap(key), observed);
    });
  };
}
function createIterableMethod(method, isReadonly2, isShallow2) {
  return function(...args) {
    const target2 = this["__v_raw"];
    const rawTarget = toRaw$1(target2);
    const targetIsMap = isMap$1(rawTarget);
    const isPair = method === "entries" || method === Symbol.iterator && targetIsMap;
    const isKeyOnly = method === "keys" && targetIsMap;
    const innerIterator = target2[method](...args);
    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
    !isReadonly2 && track(
      rawTarget,
      "iterate",
      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY
    );
    return {
      // iterator protocol
      next() {
        const { value, done } = innerIterator.next();
        return done ? { value, done } : {
          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),
          done
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function createReadonlyMethod(type) {
  return function(...args) {
    {
      const key = args[0] ? `on key "${args[0]}" ` : ``;
      warn$3(
        `${capitalize(type)} operation ${key}failed: target is readonly.`,
        toRaw$1(this)
      );
    }
    return type === "delete" ? false : type === "clear" ? void 0 : this;
  };
}
function createInstrumentations() {
  const mutableInstrumentations2 = {
    get(key) {
      return get(this, key);
    },
    get size() {
      return size(this);
    },
    has,
    add,
    set,
    delete: deleteEntry,
    clear,
    forEach: createForEach(false, false)
  };
  const shallowInstrumentations2 = {
    get(key) {
      return get(this, key, false, true);
    },
    get size() {
      return size(this);
    },
    has,
    add(value) {
      return add.call(this, value, true);
    },
    set(key, value) {
      return set.call(this, key, value, true);
    },
    delete: deleteEntry,
    clear,
    forEach: createForEach(false, true)
  };
  const readonlyInstrumentations2 = {
    get(key) {
      return get(this, key, true);
    },
    get size() {
      return size(this, true);
    },
    has(key) {
      return has.call(this, key, true);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(true, false)
  };
  const shallowReadonlyInstrumentations2 = {
    get(key) {
      return get(this, key, true, true);
    },
    get size() {
      return size(this, true);
    },
    has(key) {
      return has.call(this, key, true);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(true, true)
  };
  const iteratorMethods = [
    "keys",
    "values",
    "entries",
    Symbol.iterator
  ];
  iteratorMethods.forEach((method) => {
    mutableInstrumentations2[method] = createIterableMethod(method, false, false);
    readonlyInstrumentations2[method] = createIterableMethod(method, true, false);
    shallowInstrumentations2[method] = createIterableMethod(method, false, true);
    shallowReadonlyInstrumentations2[method] = createIterableMethod(
      method,
      true,
      true
    );
  });
  return [
    mutableInstrumentations2,
    readonlyInstrumentations2,
    shallowInstrumentations2,
    shallowReadonlyInstrumentations2
  ];
}
const [
  mutableInstrumentations,
  readonlyInstrumentations,
  shallowInstrumentations,
  shallowReadonlyInstrumentations
] = /* @__PURE__ */ createInstrumentations();
function createInstrumentationGetter(isReadonly2, shallow) {
  const instrumentations = shallow ? isReadonly2 ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly2 ? readonlyInstrumentations : mutableInstrumentations;
  return (target2, key, receiver) => {
    if (key === "__v_isReactive") {
      return !isReadonly2;
    } else if (key === "__v_isReadonly") {
      return isReadonly2;
    } else if (key === "__v_raw") {
      return target2;
    }
    return Reflect.get(
      hasOwn(instrumentations, key) && key in target2 ? instrumentations : target2,
      key,
      receiver
    );
  };
}
const mutableCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(false, false)
};
const shallowCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(false, true)
};
const readonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(true, false)
};
const shallowReadonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(true, true)
};
function checkIdentityKeys(target2, has2, key) {
  const rawKey = toRaw$1(key);
  if (rawKey !== key && has2.call(target2, rawKey)) {
    const type = toRawType(target2);
    warn$3(
      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`
    );
  }
}
const reactiveMap = /* @__PURE__ */ new WeakMap();
const shallowReactiveMap = /* @__PURE__ */ new WeakMap();
const readonlyMap = /* @__PURE__ */ new WeakMap();
const shallowReadonlyMap = /* @__PURE__ */ new WeakMap();
function targetTypeMap(rawType) {
  switch (rawType) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function getTargetType(value) {
  return value["__v_skip"] || !Object.isExtensible(value) ? 0 : targetTypeMap(toRawType(value));
}
function reactive(target2) {
  if (isReadonly$1(target2)) {
    return target2;
  }
  return createReactiveObject(
    target2,
    false,
    mutableHandlers,
    mutableCollectionHandlers,
    reactiveMap
  );
}
function shallowReactive(target2) {
  return createReactiveObject(
    target2,
    false,
    shallowReactiveHandlers,
    shallowCollectionHandlers,
    shallowReactiveMap
  );
}
function readonly(target2) {
  return createReactiveObject(
    target2,
    true,
    readonlyHandlers,
    readonlyCollectionHandlers,
    readonlyMap
  );
}
function shallowReadonly(target2) {
  return createReactiveObject(
    target2,
    true,
    shallowReadonlyHandlers,
    shallowReadonlyCollectionHandlers,
    shallowReadonlyMap
  );
}
function createReactiveObject(target2, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {
  if (!isObject$1(target2)) {
    {
      warn$3(
        `value cannot be made ${isReadonly2 ? "readonly" : "reactive"}: ${String(
          target2
        )}`
      );
    }
    return target2;
  }
  if (target2["__v_raw"] && !(isReadonly2 && target2["__v_isReactive"])) {
    return target2;
  }
  const existingProxy = proxyMap.get(target2);
  if (existingProxy) {
    return existingProxy;
  }
  const targetType = getTargetType(target2);
  if (targetType === 0) {
    return target2;
  }
  const proxy = new Proxy(
    target2,
    targetType === 2 ? collectionHandlers : baseHandlers
  );
  proxyMap.set(target2, proxy);
  return proxy;
}
function isReactive$1(value) {
  if (isReadonly$1(value)) {
    return isReactive$1(value["__v_raw"]);
  }
  return !!(value && value["__v_isReactive"]);
}
function isReadonly$1(value) {
  return !!(value && value["__v_isReadonly"]);
}
function isShallow(value) {
  return !!(value && value["__v_isShallow"]);
}
function isProxy(value) {
  return value ? !!value["__v_raw"] : false;
}
function toRaw$1(observed) {
  const raw = observed && observed["__v_raw"];
  return raw ? toRaw$1(raw) : observed;
}
function markRaw(value) {
  if (!hasOwn(value, "__v_skip") && Object.isExtensible(value)) {
    def(value, "__v_skip", true);
  }
  return value;
}
const toReactive = (value) => isObject$1(value) ? reactive(value) : value;
const toReadonly = (value) => isObject$1(value) ? readonly(value) : value;
function isRef$1(r2) {
  return r2 ? r2["__v_isRef"] === true : false;
}
function ref(value) {
  return createRef(value, false);
}
function shallowRef(value) {
  return createRef(value, true);
}
function createRef(rawValue, shallow) {
  if (isRef$1(rawValue)) {
    return rawValue;
  }
  return new RefImpl(rawValue, shallow);
}
class RefImpl {
  constructor(value, isShallow2) {
    this.dep = new Dep();
    this["__v_isRef"] = true;
    this["__v_isShallow"] = false;
    this._rawValue = isShallow2 ? value : toRaw$1(value);
    this._value = isShallow2 ? value : toReactive(value);
    this["__v_isShallow"] = isShallow2;
  }
  get value() {
    {
      this.dep.track({
        target: this,
        type: "get",
        key: "value"
      });
    }
    return this._value;
  }
  set value(newValue) {
    const oldValue = this._rawValue;
    const useDirectValue = this["__v_isShallow"] || isShallow(newValue) || isReadonly$1(newValue);
    newValue = useDirectValue ? newValue : toRaw$1(newValue);
    if (hasChanged(newValue, oldValue)) {
      this._rawValue = newValue;
      this._value = useDirectValue ? newValue : toReactive(newValue);
      {
        this.dep.trigger({
          target: this,
          type: "set",
          key: "value",
          newValue,
          oldValue
        });
      }
    }
  }
}
function unref(ref2) {
  return isRef$1(ref2) ? ref2.value : ref2;
}
function toValue$1(source) {
  return isFunction$1(source) ? source() : unref(source);
}
const shallowUnwrapHandlers = {
  get: (target2, key, receiver) => key === "__v_raw" ? target2 : unref(Reflect.get(target2, key, receiver)),
  set: (target2, key, value, receiver) => {
    const oldValue = target2[key];
    if (isRef$1(oldValue) && !isRef$1(value)) {
      oldValue.value = value;
      return true;
    } else {
      return Reflect.set(target2, key, value, receiver);
    }
  }
};
function proxyRefs(objectWithRefs) {
  return isReactive$1(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);
}
class CustomRefImpl {
  constructor(factory) {
    this["__v_isRef"] = true;
    this._value = void 0;
    const dep = this.dep = new Dep();
    const { get: get2, set: set2 } = factory(dep.track.bind(dep), dep.trigger.bind(dep));
    this._get = get2;
    this._set = set2;
  }
  get value() {
    return this._value = this._get();
  }
  set value(newVal) {
    this._set(newVal);
  }
}
function customRef(factory) {
  return new CustomRefImpl(factory);
}
function toRefs(object) {
  if (!isProxy(object)) {
    warn$3(`toRefs() expects a reactive object but received a plain one.`);
  }
  const ret = isArray$3(object) ? new Array(object.length) : {};
  for (const key in object) {
    ret[key] = propertyToRef(object, key);
  }
  return ret;
}
class ObjectRefImpl {
  constructor(_object, _key, _defaultValue) {
    this._object = _object;
    this._key = _key;
    this._defaultValue = _defaultValue;
    this["__v_isRef"] = true;
    this._value = void 0;
  }
  get value() {
    const val = this._object[this._key];
    return this._value = val === void 0 ? this._defaultValue : val;
  }
  set value(newVal) {
    this._object[this._key] = newVal;
  }
  get dep() {
    return getDepFromReactive(toRaw$1(this._object), this._key);
  }
}
class GetterRefImpl {
  constructor(_getter) {
    this._getter = _getter;
    this["__v_isRef"] = true;
    this["__v_isReadonly"] = true;
    this._value = void 0;
  }
  get value() {
    return this._value = this._getter();
  }
}
function toRef$1(source, key, defaultValue) {
  if (isRef$1(source)) {
    return source;
  } else if (isFunction$1(source)) {
    return new GetterRefImpl(source);
  } else if (isObject$1(source) && arguments.length > 1) {
    return propertyToRef(source, key, defaultValue);
  } else {
    return ref(source);
  }
}
function propertyToRef(source, key, defaultValue) {
  const val = source[key];
  return isRef$1(val) ? val : new ObjectRefImpl(source, key, defaultValue);
}
class ComputedRefImpl {
  constructor(fn, setter, isSSR) {
    this.fn = fn;
    this.setter = setter;
    this._value = void 0;
    this.dep = new Dep(this);
    this.__v_isRef = true;
    this.deps = void 0;
    this.depsTail = void 0;
    this.flags = 16;
    this.globalVersion = globalVersion - 1;
    this.next = void 0;
    this.effect = this;
    this["__v_isReadonly"] = !setter;
    this.isSSR = isSSR;
  }
  /**
   * @internal
   */
  notify() {
    this.flags |= 16;
    if (!(this.flags & 8) && // avoid infinite self recursion
    activeSub !== this) {
      batch(this, true);
      return true;
    }
  }
  get value() {
    const link = this.dep.track({
      target: this,
      type: "get",
      key: "value"
    });
    refreshComputed(this);
    if (link) {
      link.version = this.dep.version;
    }
    return this._value;
  }
  set value(newValue) {
    if (this.setter) {
      this.setter(newValue);
    } else {
      warn$3("Write operation failed: computed value is readonly");
    }
  }
}
function computed$1(getterOrOptions, debugOptions, isSSR = false) {
  let getter;
  let setter;
  if (isFunction$1(getterOrOptions)) {
    getter = getterOrOptions;
  } else {
    getter = getterOrOptions.get;
    setter = getterOrOptions.set;
  }
  const cRef = new ComputedRefImpl(getter, setter, isSSR);
  return cRef;
}
const INITIAL_WATCHER_VALUE = {};
const cleanupMap = /* @__PURE__ */ new WeakMap();
let activeWatcher = void 0;
function onWatcherCleanup(cleanupFn, failSilently = false, owner = activeWatcher) {
  if (owner) {
    let cleanups = cleanupMap.get(owner);
    if (!cleanups) cleanupMap.set(owner, cleanups = []);
    cleanups.push(cleanupFn);
  } else if (!failSilently) {
    warn$3(
      `onWatcherCleanup() was called when there was no active watcher to associate with.`
    );
  }
}
function watch$1(source, cb, options = EMPTY_OBJ) {
  const { immediate, deep, once, scheduler, augmentJob, call } = options;
  const warnInvalidSource = (s2) => {
    (options.onWarn || warn$3)(
      `Invalid watch source: `,
      s2,
      `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`
    );
  };
  const reactiveGetter = (source2) => {
    if (deep) return source2;
    if (isShallow(source2) || deep === false || deep === 0)
      return traverse$1(source2, 1);
    return traverse$1(source2);
  };
  let effect2;
  let getter;
  let cleanup;
  let boundCleanup;
  let forceTrigger = false;
  let isMultiSource = false;
  if (isRef$1(source)) {
    getter = () => source.value;
    forceTrigger = isShallow(source);
  } else if (isReactive$1(source)) {
    getter = () => reactiveGetter(source);
    forceTrigger = true;
  } else if (isArray$3(source)) {
    isMultiSource = true;
    forceTrigger = source.some((s2) => isReactive$1(s2) || isShallow(s2));
    getter = () => source.map((s2) => {
      if (isRef$1(s2)) {
        return s2.value;
      } else if (isReactive$1(s2)) {
        return reactiveGetter(s2);
      } else if (isFunction$1(s2)) {
        return call ? call(s2, 2) : s2();
      } else {
        warnInvalidSource(s2);
      }
    });
  } else if (isFunction$1(source)) {
    if (cb) {
      getter = call ? () => call(source, 2) : source;
    } else {
      getter = () => {
        if (cleanup) {
          pauseTracking();
          try {
            cleanup();
          } finally {
            resetTracking();
          }
        }
        const currentEffect = activeWatcher;
        activeWatcher = effect2;
        try {
          return call ? call(source, 3, [boundCleanup]) : source(boundCleanup);
        } finally {
          activeWatcher = currentEffect;
        }
      };
    }
  } else {
    getter = NOOP;
    warnInvalidSource(source);
  }
  if (cb && deep) {
    const baseGetter = getter;
    const depth = deep === true ? Infinity : deep;
    getter = () => traverse$1(baseGetter(), depth);
  }
  const scope = getCurrentScope();
  const watchHandle = () => {
    effect2.stop();
    if (scope) {
      remove(scope.effects, effect2);
    }
  };
  if (once && cb) {
    const _cb = cb;
    cb = (...args) => {
      _cb(...args);
      watchHandle();
    };
  }
  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;
  const job = (immediateFirstRun) => {
    if (!(effect2.flags & 1) || !effect2.dirty && !immediateFirstRun) {
      return;
    }
    if (cb) {
      const newValue = effect2.run();
      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i2) => hasChanged(v, oldValue[i2])) : hasChanged(newValue, oldValue))) {
        if (cleanup) {
          cleanup();
        }
        const currentWatcher = activeWatcher;
        activeWatcher = effect2;
        try {
          const args = [
            newValue,
            // pass undefined as the old value when it's changed for the first time
            oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,
            boundCleanup
          ];
          call ? call(cb, 3, args) : (
            // @ts-expect-error
            cb(...args)
          );
          oldValue = newValue;
        } finally {
          activeWatcher = currentWatcher;
        }
      }
    } else {
      effect2.run();
    }
  };
  if (augmentJob) {
    augmentJob(job);
  }
  effect2 = new ReactiveEffect(getter);
  effect2.scheduler = scheduler ? () => scheduler(job, false) : job;
  boundCleanup = (fn) => onWatcherCleanup(fn, false, effect2);
  cleanup = effect2.onStop = () => {
    const cleanups = cleanupMap.get(effect2);
    if (cleanups) {
      if (call) {
        call(cleanups, 4);
      } else {
        for (const cleanup2 of cleanups) cleanup2();
      }
      cleanupMap.delete(effect2);
    }
  };
  {
    effect2.onTrack = options.onTrack;
    effect2.onTrigger = options.onTrigger;
  }
  if (cb) {
    if (immediate) {
      job(true);
    } else {
      oldValue = effect2.run();
    }
  } else if (scheduler) {
    scheduler(job.bind(null, true), true);
  } else {
    effect2.run();
  }
  watchHandle.pause = effect2.pause.bind(effect2);
  watchHandle.resume = effect2.resume.bind(effect2);
  watchHandle.stop = watchHandle;
  return watchHandle;
}
function traverse$1(value, depth = Infinity, seen2) {
  if (depth <= 0 || !isObject$1(value) || value["__v_skip"]) {
    return value;
  }
  seen2 = seen2 || /* @__PURE__ */ new Set();
  if (seen2.has(value)) {
    return value;
  }
  seen2.add(value);
  depth--;
  if (isRef$1(value)) {
    traverse$1(value.value, depth, seen2);
  } else if (isArray$3(value)) {
    for (let i2 = 0; i2 < value.length; i2++) {
      traverse$1(value[i2], depth, seen2);
    }
  } else if (isSet$1(value) || isMap$1(value)) {
    value.forEach((v) => {
      traverse$1(v, depth, seen2);
    });
  } else if (isPlainObject$1(value)) {
    for (const key in value) {
      traverse$1(value[key], depth, seen2);
    }
    for (const key of Object.getOwnPropertySymbols(value)) {
      if (Object.prototype.propertyIsEnumerable.call(value, key)) {
        traverse$1(value[key], depth, seen2);
      }
    }
  }
  return value;
}
/**
* @vue/runtime-core v3.5.11
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
const stack = [];
function pushWarningContext(vnode) {
  stack.push(vnode);
}
function popWarningContext() {
  stack.pop();
}
let isWarning = false;
function warn$1(msg, ...args) {
  if (isWarning) return;
  isWarning = true;
  pauseTracking();
  const instance = stack.length ? stack[stack.length - 1].component : null;
  const appWarnHandler = instance && instance.appContext.config.warnHandler;
  const trace = getComponentTrace();
  if (appWarnHandler) {
    callWithErrorHandling(
      appWarnHandler,
      instance,
      11,
      [
        // eslint-disable-next-line no-restricted-syntax
        msg + args.map((a2) => {
          var _a25, _b25;
          return (_b25 = (_a25 = a2.toString) == null ? void 0 : _a25.call(a2)) != null ? _b25 : JSON.stringify(a2);
        }).join(""),
        instance && instance.proxy,
        trace.map(
          ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`
        ).join("\n"),
        trace
      ]
    );
  } else {
    const warnArgs = [`[Vue warn]: ${msg}`, ...args];
    if (trace.length && // avoid spamming console during tests
    true) {
      warnArgs.push(`
`, ...formatTrace(trace));
    }
    console.warn(...warnArgs);
  }
  resetTracking();
  isWarning = false;
}
function getComponentTrace() {
  let currentVNode = stack[stack.length - 1];
  if (!currentVNode) {
    return [];
  }
  const normalizedStack = [];
  while (currentVNode) {
    const last = normalizedStack[0];
    if (last && last.vnode === currentVNode) {
      last.recurseCount++;
    } else {
      normalizedStack.push({
        vnode: currentVNode,
        recurseCount: 0
      });
    }
    const parentInstance = currentVNode.component && currentVNode.component.parent;
    currentVNode = parentInstance && parentInstance.vnode;
  }
  return normalizedStack;
}
function formatTrace(trace) {
  const logs = [];
  trace.forEach((entry, i2) => {
    logs.push(...i2 === 0 ? [] : [`
`], ...formatTraceEntry(entry));
  });
  return logs;
}
function formatTraceEntry({ vnode, recurseCount }) {
  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;
  const isRoot = vnode.component ? vnode.component.parent == null : false;
  const open = ` at <${formatComponentName(
    vnode.component,
    vnode.type,
    isRoot
  )}`;
  const close = `>` + postfix;
  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];
}
function formatProps(props) {
  const res = [];
  const keys2 = Object.keys(props);
  keys2.slice(0, 3).forEach((key) => {
    res.push(...formatProp(key, props[key]));
  });
  if (keys2.length > 3) {
    res.push(` ...`);
  }
  return res;
}
function formatProp(key, value, raw) {
  if (isString$3(value)) {
    value = JSON.stringify(value);
    return raw ? value : [`${key}=${value}`];
  } else if (typeof value === "number" || typeof value === "boolean" || value == null) {
    return raw ? value : [`${key}=${value}`];
  } else if (isRef$1(value)) {
    value = formatProp(key, toRaw$1(value.value), true);
    return raw ? value : [`${key}=Ref<`, value, `>`];
  } else if (isFunction$1(value)) {
    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];
  } else {
    value = toRaw$1(value);
    return raw ? value : [`${key}=`, value];
  }
}
function assertNumber(val, type) {
  if (val === void 0) {
    return;
  } else if (typeof val !== "number") {
    warn$1(`${type} is not a valid number - got ${JSON.stringify(val)}.`);
  } else if (isNaN(val)) {
    warn$1(`${type} is NaN - the duration expression might be incorrect.`);
  }
}
const ErrorTypeStrings$1 = {
  ["sp"]: "serverPrefetch hook",
  ["bc"]: "beforeCreate hook",
  ["c"]: "created hook",
  ["bm"]: "beforeMount hook",
  ["m"]: "mounted hook",
  ["bu"]: "beforeUpdate hook",
  ["u"]: "updated",
  ["bum"]: "beforeUnmount hook",
  ["um"]: "unmounted hook",
  ["a"]: "activated hook",
  ["da"]: "deactivated hook",
  ["ec"]: "errorCaptured hook",
  ["rtc"]: "renderTracked hook",
  ["rtg"]: "renderTriggered hook",
  [0]: "setup function",
  [1]: "render function",
  [2]: "watcher getter",
  [3]: "watcher callback",
  [4]: "watcher cleanup function",
  [5]: "native event handler",
  [6]: "component event handler",
  [7]: "vnode hook",
  [8]: "directive hook",
  [9]: "transition hook",
  [10]: "app errorHandler",
  [11]: "app warnHandler",
  [12]: "ref function",
  [13]: "async component loader",
  [14]: "scheduler flush",
  [15]: "component update",
  [16]: "app unmount cleanup function"
};
function callWithErrorHandling(fn, instance, type, args) {
  try {
    return args ? fn(...args) : fn();
  } catch (err) {
    handleError(err, instance, type);
  }
}
function callWithAsyncErrorHandling(fn, instance, type, args) {
  if (isFunction$1(fn)) {
    const res = callWithErrorHandling(fn, instance, type, args);
    if (res && isPromise(res)) {
      res.catch((err) => {
        handleError(err, instance, type);
      });
    }
    return res;
  }
  if (isArray$3(fn)) {
    const values = [];
    for (let i2 = 0; i2 < fn.length; i2++) {
      values.push(callWithAsyncErrorHandling(fn[i2], instance, type, args));
    }
    return values;
  } else {
    warn$1(
      `Invalid value type passed to callWithAsyncErrorHandling(): ${typeof fn}`
    );
  }
}
function handleError(err, instance, type, throwInDev = true) {
  const contextVNode = instance ? instance.vnode : null;
  const { errorHandler, throwUnhandledErrorInProduction } = instance && instance.appContext.config || EMPTY_OBJ;
  if (instance) {
    let cur = instance.parent;
    const exposedInstance = instance.proxy;
    const errorInfo = ErrorTypeStrings$1[type];
    while (cur) {
      const errorCapturedHooks = cur.ec;
      if (errorCapturedHooks) {
        for (let i2 = 0; i2 < errorCapturedHooks.length; i2++) {
          if (errorCapturedHooks[i2](err, exposedInstance, errorInfo) === false) {
            return;
          }
        }
      }
      cur = cur.parent;
    }
    if (errorHandler) {
      pauseTracking();
      callWithErrorHandling(errorHandler, null, 10, [
        err,
        exposedInstance,
        errorInfo
      ]);
      resetTracking();
      return;
    }
  }
  logError(err, type, contextVNode, throwInDev, throwUnhandledErrorInProduction);
}
function logError(err, type, contextVNode, throwInDev = true, throwInProd = false) {
  {
    const info = ErrorTypeStrings$1[type];
    if (contextVNode) {
      pushWarningContext(contextVNode);
    }
    warn$1(`Unhandled error${info ? ` during execution of ${info}` : ``}`);
    if (contextVNode) {
      popWarningContext();
    }
    if (throwInDev) {
      throw err;
    } else {
      console.error(err);
    }
  }
}
const queue$1 = [];
let flushIndex = -1;
const pendingPostFlushCbs = [];
let activePostFlushCbs = null;
let postFlushIndex = 0;
const resolvedPromise = /* @__PURE__ */ Promise.resolve();
let currentFlushPromise = null;
const RECURSION_LIMIT = 100;
function nextTick(fn) {
  const p2 = currentFlushPromise || resolvedPromise;
  return fn ? p2.then(this ? fn.bind(this) : fn) : p2;
}
function findInsertionIndex$1(id) {
  let start = flushIndex + 1;
  let end = queue$1.length;
  while (start < end) {
    const middle = start + end >>> 1;
    const middleJob = queue$1[middle];
    const middleJobId = getId(middleJob);
    if (middleJobId < id || middleJobId === id && middleJob.flags & 2) {
      start = middle + 1;
    } else {
      end = middle;
    }
  }
  return start;
}
function queueJob(job) {
  if (!(job.flags & 1)) {
    const jobId = getId(job);
    const lastJob = queue$1[queue$1.length - 1];
    if (!lastJob || // fast path when the job id is larger than the tail
    !(job.flags & 2) && jobId >= getId(lastJob)) {
      queue$1.push(job);
    } else {
      queue$1.splice(findInsertionIndex$1(jobId), 0, job);
    }
    job.flags |= 1;
    queueFlush();
  }
}
function queueFlush() {
  if (!currentFlushPromise) {
    currentFlushPromise = resolvedPromise.then(flushJobs);
  }
}
function queuePostFlushCb(cb) {
  if (!isArray$3(cb)) {
    if (activePostFlushCbs && cb.id === -1) {
      activePostFlushCbs.splice(postFlushIndex + 1, 0, cb);
    } else if (!(cb.flags & 1)) {
      pendingPostFlushCbs.push(cb);
      cb.flags |= 1;
    }
  } else {
    pendingPostFlushCbs.push(...cb);
  }
  queueFlush();
}
function flushPreFlushCbs(instance, seen2, i2 = flushIndex + 1) {
  {
    seen2 = seen2 || /* @__PURE__ */ new Map();
  }
  for (; i2 < queue$1.length; i2++) {
    const cb = queue$1[i2];
    if (cb && cb.flags & 2) {
      if (instance && cb.id !== instance.uid) {
        continue;
      }
      if (checkRecursiveUpdates(seen2, cb)) {
        continue;
      }
      queue$1.splice(i2, 1);
      i2--;
      if (cb.flags & 4) {
        cb.flags &= ~1;
      }
      cb();
      if (!(cb.flags & 4)) {
        cb.flags &= ~1;
      }
    }
  }
}
function flushPostFlushCbs(seen2) {
  if (pendingPostFlushCbs.length) {
    const deduped = [...new Set(pendingPostFlushCbs)].sort(
      (a2, b) => getId(a2) - getId(b)
    );
    pendingPostFlushCbs.length = 0;
    if (activePostFlushCbs) {
      activePostFlushCbs.push(...deduped);
      return;
    }
    activePostFlushCbs = deduped;
    {
      seen2 = seen2 || /* @__PURE__ */ new Map();
    }
    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {
      const cb = activePostFlushCbs[postFlushIndex];
      if (checkRecursiveUpdates(seen2, cb)) {
        continue;
      }
      if (cb.flags & 4) {
        cb.flags &= ~1;
      }
      if (!(cb.flags & 8)) cb();
      cb.flags &= ~1;
    }
    activePostFlushCbs = null;
    postFlushIndex = 0;
  }
}
const getId = (job) => job.id == null ? job.flags & 2 ? -1 : Infinity : job.id;
function flushJobs(seen2) {
  {
    seen2 = seen2 || /* @__PURE__ */ new Map();
  }
  const check = (job) => checkRecursiveUpdates(seen2, job);
  try {
    for (flushIndex = 0; flushIndex < queue$1.length; flushIndex++) {
      const job = queue$1[flushIndex];
      if (job && !(job.flags & 8)) {
        if (check(job)) {
          continue;
        }
        if (job.flags & 4) {
          job.flags &= ~1;
        }
        callWithErrorHandling(
          job,
          job.i,
          job.i ? 15 : 14
        );
        if (!(job.flags & 4)) {
          job.flags &= ~1;
        }
      }
    }
  } finally {
    for (; flushIndex < queue$1.length; flushIndex++) {
      const job = queue$1[flushIndex];
      if (job) {
        job.flags &= ~1;
      }
    }
    flushIndex = -1;
    queue$1.length = 0;
    flushPostFlushCbs(seen2);
    currentFlushPromise = null;
    if (queue$1.length || pendingPostFlushCbs.length) {
      flushJobs(seen2);
    }
  }
}
function checkRecursiveUpdates(seen2, fn) {
  const count = seen2.get(fn) || 0;
  if (count > RECURSION_LIMIT) {
    const instance = fn.i;
    const componentName = instance && getComponentName(instance.type);
    handleError(
      `Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`,
      null,
      10
    );
    return true;
  }
  seen2.set(fn, count + 1);
  return false;
}
let isHmrUpdating = false;
const hmrDirtyComponents = /* @__PURE__ */ new Map();
{
  getGlobalThis().__VUE_HMR_RUNTIME__ = {
    createRecord: tryWrap(createRecord),
    rerender: tryWrap(rerender),
    reload: tryWrap(reload)
  };
}
const map = /* @__PURE__ */ new Map();
function registerHMR(instance) {
  const id = instance.type.__hmrId;
  let record = map.get(id);
  if (!record) {
    createRecord(id, instance.type);
    record = map.get(id);
  }
  record.instances.add(instance);
}
function unregisterHMR(instance) {
  map.get(instance.type.__hmrId).instances.delete(instance);
}
function createRecord(id, initialDef) {
  if (map.has(id)) {
    return false;
  }
  map.set(id, {
    initialDef: normalizeClassComponent(initialDef),
    instances: /* @__PURE__ */ new Set()
  });
  return true;
}
function normalizeClassComponent(component) {
  return isClassComponent(component) ? component.__vccOpts : component;
}
function rerender(id, newRender) {
  const record = map.get(id);
  if (!record) {
    return;
  }
  record.initialDef.render = newRender;
  [...record.instances].forEach((instance) => {
    if (newRender) {
      instance.render = newRender;
      normalizeClassComponent(instance.type).render = newRender;
    }
    instance.renderCache = [];
    isHmrUpdating = true;
    instance.update();
    isHmrUpdating = false;
  });
}
function reload(id, newComp) {
  const record = map.get(id);
  if (!record) return;
  newComp = normalizeClassComponent(newComp);
  updateComponentDef(record.initialDef, newComp);
  const instances = [...record.instances];
  for (let i2 = 0; i2 < instances.length; i2++) {
    const instance = instances[i2];
    const oldComp = normalizeClassComponent(instance.type);
    let dirtyInstances = hmrDirtyComponents.get(oldComp);
    if (!dirtyInstances) {
      if (oldComp !== record.initialDef) {
        updateComponentDef(oldComp, newComp);
      }
      hmrDirtyComponents.set(oldComp, dirtyInstances = /* @__PURE__ */ new Set());
    }
    dirtyInstances.add(instance);
    instance.appContext.propsCache.delete(instance.type);
    instance.appContext.emitsCache.delete(instance.type);
    instance.appContext.optionsCache.delete(instance.type);
    if (instance.ceReload) {
      dirtyInstances.add(instance);
      instance.ceReload(newComp.styles);
      dirtyInstances.delete(instance);
    } else if (instance.parent) {
      queueJob(() => {
        isHmrUpdating = true;
        instance.parent.update();
        isHmrUpdating = false;
        dirtyInstances.delete(instance);
      });
    } else if (instance.appContext.reload) {
      instance.appContext.reload();
    } else if (typeof window !== "undefined") {
      window.location.reload();
    } else {
      console.warn(
        "[HMR] Root or manually mounted instance modified. Full reload required."
      );
    }
    if (instance.root.ce && instance !== instance.root) {
      instance.root.ce._removeChildStyle(oldComp);
    }
  }
  queuePostFlushCb(() => {
    hmrDirtyComponents.clear();
  });
}
function updateComponentDef(oldComp, newComp) {
  extend(oldComp, newComp);
  for (const key in oldComp) {
    if (key !== "__file" && !(key in newComp)) {
      delete oldComp[key];
    }
  }
}
function tryWrap(fn) {
  return (id, arg) => {
    try {
      return fn(id, arg);
    } catch (e2) {
      console.error(e2);
      console.warn(
        `[HMR] Something went wrong during Vue component hot-reload. Full reload required.`
      );
    }
  };
}
let devtools$1;
let buffer = [];
let devtoolsNotInstalled = false;
function emit$1(event, ...args) {
  if (devtools$1) {
    devtools$1.emit(event, ...args);
  } else if (!devtoolsNotInstalled) {
    buffer.push({ event, args });
  }
}
function setDevtoolsHook$1(hook2, target2) {
  var _a25, _b25;
  devtools$1 = hook2;
  if (devtools$1) {
    devtools$1.enabled = true;
    buffer.forEach(({ event, args }) => devtools$1.emit(event, ...args));
    buffer = [];
  } else if (
    // handle late devtools injection - only do this if we are in an actual
    // browser environment to avoid the timer handle stalling test runner exit
    // (#4815)
    typeof window !== "undefined" && // some envs mock window but not fully
    window.HTMLElement && // also exclude jsdom
    // eslint-disable-next-line no-restricted-syntax
    !((_b25 = (_a25 = window.navigator) == null ? void 0 : _a25.userAgent) == null ? void 0 : _b25.includes("jsdom"))
  ) {
    const replay = target2.__VUE_DEVTOOLS_HOOK_REPLAY__ = target2.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];
    replay.push((newHook) => {
      setDevtoolsHook$1(newHook, target2);
    });
    setTimeout(() => {
      if (!devtools$1) {
        target2.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;
        devtoolsNotInstalled = true;
        buffer = [];
      }
    }, 3e3);
  } else {
    devtoolsNotInstalled = true;
    buffer = [];
  }
}
function devtoolsInitApp(app, version2) {
  emit$1("app:init", app, version2, {
    Fragment: Fragment$1,
    Text,
    Comment,
    Static
  });
}
function devtoolsUnmountApp(app) {
  emit$1("app:unmount", app);
}
const devtoolsComponentAdded = /* @__PURE__ */ createDevtoolsComponentHook(
  "component:added"
  /* COMPONENT_ADDED */
);
const devtoolsComponentUpdated = /* @__PURE__ */ createDevtoolsComponentHook(
  "component:updated"
  /* COMPONENT_UPDATED */
);
const _devtoolsComponentRemoved = /* @__PURE__ */ createDevtoolsComponentHook(
  "component:removed"
  /* COMPONENT_REMOVED */
);
const devtoolsComponentRemoved = (component) => {
  if (devtools$1 && typeof devtools$1.cleanupBuffer === "function" && // remove the component if it wasn't buffered
  !devtools$1.cleanupBuffer(component)) {
    _devtoolsComponentRemoved(component);
  }
};
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function createDevtoolsComponentHook(hook2) {
  return (component) => {
    emit$1(
      hook2,
      component.appContext.app,
      component.uid,
      component.parent ? component.parent.uid : void 0,
      component
    );
  };
}
const devtoolsPerfStart = /* @__PURE__ */ createDevtoolsPerformanceHook(
  "perf:start"
  /* PERFORMANCE_START */
);
const devtoolsPerfEnd = /* @__PURE__ */ createDevtoolsPerformanceHook(
  "perf:end"
  /* PERFORMANCE_END */
);
function createDevtoolsPerformanceHook(hook2) {
  return (component, type, time) => {
    emit$1(hook2, component.appContext.app, component.uid, component, type, time);
  };
}
function devtoolsComponentEmit(component, event, params) {
  emit$1(
    "component:emit",
    component.appContext.app,
    component,
    event,
    params
  );
}
let currentRenderingInstance = null;
let currentScopeId = null;
function setCurrentRenderingInstance(instance) {
  const prev = currentRenderingInstance;
  currentRenderingInstance = instance;
  currentScopeId = instance && instance.type.__scopeId || null;
  return prev;
}
function withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot) {
  if (!ctx) return fn;
  if (fn._n) {
    return fn;
  }
  const renderFnWithContext = (...args) => {
    if (renderFnWithContext._d) {
      setBlockTracking(-1);
    }
    const prevInstance = setCurrentRenderingInstance(ctx);
    let res;
    try {
      res = fn(...args);
    } finally {
      setCurrentRenderingInstance(prevInstance);
      if (renderFnWithContext._d) {
        setBlockTracking(1);
      }
    }
    {
      devtoolsComponentUpdated(ctx);
    }
    return res;
  };
  renderFnWithContext._n = true;
  renderFnWithContext._c = true;
  renderFnWithContext._d = true;
  return renderFnWithContext;
}
function validateDirectiveName(name) {
  if (isBuiltInDirective(name)) {
    warn$1("Do not use built-in directive ids as custom directive id: " + name);
  }
}
function withDirectives(vnode, directives) {
  if (currentRenderingInstance === null) {
    warn$1(`withDirectives can only be used inside render functions.`);
    return vnode;
  }
  const instance = getComponentPublicInstance(currentRenderingInstance);
  const bindings = vnode.dirs || (vnode.dirs = []);
  for (let i2 = 0; i2 < directives.length; i2++) {
    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i2];
    if (dir) {
      if (isFunction$1(dir)) {
        dir = {
          mounted: dir,
          updated: dir
        };
      }
      if (dir.deep) {
        traverse$1(value);
      }
      bindings.push({
        dir,
        instance,
        value,
        oldValue: void 0,
        arg,
        modifiers
      });
    }
  }
  return vnode;
}
function invokeDirectiveHook(vnode, prevVNode, instance, name) {
  const bindings = vnode.dirs;
  const oldBindings = prevVNode && prevVNode.dirs;
  for (let i2 = 0; i2 < bindings.length; i2++) {
    const binding = bindings[i2];
    if (oldBindings) {
      binding.oldValue = oldBindings[i2].value;
    }
    let hook2 = binding.dir[name];
    if (hook2) {
      pauseTracking();
      callWithAsyncErrorHandling(hook2, instance, 8, [
        vnode.el,
        binding,
        vnode,
        prevVNode
      ]);
      resetTracking();
    }
  }
}
const TeleportEndKey = Symbol("_vte");
const isTeleport = (type) => type.__isTeleport;
const leaveCbKey = Symbol("_leaveCb");
const enterCbKey$1 = Symbol("_enterCb");
function useTransitionState() {
  const state = {
    isMounted: false,
    isLeaving: false,
    isUnmounting: false,
    leavingVNodes: /* @__PURE__ */ new Map()
  };
  onMounted(() => {
    state.isMounted = true;
  });
  onBeforeUnmount(() => {
    state.isUnmounting = true;
  });
  return state;
}
const TransitionHookValidator = [Function, Array];
const BaseTransitionPropsValidators = {
  mode: String,
  appear: Boolean,
  persisted: Boolean,
  // enter
  onBeforeEnter: TransitionHookValidator,
  onEnter: TransitionHookValidator,
  onAfterEnter: TransitionHookValidator,
  onEnterCancelled: TransitionHookValidator,
  // leave
  onBeforeLeave: TransitionHookValidator,
  onLeave: TransitionHookValidator,
  onAfterLeave: TransitionHookValidator,
  onLeaveCancelled: TransitionHookValidator,
  // appear
  onBeforeAppear: TransitionHookValidator,
  onAppear: TransitionHookValidator,
  onAfterAppear: TransitionHookValidator,
  onAppearCancelled: TransitionHookValidator
};
const recursiveGetSubtree = (instance) => {
  const subTree = instance.subTree;
  return subTree.component ? recursiveGetSubtree(subTree.component) : subTree;
};
const BaseTransitionImpl = {
  name: `BaseTransition`,
  props: BaseTransitionPropsValidators,
  setup(props, { slots }) {
    const instance = getCurrentInstance();
    const state = useTransitionState();
    return () => {
      const children = slots.default && getTransitionRawChildren(slots.default(), true);
      if (!children || !children.length) {
        return;
      }
      const child = findNonCommentChild(children);
      const rawProps = toRaw$1(props);
      const { mode } = rawProps;
      if (mode && mode !== "in-out" && mode !== "out-in" && mode !== "default") {
        warn$1(`invalid <transition> mode: ${mode}`);
      }
      if (state.isLeaving) {
        return emptyPlaceholder(child);
      }
      const innerChild = getInnerChild$1(child);
      if (!innerChild) {
        return emptyPlaceholder(child);
      }
      let enterHooks = resolveTransitionHooks(
        innerChild,
        rawProps,
        state,
        instance,
        // #11061, ensure enterHooks is fresh after clone
        (hooks2) => enterHooks = hooks2
      );
      if (innerChild.type !== Comment) {
        setTransitionHooks(innerChild, enterHooks);
      }
      const oldChild = instance.subTree;
      const oldInnerChild = oldChild && getInnerChild$1(oldChild);
      if (oldInnerChild && oldInnerChild.type !== Comment && !isSameVNodeType(innerChild, oldInnerChild) && recursiveGetSubtree(instance).type !== Comment) {
        const leavingHooks = resolveTransitionHooks(
          oldInnerChild,
          rawProps,
          state,
          instance
        );
        setTransitionHooks(oldInnerChild, leavingHooks);
        if (mode === "out-in" && innerChild.type !== Comment) {
          state.isLeaving = true;
          leavingHooks.afterLeave = () => {
            state.isLeaving = false;
            if (!(instance.job.flags & 8)) {
              instance.update();
            }
            delete leavingHooks.afterLeave;
          };
          return emptyPlaceholder(child);
        } else if (mode === "in-out" && innerChild.type !== Comment) {
          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {
            const leavingVNodesCache = getLeavingNodesForType(
              state,
              oldInnerChild
            );
            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;
            el[leaveCbKey] = () => {
              earlyRemove();
              el[leaveCbKey] = void 0;
              delete enterHooks.delayedLeave;
            };
            enterHooks.delayedLeave = delayedLeave;
          };
        }
      }
      return child;
    };
  }
};
function findNonCommentChild(children) {
  let child = children[0];
  if (children.length > 1) {
    let hasFound = false;
    for (const c of children) {
      if (c.type !== Comment) {
        if (hasFound) {
          warn$1(
            "<transition> can only be used on a single element or component. Use <transition-group> for lists."
          );
          break;
        }
        child = c;
        hasFound = true;
      }
    }
  }
  return child;
}
const BaseTransition = BaseTransitionImpl;
function getLeavingNodesForType(state, vnode) {
  const { leavingVNodes } = state;
  let leavingVNodesCache = leavingVNodes.get(vnode.type);
  if (!leavingVNodesCache) {
    leavingVNodesCache = /* @__PURE__ */ Object.create(null);
    leavingVNodes.set(vnode.type, leavingVNodesCache);
  }
  return leavingVNodesCache;
}
function resolveTransitionHooks(vnode, props, state, instance, postClone) {
  const {
    appear,
    mode,
    persisted = false,
    onBeforeEnter,
    onEnter,
    onAfterEnter,
    onEnterCancelled,
    onBeforeLeave,
    onLeave,
    onAfterLeave,
    onLeaveCancelled,
    onBeforeAppear,
    onAppear,
    onAfterAppear,
    onAppearCancelled
  } = props;
  const key = String(vnode.key);
  const leavingVNodesCache = getLeavingNodesForType(state, vnode);
  const callHook2 = (hook2, args) => {
    hook2 && callWithAsyncErrorHandling(
      hook2,
      instance,
      9,
      args
    );
  };
  const callAsyncHook = (hook2, args) => {
    const done = args[1];
    callHook2(hook2, args);
    if (isArray$3(hook2)) {
      if (hook2.every((hook22) => hook22.length <= 1)) done();
    } else if (hook2.length <= 1) {
      done();
    }
  };
  const hooks2 = {
    mode,
    persisted,
    beforeEnter(el) {
      let hook2 = onBeforeEnter;
      if (!state.isMounted) {
        if (appear) {
          hook2 = onBeforeAppear || onBeforeEnter;
        } else {
          return;
        }
      }
      if (el[leaveCbKey]) {
        el[leaveCbKey](
          true
          /* cancelled */
        );
      }
      const leavingVNode = leavingVNodesCache[key];
      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el[leaveCbKey]) {
        leavingVNode.el[leaveCbKey]();
      }
      callHook2(hook2, [el]);
    },
    enter(el) {
      let hook2 = onEnter;
      let afterHook = onAfterEnter;
      let cancelHook = onEnterCancelled;
      if (!state.isMounted) {
        if (appear) {
          hook2 = onAppear || onEnter;
          afterHook = onAfterAppear || onAfterEnter;
          cancelHook = onAppearCancelled || onEnterCancelled;
        } else {
          return;
        }
      }
      let called = false;
      const done = el[enterCbKey$1] = (cancelled) => {
        if (called) return;
        called = true;
        if (cancelled) {
          callHook2(cancelHook, [el]);
        } else {
          callHook2(afterHook, [el]);
        }
        if (hooks2.delayedLeave) {
          hooks2.delayedLeave();
        }
        el[enterCbKey$1] = void 0;
      };
      if (hook2) {
        callAsyncHook(hook2, [el, done]);
      } else {
        done();
      }
    },
    leave(el, remove2) {
      const key2 = String(vnode.key);
      if (el[enterCbKey$1]) {
        el[enterCbKey$1](
          true
          /* cancelled */
        );
      }
      if (state.isUnmounting) {
        return remove2();
      }
      callHook2(onBeforeLeave, [el]);
      let called = false;
      const done = el[leaveCbKey] = (cancelled) => {
        if (called) return;
        called = true;
        remove2();
        if (cancelled) {
          callHook2(onLeaveCancelled, [el]);
        } else {
          callHook2(onAfterLeave, [el]);
        }
        el[leaveCbKey] = void 0;
        if (leavingVNodesCache[key2] === vnode) {
          delete leavingVNodesCache[key2];
        }
      };
      leavingVNodesCache[key2] = vnode;
      if (onLeave) {
        callAsyncHook(onLeave, [el, done]);
      } else {
        done();
      }
    },
    clone(vnode2) {
      const hooks22 = resolveTransitionHooks(
        vnode2,
        props,
        state,
        instance,
        postClone
      );
      if (postClone) postClone(hooks22);
      return hooks22;
    }
  };
  return hooks2;
}
function emptyPlaceholder(vnode) {
  if (isKeepAlive(vnode)) {
    vnode = cloneVNode(vnode);
    vnode.children = null;
    return vnode;
  }
}
function getInnerChild$1(vnode) {
  if (!isKeepAlive(vnode)) {
    if (isTeleport(vnode.type) && vnode.children) {
      return findNonCommentChild(vnode.children);
    }
    return vnode;
  }
  if (vnode.component) {
    return vnode.component.subTree;
  }
  const { shapeFlag, children } = vnode;
  if (children) {
    if (shapeFlag & 16) {
      return children[0];
    }
    if (shapeFlag & 32 && isFunction$1(children.default)) {
      return children.default();
    }
  }
}
function setTransitionHooks(vnode, hooks2) {
  if (vnode.shapeFlag & 6 && vnode.component) {
    vnode.transition = hooks2;
    setTransitionHooks(vnode.component.subTree, hooks2);
  } else if (vnode.shapeFlag & 128) {
    vnode.ssContent.transition = hooks2.clone(vnode.ssContent);
    vnode.ssFallback.transition = hooks2.clone(vnode.ssFallback);
  } else {
    vnode.transition = hooks2;
  }
}
function getTransitionRawChildren(children, keepComment = false, parentKey) {
  let ret = [];
  let keyedFragmentCount = 0;
  for (let i2 = 0; i2 < children.length; i2++) {
    let child = children[i2];
    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i2);
    if (child.type === Fragment$1) {
      if (child.patchFlag & 128) keyedFragmentCount++;
      ret = ret.concat(
        getTransitionRawChildren(child.children, keepComment, key)
      );
    } else if (keepComment || child.type !== Comment) {
      ret.push(key != null ? cloneVNode(child, { key }) : child);
    }
  }
  if (keyedFragmentCount > 1) {
    for (let i2 = 0; i2 < ret.length; i2++) {
      ret[i2].patchFlag = -2;
    }
  }
  return ret;
}
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function defineComponent(options, extraOptions) {
  return isFunction$1(options) ? (
    // #8236: extend call and options.name access are considered side-effects
    // by Rollup, so we have to wrap it in a pure-annotated IIFE.
    /* @__PURE__ */ (() => extend({ name: options.name }, extraOptions, { setup: options }))()
  ) : options;
}
function markAsyncBoundary(instance) {
  instance.ids = [instance.ids[0] + instance.ids[2]++ + "-", 0, 0];
}
const knownTemplateRefs = /* @__PURE__ */ new WeakSet();
function setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {
  if (isArray$3(rawRef)) {
    rawRef.forEach(
      (r2, i2) => setRef(
        r2,
        oldRawRef && (isArray$3(oldRawRef) ? oldRawRef[i2] : oldRawRef),
        parentSuspense,
        vnode,
        isUnmount
      )
    );
    return;
  }
  if (isAsyncWrapper(vnode) && !isUnmount) {
    return;
  }
  const refValue = vnode.shapeFlag & 4 ? getComponentPublicInstance(vnode.component) : vnode.el;
  const value = isUnmount ? null : refValue;
  const { i: owner, r: ref3 } = rawRef;
  if (!owner) {
    warn$1(
      `Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.`
    );
    return;
  }
  const oldRef = oldRawRef && oldRawRef.r;
  const refs = owner.refs === EMPTY_OBJ ? owner.refs = {} : owner.refs;
  const setupState = owner.setupState;
  const rawSetupState = toRaw$1(setupState);
  const canSetSetupRef = setupState === EMPTY_OBJ ? () => false : (key) => {
    if (knownTemplateRefs.has(rawSetupState[key])) {
      return false;
    }
    return hasOwn(rawSetupState, key);
  };
  if (oldRef != null && oldRef !== ref3) {
    if (isString$3(oldRef)) {
      refs[oldRef] = null;
      if (canSetSetupRef(oldRef)) {
        setupState[oldRef] = null;
      }
    } else if (isRef$1(oldRef)) {
      oldRef.value = null;
    }
  }
  if (isFunction$1(ref3)) {
    callWithErrorHandling(ref3, owner, 12, [value, refs]);
  } else {
    const _isString = isString$3(ref3);
    const _isRef = isRef$1(ref3);
    if (_isString || _isRef) {
      const doSet = () => {
        if (rawRef.f) {
          const existing = _isString ? canSetSetupRef(ref3) ? setupState[ref3] : refs[ref3] : ref3.value;
          if (isUnmount) {
            isArray$3(existing) && remove(existing, refValue);
          } else {
            if (!isArray$3(existing)) {
              if (_isString) {
                refs[ref3] = [refValue];
                if (canSetSetupRef(ref3)) {
                  setupState[ref3] = refs[ref3];
                }
              } else {
                ref3.value = [refValue];
                if (rawRef.k) refs[rawRef.k] = ref3.value;
              }
            } else if (!existing.includes(refValue)) {
              existing.push(refValue);
            }
          }
        } else if (_isString) {
          refs[ref3] = value;
          if (canSetSetupRef(ref3)) {
            setupState[ref3] = value;
          }
        } else if (_isRef) {
          ref3.value = value;
          if (rawRef.k) refs[rawRef.k] = value;
        } else {
          warn$1("Invalid template ref type:", ref3, `(${typeof ref3})`);
        }
      };
      if (value) {
        doSet.id = -1;
        queuePostRenderEffect(doSet, parentSuspense);
      } else {
        doSet();
      }
    } else {
      warn$1("Invalid template ref type:", ref3, `(${typeof ref3})`);
    }
  }
}
let hasLoggedMismatchError = false;
const logMismatchError = () => {
  if (hasLoggedMismatchError) {
    return;
  }
  console.error("Hydration completed but contains mismatches.");
  hasLoggedMismatchError = true;
};
const isSVGContainer = (container) => container.namespaceURI.includes("svg") && container.tagName !== "foreignObject";
const isMathMLContainer = (container) => container.namespaceURI.includes("MathML");
const getContainerType = (container) => {
  if (container.nodeType !== 1) return void 0;
  if (isSVGContainer(container)) return "svg";
  if (isMathMLContainer(container)) return "mathml";
  return void 0;
};
const isComment = (node) => node.nodeType === 8;
function createHydrationFunctions(rendererInternals) {
  const {
    mt: mountComponent,
    p: patch,
    o: {
      patchProp: patchProp2,
      createText,
      nextSibling,
      parentNode,
      remove: remove2,
      insert,
      createComment
    }
  } = rendererInternals;
  const hydrate = (vnode, container) => {
    if (!container.hasChildNodes()) {
      warn$1(
        `Attempting to hydrate existing markup but container is empty. Performing full mount instead.`
      );
      patch(null, vnode, container);
      flushPostFlushCbs();
      container._vnode = vnode;
      return;
    }
    hydrateNode(container.firstChild, vnode, null, null, null);
    flushPostFlushCbs();
    container._vnode = vnode;
  };
  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {
    optimized = optimized || !!vnode.dynamicChildren;
    const isFragmentStart = isComment(node) && node.data === "[";
    const onMismatch = () => handleMismatch(
      node,
      vnode,
      parentComponent,
      parentSuspense,
      slotScopeIds,
      isFragmentStart
    );
    const { type, ref: ref3, shapeFlag, patchFlag } = vnode;
    let domType = node.nodeType;
    vnode.el = node;
    {
      def(node, "__vnode", vnode, true);
      def(node, "__vueParentComponent", parentComponent, true);
    }
    if (patchFlag === -2) {
      optimized = false;
      vnode.dynamicChildren = null;
    }
    let nextNode = null;
    switch (type) {
      case Text:
        if (domType !== 3) {
          if (vnode.children === "") {
            insert(vnode.el = createText(""), parentNode(node), node);
            nextNode = node;
          } else {
            nextNode = onMismatch();
          }
        } else {
          if (node.data !== vnode.children) {
            warn$1(
              `Hydration text mismatch in`,
              node.parentNode,
              `
  - rendered on server: ${JSON.stringify(
                node.data
              )}
  - expected on client: ${JSON.stringify(vnode.children)}`
            );
            logMismatchError();
            node.data = vnode.children;
          }
          nextNode = nextSibling(node);
        }
        break;
      case Comment:
        if (isTemplateNode(node)) {
          nextNode = nextSibling(node);
          replaceNode(
            vnode.el = node.content.firstChild,
            node,
            parentComponent
          );
        } else if (domType !== 8 || isFragmentStart) {
          nextNode = onMismatch();
        } else {
          nextNode = nextSibling(node);
        }
        break;
      case Static:
        if (isFragmentStart) {
          node = nextSibling(node);
          domType = node.nodeType;
        }
        if (domType === 1 || domType === 3) {
          nextNode = node;
          const needToAdoptContent = !vnode.children.length;
          for (let i2 = 0; i2 < vnode.staticCount; i2++) {
            if (needToAdoptContent)
              vnode.children += nextNode.nodeType === 1 ? nextNode.outerHTML : nextNode.data;
            if (i2 === vnode.staticCount - 1) {
              vnode.anchor = nextNode;
            }
            nextNode = nextSibling(nextNode);
          }
          return isFragmentStart ? nextSibling(nextNode) : nextNode;
        } else {
          onMismatch();
        }
        break;
      case Fragment$1:
        if (!isFragmentStart) {
          nextNode = onMismatch();
        } else {
          nextNode = hydrateFragment(
            node,
            vnode,
            parentComponent,
            parentSuspense,
            slotScopeIds,
            optimized
          );
        }
        break;
      default:
        if (shapeFlag & 1) {
          if ((domType !== 1 || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) && !isTemplateNode(node)) {
            nextNode = onMismatch();
          } else {
            nextNode = hydrateElement(
              node,
              vnode,
              parentComponent,
              parentSuspense,
              slotScopeIds,
              optimized
            );
          }
        } else if (shapeFlag & 6) {
          vnode.slotScopeIds = slotScopeIds;
          const container = parentNode(node);
          if (isFragmentStart) {
            nextNode = locateClosingAnchor(node);
          } else if (isComment(node) && node.data === "teleport start") {
            nextNode = locateClosingAnchor(node, node.data, "teleport end");
          } else {
            nextNode = nextSibling(node);
          }
          mountComponent(
            vnode,
            container,
            null,
            parentComponent,
            parentSuspense,
            getContainerType(container),
            optimized
          );
          if (isAsyncWrapper(vnode)) {
            let subTree;
            if (isFragmentStart) {
              subTree = createVNode(Fragment$1);
              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;
            } else {
              subTree = node.nodeType === 3 ? createTextVNode("") : createVNode("div");
            }
            subTree.el = node;
            vnode.component.subTree = subTree;
          }
        } else if (shapeFlag & 64) {
          if (domType !== 8) {
            nextNode = onMismatch();
          } else {
            nextNode = vnode.type.hydrate(
              node,
              vnode,
              parentComponent,
              parentSuspense,
              slotScopeIds,
              optimized,
              rendererInternals,
              hydrateChildren
            );
          }
        } else if (shapeFlag & 128) {
          nextNode = vnode.type.hydrate(
            node,
            vnode,
            parentComponent,
            parentSuspense,
            getContainerType(parentNode(node)),
            slotScopeIds,
            optimized,
            rendererInternals,
            hydrateNode
          );
        } else {
          warn$1("Invalid HostVNode type:", type, `(${typeof type})`);
        }
    }
    if (ref3 != null) {
      setRef(ref3, null, parentSuspense, vnode);
    }
    return nextNode;
  };
  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {
    optimized = optimized || !!vnode.dynamicChildren;
    const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode;
    const forcePatch = type === "input" || type === "option";
    {
      if (dirs) {
        invokeDirectiveHook(vnode, null, parentComponent, "created");
      }
      let needCallTransitionHooks = false;
      if (isTemplateNode(el)) {
        needCallTransitionHooks = needTransition(parentSuspense, transition) && parentComponent && parentComponent.vnode.props && parentComponent.vnode.props.appear;
        const content = el.content.firstChild;
        if (needCallTransitionHooks) {
          transition.beforeEnter(content);
        }
        replaceNode(content, el, parentComponent);
        vnode.el = el = content;
      }
      if (shapeFlag & 16 && // skip if element has innerHTML / textContent
      !(props && (props.innerHTML || props.textContent))) {
        let next = hydrateChildren(
          el.firstChild,
          vnode,
          el,
          parentComponent,
          parentSuspense,
          slotScopeIds,
          optimized
        );
        let hasWarned2 = false;
        while (next) {
          if (!isMismatchAllowed(
            el,
            1
            /* CHILDREN */
          )) {
            if (!hasWarned2) {
              warn$1(
                `Hydration children mismatch on`,
                el,
                `
Server rendered element contains more child nodes than client vdom.`
              );
              hasWarned2 = true;
            }
            logMismatchError();
          }
          const cur = next;
          next = next.nextSibling;
          remove2(cur);
        }
      } else if (shapeFlag & 8) {
        let clientText = vnode.children;
        if (clientText[0] === "\n" && (el.tagName === "PRE" || el.tagName === "TEXTAREA")) {
          clientText = clientText.slice(1);
        }
        if (el.textContent !== clientText) {
          if (!isMismatchAllowed(
            el,
            0
            /* TEXT */
          )) {
            warn$1(
              `Hydration text content mismatch on`,
              el,
              `
  - rendered on server: ${el.textContent}
  - expected on client: ${vnode.children}`
            );
            logMismatchError();
          }
          el.textContent = vnode.children;
        }
      }
      if (props) {
        {
          const isCustomElement = el.tagName.includes("-");
          for (const key in props) {
            if (
              // #11189 skip if this node has directives that have created hooks
              // as it could have mutated the DOM in any possible way
              !(dirs && dirs.some((d2) => d2.dir.created)) && propHasMismatch(el, key, props[key], vnode, parentComponent)
            ) {
              logMismatchError();
            }
            if (forcePatch && (key.endsWith("value") || key === "indeterminate") || isOn(key) && !isReservedProp(key) || // force hydrate v-bind with .prop modifiers
            key[0] === "." || isCustomElement) {
              patchProp2(el, key, null, props[key], void 0, parentComponent);
            }
          }
        }
      }
      let vnodeHooks;
      if (vnodeHooks = props && props.onVnodeBeforeMount) {
        invokeVNodeHook(vnodeHooks, parentComponent, vnode);
      }
      if (dirs) {
        invokeDirectiveHook(vnode, null, parentComponent, "beforeMount");
      }
      if ((vnodeHooks = props && props.onVnodeMounted) || dirs || needCallTransitionHooks) {
        queueEffectWithSuspense(() => {
          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);
          needCallTransitionHooks && transition.enter(el);
          dirs && invokeDirectiveHook(vnode, null, parentComponent, "mounted");
        }, parentSuspense);
      }
    }
    return el.nextSibling;
  };
  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {
    optimized = optimized || !!parentVNode.dynamicChildren;
    const children = parentVNode.children;
    const l2 = children.length;
    let hasWarned2 = false;
    for (let i2 = 0; i2 < l2; i2++) {
      const vnode = optimized ? children[i2] : children[i2] = normalizeVNode(children[i2]);
      const isText = vnode.type === Text;
      if (node) {
        if (isText && !optimized) {
          if (i2 + 1 < l2 && normalizeVNode(children[i2 + 1]).type === Text) {
            insert(
              createText(
                node.data.slice(vnode.children.length)
              ),
              container,
              nextSibling(node)
            );
            node.data = vnode.children;
          }
        }
        node = hydrateNode(
          node,
          vnode,
          parentComponent,
          parentSuspense,
          slotScopeIds,
          optimized
        );
      } else if (isText && !vnode.children) {
        insert(vnode.el = createText(""), container);
      } else {
        if (!isMismatchAllowed(
          container,
          1
          /* CHILDREN */
        )) {
          if (!hasWarned2) {
            warn$1(
              `Hydration children mismatch on`,
              container,
              `
Server rendered element contains fewer child nodes than client vdom.`
            );
            hasWarned2 = true;
          }
          logMismatchError();
        }
        patch(
          null,
          vnode,
          container,
          null,
          parentComponent,
          parentSuspense,
          getContainerType(container),
          slotScopeIds
        );
      }
    }
    return node;
  };
  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {
    const { slotScopeIds: fragmentSlotScopeIds } = vnode;
    if (fragmentSlotScopeIds) {
      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;
    }
    const container = parentNode(node);
    const next = hydrateChildren(
      nextSibling(node),
      vnode,
      container,
      parentComponent,
      parentSuspense,
      slotScopeIds,
      optimized
    );
    if (next && isComment(next) && next.data === "]") {
      return nextSibling(vnode.anchor = next);
    } else {
      logMismatchError();
      insert(vnode.anchor = createComment(`]`), container, next);
      return next;
    }
  };
  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment2) => {
    if (!isMismatchAllowed(
      node.parentElement,
      1
      /* CHILDREN */
    )) {
      warn$1(
        `Hydration node mismatch:
- rendered on server:`,
        node,
        node.nodeType === 3 ? `(text)` : isComment(node) && node.data === "[" ? `(start of fragment)` : ``,
        `
- expected on client:`,
        vnode.type
      );
      logMismatchError();
    }
    vnode.el = null;
    if (isFragment2) {
      const end = locateClosingAnchor(node);
      while (true) {
        const next2 = nextSibling(node);
        if (next2 && next2 !== end) {
          remove2(next2);
        } else {
          break;
        }
      }
    }
    const next = nextSibling(node);
    const container = parentNode(node);
    remove2(node);
    patch(
      null,
      vnode,
      container,
      next,
      parentComponent,
      parentSuspense,
      getContainerType(container),
      slotScopeIds
    );
    return next;
  };
  const locateClosingAnchor = (node, open = "[", close = "]") => {
    let match = 0;
    while (node) {
      node = nextSibling(node);
      if (node && isComment(node)) {
        if (node.data === open) match++;
        if (node.data === close) {
          if (match === 0) {
            return nextSibling(node);
          } else {
            match--;
          }
        }
      }
    }
    return node;
  };
  const replaceNode = (newNode, oldNode, parentComponent) => {
    const parentNode2 = oldNode.parentNode;
    if (parentNode2) {
      parentNode2.replaceChild(newNode, oldNode);
    }
    let parent = parentComponent;
    while (parent) {
      if (parent.vnode.el === oldNode) {
        parent.vnode.el = parent.subTree.el = newNode;
      }
      parent = parent.parent;
    }
  };
  const isTemplateNode = (node) => {
    return node.nodeType === 1 && node.tagName === "TEMPLATE";
  };
  return [hydrate, hydrateNode];
}
function propHasMismatch(el, key, clientValue, vnode, instance) {
  let mismatchType;
  let mismatchKey;
  let actual;
  let expected;
  if (key === "class") {
    actual = el.getAttribute("class");
    expected = normalizeClass(clientValue);
    if (!isSetEqual(toClassSet(actual || ""), toClassSet(expected))) {
      mismatchType = 2;
      mismatchKey = `class`;
    }
  } else if (key === "style") {
    actual = el.getAttribute("style") || "";
    expected = isString$3(clientValue) ? clientValue : stringifyStyle(normalizeStyle(clientValue));
    const actualMap = toStyleMap(actual);
    const expectedMap = toStyleMap(expected);
    if (vnode.dirs) {
      for (const { dir, value } of vnode.dirs) {
        if (dir.name === "show" && !value) {
          expectedMap.set("display", "none");
        }
      }
    }
    if (instance) {
      resolveCssVars(instance, vnode, expectedMap);
    }
    if (!isMapEqual(actualMap, expectedMap)) {
      mismatchType = 3;
      mismatchKey = "style";
    }
  } else if (el instanceof SVGElement && isKnownSvgAttr(key) || el instanceof HTMLElement && (isBooleanAttr(key) || isKnownHtmlAttr(key))) {
    if (isBooleanAttr(key)) {
      actual = el.hasAttribute(key);
      expected = includeBooleanAttr(clientValue);
    } else if (clientValue == null) {
      actual = el.hasAttribute(key);
      expected = false;
    } else {
      if (el.hasAttribute(key)) {
        actual = el.getAttribute(key);
      } else if (key === "value" && el.tagName === "TEXTAREA") {
        actual = el.value;
      } else {
        actual = false;
      }
      expected = isRenderableAttrValue(clientValue) ? String(clientValue) : false;
    }
    if (actual !== expected) {
      mismatchType = 4;
      mismatchKey = key;
    }
  }
  if (mismatchType != null && !isMismatchAllowed(el, mismatchType)) {
    const format = (v) => v === false ? `(not rendered)` : `${mismatchKey}="${v}"`;
    const preSegment = `Hydration ${MismatchTypeString[mismatchType]} mismatch on`;
    const postSegment = `
  - rendered on server: ${format(actual)}
  - expected on client: ${format(expected)}
  Note: this mismatch is check-only. The DOM will not be rectified in production due to performance overhead.
  You should fix the source of the mismatch.`;
    {
      warn$1(preSegment, el, postSegment);
    }
    return true;
  }
  return false;
}
function toClassSet(str) {
  return new Set(str.trim().split(/\s+/));
}
function isSetEqual(a2, b) {
  if (a2.size !== b.size) {
    return false;
  }
  for (const s2 of a2) {
    if (!b.has(s2)) {
      return false;
    }
  }
  return true;
}
function toStyleMap(str) {
  const styleMap = /* @__PURE__ */ new Map();
  for (const item of str.split(";")) {
    let [key, value] = item.split(":");
    key = key.trim();
    value = value && value.trim();
    if (key && value) {
      styleMap.set(key, value);
    }
  }
  return styleMap;
}
function isMapEqual(a2, b) {
  if (a2.size !== b.size) {
    return false;
  }
  for (const [key, value] of a2) {
    if (value !== b.get(key)) {
      return false;
    }
  }
  return true;
}
function resolveCssVars(instance, vnode, expectedMap) {
  const root = instance.subTree;
  if (instance.getCssVars && (vnode === root || root && root.type === Fragment$1 && root.children.includes(vnode))) {
    const cssVars = instance.getCssVars();
    for (const key in cssVars) {
      expectedMap.set(
        `--${getEscapedCssVarName(key)}`,
        String(cssVars[key])
      );
    }
  }
  if (vnode === root && instance.parent) {
    resolveCssVars(instance.parent, instance.vnode, expectedMap);
  }
}
const allowMismatchAttr = "data-allow-mismatch";
const MismatchTypeString = {
  [
    0
    /* TEXT */
  ]: "text",
  [
    1
    /* CHILDREN */
  ]: "children",
  [
    2
    /* CLASS */
  ]: "class",
  [
    3
    /* STYLE */
  ]: "style",
  [
    4
    /* ATTRIBUTE */
  ]: "attribute"
};
function isMismatchAllowed(el, allowedType) {
  if (allowedType === 0 || allowedType === 1) {
    while (el && !el.hasAttribute(allowMismatchAttr)) {
      el = el.parentElement;
    }
  }
  const allowedAttr = el && el.getAttribute(allowMismatchAttr);
  if (allowedAttr == null) {
    return false;
  } else if (allowedAttr === "") {
    return true;
  } else {
    const list = allowedAttr.split(",");
    if (allowedType === 0 && list.includes("children")) {
      return true;
    }
    return allowedAttr.split(",").includes(MismatchTypeString[allowedType]);
  }
}
function forEachElement(node, cb) {
  if (isComment(node) && node.data === "[") {
    let depth = 1;
    let next = node.nextSibling;
    while (next) {
      if (next.nodeType === 1) {
        const result = cb(next);
        if (result === false) {
          break;
        }
      } else if (isComment(next)) {
        if (next.data === "]") {
          if (--depth === 0) break;
        } else if (next.data === "[") {
          depth++;
        }
      }
      next = next.nextSibling;
    }
  } else {
    cb(node);
  }
}
const isAsyncWrapper = (i2) => !!i2.type.__asyncLoader;
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function defineAsyncComponent(source) {
  if (isFunction$1(source)) {
    source = { loader: source };
  }
  const {
    loader,
    loadingComponent,
    errorComponent,
    delay: delay2 = 200,
    hydrate: hydrateStrategy,
    timeout,
    // undefined = never times out
    suspensible = true,
    onError: userOnError
  } = source;
  let pendingRequest = null;
  let resolvedComp;
  let retries = 0;
  const retry = () => {
    retries++;
    pendingRequest = null;
    return load();
  };
  const load = () => {
    let thisRequest;
    return pendingRequest || (thisRequest = pendingRequest = loader().catch((err) => {
      err = err instanceof Error ? err : new Error(String(err));
      if (userOnError) {
        return new Promise((resolve2, reject) => {
          const userRetry = () => resolve2(retry());
          const userFail = () => reject(err);
          userOnError(err, userRetry, userFail, retries + 1);
        });
      } else {
        throw err;
      }
    }).then((comp) => {
      if (thisRequest !== pendingRequest && pendingRequest) {
        return pendingRequest;
      }
      if (!comp) {
        warn$1(
          `Async component loader resolved to undefined. If you are using retry(), make sure to return its return value.`
        );
      }
      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === "Module")) {
        comp = comp.default;
      }
      if (comp && !isObject$1(comp) && !isFunction$1(comp)) {
        throw new Error(`Invalid async component load result: ${comp}`);
      }
      resolvedComp = comp;
      return comp;
    }));
  };
  return /* @__PURE__ */ defineComponent({
    name: "AsyncComponentWrapper",
    __asyncLoader: load,
    __asyncHydrate(el, instance, hydrate) {
      const doHydrate = hydrateStrategy ? () => {
        const teardown = hydrateStrategy(
          hydrate,
          (cb) => forEachElement(el, cb)
        );
        if (teardown) {
          (instance.bum || (instance.bum = [])).push(teardown);
        }
      } : hydrate;
      if (resolvedComp) {
        doHydrate();
      } else {
        load().then(() => !instance.isUnmounted && doHydrate());
      }
    },
    get __asyncResolved() {
      return resolvedComp;
    },
    setup() {
      const instance = currentInstance;
      markAsyncBoundary(instance);
      if (resolvedComp) {
        return () => createInnerComp(resolvedComp, instance);
      }
      const onError = (err) => {
        pendingRequest = null;
        handleError(
          err,
          instance,
          13,
          !errorComponent
        );
      };
      if (suspensible && instance.suspense || isInSSRComponentSetup) {
        return load().then((comp) => {
          return () => createInnerComp(comp, instance);
        }).catch((err) => {
          onError(err);
          return () => errorComponent ? createVNode(errorComponent, {
            error: err
          }) : null;
        });
      }
      const loaded = ref(false);
      const error = ref();
      const delayed = ref(!!delay2);
      if (delay2) {
        setTimeout(() => {
          delayed.value = false;
        }, delay2);
      }
      if (timeout != null) {
        setTimeout(() => {
          if (!loaded.value && !error.value) {
            const err = new Error(
              `Async component timed out after ${timeout}ms.`
            );
            onError(err);
            error.value = err;
          }
        }, timeout);
      }
      load().then(() => {
        loaded.value = true;
        if (instance.parent && isKeepAlive(instance.parent.vnode)) {
          instance.parent.update();
        }
      }).catch((err) => {
        onError(err);
        error.value = err;
      });
      return () => {
        if (loaded.value && resolvedComp) {
          return createInnerComp(resolvedComp, instance);
        } else if (error.value && errorComponent) {
          return createVNode(errorComponent, {
            error: error.value
          });
        } else if (loadingComponent && !delayed.value) {
          return createVNode(loadingComponent);
        }
      };
    }
  });
}
function createInnerComp(comp, parent) {
  const { ref: ref22, props, children, ce } = parent.vnode;
  const vnode = createVNode(comp, props, children);
  vnode.ref = ref22;
  vnode.ce = ce;
  delete parent.vnode.ce;
  return vnode;
}
const isKeepAlive = (vnode) => vnode.type.__isKeepAlive;
function onActivated(hook2, target2) {
  registerKeepAliveHook(hook2, "a", target2);
}
function onDeactivated(hook2, target2) {
  registerKeepAliveHook(hook2, "da", target2);
}
function registerKeepAliveHook(hook2, type, target2 = currentInstance) {
  const wrappedHook = hook2.__wdc || (hook2.__wdc = () => {
    let current = target2;
    while (current) {
      if (current.isDeactivated) {
        return;
      }
      current = current.parent;
    }
    return hook2();
  });
  injectHook(type, wrappedHook, target2);
  if (target2) {
    let current = target2.parent;
    while (current && current.parent) {
      if (isKeepAlive(current.parent.vnode)) {
        injectToKeepAliveRoot(wrappedHook, type, target2, current);
      }
      current = current.parent;
    }
  }
}
function injectToKeepAliveRoot(hook2, type, target2, keepAliveRoot) {
  const injected = injectHook(
    type,
    hook2,
    keepAliveRoot,
    true
    /* prepend */
  );
  onUnmounted(() => {
    remove(keepAliveRoot[type], injected);
  }, target2);
}
function injectHook(type, hook2, target2 = currentInstance, prepend = false) {
  if (target2) {
    const hooks2 = target2[type] || (target2[type] = []);
    const wrappedHook = hook2.__weh || (hook2.__weh = (...args) => {
      pauseTracking();
      const reset = setCurrentInstance(target2);
      const res = callWithAsyncErrorHandling(hook2, target2, type, args);
      reset();
      resetTracking();
      return res;
    });
    if (prepend) {
      hooks2.unshift(wrappedHook);
    } else {
      hooks2.push(wrappedHook);
    }
    return wrappedHook;
  } else {
    const apiName = toHandlerKey(ErrorTypeStrings$1[type].replace(/ hook$/, ""));
    warn$1(
      `${apiName} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.`
    );
  }
}
const createHook = (lifecycle) => (hook2, target2 = currentInstance) => {
  if (!isInSSRComponentSetup || lifecycle === "sp") {
    injectHook(lifecycle, (...args) => hook2(...args), target2);
  }
};
const onBeforeMount = createHook("bm");
const onMounted = createHook("m");
const onBeforeUpdate = createHook(
  "bu"
);
const onUpdated = createHook("u");
const onBeforeUnmount = createHook(
  "bum"
);
const onUnmounted = createHook("um");
const onServerPrefetch = createHook(
  "sp"
);
const onRenderTriggered = createHook("rtg");
const onRenderTracked = createHook("rtc");
function onErrorCaptured(hook2, target2 = currentInstance) {
  injectHook("ec", hook2, target2);
}
const COMPONENTS = "components";
function resolveComponent(name, maybeSelfReference) {
  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;
}
const NULL_DYNAMIC_COMPONENT = Symbol.for("v-ndc");
function resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {
  const instance = currentRenderingInstance || currentInstance;
  if (instance) {
    const Component = instance.type;
    {
      const selfName = getComponentName(
        Component,
        false
      );
      if (selfName && (selfName === name || selfName === camelize(name) || selfName === capitalize(camelize(name)))) {
        return Component;
      }
    }
    const res = (
      // local registration
      // check instance[type] first which is resolved for options API
      resolve(instance[type] || Component[type], name) || // global registration
      resolve(instance.appContext[type], name)
    );
    if (!res && maybeSelfReference) {
      return Component;
    }
    if (warnMissing && !res) {
      const extra = `
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.`;
      warn$1(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);
    }
    return res;
  } else {
    warn$1(
      `resolve${capitalize(type.slice(0, -1))} can only be used in render() or setup().`
    );
  }
}
function resolve(registry, name) {
  return registry && (registry[name] || registry[camelize(name)] || registry[capitalize(camelize(name))]);
}
function renderList(source, renderItem, cache, index) {
  let ret;
  const cached = cache;
  const sourceIsArray = isArray$3(source);
  if (sourceIsArray || isString$3(source)) {
    const sourceIsReactiveArray = sourceIsArray && isReactive$1(source);
    let needsWrap = false;
    if (sourceIsReactiveArray) {
      needsWrap = !isShallow(source);
      source = shallowReadArray(source);
    }
    ret = new Array(source.length);
    for (let i2 = 0, l2 = source.length; i2 < l2; i2++) {
      ret[i2] = renderItem(
        needsWrap ? toReactive(source[i2]) : source[i2],
        i2,
        void 0,
        cached
      );
    }
  } else if (typeof source === "number") {
    if (!Number.isInteger(source)) {
      warn$1(`The v-for range expect an integer value but got ${source}.`);
    }
    ret = new Array(source);
    for (let i2 = 0; i2 < source; i2++) {
      ret[i2] = renderItem(i2 + 1, i2, void 0, cached);
    }
  } else if (isObject$1(source)) {
    if (source[Symbol.iterator]) {
      ret = Array.from(
        source,
        (item, i2) => renderItem(item, i2, void 0, cached)
      );
    } else {
      const keys2 = Object.keys(source);
      ret = new Array(keys2.length);
      for (let i2 = 0, l2 = keys2.length; i2 < l2; i2++) {
        const key = keys2[i2];
        ret[i2] = renderItem(source[key], key, i2, cached);
      }
    }
  } else {
    ret = [];
  }
  return ret;
}
function renderSlot(slots, name, props = {}, fallback, noSlotted) {
  if (currentRenderingInstance.ce || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.ce) {
    return openBlock(), createBlock(
      Fragment$1,
      null,
      [createVNode("slot", props, fallback)],
      64
    );
  }
  let slot = slots[name];
  if (slot && slot.length > 1) {
    warn$1(
      `SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template.`
    );
    slot = () => [];
  }
  if (slot && slot._c) {
    slot._d = false;
  }
  openBlock();
  const validSlotContent = slot && ensureValidVNode(slot(props));
  const rendered = createBlock(
    Fragment$1,
    {
      key: (props.key || // slot content array of a dynamic conditional slot may have a branch
      // key attached in the `createSlots` helper, respect that
      validSlotContent && validSlotContent.key || `_${name}`) + // #7256 force differentiate fallback content from actual content
      (!validSlotContent && fallback ? "_fb" : "")
    },
    validSlotContent || [],
    validSlotContent && slots._ === 1 ? 64 : -2
  );
  if (slot && slot._c) {
    slot._d = true;
  }
  return rendered;
}
function ensureValidVNode(vnodes) {
  return vnodes.some((child) => {
    if (!isVNode(child)) return true;
    if (child.type === Comment) return false;
    if (child.type === Fragment$1 && !ensureValidVNode(child.children))
      return false;
    return true;
  }) ? vnodes : null;
}
const getPublicInstance = (i2) => {
  if (!i2) return null;
  if (isStatefulComponent(i2)) return getComponentPublicInstance(i2);
  return getPublicInstance(i2.parent);
};
const publicPropertiesMap = (
  // Move PURE marker to new line to workaround compiler discarding it
  // due to type annotation
  /* @__PURE__ */ extend(/* @__PURE__ */ Object.create(null), {
    $: (i2) => i2,
    $el: (i2) => i2.vnode.el,
    $data: (i2) => i2.data,
    $props: (i2) => shallowReadonly(i2.props),
    $attrs: (i2) => shallowReadonly(i2.attrs),
    $slots: (i2) => shallowReadonly(i2.slots),
    $refs: (i2) => shallowReadonly(i2.refs),
    $parent: (i2) => getPublicInstance(i2.parent),
    $root: (i2) => getPublicInstance(i2.root),
    $host: (i2) => i2.ce,
    $emit: (i2) => i2.emit,
    $options: (i2) => resolveMergedOptions(i2),
    $forceUpdate: (i2) => i2.f || (i2.f = () => {
      queueJob(i2.update);
    }),
    $nextTick: (i2) => i2.n || (i2.n = nextTick.bind(i2.proxy)),
    $watch: (i2) => instanceWatch.bind(i2)
  })
);
const isReservedPrefix = (key) => key === "_" || key === "$";
const hasSetupBinding = (state, key) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key);
const PublicInstanceProxyHandlers = {
  get({ _: instance }, key) {
    if (key === "__v_skip") {
      return true;
    }
    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;
    if (key === "__isVue") {
      return true;
    }
    let normalizedProps;
    if (key[0] !== "$") {
      const n2 = accessCache[key];
      if (n2 !== void 0) {
        switch (n2) {
          case 1:
            return setupState[key];
          case 2:
            return data[key];
          case 4:
            return ctx[key];
          case 3:
            return props[key];
        }
      } else if (hasSetupBinding(setupState, key)) {
        accessCache[key] = 1;
        return setupState[key];
      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {
        accessCache[key] = 2;
        return data[key];
      } else if (
        // only cache other properties when instance has declared (thus stable)
        // props
        (normalizedProps = instance.propsOptions[0]) && hasOwn(normalizedProps, key)
      ) {
        accessCache[key] = 3;
        return props[key];
      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {
        accessCache[key] = 4;
        return ctx[key];
      } else if (shouldCacheAccess) {
        accessCache[key] = 0;
      }
    }
    const publicGetter = publicPropertiesMap[key];
    let cssModule, globalProperties;
    if (publicGetter) {
      if (key === "$attrs") {
        track(instance.attrs, "get", "");
        markAttrsAccessed();
      } else if (key === "$slots") {
        track(instance, "get", key);
      }
      return publicGetter(instance);
    } else if (
      // css module (injected by vue-loader)
      (cssModule = type.__cssModules) && (cssModule = cssModule[key])
    ) {
      return cssModule;
    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {
      accessCache[key] = 4;
      return ctx[key];
    } else if (
      // global properties
      globalProperties = appContext.config.globalProperties, hasOwn(globalProperties, key)
    ) {
      {
        return globalProperties[key];
      }
    } else if (currentRenderingInstance && (!isString$3(key) || // #1091 avoid internal isRef/isVNode checks on component instance leading
    // to infinite warning loop
    key.indexOf("__v") !== 0)) {
      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {
        warn$1(
          `Property ${JSON.stringify(
            key
          )} must be accessed via $data because it starts with a reserved character ("$" or "_") and is not proxied on the render context.`
        );
      } else if (instance === currentRenderingInstance) {
        warn$1(
          `Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.`
        );
      }
    }
  },
  set({ _: instance }, key, value) {
    const { data, setupState, ctx } = instance;
    if (hasSetupBinding(setupState, key)) {
      setupState[key] = value;
      return true;
    } else if (setupState.__isScriptSetup && hasOwn(setupState, key)) {
      warn$1(`Cannot mutate <script setup> binding "${key}" from Options API.`);
      return false;
    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {
      data[key] = value;
      return true;
    } else if (hasOwn(instance.props, key)) {
      warn$1(`Attempting to mutate prop "${key}". Props are readonly.`);
      return false;
    }
    if (key[0] === "$" && key.slice(1) in instance) {
      warn$1(
        `Attempting to mutate public property "${key}". Properties starting with $ are reserved and readonly.`
      );
      return false;
    } else {
      if (key in instance.appContext.config.globalProperties) {
        Object.defineProperty(ctx, key, {
          enumerable: true,
          configurable: true,
          value
        });
      } else {
        ctx[key] = value;
      }
    }
    return true;
  },
  has({
    _: { data, setupState, accessCache, ctx, appContext, propsOptions }
  }, key) {
    let normalizedProps;
    return !!accessCache[key] || data !== EMPTY_OBJ && hasOwn(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key) || hasOwn(ctx, key) || hasOwn(publicPropertiesMap, key) || hasOwn(appContext.config.globalProperties, key);
  },
  defineProperty(target2, key, descriptor) {
    if (descriptor.get != null) {
      target2._.accessCache[key] = 0;
    } else if (hasOwn(descriptor, "value")) {
      this.set(target2, key, descriptor.value, null);
    }
    return Reflect.defineProperty(target2, key, descriptor);
  }
};
{
  PublicInstanceProxyHandlers.ownKeys = (target2) => {
    warn$1(
      `Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead.`
    );
    return Reflect.ownKeys(target2);
  };
}
function createDevRenderContext(instance) {
  const target2 = {};
  Object.defineProperty(target2, `_`, {
    configurable: true,
    enumerable: false,
    get: () => instance
  });
  Object.keys(publicPropertiesMap).forEach((key) => {
    Object.defineProperty(target2, key, {
      configurable: true,
      enumerable: false,
      get: () => publicPropertiesMap[key](instance),
      // intercepted by the proxy so no need for implementation,
      // but needed to prevent set errors
      set: NOOP
    });
  });
  return target2;
}
function exposePropsOnRenderContext(instance) {
  const {
    ctx,
    propsOptions: [propsOptions]
  } = instance;
  if (propsOptions) {
    Object.keys(propsOptions).forEach((key) => {
      Object.defineProperty(ctx, key, {
        enumerable: true,
        configurable: true,
        get: () => instance.props[key],
        set: NOOP
      });
    });
  }
}
function exposeSetupStateOnRenderContext(instance) {
  const { ctx, setupState } = instance;
  Object.keys(toRaw$1(setupState)).forEach((key) => {
    if (!setupState.__isScriptSetup) {
      if (isReservedPrefix(key[0])) {
        warn$1(
          `setup() return property ${JSON.stringify(
            key
          )} should not start with "$" or "_" which are reserved prefixes for Vue internals.`
        );
        return;
      }
      Object.defineProperty(ctx, key, {
        enumerable: true,
        configurable: true,
        get: () => setupState[key],
        set: NOOP
      });
    }
  });
}
function normalizePropsOrEmits(props) {
  return isArray$3(props) ? props.reduce(
    (normalized, p2) => (normalized[p2] = null, normalized),
    {}
  ) : props;
}
function createDuplicateChecker() {
  const cache = /* @__PURE__ */ Object.create(null);
  return (type, key) => {
    if (cache[key]) {
      warn$1(`${type} property "${key}" is already defined in ${cache[key]}.`);
    } else {
      cache[key] = type;
    }
  };
}
let shouldCacheAccess = true;
function applyOptions(instance) {
  const options = resolveMergedOptions(instance);
  const publicThis = instance.proxy;
  const ctx = instance.ctx;
  shouldCacheAccess = false;
  if (options.beforeCreate) {
    callHook$1(options.beforeCreate, instance, "bc");
  }
  const {
    // state
    data: dataOptions,
    computed: computedOptions,
    methods,
    watch: watchOptions,
    provide: provideOptions,
    inject: injectOptions,
    // lifecycle
    created,
    beforeMount,
    mounted,
    beforeUpdate,
    updated,
    activated,
    deactivated,
    beforeDestroy,
    beforeUnmount,
    destroyed,
    unmounted,
    render,
    renderTracked,
    renderTriggered,
    errorCaptured,
    serverPrefetch,
    // public API
    expose,
    inheritAttrs,
    // assets
    components,
    directives,
    filters
  } = options;
  const checkDuplicateProperties = createDuplicateChecker();
  {
    const [propsOptions] = instance.propsOptions;
    if (propsOptions) {
      for (const key in propsOptions) {
        checkDuplicateProperties("Props", key);
      }
    }
  }
  if (injectOptions) {
    resolveInjections(injectOptions, ctx, checkDuplicateProperties);
  }
  if (methods) {
    for (const key in methods) {
      const methodHandler = methods[key];
      if (isFunction$1(methodHandler)) {
        {
          Object.defineProperty(ctx, key, {
            value: methodHandler.bind(publicThis),
            configurable: true,
            enumerable: true,
            writable: true
          });
        }
        {
          checkDuplicateProperties("Methods", key);
        }
      } else {
        warn$1(
          `Method "${key}" has type "${typeof methodHandler}" in the component definition. Did you reference the function correctly?`
        );
      }
    }
  }
  if (dataOptions) {
    if (!isFunction$1(dataOptions)) {
      warn$1(
        `The data option must be a function. Plain object usage is no longer supported.`
      );
    }
    const data = dataOptions.call(publicThis, publicThis);
    if (isPromise(data)) {
      warn$1(
        `data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>.`
      );
    }
    if (!isObject$1(data)) {
      warn$1(`data() should return an object.`);
    } else {
      instance.data = reactive(data);
      {
        for (const key in data) {
          checkDuplicateProperties("Data", key);
          if (!isReservedPrefix(key[0])) {
            Object.defineProperty(ctx, key, {
              configurable: true,
              enumerable: true,
              get: () => data[key],
              set: NOOP
            });
          }
        }
      }
    }
  }
  shouldCacheAccess = true;
  if (computedOptions) {
    for (const key in computedOptions) {
      const opt = computedOptions[key];
      const get2 = isFunction$1(opt) ? opt.bind(publicThis, publicThis) : isFunction$1(opt.get) ? opt.get.bind(publicThis, publicThis) : NOOP;
      if (get2 === NOOP) {
        warn$1(`Computed property "${key}" has no getter.`);
      }
      const set2 = !isFunction$1(opt) && isFunction$1(opt.set) ? opt.set.bind(publicThis) : () => {
        warn$1(
          `Write operation failed: computed property "${key}" is readonly.`
        );
      };
      const c = computed({
        get: get2,
        set: set2
      });
      Object.defineProperty(ctx, key, {
        enumerable: true,
        configurable: true,
        get: () => c.value,
        set: (v) => c.value = v
      });
      {
        checkDuplicateProperties("Computed", key);
      }
    }
  }
  if (watchOptions) {
    for (const key in watchOptions) {
      createWatcher(watchOptions[key], ctx, publicThis, key);
    }
  }
  if (provideOptions) {
    const provides = isFunction$1(provideOptions) ? provideOptions.call(publicThis) : provideOptions;
    Reflect.ownKeys(provides).forEach((key) => {
      provide(key, provides[key]);
    });
  }
  if (created) {
    callHook$1(created, instance, "c");
  }
  function registerLifecycleHook(register, hook2) {
    if (isArray$3(hook2)) {
      hook2.forEach((_hook) => register(_hook.bind(publicThis)));
    } else if (hook2) {
      register(hook2.bind(publicThis));
    }
  }
  registerLifecycleHook(onBeforeMount, beforeMount);
  registerLifecycleHook(onMounted, mounted);
  registerLifecycleHook(onBeforeUpdate, beforeUpdate);
  registerLifecycleHook(onUpdated, updated);
  registerLifecycleHook(onActivated, activated);
  registerLifecycleHook(onDeactivated, deactivated);
  registerLifecycleHook(onErrorCaptured, errorCaptured);
  registerLifecycleHook(onRenderTracked, renderTracked);
  registerLifecycleHook(onRenderTriggered, renderTriggered);
  registerLifecycleHook(onBeforeUnmount, beforeUnmount);
  registerLifecycleHook(onUnmounted, unmounted);
  registerLifecycleHook(onServerPrefetch, serverPrefetch);
  if (isArray$3(expose)) {
    if (expose.length) {
      const exposed = instance.exposed || (instance.exposed = {});
      expose.forEach((key) => {
        Object.defineProperty(exposed, key, {
          get: () => publicThis[key],
          set: (val) => publicThis[key] = val
        });
      });
    } else if (!instance.exposed) {
      instance.exposed = {};
    }
  }
  if (render && instance.render === NOOP) {
    instance.render = render;
  }
  if (inheritAttrs != null) {
    instance.inheritAttrs = inheritAttrs;
  }
  if (components) instance.components = components;
  if (directives) instance.directives = directives;
  if (serverPrefetch) {
    markAsyncBoundary(instance);
  }
}
function resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {
  if (isArray$3(injectOptions)) {
    injectOptions = normalizeInject(injectOptions);
  }
  for (const key in injectOptions) {
    const opt = injectOptions[key];
    let injected;
    if (isObject$1(opt)) {
      if ("default" in opt) {
        injected = inject(
          opt.from || key,
          opt.default,
          true
        );
      } else {
        injected = inject(opt.from || key);
      }
    } else {
      injected = inject(opt);
    }
    if (isRef$1(injected)) {
      Object.defineProperty(ctx, key, {
        enumerable: true,
        configurable: true,
        get: () => injected.value,
        set: (v) => injected.value = v
      });
    } else {
      ctx[key] = injected;
    }
    {
      checkDuplicateProperties("Inject", key);
    }
  }
}
function callHook$1(hook2, instance, type) {
  callWithAsyncErrorHandling(
    isArray$3(hook2) ? hook2.map((h2) => h2.bind(instance.proxy)) : hook2.bind(instance.proxy),
    instance,
    type
  );
}
function createWatcher(raw, ctx, publicThis, key) {
  let getter = key.includes(".") ? createPathGetter(publicThis, key) : () => publicThis[key];
  if (isString$3(raw)) {
    const handler = ctx[raw];
    if (isFunction$1(handler)) {
      {
        watch(getter, handler);
      }
    } else {
      warn$1(`Invalid watch handler specified by key "${raw}"`, handler);
    }
  } else if (isFunction$1(raw)) {
    {
      watch(getter, raw.bind(publicThis));
    }
  } else if (isObject$1(raw)) {
    if (isArray$3(raw)) {
      raw.forEach((r2) => createWatcher(r2, ctx, publicThis, key));
    } else {
      const handler = isFunction$1(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];
      if (isFunction$1(handler)) {
        watch(getter, handler, raw);
      } else {
        warn$1(`Invalid watch handler specified by key "${raw.handler}"`, handler);
      }
    }
  } else {
    warn$1(`Invalid watch option: "${key}"`, raw);
  }
}
function resolveMergedOptions(instance) {
  const base = instance.type;
  const { mixins, extends: extendsOptions } = base;
  const {
    mixins: globalMixins,
    optionsCache: cache,
    config: { optionMergeStrategies }
  } = instance.appContext;
  const cached = cache.get(base);
  let resolved;
  if (cached) {
    resolved = cached;
  } else if (!globalMixins.length && !mixins && !extendsOptions) {
    {
      resolved = base;
    }
  } else {
    resolved = {};
    if (globalMixins.length) {
      globalMixins.forEach(
        (m2) => mergeOptions$1(resolved, m2, optionMergeStrategies, true)
      );
    }
    mergeOptions$1(resolved, base, optionMergeStrategies);
  }
  if (isObject$1(base)) {
    cache.set(base, resolved);
  }
  return resolved;
}
function mergeOptions$1(to, from, strats, asMixin = false) {
  const { mixins, extends: extendsOptions } = from;
  if (extendsOptions) {
    mergeOptions$1(to, extendsOptions, strats, true);
  }
  if (mixins) {
    mixins.forEach(
      (m2) => mergeOptions$1(to, m2, strats, true)
    );
  }
  for (const key in from) {
    if (asMixin && key === "expose") {
      warn$1(
        `"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.`
      );
    } else {
      const strat = internalOptionMergeStrats[key] || strats && strats[key];
      to[key] = strat ? strat(to[key], from[key]) : from[key];
    }
  }
  return to;
}
const internalOptionMergeStrats = {
  data: mergeDataFn,
  props: mergeEmitsOrPropsOptions,
  emits: mergeEmitsOrPropsOptions,
  // objects
  methods: mergeObjectOptions,
  computed: mergeObjectOptions,
  // lifecycle
  beforeCreate: mergeAsArray,
  created: mergeAsArray,
  beforeMount: mergeAsArray,
  mounted: mergeAsArray,
  beforeUpdate: mergeAsArray,
  updated: mergeAsArray,
  beforeDestroy: mergeAsArray,
  beforeUnmount: mergeAsArray,
  destroyed: mergeAsArray,
  unmounted: mergeAsArray,
  activated: mergeAsArray,
  deactivated: mergeAsArray,
  errorCaptured: mergeAsArray,
  serverPrefetch: mergeAsArray,
  // assets
  components: mergeObjectOptions,
  directives: mergeObjectOptions,
  // watch
  watch: mergeWatchOptions,
  // provide / inject
  provide: mergeDataFn,
  inject: mergeInject
};
function mergeDataFn(to, from) {
  if (!from) {
    return to;
  }
  if (!to) {
    return from;
  }
  return function mergedDataFn() {
    return extend(
      isFunction$1(to) ? to.call(this, this) : to,
      isFunction$1(from) ? from.call(this, this) : from
    );
  };
}
function mergeInject(to, from) {
  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));
}
function normalizeInject(raw) {
  if (isArray$3(raw)) {
    const res = {};
    for (let i2 = 0; i2 < raw.length; i2++) {
      res[raw[i2]] = raw[i2];
    }
    return res;
  }
  return raw;
}
function mergeAsArray(to, from) {
  return to ? [...new Set([].concat(to, from))] : from;
}
function mergeObjectOptions(to, from) {
  return to ? extend(/* @__PURE__ */ Object.create(null), to, from) : from;
}
function mergeEmitsOrPropsOptions(to, from) {
  if (to) {
    if (isArray$3(to) && isArray$3(from)) {
      return [.../* @__PURE__ */ new Set([...to, ...from])];
    }
    return extend(
      /* @__PURE__ */ Object.create(null),
      normalizePropsOrEmits(to),
      normalizePropsOrEmits(from != null ? from : {})
    );
  } else {
    return from;
  }
}
function mergeWatchOptions(to, from) {
  if (!to) return from;
  if (!from) return to;
  const merged = extend(/* @__PURE__ */ Object.create(null), to);
  for (const key in from) {
    merged[key] = mergeAsArray(to[key], from[key]);
  }
  return merged;
}
function createAppContext() {
  return {
    app: null,
    config: {
      isNativeTag: NO,
      performance: false,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: /* @__PURE__ */ Object.create(null),
    optionsCache: /* @__PURE__ */ new WeakMap(),
    propsCache: /* @__PURE__ */ new WeakMap(),
    emitsCache: /* @__PURE__ */ new WeakMap()
  };
}
let uid$1 = 0;
function createAppAPI(render, hydrate) {
  return function createApp(rootComponent, rootProps = null) {
    if (!isFunction$1(rootComponent)) {
      rootComponent = extend({}, rootComponent);
    }
    if (rootProps != null && !isObject$1(rootProps)) {
      warn$1(`root props passed to app.mount() must be an object.`);
      rootProps = null;
    }
    const context = createAppContext();
    const installedPlugins = /* @__PURE__ */ new WeakSet();
    const pluginCleanupFns = [];
    let isMounted = false;
    const app = context.app = {
      _uid: uid$1++,
      _component: rootComponent,
      _props: rootProps,
      _container: null,
      _context: context,
      _instance: null,
      version,
      get config() {
        return context.config;
      },
      set config(v) {
        {
          warn$1(
            `app.config cannot be replaced. Modify individual options instead.`
          );
        }
      },
      use(plugin, ...options) {
        if (installedPlugins.has(plugin)) {
          warn$1(`Plugin has already been applied to target app.`);
        } else if (plugin && isFunction$1(plugin.install)) {
          installedPlugins.add(plugin);
          plugin.install(app, ...options);
        } else if (isFunction$1(plugin)) {
          installedPlugins.add(plugin);
          plugin(app, ...options);
        } else {
          warn$1(
            `A plugin must either be a function or an object with an "install" function.`
          );
        }
        return app;
      },
      mixin(mixin) {
        {
          if (!context.mixins.includes(mixin)) {
            context.mixins.push(mixin);
          } else {
            warn$1(
              "Mixin has already been applied to target app" + (mixin.name ? `: ${mixin.name}` : "")
            );
          }
        }
        return app;
      },
      component(name, component) {
        {
          validateComponentName(name, context.config);
        }
        if (!component) {
          return context.components[name];
        }
        if (context.components[name]) {
          warn$1(`Component "${name}" has already been registered in target app.`);
        }
        context.components[name] = component;
        return app;
      },
      directive(name, directive) {
        {
          validateDirectiveName(name);
        }
        if (!directive) {
          return context.directives[name];
        }
        if (context.directives[name]) {
          warn$1(`Directive "${name}" has already been registered in target app.`);
        }
        context.directives[name] = directive;
        return app;
      },
      mount(rootContainer, isHydrate, namespace) {
        if (!isMounted) {
          if (rootContainer.__vue_app__) {
            warn$1(
              `There is already an app instance mounted on the host container.
 If you want to mount another app on the same host container, you need to unmount the previous app by calling \`app.unmount()\` first.`
            );
          }
          const vnode = app._ceVNode || createVNode(rootComponent, rootProps);
          vnode.appContext = context;
          if (namespace === true) {
            namespace = "svg";
          } else if (namespace === false) {
            namespace = void 0;
          }
          {
            context.reload = () => {
              render(
                cloneVNode(vnode),
                rootContainer,
                namespace
              );
            };
          }
          if (isHydrate && hydrate) {
            hydrate(vnode, rootContainer);
          } else {
            render(vnode, rootContainer, namespace);
          }
          isMounted = true;
          app._container = rootContainer;
          rootContainer.__vue_app__ = app;
          {
            app._instance = vnode.component;
            devtoolsInitApp(app, version);
          }
          return getComponentPublicInstance(vnode.component);
        } else {
          warn$1(
            `App has already been mounted.
If you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. \`const createMyApp = () => createApp(App)\``
          );
        }
      },
      onUnmount(cleanupFn) {
        if (typeof cleanupFn !== "function") {
          warn$1(
            `Expected function as first argument to app.onUnmount(), but got ${typeof cleanupFn}`
          );
        }
        pluginCleanupFns.push(cleanupFn);
      },
      unmount() {
        if (isMounted) {
          callWithAsyncErrorHandling(
            pluginCleanupFns,
            app._instance,
            16
          );
          render(null, app._container);
          {
            app._instance = null;
            devtoolsUnmountApp(app);
          }
          delete app._container.__vue_app__;
        } else {
          warn$1(`Cannot unmount an app that is not mounted.`);
        }
      },
      provide(key, value) {
        if (key in context.provides) {
          warn$1(
            `App already provides property with key "${String(key)}". It will be overwritten with the new value.`
          );
        }
        context.provides[key] = value;
        return app;
      },
      runWithContext(fn) {
        const lastApp = currentApp;
        currentApp = app;
        try {
          return fn();
        } finally {
          currentApp = lastApp;
        }
      }
    };
    return app;
  };
}
let currentApp = null;
function provide(key, value) {
  if (!currentInstance) {
    {
      warn$1(`provide() can only be used inside setup().`);
    }
  } else {
    let provides = currentInstance.provides;
    const parentProvides = currentInstance.parent && currentInstance.parent.provides;
    if (parentProvides === provides) {
      provides = currentInstance.provides = Object.create(parentProvides);
    }
    provides[key] = value;
  }
}
function inject(key, defaultValue, treatDefaultAsFactory = false) {
  const instance = currentInstance || currentRenderingInstance;
  if (instance || currentApp) {
    const provides = currentApp ? currentApp._context.provides : instance ? instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : void 0;
    if (provides && key in provides) {
      return provides[key];
    } else if (arguments.length > 1) {
      return treatDefaultAsFactory && isFunction$1(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;
    } else {
      warn$1(`injection "${String(key)}" not found.`);
    }
  } else {
    warn$1(`inject() can only be used inside setup() or functional components.`);
  }
}
const internalObjectProto = {};
const createInternalObject = () => Object.create(internalObjectProto);
const isInternalObject = (obj) => Object.getPrototypeOf(obj) === internalObjectProto;
function initProps(instance, rawProps, isStateful, isSSR = false) {
  const props = {};
  const attrs = createInternalObject();
  instance.propsDefaults = /* @__PURE__ */ Object.create(null);
  setFullProps(instance, rawProps, props, attrs);
  for (const key in instance.propsOptions[0]) {
    if (!(key in props)) {
      props[key] = void 0;
    }
  }
  {
    validateProps(rawProps || {}, props, instance);
  }
  if (isStateful) {
    instance.props = isSSR ? props : shallowReactive(props);
  } else {
    if (!instance.type.props) {
      instance.props = attrs;
    } else {
      instance.props = props;
    }
  }
  instance.attrs = attrs;
}
function isInHmrContext(instance) {
  while (instance) {
    if (instance.type.__hmrId) return true;
    instance = instance.parent;
  }
}
function updateProps(instance, rawProps, rawPrevProps, optimized) {
  const {
    props,
    attrs,
    vnode: { patchFlag }
  } = instance;
  const rawCurrentProps = toRaw$1(props);
  const [options] = instance.propsOptions;
  let hasAttrsChanged = false;
  if (
    // always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    !isInHmrContext(instance) && (optimized || patchFlag > 0) && !(patchFlag & 16)
  ) {
    if (patchFlag & 8) {
      const propsToUpdate = instance.vnode.dynamicProps;
      for (let i2 = 0; i2 < propsToUpdate.length; i2++) {
        let key = propsToUpdate[i2];
        if (isEmitListener(instance.emitsOptions, key)) {
          continue;
        }
        const value = rawProps[key];
        if (options) {
          if (hasOwn(attrs, key)) {
            if (value !== attrs[key]) {
              attrs[key] = value;
              hasAttrsChanged = true;
            }
          } else {
            const camelizedKey = camelize(key);
            props[camelizedKey] = resolvePropValue(
              options,
              rawCurrentProps,
              camelizedKey,
              value,
              instance,
              false
            );
          }
        } else {
          if (value !== attrs[key]) {
            attrs[key] = value;
            hasAttrsChanged = true;
          }
        }
      }
    }
  } else {
    if (setFullProps(instance, rawProps, props, attrs)) {
      hasAttrsChanged = true;
    }
    let kebabKey;
    for (const key in rawCurrentProps) {
      if (!rawProps || // for camelCase
      !hasOwn(rawProps, key) && // it's possible the original props was passed in as kebab-case
      // and converted to camelCase (#955)
      ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey))) {
        if (options) {
          if (rawPrevProps && // for camelCase
          (rawPrevProps[key] !== void 0 || // for kebab-case
          rawPrevProps[kebabKey] !== void 0)) {
            props[key] = resolvePropValue(
              options,
              rawCurrentProps,
              key,
              void 0,
              instance,
              true
            );
          }
        } else {
          delete props[key];
        }
      }
    }
    if (attrs !== rawCurrentProps) {
      for (const key in attrs) {
        if (!rawProps || !hasOwn(rawProps, key) && true) {
          delete attrs[key];
          hasAttrsChanged = true;
        }
      }
    }
  }
  if (hasAttrsChanged) {
    trigger(instance.attrs, "set", "");
  }
  {
    validateProps(rawProps || {}, props, instance);
  }
}
function setFullProps(instance, rawProps, props, attrs) {
  const [options, needCastKeys] = instance.propsOptions;
  let hasAttrsChanged = false;
  let rawCastValues;
  if (rawProps) {
    for (let key in rawProps) {
      if (isReservedProp(key)) {
        continue;
      }
      const value = rawProps[key];
      let camelKey;
      if (options && hasOwn(options, camelKey = camelize(key))) {
        if (!needCastKeys || !needCastKeys.includes(camelKey)) {
          props[camelKey] = value;
        } else {
          (rawCastValues || (rawCastValues = {}))[camelKey] = value;
        }
      } else if (!isEmitListener(instance.emitsOptions, key)) {
        if (!(key in attrs) || value !== attrs[key]) {
          attrs[key] = value;
          hasAttrsChanged = true;
        }
      }
    }
  }
  if (needCastKeys) {
    const rawCurrentProps = toRaw$1(props);
    const castValues = rawCastValues || EMPTY_OBJ;
    for (let i2 = 0; i2 < needCastKeys.length; i2++) {
      const key = needCastKeys[i2];
      props[key] = resolvePropValue(
        options,
        rawCurrentProps,
        key,
        castValues[key],
        instance,
        !hasOwn(castValues, key)
      );
    }
  }
  return hasAttrsChanged;
}
function resolvePropValue(options, props, key, value, instance, isAbsent) {
  const opt = options[key];
  if (opt != null) {
    const hasDefault = hasOwn(opt, "default");
    if (hasDefault && value === void 0) {
      const defaultValue = opt.default;
      if (opt.type !== Function && !opt.skipFactory && isFunction$1(defaultValue)) {
        const { propsDefaults } = instance;
        if (key in propsDefaults) {
          value = propsDefaults[key];
        } else {
          const reset = setCurrentInstance(instance);
          value = propsDefaults[key] = defaultValue.call(
            null,
            props
          );
          reset();
        }
      } else {
        value = defaultValue;
      }
      if (instance.ce) {
        instance.ce._setProp(key, value);
      }
    }
    if (opt[
      0
      /* shouldCast */
    ]) {
      if (isAbsent && !hasDefault) {
        value = false;
      } else if (opt[
        1
        /* shouldCastTrue */
      ] && (value === "" || value === hyphenate(key))) {
        value = true;
      }
    }
  }
  return value;
}
const mixinPropsCache = /* @__PURE__ */ new WeakMap();
function normalizePropsOptions(comp, appContext, asMixin = false) {
  const cache = asMixin ? mixinPropsCache : appContext.propsCache;
  const cached = cache.get(comp);
  if (cached) {
    return cached;
  }
  const raw = comp.props;
  const normalized = {};
  const needCastKeys = [];
  let hasExtends = false;
  if (!isFunction$1(comp)) {
    const extendProps = (raw2) => {
      hasExtends = true;
      const [props, keys2] = normalizePropsOptions(raw2, appContext, true);
      extend(normalized, props);
      if (keys2) needCastKeys.push(...keys2);
    };
    if (!asMixin && appContext.mixins.length) {
      appContext.mixins.forEach(extendProps);
    }
    if (comp.extends) {
      extendProps(comp.extends);
    }
    if (comp.mixins) {
      comp.mixins.forEach(extendProps);
    }
  }
  if (!raw && !hasExtends) {
    if (isObject$1(comp)) {
      cache.set(comp, EMPTY_ARR);
    }
    return EMPTY_ARR;
  }
  if (isArray$3(raw)) {
    for (let i2 = 0; i2 < raw.length; i2++) {
      if (!isString$3(raw[i2])) {
        warn$1(`props must be strings when using array syntax.`, raw[i2]);
      }
      const normalizedKey = camelize(raw[i2]);
      if (validatePropName(normalizedKey)) {
        normalized[normalizedKey] = EMPTY_OBJ;
      }
    }
  } else if (raw) {
    if (!isObject$1(raw)) {
      warn$1(`invalid props options`, raw);
    }
    for (const key in raw) {
      const normalizedKey = camelize(key);
      if (validatePropName(normalizedKey)) {
        const opt = raw[key];
        const prop = normalized[normalizedKey] = isArray$3(opt) || isFunction$1(opt) ? { type: opt } : extend({}, opt);
        const propType = prop.type;
        let shouldCast = false;
        let shouldCastTrue = true;
        if (isArray$3(propType)) {
          for (let index = 0; index < propType.length; ++index) {
            const type = propType[index];
            const typeName = isFunction$1(type) && type.name;
            if (typeName === "Boolean") {
              shouldCast = true;
              break;
            } else if (typeName === "String") {
              shouldCastTrue = false;
            }
          }
        } else {
          shouldCast = isFunction$1(propType) && propType.name === "Boolean";
        }
        prop[
          0
          /* shouldCast */
        ] = shouldCast;
        prop[
          1
          /* shouldCastTrue */
        ] = shouldCastTrue;
        if (shouldCast || hasOwn(prop, "default")) {
          needCastKeys.push(normalizedKey);
        }
      }
    }
  }
  const res = [normalized, needCastKeys];
  if (isObject$1(comp)) {
    cache.set(comp, res);
  }
  return res;
}
function validatePropName(key) {
  if (key[0] !== "$" && !isReservedProp(key)) {
    return true;
  } else {
    warn$1(`Invalid prop name: "${key}" is a reserved property.`);
  }
  return false;
}
function getType$1(ctor) {
  if (ctor === null) {
    return "null";
  }
  if (typeof ctor === "function") {
    return ctor.name || "";
  } else if (typeof ctor === "object") {
    const name = ctor.constructor && ctor.constructor.name;
    return name || "";
  }
  return "";
}
function validateProps(rawProps, props, instance) {
  const resolvedValues = toRaw$1(props);
  const options = instance.propsOptions[0];
  for (const key in options) {
    let opt = options[key];
    if (opt == null) continue;
    validateProp(
      key,
      resolvedValues[key],
      opt,
      shallowReadonly(resolvedValues),
      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))
    );
  }
}
function validateProp(name, value, prop, props, isAbsent) {
  const { type, required, validator, skipCheck } = prop;
  if (required && isAbsent) {
    warn$1('Missing required prop: "' + name + '"');
    return;
  }
  if (value == null && !required) {
    return;
  }
  if (type != null && type !== true && !skipCheck) {
    let isValid = false;
    const types = isArray$3(type) ? type : [type];
    const expectedTypes = [];
    for (let i2 = 0; i2 < types.length && !isValid; i2++) {
      const { valid, expectedType } = assertType(value, types[i2]);
      expectedTypes.push(expectedType || "");
      isValid = valid;
    }
    if (!isValid) {
      warn$1(getInvalidTypeMessage(name, value, expectedTypes));
      return;
    }
  }
  if (validator && !validator(value, props)) {
    warn$1('Invalid prop: custom validator check failed for prop "' + name + '".');
  }
}
const isSimpleType = /* @__PURE__ */ makeMap(
  "String,Number,Boolean,Function,Symbol,BigInt"
);
function assertType(value, type) {
  let valid;
  const expectedType = getType$1(type);
  if (expectedType === "null") {
    valid = value === null;
  } else if (isSimpleType(expectedType)) {
    const t = typeof value;
    valid = t === expectedType.toLowerCase();
    if (!valid && t === "object") {
      valid = value instanceof type;
    }
  } else if (expectedType === "Object") {
    valid = isObject$1(value);
  } else if (expectedType === "Array") {
    valid = isArray$3(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid,
    expectedType
  };
}
function getInvalidTypeMessage(name, value, expectedTypes) {
  if (expectedTypes.length === 0) {
    return `Prop type [] for prop "${name}" won't match anything. Did you mean to use type Array instead?`;
  }
  let message = `Invalid prop: type check failed for prop "${name}". Expected ${expectedTypes.map(capitalize).join(" | ")}`;
  const expectedType = expectedTypes[0];
  const receivedType = toRawType(value);
  const expectedValue = styleValue(value, expectedType);
  const receivedValue = styleValue(value, receivedType);
  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean$1(expectedType, receivedType)) {
    message += ` with value ${expectedValue}`;
  }
  message += `, got ${receivedType} `;
  if (isExplicable(receivedType)) {
    message += `with value ${receivedValue}.`;
  }
  return message;
}
function styleValue(value, type) {
  if (type === "String") {
    return `"${value}"`;
  } else if (type === "Number") {
    return `${Number(value)}`;
  } else {
    return `${value}`;
  }
}
function isExplicable(type) {
  const explicitTypes = ["string", "number", "boolean"];
  return explicitTypes.some((elem) => type.toLowerCase() === elem);
}
function isBoolean$1(...args) {
  return args.some((elem) => elem.toLowerCase() === "boolean");
}
const isInternalKey = (key) => key[0] === "_" || key === "$stable";
const normalizeSlotValue = (value) => isArray$3(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];
const normalizeSlot$1 = (key, rawSlot, ctx) => {
  if (rawSlot._n) {
    return rawSlot;
  }
  const normalized = withCtx((...args) => {
    if (currentInstance && (!ctx || ctx.root === currentInstance.root)) {
      warn$1(
        `Slot "${key}" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`
      );
    }
    return normalizeSlotValue(rawSlot(...args));
  }, ctx);
  normalized._c = false;
  return normalized;
};
const normalizeObjectSlots = (rawSlots, slots, instance) => {
  const ctx = rawSlots._ctx;
  for (const key in rawSlots) {
    if (isInternalKey(key)) continue;
    const value = rawSlots[key];
    if (isFunction$1(value)) {
      slots[key] = normalizeSlot$1(key, value, ctx);
    } else if (value != null) {
      {
        warn$1(
          `Non-function value encountered for slot "${key}". Prefer function slots for better performance.`
        );
      }
      const normalized = normalizeSlotValue(value);
      slots[key] = () => normalized;
    }
  }
};
const normalizeVNodeSlots = (instance, children) => {
  if (!isKeepAlive(instance.vnode) && true) {
    warn$1(
      `Non-function value encountered for default slot. Prefer function slots for better performance.`
    );
  }
  const normalized = normalizeSlotValue(children);
  instance.slots.default = () => normalized;
};
const assignSlots = (slots, children, optimized) => {
  for (const key in children) {
    if (optimized || key !== "_") {
      slots[key] = children[key];
    }
  }
};
const initSlots = (instance, children, optimized) => {
  const slots = instance.slots = createInternalObject();
  if (instance.vnode.shapeFlag & 32) {
    const type = children._;
    if (type) {
      assignSlots(slots, children, optimized);
      if (optimized) {
        def(slots, "_", type, true);
      }
    } else {
      normalizeObjectSlots(children, slots);
    }
  } else if (children) {
    normalizeVNodeSlots(instance, children);
  }
};
const updateSlots = (instance, children, optimized) => {
  const { vnode, slots } = instance;
  let needDeletionCheck = true;
  let deletionComparisonTarget = EMPTY_OBJ;
  if (vnode.shapeFlag & 32) {
    const type = children._;
    if (type) {
      if (isHmrUpdating) {
        assignSlots(slots, children, optimized);
        trigger(instance, "set", "$slots");
      } else if (optimized && type === 1) {
        needDeletionCheck = false;
      } else {
        assignSlots(slots, children, optimized);
      }
    } else {
      needDeletionCheck = !children.$stable;
      normalizeObjectSlots(children, slots);
    }
    deletionComparisonTarget = children;
  } else if (children) {
    normalizeVNodeSlots(instance, children);
    deletionComparisonTarget = { default: 1 };
  }
  if (needDeletionCheck) {
    for (const key in slots) {
      if (!isInternalKey(key) && deletionComparisonTarget[key] == null) {
        delete slots[key];
      }
    }
  }
};
let supported$1;
let perf$1;
function startMeasure(instance, type) {
  if (instance.appContext.config.performance && isSupported()) {
    perf$1.mark(`vue-${type}-${instance.uid}`);
  }
  {
    devtoolsPerfStart(instance, type, isSupported() ? perf$1.now() : Date.now());
  }
}
function endMeasure(instance, type) {
  if (instance.appContext.config.performance && isSupported()) {
    const startTag = `vue-${type}-${instance.uid}`;
    const endTag = startTag + `:end`;
    perf$1.mark(endTag);
    perf$1.measure(
      `<${formatComponentName(instance, instance.type)}> ${type}`,
      startTag,
      endTag
    );
    perf$1.clearMarks(startTag);
    perf$1.clearMarks(endTag);
  }
  {
    devtoolsPerfEnd(instance, type, isSupported() ? perf$1.now() : Date.now());
  }
}
function isSupported() {
  if (supported$1 !== void 0) {
    return supported$1;
  }
  if (typeof window !== "undefined" && window.performance) {
    supported$1 = true;
    perf$1 = window.performance;
  } else {
    supported$1 = false;
  }
  return supported$1;
}
function initFeatureFlags() {
  const needWarn = [];
  if (needWarn.length) {
    const multi = needWarn.length > 1;
    console.warn(
      `Feature flag${multi ? `s` : ``} ${needWarn.join(", ")} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`
    );
  }
}
const queuePostRenderEffect = queueEffectWithSuspense;
function createHydrationRenderer(options) {
  return baseCreateRenderer(options, createHydrationFunctions);
}
function baseCreateRenderer(options, createHydrationFns) {
  {
    initFeatureFlags();
  }
  const target2 = getGlobalThis();
  target2.__VUE__ = true;
  {
    setDevtoolsHook$1(target2.__VUE_DEVTOOLS_GLOBAL_HOOK__, target2);
  }
  const {
    insert: hostInsert,
    remove: hostRemove,
    patchProp: hostPatchProp,
    createElement: hostCreateElement,
    createText: hostCreateText,
    createComment: hostCreateComment,
    setText: hostSetText,
    setElementText: hostSetElementText,
    parentNode: hostParentNode,
    nextSibling: hostNextSibling,
    setScopeId: hostSetScopeId = NOOP,
    insertStaticContent: hostInsertStaticContent
  } = options;
  const patch = (n12, n2, container, anchor = null, parentComponent = null, parentSuspense = null, namespace = void 0, slotScopeIds = null, optimized = isHmrUpdating ? false : !!n2.dynamicChildren) => {
    if (n12 === n2) {
      return;
    }
    if (n12 && !isSameVNodeType(n12, n2)) {
      anchor = getNextHostNode(n12);
      unmount(n12, parentComponent, parentSuspense, true);
      n12 = null;
    }
    if (n2.patchFlag === -2) {
      optimized = false;
      n2.dynamicChildren = null;
    }
    const { type, ref: ref3, shapeFlag } = n2;
    switch (type) {
      case Text:
        processText(n12, n2, container, anchor);
        break;
      case Comment:
        processCommentNode(n12, n2, container, anchor);
        break;
      case Static:
        if (n12 == null) {
          mountStaticNode(n2, container, anchor, namespace);
        } else {
          patchStaticNode(n12, n2, container, namespace);
        }
        break;
      case Fragment$1:
        processFragment(
          n12,
          n2,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
        break;
      default:
        if (shapeFlag & 1) {
          processElement(
            n12,
            n2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else if (shapeFlag & 6) {
          processComponent(
            n12,
            n2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else if (shapeFlag & 64) {
          type.process(
            n12,
            n2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized,
            internals
          );
        } else if (shapeFlag & 128) {
          type.process(
            n12,
            n2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized,
            internals
          );
        } else {
          warn$1("Invalid VNode type:", type, `(${typeof type})`);
        }
    }
    if (ref3 != null && parentComponent) {
      setRef(ref3, n12 && n12.ref, parentSuspense, n2 || n12, !n2);
    }
  };
  const processText = (n12, n2, container, anchor) => {
    if (n12 == null) {
      hostInsert(
        n2.el = hostCreateText(n2.children),
        container,
        anchor
      );
    } else {
      const el = n2.el = n12.el;
      if (n2.children !== n12.children) {
        hostSetText(el, n2.children);
      }
    }
  };
  const processCommentNode = (n12, n2, container, anchor) => {
    if (n12 == null) {
      hostInsert(
        n2.el = hostCreateComment(n2.children || ""),
        container,
        anchor
      );
    } else {
      n2.el = n12.el;
    }
  };
  const mountStaticNode = (n2, container, anchor, namespace) => {
    [n2.el, n2.anchor] = hostInsertStaticContent(
      n2.children,
      container,
      anchor,
      namespace,
      n2.el,
      n2.anchor
    );
  };
  const patchStaticNode = (n12, n2, container, namespace) => {
    if (n2.children !== n12.children) {
      const anchor = hostNextSibling(n12.anchor);
      removeStaticNode(n12);
      [n2.el, n2.anchor] = hostInsertStaticContent(
        n2.children,
        container,
        anchor,
        namespace
      );
    } else {
      n2.el = n12.el;
      n2.anchor = n12.anchor;
    }
  };
  const moveStaticNode = ({ el, anchor }, container, nextSibling) => {
    let next;
    while (el && el !== anchor) {
      next = hostNextSibling(el);
      hostInsert(el, container, nextSibling);
      el = next;
    }
    hostInsert(anchor, container, nextSibling);
  };
  const removeStaticNode = ({ el, anchor }) => {
    let next;
    while (el && el !== anchor) {
      next = hostNextSibling(el);
      hostRemove(el);
      el = next;
    }
    hostRemove(anchor);
  };
  const processElement = (n12, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    if (n2.type === "svg") {
      namespace = "svg";
    } else if (n2.type === "math") {
      namespace = "mathml";
    }
    if (n12 == null) {
      mountElement(
        n2,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    } else {
      patchElement(
        n12,
        n2,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    }
  };
  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    let el;
    let vnodeHook;
    const { props, shapeFlag, transition, dirs } = vnode;
    el = vnode.el = hostCreateElement(
      vnode.type,
      namespace,
      props && props.is,
      props
    );
    if (shapeFlag & 8) {
      hostSetElementText(el, vnode.children);
    } else if (shapeFlag & 16) {
      mountChildren(
        vnode.children,
        el,
        null,
        parentComponent,
        parentSuspense,
        resolveChildrenNamespace(vnode, namespace),
        slotScopeIds,
        optimized
      );
    }
    if (dirs) {
      invokeDirectiveHook(vnode, null, parentComponent, "created");
    }
    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);
    if (props) {
      for (const key in props) {
        if (key !== "value" && !isReservedProp(key)) {
          hostPatchProp(el, key, null, props[key], namespace, parentComponent);
        }
      }
      if ("value" in props) {
        hostPatchProp(el, "value", null, props.value, namespace);
      }
      if (vnodeHook = props.onVnodeBeforeMount) {
        invokeVNodeHook(vnodeHook, parentComponent, vnode);
      }
    }
    {
      def(el, "__vnode", vnode, true);
      def(el, "__vueParentComponent", parentComponent, true);
    }
    if (dirs) {
      invokeDirectiveHook(vnode, null, parentComponent, "beforeMount");
    }
    const needCallTransitionHooks = needTransition(parentSuspense, transition);
    if (needCallTransitionHooks) {
      transition.beforeEnter(el);
    }
    hostInsert(el, container, anchor);
    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {
      queuePostRenderEffect(() => {
        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
        needCallTransitionHooks && transition.enter(el);
        dirs && invokeDirectiveHook(vnode, null, parentComponent, "mounted");
      }, parentSuspense);
    }
  };
  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {
    if (scopeId) {
      hostSetScopeId(el, scopeId);
    }
    if (slotScopeIds) {
      for (let i2 = 0; i2 < slotScopeIds.length; i2++) {
        hostSetScopeId(el, slotScopeIds[i2]);
      }
    }
    if (parentComponent) {
      let subTree = parentComponent.subTree;
      if (subTree.patchFlag > 0 && subTree.patchFlag & 2048) {
        subTree = filterSingleRoot(subTree.children) || subTree;
      }
      if (vnode === subTree || isSuspense(subTree.type) && (subTree.ssContent === vnode || subTree.ssFallback === vnode)) {
        const parentVNode = parentComponent.vnode;
        setScopeId(
          el,
          parentVNode,
          parentVNode.scopeId,
          parentVNode.slotScopeIds,
          parentComponent.parent
        );
      }
    }
  };
  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, start = 0) => {
    for (let i2 = start; i2 < children.length; i2++) {
      const child = children[i2] = optimized ? cloneIfMounted(children[i2]) : normalizeVNode(children[i2]);
      patch(
        null,
        child,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    }
  };
  const patchElement = (n12, n2, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    const el = n2.el = n12.el;
    {
      el.__vnode = n2;
    }
    let { patchFlag, dynamicChildren, dirs } = n2;
    patchFlag |= n12.patchFlag & 16;
    const oldProps = n12.props || EMPTY_OBJ;
    const newProps = n2.props || EMPTY_OBJ;
    let vnodeHook;
    parentComponent && toggleRecurse(parentComponent, false);
    if (vnodeHook = newProps.onVnodeBeforeUpdate) {
      invokeVNodeHook(vnodeHook, parentComponent, n2, n12);
    }
    if (dirs) {
      invokeDirectiveHook(n2, n12, parentComponent, "beforeUpdate");
    }
    parentComponent && toggleRecurse(parentComponent, true);
    if (isHmrUpdating) {
      patchFlag = 0;
      optimized = false;
      dynamicChildren = null;
    }
    if (oldProps.innerHTML && newProps.innerHTML == null || oldProps.textContent && newProps.textContent == null) {
      hostSetElementText(el, "");
    }
    if (dynamicChildren) {
      patchBlockChildren(
        n12.dynamicChildren,
        dynamicChildren,
        el,
        parentComponent,
        parentSuspense,
        resolveChildrenNamespace(n2, namespace),
        slotScopeIds
      );
      {
        traverseStaticChildren(n12, n2);
      }
    } else if (!optimized) {
      patchChildren(
        n12,
        n2,
        el,
        null,
        parentComponent,
        parentSuspense,
        resolveChildrenNamespace(n2, namespace),
        slotScopeIds,
        false
      );
    }
    if (patchFlag > 0) {
      if (patchFlag & 16) {
        patchProps(el, oldProps, newProps, parentComponent, namespace);
      } else {
        if (patchFlag & 2) {
          if (oldProps.class !== newProps.class) {
            hostPatchProp(el, "class", null, newProps.class, namespace);
          }
        }
        if (patchFlag & 4) {
          hostPatchProp(el, "style", oldProps.style, newProps.style, namespace);
        }
        if (patchFlag & 8) {
          const propsToUpdate = n2.dynamicProps;
          for (let i2 = 0; i2 < propsToUpdate.length; i2++) {
            const key = propsToUpdate[i2];
            const prev = oldProps[key];
            const next = newProps[key];
            if (next !== prev || key === "value") {
              hostPatchProp(el, key, prev, next, namespace, parentComponent);
            }
          }
        }
      }
      if (patchFlag & 1) {
        if (n12.children !== n2.children) {
          hostSetElementText(el, n2.children);
        }
      }
    } else if (!optimized && dynamicChildren == null) {
      patchProps(el, oldProps, newProps, parentComponent, namespace);
    }
    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {
      queuePostRenderEffect(() => {
        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n12);
        dirs && invokeDirectiveHook(n2, n12, parentComponent, "updated");
      }, parentSuspense);
    }
  };
  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, namespace, slotScopeIds) => {
    for (let i2 = 0; i2 < newChildren.length; i2++) {
      const oldVNode = oldChildren[i2];
      const newVNode = newChildren[i2];
      const container = (
        // oldVNode may be an errored async setup() component inside Suspense
        // which will not have a mounted element
        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent
        // of the Fragment itself so it can move its children.
        (oldVNode.type === Fragment$1 || // - In the case of different nodes, there is going to be a replacement
        // which also requires the correct parent container
        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.
        oldVNode.shapeFlag & (6 | 64)) ? hostParentNode(oldVNode.el) : (
          // In other cases, the parent container is not actually used so we
          // just pass the block element here to avoid a DOM parentNode call.
          fallbackContainer
        )
      );
      patch(
        oldVNode,
        newVNode,
        container,
        null,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        true
      );
    }
  };
  const patchProps = (el, oldProps, newProps, parentComponent, namespace) => {
    if (oldProps !== newProps) {
      if (oldProps !== EMPTY_OBJ) {
        for (const key in oldProps) {
          if (!isReservedProp(key) && !(key in newProps)) {
            hostPatchProp(
              el,
              key,
              oldProps[key],
              null,
              namespace,
              parentComponent
            );
          }
        }
      }
      for (const key in newProps) {
        if (isReservedProp(key)) continue;
        const next = newProps[key];
        const prev = oldProps[key];
        if (next !== prev && key !== "value") {
          hostPatchProp(el, key, prev, next, namespace, parentComponent);
        }
      }
      if ("value" in newProps) {
        hostPatchProp(el, "value", oldProps.value, newProps.value, namespace);
      }
    }
  };
  const processFragment = (n12, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    const fragmentStartAnchor = n2.el = n12 ? n12.el : hostCreateText("");
    const fragmentEndAnchor = n2.anchor = n12 ? n12.anchor : hostCreateText("");
    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;
    if (
      // #5523 dev root fragment may inherit directives
      isHmrUpdating || patchFlag & 2048
    ) {
      patchFlag = 0;
      optimized = false;
      dynamicChildren = null;
    }
    if (fragmentSlotScopeIds) {
      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;
    }
    if (n12 == null) {
      hostInsert(fragmentStartAnchor, container, anchor);
      hostInsert(fragmentEndAnchor, container, anchor);
      mountChildren(
        // #10007
        // such fragment like `<></>` will be compiled into
        // a fragment which doesn't have a children.
        // In this case fallback to an empty array
        n2.children || [],
        container,
        fragmentEndAnchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    } else {
      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result
      // of renderSlot() with no valid children
      n12.dynamicChildren) {
        patchBlockChildren(
          n12.dynamicChildren,
          dynamicChildren,
          container,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds
        );
        {
          traverseStaticChildren(n12, n2);
        }
      } else {
        patchChildren(
          n12,
          n2,
          container,
          fragmentEndAnchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
      }
    }
  };
  const processComponent = (n12, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    n2.slotScopeIds = slotScopeIds;
    if (n12 == null) {
      if (n2.shapeFlag & 512) {
        parentComponent.ctx.activate(
          n2,
          container,
          anchor,
          namespace,
          optimized
        );
      } else {
        mountComponent(
          n2,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          optimized
        );
      }
    } else {
      updateComponent(n12, n2, optimized);
    }
  };
  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, namespace, optimized) => {
    const instance = initialVNode.component = createComponentInstance(
      initialVNode,
      parentComponent,
      parentSuspense
    );
    if (instance.type.__hmrId) {
      registerHMR(instance);
    }
    {
      pushWarningContext(initialVNode);
      startMeasure(instance, `mount`);
    }
    if (isKeepAlive(initialVNode)) {
      instance.ctx.renderer = internals;
    }
    {
      {
        startMeasure(instance, `init`);
      }
      setupComponent(instance, false, optimized);
      {
        endMeasure(instance, `init`);
      }
    }
    if (instance.asyncDep) {
      if (isHmrUpdating) initialVNode.el = null;
      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect, optimized);
      if (!initialVNode.el) {
        const placeholder = instance.subTree = createVNode(Comment);
        processCommentNode(null, placeholder, container, anchor);
      }
    } else {
      setupRenderEffect(
        instance,
        initialVNode,
        container,
        anchor,
        parentSuspense,
        namespace,
        optimized
      );
    }
    {
      popWarningContext();
      endMeasure(instance, `mount`);
    }
  };
  const updateComponent = (n12, n2, optimized) => {
    const instance = n2.component = n12.component;
    if (shouldUpdateComponent(n12, n2, optimized)) {
      if (instance.asyncDep && !instance.asyncResolved) {
        {
          pushWarningContext(n2);
        }
        updateComponentPreRender(instance, n2, optimized);
        {
          popWarningContext();
        }
        return;
      } else {
        instance.next = n2;
        instance.update();
      }
    } else {
      n2.el = n12.el;
      instance.vnode = n2;
    }
  };
  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, namespace, optimized) => {
    const componentUpdateFn = () => {
      if (!instance.isMounted) {
        let vnodeHook;
        const { el, props } = initialVNode;
        const { bm, m: m2, parent, root, type } = instance;
        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);
        toggleRecurse(instance, false);
        if (bm) {
          invokeArrayFns(bm);
        }
        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {
          invokeVNodeHook(vnodeHook, parent, initialVNode);
        }
        toggleRecurse(instance, true);
        if (el && hydrateNode) {
          const hydrateSubTree = () => {
            {
              startMeasure(instance, `render`);
            }
            instance.subTree = renderComponentRoot(instance);
            {
              endMeasure(instance, `render`);
            }
            {
              startMeasure(instance, `hydrate`);
            }
            hydrateNode(
              el,
              instance.subTree,
              instance,
              parentSuspense,
              null
            );
            {
              endMeasure(instance, `hydrate`);
            }
          };
          if (isAsyncWrapperVNode && type.__asyncHydrate) {
            type.__asyncHydrate(
              el,
              instance,
              hydrateSubTree
            );
          } else {
            hydrateSubTree();
          }
        } else {
          if (root.ce) {
            root.ce._injectChildStyle(type);
          }
          {
            startMeasure(instance, `render`);
          }
          const subTree = instance.subTree = renderComponentRoot(instance);
          {
            endMeasure(instance, `render`);
          }
          {
            startMeasure(instance, `patch`);
          }
          patch(
            null,
            subTree,
            container,
            anchor,
            instance,
            parentSuspense,
            namespace
          );
          {
            endMeasure(instance, `patch`);
          }
          initialVNode.el = subTree.el;
        }
        if (m2) {
          queuePostRenderEffect(m2, parentSuspense);
        }
        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {
          const scopedInitialVNode = initialVNode;
          queuePostRenderEffect(
            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),
            parentSuspense
          );
        }
        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {
          instance.a && queuePostRenderEffect(instance.a, parentSuspense);
        }
        instance.isMounted = true;
        {
          devtoolsComponentAdded(instance);
        }
        initialVNode = container = anchor = null;
      } else {
        let { next, bu, u: u2, parent, vnode } = instance;
        {
          const nonHydratedAsyncRoot = locateNonHydratedAsyncRoot(instance);
          if (nonHydratedAsyncRoot) {
            if (next) {
              next.el = vnode.el;
              updateComponentPreRender(instance, next, optimized);
            }
            nonHydratedAsyncRoot.asyncDep.then(() => {
              if (!instance.isUnmounted) {
                componentUpdateFn();
              }
            });
            return;
          }
        }
        let originNext = next;
        let vnodeHook;
        {
          pushWarningContext(next || instance.vnode);
        }
        toggleRecurse(instance, false);
        if (next) {
          next.el = vnode.el;
          updateComponentPreRender(instance, next, optimized);
        } else {
          next = vnode;
        }
        if (bu) {
          invokeArrayFns(bu);
        }
        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {
          invokeVNodeHook(vnodeHook, parent, next, vnode);
        }
        toggleRecurse(instance, true);
        {
          startMeasure(instance, `render`);
        }
        const nextTree = renderComponentRoot(instance);
        {
          endMeasure(instance, `render`);
        }
        const prevTree = instance.subTree;
        instance.subTree = nextTree;
        {
          startMeasure(instance, `patch`);
        }
        patch(
          prevTree,
          nextTree,
          // parent may have changed if it's in a teleport
          hostParentNode(prevTree.el),
          // anchor may have changed if it's in a fragment
          getNextHostNode(prevTree),
          instance,
          parentSuspense,
          namespace
        );
        {
          endMeasure(instance, `patch`);
        }
        next.el = nextTree.el;
        if (originNext === null) {
          updateHOCHostEl(instance, nextTree.el);
        }
        if (u2) {
          queuePostRenderEffect(u2, parentSuspense);
        }
        if (vnodeHook = next.props && next.props.onVnodeUpdated) {
          queuePostRenderEffect(
            () => invokeVNodeHook(vnodeHook, parent, next, vnode),
            parentSuspense
          );
        }
        {
          devtoolsComponentUpdated(instance);
        }
        {
          popWarningContext();
        }
      }
    };
    instance.scope.on();
    const effect2 = instance.effect = new ReactiveEffect(componentUpdateFn);
    instance.scope.off();
    const update2 = instance.update = effect2.run.bind(effect2);
    const job = instance.job = effect2.runIfDirty.bind(effect2);
    job.i = instance;
    job.id = instance.uid;
    effect2.scheduler = () => queueJob(job);
    toggleRecurse(instance, true);
    {
      effect2.onTrack = instance.rtc ? (e2) => invokeArrayFns(instance.rtc, e2) : void 0;
      effect2.onTrigger = instance.rtg ? (e2) => invokeArrayFns(instance.rtg, e2) : void 0;
    }
    update2();
  };
  const updateComponentPreRender = (instance, nextVNode, optimized) => {
    nextVNode.component = instance;
    const prevProps = instance.vnode.props;
    instance.vnode = nextVNode;
    instance.next = null;
    updateProps(instance, nextVNode.props, prevProps, optimized);
    updateSlots(instance, nextVNode.children, optimized);
    pauseTracking();
    flushPreFlushCbs(instance);
    resetTracking();
  };
  const patchChildren = (n12, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized = false) => {
    const c1 = n12 && n12.children;
    const prevShapeFlag = n12 ? n12.shapeFlag : 0;
    const c2 = n2.children;
    const { patchFlag, shapeFlag } = n2;
    if (patchFlag > 0) {
      if (patchFlag & 128) {
        patchKeyedChildren(
          c1,
          c2,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
        return;
      } else if (patchFlag & 256) {
        patchUnkeyedChildren(
          c1,
          c2,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
        return;
      }
    }
    if (shapeFlag & 8) {
      if (prevShapeFlag & 16) {
        unmountChildren(c1, parentComponent, parentSuspense);
      }
      if (c2 !== c1) {
        hostSetElementText(container, c2);
      }
    } else {
      if (prevShapeFlag & 16) {
        if (shapeFlag & 16) {
          patchKeyedChildren(
            c1,
            c2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else {
          unmountChildren(c1, parentComponent, parentSuspense, true);
        }
      } else {
        if (prevShapeFlag & 8) {
          hostSetElementText(container, "");
        }
        if (shapeFlag & 16) {
          mountChildren(
            c2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        }
      }
    }
  };
  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    c1 = c1 || EMPTY_ARR;
    c2 = c2 || EMPTY_ARR;
    const oldLength = c1.length;
    const newLength = c2.length;
    const commonLength = Math.min(oldLength, newLength);
    let i2;
    for (i2 = 0; i2 < commonLength; i2++) {
      const nextChild = c2[i2] = optimized ? cloneIfMounted(c2[i2]) : normalizeVNode(c2[i2]);
      patch(
        c1[i2],
        nextChild,
        container,
        null,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    }
    if (oldLength > newLength) {
      unmountChildren(
        c1,
        parentComponent,
        parentSuspense,
        true,
        false,
        commonLength
      );
    } else {
      mountChildren(
        c2,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized,
        commonLength
      );
    }
  };
  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    let i2 = 0;
    const l2 = c2.length;
    let e1 = c1.length - 1;
    let e2 = l2 - 1;
    while (i2 <= e1 && i2 <= e2) {
      const n12 = c1[i2];
      const n2 = c2[i2] = optimized ? cloneIfMounted(c2[i2]) : normalizeVNode(c2[i2]);
      if (isSameVNodeType(n12, n2)) {
        patch(
          n12,
          n2,
          container,
          null,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
      } else {
        break;
      }
      i2++;
    }
    while (i2 <= e1 && i2 <= e2) {
      const n12 = c1[e1];
      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);
      if (isSameVNodeType(n12, n2)) {
        patch(
          n12,
          n2,
          container,
          null,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
      } else {
        break;
      }
      e1--;
      e2--;
    }
    if (i2 > e1) {
      if (i2 <= e2) {
        const nextPos = e2 + 1;
        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;
        while (i2 <= e2) {
          patch(
            null,
            c2[i2] = optimized ? cloneIfMounted(c2[i2]) : normalizeVNode(c2[i2]),
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
          i2++;
        }
      }
    } else if (i2 > e2) {
      while (i2 <= e1) {
        unmount(c1[i2], parentComponent, parentSuspense, true);
        i2++;
      }
    } else {
      const s1 = i2;
      const s2 = i2;
      const keyToNewIndexMap = /* @__PURE__ */ new Map();
      for (i2 = s2; i2 <= e2; i2++) {
        const nextChild = c2[i2] = optimized ? cloneIfMounted(c2[i2]) : normalizeVNode(c2[i2]);
        if (nextChild.key != null) {
          if (keyToNewIndexMap.has(nextChild.key)) {
            warn$1(
              `Duplicate keys found during update:`,
              JSON.stringify(nextChild.key),
              `Make sure keys are unique.`
            );
          }
          keyToNewIndexMap.set(nextChild.key, i2);
        }
      }
      let j;
      let patched = 0;
      const toBePatched = e2 - s2 + 1;
      let moved = false;
      let maxNewIndexSoFar = 0;
      const newIndexToOldIndexMap = new Array(toBePatched);
      for (i2 = 0; i2 < toBePatched; i2++) newIndexToOldIndexMap[i2] = 0;
      for (i2 = s1; i2 <= e1; i2++) {
        const prevChild = c1[i2];
        if (patched >= toBePatched) {
          unmount(prevChild, parentComponent, parentSuspense, true);
          continue;
        }
        let newIndex;
        if (prevChild.key != null) {
          newIndex = keyToNewIndexMap.get(prevChild.key);
        } else {
          for (j = s2; j <= e2; j++) {
            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {
              newIndex = j;
              break;
            }
          }
        }
        if (newIndex === void 0) {
          unmount(prevChild, parentComponent, parentSuspense, true);
        } else {
          newIndexToOldIndexMap[newIndex - s2] = i2 + 1;
          if (newIndex >= maxNewIndexSoFar) {
            maxNewIndexSoFar = newIndex;
          } else {
            moved = true;
          }
          patch(
            prevChild,
            c2[newIndex],
            container,
            null,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
          patched++;
        }
      }
      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : EMPTY_ARR;
      j = increasingNewIndexSequence.length - 1;
      for (i2 = toBePatched - 1; i2 >= 0; i2--) {
        const nextIndex = s2 + i2;
        const nextChild = c2[nextIndex];
        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;
        if (newIndexToOldIndexMap[i2] === 0) {
          patch(
            null,
            nextChild,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else if (moved) {
          if (j < 0 || i2 !== increasingNewIndexSequence[j]) {
            move(nextChild, container, anchor, 2);
          } else {
            j--;
          }
        }
      }
    }
  };
  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {
    const { el, type, transition, children, shapeFlag } = vnode;
    if (shapeFlag & 6) {
      move(vnode.component.subTree, container, anchor, moveType);
      return;
    }
    if (shapeFlag & 128) {
      vnode.suspense.move(container, anchor, moveType);
      return;
    }
    if (shapeFlag & 64) {
      type.move(vnode, container, anchor, internals);
      return;
    }
    if (type === Fragment$1) {
      hostInsert(el, container, anchor);
      for (let i2 = 0; i2 < children.length; i2++) {
        move(children[i2], container, anchor, moveType);
      }
      hostInsert(vnode.anchor, container, anchor);
      return;
    }
    if (type === Static) {
      moveStaticNode(vnode, container, anchor);
      return;
    }
    const needTransition2 = moveType !== 2 && shapeFlag & 1 && transition;
    if (needTransition2) {
      if (moveType === 0) {
        transition.beforeEnter(el);
        hostInsert(el, container, anchor);
        queuePostRenderEffect(() => transition.enter(el), parentSuspense);
      } else {
        const { leave, delayLeave, afterLeave } = transition;
        const remove22 = () => hostInsert(el, container, anchor);
        const performLeave = () => {
          leave(el, () => {
            remove22();
            afterLeave && afterLeave();
          });
        };
        if (delayLeave) {
          delayLeave(el, remove22, performLeave);
        } else {
          performLeave();
        }
      }
    } else {
      hostInsert(el, container, anchor);
    }
  };
  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {
    const {
      type,
      props,
      ref: ref3,
      children,
      dynamicChildren,
      shapeFlag,
      patchFlag,
      dirs,
      cacheIndex
    } = vnode;
    if (patchFlag === -2) {
      optimized = false;
    }
    if (ref3 != null) {
      setRef(ref3, null, parentSuspense, vnode, true);
    }
    if (cacheIndex != null) {
      parentComponent.renderCache[cacheIndex] = void 0;
    }
    if (shapeFlag & 256) {
      parentComponent.ctx.deactivate(vnode);
      return;
    }
    const shouldInvokeDirs = shapeFlag & 1 && dirs;
    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);
    let vnodeHook;
    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {
      invokeVNodeHook(vnodeHook, parentComponent, vnode);
    }
    if (shapeFlag & 6) {
      unmountComponent(vnode.component, parentSuspense, doRemove);
    } else {
      if (shapeFlag & 128) {
        vnode.suspense.unmount(parentSuspense, doRemove);
        return;
      }
      if (shouldInvokeDirs) {
        invokeDirectiveHook(vnode, null, parentComponent, "beforeUnmount");
      }
      if (shapeFlag & 64) {
        vnode.type.remove(
          vnode,
          parentComponent,
          parentSuspense,
          internals,
          doRemove
        );
      } else if (dynamicChildren && // #5154
      // when v-once is used inside a block, setBlockTracking(-1) marks the
      // parent block with hasOnce: true
      // so that it doesn't take the fast path during unmount - otherwise
      // components nested in v-once are never unmounted.
      !dynamicChildren.hasOnce && // #1153: fast path should not be taken for non-stable (v-for) fragments
      (type !== Fragment$1 || patchFlag > 0 && patchFlag & 64)) {
        unmountChildren(
          dynamicChildren,
          parentComponent,
          parentSuspense,
          false,
          true
        );
      } else if (type === Fragment$1 && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {
        unmountChildren(children, parentComponent, parentSuspense);
      }
      if (doRemove) {
        remove2(vnode);
      }
    }
    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {
      queuePostRenderEffect(() => {
        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, "unmounted");
      }, parentSuspense);
    }
  };
  const remove2 = (vnode) => {
    const { type, el, anchor, transition } = vnode;
    if (type === Fragment$1) {
      if (vnode.patchFlag > 0 && vnode.patchFlag & 2048 && transition && !transition.persisted) {
        vnode.children.forEach((child) => {
          if (child.type === Comment) {
            hostRemove(child.el);
          } else {
            remove2(child);
          }
        });
      } else {
        removeFragment(el, anchor);
      }
      return;
    }
    if (type === Static) {
      removeStaticNode(vnode);
      return;
    }
    const performRemove = () => {
      hostRemove(el);
      if (transition && !transition.persisted && transition.afterLeave) {
        transition.afterLeave();
      }
    };
    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {
      const { leave, delayLeave } = transition;
      const performLeave = () => leave(el, performRemove);
      if (delayLeave) {
        delayLeave(vnode.el, performRemove, performLeave);
      } else {
        performLeave();
      }
    } else {
      performRemove();
    }
  };
  const removeFragment = (cur, end) => {
    let next;
    while (cur !== end) {
      next = hostNextSibling(cur);
      hostRemove(cur);
      cur = next;
    }
    hostRemove(end);
  };
  const unmountComponent = (instance, parentSuspense, doRemove) => {
    if (instance.type.__hmrId) {
      unregisterHMR(instance);
    }
    const { bum, scope, job, subTree, um, m: m2, a: a2 } = instance;
    invalidateMount(m2);
    invalidateMount(a2);
    if (bum) {
      invokeArrayFns(bum);
    }
    scope.stop();
    if (job) {
      job.flags |= 8;
      unmount(subTree, instance, parentSuspense, doRemove);
    }
    if (um) {
      queuePostRenderEffect(um, parentSuspense);
    }
    queuePostRenderEffect(() => {
      instance.isUnmounted = true;
    }, parentSuspense);
    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {
      parentSuspense.deps--;
      if (parentSuspense.deps === 0) {
        parentSuspense.resolve();
      }
    }
    {
      devtoolsComponentRemoved(instance);
    }
  };
  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {
    for (let i2 = start; i2 < children.length; i2++) {
      unmount(children[i2], parentComponent, parentSuspense, doRemove, optimized);
    }
  };
  const getNextHostNode = (vnode) => {
    if (vnode.shapeFlag & 6) {
      return getNextHostNode(vnode.component.subTree);
    }
    if (vnode.shapeFlag & 128) {
      return vnode.suspense.next();
    }
    const el = hostNextSibling(vnode.anchor || vnode.el);
    const teleportEnd = el && el[TeleportEndKey];
    return teleportEnd ? hostNextSibling(teleportEnd) : el;
  };
  let isFlushing = false;
  const render = (vnode, container, namespace) => {
    if (vnode == null) {
      if (container._vnode) {
        unmount(container._vnode, null, null, true);
      }
    } else {
      patch(
        container._vnode || null,
        vnode,
        container,
        null,
        null,
        null,
        namespace
      );
    }
    container._vnode = vnode;
    if (!isFlushing) {
      isFlushing = true;
      flushPreFlushCbs();
      flushPostFlushCbs();
      isFlushing = false;
    }
  };
  const internals = {
    p: patch,
    um: unmount,
    m: move,
    r: remove2,
    mt: mountComponent,
    mc: mountChildren,
    pc: patchChildren,
    pbc: patchBlockChildren,
    n: getNextHostNode,
    o: options
  };
  let hydrate;
  let hydrateNode;
  if (createHydrationFns) {
    [hydrate, hydrateNode] = createHydrationFns(
      internals
    );
  }
  return {
    render,
    hydrate,
    createApp: createAppAPI(render, hydrate)
  };
}
function resolveChildrenNamespace({ type, props }, currentNamespace) {
  return currentNamespace === "svg" && type === "foreignObject" || currentNamespace === "mathml" && type === "annotation-xml" && props && props.encoding && props.encoding.includes("html") ? void 0 : currentNamespace;
}
function toggleRecurse({ effect: effect2, job }, allowed) {
  if (allowed) {
    effect2.flags |= 32;
    job.flags |= 4;
  } else {
    effect2.flags &= ~32;
    job.flags &= ~4;
  }
}
function needTransition(parentSuspense, transition) {
  return (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;
}
function traverseStaticChildren(n12, n2, shallow = false) {
  const ch1 = n12.children;
  const ch2 = n2.children;
  if (isArray$3(ch1) && isArray$3(ch2)) {
    for (let i2 = 0; i2 < ch1.length; i2++) {
      const c1 = ch1[i2];
      let c2 = ch2[i2];
      if (c2.shapeFlag & 1 && !c2.dynamicChildren) {
        if (c2.patchFlag <= 0 || c2.patchFlag === 32) {
          c2 = ch2[i2] = cloneIfMounted(ch2[i2]);
          c2.el = c1.el;
        }
        if (!shallow && c2.patchFlag !== -2)
          traverseStaticChildren(c1, c2);
      }
      if (c2.type === Text) {
        c2.el = c1.el;
      }
      if (c2.type === Comment && !c2.el) {
        c2.el = c1.el;
      }
    }
  }
}
function getSequence(arr) {
  const p2 = arr.slice();
  const result = [0];
  let i2, j, u2, v, c;
  const len = arr.length;
  for (i2 = 0; i2 < len; i2++) {
    const arrI = arr[i2];
    if (arrI !== 0) {
      j = result[result.length - 1];
      if (arr[j] < arrI) {
        p2[i2] = j;
        result.push(i2);
        continue;
      }
      u2 = 0;
      v = result.length - 1;
      while (u2 < v) {
        c = u2 + v >> 1;
        if (arr[result[c]] < arrI) {
          u2 = c + 1;
        } else {
          v = c;
        }
      }
      if (arrI < arr[result[u2]]) {
        if (u2 > 0) {
          p2[i2] = result[u2 - 1];
        }
        result[u2] = i2;
      }
    }
  }
  u2 = result.length;
  v = result[u2 - 1];
  while (u2-- > 0) {
    result[u2] = v;
    v = p2[v];
  }
  return result;
}
function locateNonHydratedAsyncRoot(instance) {
  const subComponent = instance.subTree.component;
  if (subComponent) {
    if (subComponent.asyncDep && !subComponent.asyncResolved) {
      return subComponent;
    } else {
      return locateNonHydratedAsyncRoot(subComponent);
    }
  }
}
function invalidateMount(hooks2) {
  if (hooks2) {
    for (let i2 = 0; i2 < hooks2.length; i2++)
      hooks2[i2].flags |= 8;
  }
}
const ssrContextKey = Symbol.for("v-scx");
const useSSRContext = () => {
  {
    const ctx = inject(ssrContextKey);
    if (!ctx) {
      warn$1(
        `Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build.`
      );
    }
    return ctx;
  }
};
function watchEffect(effect2, options) {
  return doWatch(effect2, null, options);
}
function watch(source, cb, options) {
  if (!isFunction$1(cb)) {
    warn$1(
      `\`watch(fn, options?)\` signature has been moved to a separate API. Use \`watchEffect(fn, options?)\` instead. \`watch\` now only supports \`watch(source, cb, options?) signature.`
    );
  }
  return doWatch(source, cb, options);
}
function doWatch(source, cb, options = EMPTY_OBJ) {
  const { immediate, deep, flush, once } = options;
  if (!cb) {
    if (immediate !== void 0) {
      warn$1(
        `watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.`
      );
    }
    if (deep !== void 0) {
      warn$1(
        `watch() "deep" option is only respected when using the watch(source, callback, options?) signature.`
      );
    }
    if (once !== void 0) {
      warn$1(
        `watch() "once" option is only respected when using the watch(source, callback, options?) signature.`
      );
    }
  }
  const baseWatchOptions = extend({}, options);
  baseWatchOptions.onWarn = warn$1;
  let ssrCleanup;
  if (isInSSRComponentSetup) {
    if (flush === "sync") {
      const ctx = useSSRContext();
      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);
    } else if (!cb || immediate) {
      baseWatchOptions.once = true;
    } else {
      const watchStopHandle = () => {
      };
      watchStopHandle.stop = NOOP;
      watchStopHandle.resume = NOOP;
      watchStopHandle.pause = NOOP;
      return watchStopHandle;
    }
  }
  const instance = currentInstance;
  baseWatchOptions.call = (fn, type, args) => callWithAsyncErrorHandling(fn, instance, type, args);
  let isPre = false;
  if (flush === "post") {
    baseWatchOptions.scheduler = (job) => {
      queuePostRenderEffect(job, instance && instance.suspense);
    };
  } else if (flush !== "sync") {
    isPre = true;
    baseWatchOptions.scheduler = (job, isFirstRun) => {
      if (isFirstRun) {
        job();
      } else {
        queueJob(job);
      }
    };
  }
  baseWatchOptions.augmentJob = (job) => {
    if (cb) {
      job.flags |= 4;
    }
    if (isPre) {
      job.flags |= 2;
      if (instance) {
        job.id = instance.uid;
        job.i = instance;
      }
    }
  };
  const watchHandle = watch$1(source, cb, baseWatchOptions);
  if (ssrCleanup) ssrCleanup.push(watchHandle);
  return watchHandle;
}
function instanceWatch(source, value, options) {
  const publicThis = this.proxy;
  const getter = isString$3(source) ? source.includes(".") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);
  let cb;
  if (isFunction$1(value)) {
    cb = value;
  } else {
    cb = value.handler;
    options = value;
  }
  const reset = setCurrentInstance(this);
  const res = doWatch(getter, cb.bind(publicThis), options);
  reset();
  return res;
}
function createPathGetter(ctx, path) {
  const segments = path.split(".");
  return () => {
    let cur = ctx;
    for (let i2 = 0; i2 < segments.length && cur; i2++) {
      cur = cur[segments[i2]];
    }
    return cur;
  };
}
const getModelModifiers = (props, modelName) => {
  return modelName === "modelValue" || modelName === "model-value" ? props.modelModifiers : props[`${modelName}Modifiers`] || props[`${camelize(modelName)}Modifiers`] || props[`${hyphenate(modelName)}Modifiers`];
};
function emit(instance, event, ...rawArgs) {
  if (instance.isUnmounted) return;
  const props = instance.vnode.props || EMPTY_OBJ;
  {
    const {
      emitsOptions,
      propsOptions: [propsOptions]
    } = instance;
    if (emitsOptions) {
      if (!(event in emitsOptions) && true) {
        if (!propsOptions || !(toHandlerKey(camelize(event)) in propsOptions)) {
          warn$1(
            `Component emitted event "${event}" but it is neither declared in the emits option nor as an "${toHandlerKey(camelize(event))}" prop.`
          );
        }
      } else {
        const validator = emitsOptions[event];
        if (isFunction$1(validator)) {
          const isValid = validator(...rawArgs);
          if (!isValid) {
            warn$1(
              `Invalid event arguments: event validation failed for event "${event}".`
            );
          }
        }
      }
    }
  }
  let args = rawArgs;
  const isModelListener2 = event.startsWith("update:");
  const modifiers = isModelListener2 && getModelModifiers(props, event.slice(7));
  if (modifiers) {
    if (modifiers.trim) {
      args = rawArgs.map((a2) => isString$3(a2) ? a2.trim() : a2);
    }
    if (modifiers.number) {
      args = rawArgs.map(looseToNumber);
    }
  }
  {
    devtoolsComponentEmit(instance, event, args);
  }
  {
    const lowerCaseEvent = event.toLowerCase();
    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {
      warn$1(
        `Event "${lowerCaseEvent}" is emitted in component ${formatComponentName(
          instance,
          instance.type
        )} but the handler is registered for "${event}". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use "${hyphenate(
          event
        )}" instead of "${event}".`
      );
    }
  }
  let handlerName;
  let handler = props[handlerName = toHandlerKey(event)] || // also try camelCase event handler (#2249)
  props[handlerName = toHandlerKey(camelize(event))];
  if (!handler && isModelListener2) {
    handler = props[handlerName = toHandlerKey(hyphenate(event))];
  }
  if (handler) {
    callWithAsyncErrorHandling(
      handler,
      instance,
      6,
      args
    );
  }
  const onceHandler = props[handlerName + `Once`];
  if (onceHandler) {
    if (!instance.emitted) {
      instance.emitted = {};
    } else if (instance.emitted[handlerName]) {
      return;
    }
    instance.emitted[handlerName] = true;
    callWithAsyncErrorHandling(
      onceHandler,
      instance,
      6,
      args
    );
  }
}
function normalizeEmitsOptions(comp, appContext, asMixin = false) {
  const cache = appContext.emitsCache;
  const cached = cache.get(comp);
  if (cached !== void 0) {
    return cached;
  }
  const raw = comp.emits;
  let normalized = {};
  let hasExtends = false;
  if (!isFunction$1(comp)) {
    const extendEmits = (raw2) => {
      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);
      if (normalizedFromExtend) {
        hasExtends = true;
        extend(normalized, normalizedFromExtend);
      }
    };
    if (!asMixin && appContext.mixins.length) {
      appContext.mixins.forEach(extendEmits);
    }
    if (comp.extends) {
      extendEmits(comp.extends);
    }
    if (comp.mixins) {
      comp.mixins.forEach(extendEmits);
    }
  }
  if (!raw && !hasExtends) {
    if (isObject$1(comp)) {
      cache.set(comp, null);
    }
    return null;
  }
  if (isArray$3(raw)) {
    raw.forEach((key) => normalized[key] = null);
  } else {
    extend(normalized, raw);
  }
  if (isObject$1(comp)) {
    cache.set(comp, normalized);
  }
  return normalized;
}
function isEmitListener(options, key) {
  if (!options || !isOn(key)) {
    return false;
  }
  key = key.slice(2).replace(/Once$/, "");
  return hasOwn(options, key[0].toLowerCase() + key.slice(1)) || hasOwn(options, hyphenate(key)) || hasOwn(options, key);
}
let accessedAttrs = false;
function markAttrsAccessed() {
  accessedAttrs = true;
}
function renderComponentRoot(instance) {
  const {
    type: Component,
    vnode,
    proxy,
    withProxy,
    propsOptions: [propsOptions],
    slots,
    attrs,
    emit: emit2,
    render,
    renderCache,
    props,
    data,
    setupState,
    ctx,
    inheritAttrs
  } = instance;
  const prev = setCurrentRenderingInstance(instance);
  let result;
  let fallthroughAttrs;
  {
    accessedAttrs = false;
  }
  try {
    if (vnode.shapeFlag & 4) {
      const proxyToUse = withProxy || proxy;
      const thisProxy = setupState.__isScriptSetup ? new Proxy(proxyToUse, {
        get(target2, key, receiver) {
          warn$1(
            `Property '${String(
              key
            )}' was accessed via 'this'. Avoid using 'this' in templates.`
          );
          return Reflect.get(target2, key, receiver);
        }
      }) : proxyToUse;
      result = normalizeVNode(
        render.call(
          thisProxy,
          proxyToUse,
          renderCache,
          true ? shallowReadonly(props) : props,
          setupState,
          data,
          ctx
        )
      );
      fallthroughAttrs = attrs;
    } else {
      const render2 = Component;
      if (attrs === props) {
        markAttrsAccessed();
      }
      result = normalizeVNode(
        render2.length > 1 ? render2(
          true ? shallowReadonly(props) : props,
          true ? {
            get attrs() {
              markAttrsAccessed();
              return shallowReadonly(attrs);
            },
            slots,
            emit: emit2
          } : { attrs, slots, emit: emit2 }
        ) : render2(
          true ? shallowReadonly(props) : props,
          null
        )
      );
      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);
    }
  } catch (err) {
    blockStack.length = 0;
    handleError(err, instance, 1);
    result = createVNode(Comment);
  }
  let root = result;
  let setRoot = void 0;
  if (result.patchFlag > 0 && result.patchFlag & 2048) {
    [root, setRoot] = getChildRoot(result);
  }
  if (fallthroughAttrs && inheritAttrs !== false) {
    const keys2 = Object.keys(fallthroughAttrs);
    const { shapeFlag } = root;
    if (keys2.length) {
      if (shapeFlag & (1 | 6)) {
        if (propsOptions && keys2.some(isModelListener)) {
          fallthroughAttrs = filterModelListeners(
            fallthroughAttrs,
            propsOptions
          );
        }
        root = cloneVNode(root, fallthroughAttrs, false, true);
      } else if (!accessedAttrs && root.type !== Comment) {
        const allAttrs = Object.keys(attrs);
        const eventAttrs = [];
        const extraAttrs = [];
        for (let i2 = 0, l2 = allAttrs.length; i2 < l2; i2++) {
          const key = allAttrs[i2];
          if (isOn(key)) {
            if (!isModelListener(key)) {
              eventAttrs.push(key[2].toLowerCase() + key.slice(3));
            }
          } else {
            extraAttrs.push(key);
          }
        }
        if (extraAttrs.length) {
          warn$1(
            `Extraneous non-props attributes (${extraAttrs.join(", ")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.`
          );
        }
        if (eventAttrs.length) {
          warn$1(
            `Extraneous non-emits event listeners (${eventAttrs.join(", ")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.`
          );
        }
      }
    }
  }
  if (vnode.dirs) {
    if (!isElementRoot(root)) {
      warn$1(
        `Runtime directive used on component with non-element root node. The directives will not function as intended.`
      );
    }
    root = cloneVNode(root, null, false, true);
    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;
  }
  if (vnode.transition) {
    if (!isElementRoot(root)) {
      warn$1(
        `Component inside <Transition> renders non-element root node that cannot be animated.`
      );
    }
    setTransitionHooks(root, vnode.transition);
  }
  if (setRoot) {
    setRoot(root);
  } else {
    result = root;
  }
  setCurrentRenderingInstance(prev);
  return result;
}
const getChildRoot = (vnode) => {
  const rawChildren = vnode.children;
  const dynamicChildren = vnode.dynamicChildren;
  const childRoot = filterSingleRoot(rawChildren, false);
  if (!childRoot) {
    return [vnode, void 0];
  } else if (childRoot.patchFlag > 0 && childRoot.patchFlag & 2048) {
    return getChildRoot(childRoot);
  }
  const index = rawChildren.indexOf(childRoot);
  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;
  const setRoot = (updatedRoot) => {
    rawChildren[index] = updatedRoot;
    if (dynamicChildren) {
      if (dynamicIndex > -1) {
        dynamicChildren[dynamicIndex] = updatedRoot;
      } else if (updatedRoot.patchFlag > 0) {
        vnode.dynamicChildren = [...dynamicChildren, updatedRoot];
      }
    }
  };
  return [normalizeVNode(childRoot), setRoot];
};
function filterSingleRoot(children, recurse = true) {
  let singleRoot;
  for (let i2 = 0; i2 < children.length; i2++) {
    const child = children[i2];
    if (isVNode(child)) {
      if (child.type !== Comment || child.children === "v-if") {
        if (singleRoot) {
          return;
        } else {
          singleRoot = child;
          if (recurse && singleRoot.patchFlag > 0 && singleRoot.patchFlag & 2048) {
            return filterSingleRoot(singleRoot.children);
          }
        }
      }
    } else {
      return;
    }
  }
  return singleRoot;
}
const getFunctionalFallthrough = (attrs) => {
  let res;
  for (const key in attrs) {
    if (key === "class" || key === "style" || isOn(key)) {
      (res || (res = {}))[key] = attrs[key];
    }
  }
  return res;
};
const filterModelListeners = (attrs, props) => {
  const res = {};
  for (const key in attrs) {
    if (!isModelListener(key) || !(key.slice(9) in props)) {
      res[key] = attrs[key];
    }
  }
  return res;
};
const isElementRoot = (vnode) => {
  return vnode.shapeFlag & (6 | 1) || vnode.type === Comment;
};
function shouldUpdateComponent(prevVNode, nextVNode, optimized) {
  const { props: prevProps, children: prevChildren, component } = prevVNode;
  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;
  const emits = component.emitsOptions;
  if ((prevChildren || nextChildren) && isHmrUpdating) {
    return true;
  }
  if (nextVNode.dirs || nextVNode.transition) {
    return true;
  }
  if (optimized && patchFlag >= 0) {
    if (patchFlag & 1024) {
      return true;
    }
    if (patchFlag & 16) {
      if (!prevProps) {
        return !!nextProps;
      }
      return hasPropsChanged(prevProps, nextProps, emits);
    } else if (patchFlag & 8) {
      const dynamicProps = nextVNode.dynamicProps;
      for (let i2 = 0; i2 < dynamicProps.length; i2++) {
        const key = dynamicProps[i2];
        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {
          return true;
        }
      }
    }
  } else {
    if (prevChildren || nextChildren) {
      if (!nextChildren || !nextChildren.$stable) {
        return true;
      }
    }
    if (prevProps === nextProps) {
      return false;
    }
    if (!prevProps) {
      return !!nextProps;
    }
    if (!nextProps) {
      return true;
    }
    return hasPropsChanged(prevProps, nextProps, emits);
  }
  return false;
}
function hasPropsChanged(prevProps, nextProps, emitsOptions) {
  const nextKeys = Object.keys(nextProps);
  if (nextKeys.length !== Object.keys(prevProps).length) {
    return true;
  }
  for (let i2 = 0; i2 < nextKeys.length; i2++) {
    const key = nextKeys[i2];
    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {
      return true;
    }
  }
  return false;
}
function updateHOCHostEl({ vnode, parent }, el) {
  while (parent) {
    const root = parent.subTree;
    if (root.suspense && root.suspense.activeBranch === vnode) {
      root.el = vnode.el;
    }
    if (root === vnode) {
      (vnode = parent.vnode).el = el;
      parent = parent.parent;
    } else {
      break;
    }
  }
}
const isSuspense = (type) => type.__isSuspense;
function queueEffectWithSuspense(fn, suspense) {
  if (suspense && suspense.pendingBranch) {
    if (isArray$3(fn)) {
      suspense.effects.push(...fn);
    } else {
      suspense.effects.push(fn);
    }
  } else {
    queuePostFlushCb(fn);
  }
}
const Fragment$1 = Symbol.for("v-fgt");
const Text = Symbol.for("v-txt");
const Comment = Symbol.for("v-cmt");
const Static = Symbol.for("v-stc");
const blockStack = [];
let currentBlock = null;
function openBlock(disableTracking = false) {
  blockStack.push(currentBlock = disableTracking ? null : []);
}
function closeBlock() {
  blockStack.pop();
  currentBlock = blockStack[blockStack.length - 1] || null;
}
let isBlockTreeEnabled = 1;
function setBlockTracking(value) {
  isBlockTreeEnabled += value;
  if (value < 0 && currentBlock) {
    currentBlock.hasOnce = true;
  }
}
function setupBlock(vnode) {
  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;
  closeBlock();
  if (isBlockTreeEnabled > 0 && currentBlock) {
    currentBlock.push(vnode);
  }
  return vnode;
}
function createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {
  return setupBlock(
    createBaseVNode(
      type,
      props,
      children,
      patchFlag,
      dynamicProps,
      shapeFlag,
      true
    )
  );
}
function createBlock(type, props, children, patchFlag, dynamicProps) {
  return setupBlock(
    createVNode(
      type,
      props,
      children,
      patchFlag,
      dynamicProps,
      true
    )
  );
}
function isVNode(value) {
  return value ? value.__v_isVNode === true : false;
}
function isSameVNodeType(n12, n2) {
  if (n2.shapeFlag & 6 && n12.component) {
    const dirtyInstances = hmrDirtyComponents.get(n2.type);
    if (dirtyInstances && dirtyInstances.has(n12.component)) {
      n12.shapeFlag &= ~256;
      n2.shapeFlag &= ~512;
      return false;
    }
  }
  return n12.type === n2.type && n12.key === n2.key;
}
const createVNodeWithArgsTransform = (...args) => {
  return _createVNode(
    ...args
  );
};
const normalizeKey = ({ key }) => key != null ? key : null;
const normalizeRef = ({
  ref: ref3,
  ref_key,
  ref_for
}) => {
  if (typeof ref3 === "number") {
    ref3 = "" + ref3;
  }
  return ref3 != null ? isString$3(ref3) || isRef$1(ref3) || isFunction$1(ref3) ? { i: currentRenderingInstance, r: ref3, k: ref_key, f: !!ref_for } : ref3 : null;
};
function createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment$1 ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {
  const vnode = {
    __v_isVNode: true,
    __v_skip: true,
    type,
    props,
    key: props && normalizeKey(props),
    ref: props && normalizeRef(props),
    scopeId: currentScopeId,
    slotScopeIds: null,
    children,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetStart: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag,
    patchFlag,
    dynamicProps,
    dynamicChildren: null,
    appContext: null,
    ctx: currentRenderingInstance
  };
  if (needFullChildrenNormalization) {
    normalizeChildren(vnode, children);
    if (shapeFlag & 128) {
      type.normalize(vnode);
    }
  } else if (children) {
    vnode.shapeFlag |= isString$3(children) ? 8 : 16;
  }
  if (vnode.key !== vnode.key) {
    warn$1(`VNode created with invalid key (NaN). VNode type:`, vnode.type);
  }
  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself
  !isBlockNode && // has current parent block
  currentBlock && // presence of a patch flag indicates this node needs patching on updates.
  // component nodes also should always be patched, because even if the
  // component doesn't need to update, it needs to persist the instance on to
  // the next vnode so that it can be properly unmounted later.
  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
  // vnode should not be considered dynamic due to handler caching.
  vnode.patchFlag !== 32) {
    currentBlock.push(vnode);
  }
  return vnode;
}
const createVNode = createVNodeWithArgsTransform;
function _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {
  if (!type || type === NULL_DYNAMIC_COMPONENT) {
    if (!type) {
      warn$1(`Invalid vnode type when creating vnode: ${type}.`);
    }
    type = Comment;
  }
  if (isVNode(type)) {
    const cloned = cloneVNode(
      type,
      props,
      true
      /* mergeRef: true */
    );
    if (children) {
      normalizeChildren(cloned, children);
    }
    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {
      if (cloned.shapeFlag & 6) {
        currentBlock[currentBlock.indexOf(type)] = cloned;
      } else {
        currentBlock.push(cloned);
      }
    }
    cloned.patchFlag = -2;
    return cloned;
  }
  if (isClassComponent(type)) {
    type = type.__vccOpts;
  }
  if (props) {
    props = guardReactiveProps(props);
    let { class: klass, style } = props;
    if (klass && !isString$3(klass)) {
      props.class = normalizeClass(klass);
    }
    if (isObject$1(style)) {
      if (isProxy(style) && !isArray$3(style)) {
        style = extend({}, style);
      }
      props.style = normalizeStyle(style);
    }
  }
  const shapeFlag = isString$3(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : isObject$1(type) ? 4 : isFunction$1(type) ? 2 : 0;
  if (shapeFlag & 4 && isProxy(type)) {
    type = toRaw$1(type);
    warn$1(
      `Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with \`markRaw\` or using \`shallowRef\` instead of \`ref\`.`,
      `
Component that was made reactive: `,
      type
    );
  }
  return createBaseVNode(
    type,
    props,
    children,
    patchFlag,
    dynamicProps,
    shapeFlag,
    isBlockNode,
    true
  );
}
function guardReactiveProps(props) {
  if (!props) return null;
  return isProxy(props) || isInternalObject(props) ? extend({}, props) : props;
}
function cloneVNode(vnode, extraProps, mergeRef = false, cloneTransition = false) {
  const { props, ref: ref3, patchFlag, children, transition } = vnode;
  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;
  const cloned = {
    __v_isVNode: true,
    __v_skip: true,
    type: vnode.type,
    props: mergedProps,
    key: mergedProps && normalizeKey(mergedProps),
    ref: extraProps && extraProps.ref ? (
      // #2078 in the case of <component :is="vnode" ref="extra"/>
      // if the vnode itself already has a ref, cloneVNode will need to merge
      // the refs so the single vnode can be set on multiple refs
      mergeRef && ref3 ? isArray$3(ref3) ? ref3.concat(normalizeRef(extraProps)) : [ref3, normalizeRef(extraProps)] : normalizeRef(extraProps)
    ) : ref3,
    scopeId: vnode.scopeId,
    slotScopeIds: vnode.slotScopeIds,
    children: patchFlag === -1 && isArray$3(children) ? children.map(deepCloneVNode) : children,
    target: vnode.target,
    targetStart: vnode.targetStart,
    targetAnchor: vnode.targetAnchor,
    staticCount: vnode.staticCount,
    shapeFlag: vnode.shapeFlag,
    // if the vnode is cloned with extra props, we can no longer assume its
    // existing patch flag to be reliable and need to add the FULL_PROPS flag.
    // note: preserve flag for fragments since they use the flag for children
    // fast paths only.
    patchFlag: extraProps && vnode.type !== Fragment$1 ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,
    dynamicProps: vnode.dynamicProps,
    dynamicChildren: vnode.dynamicChildren,
    appContext: vnode.appContext,
    dirs: vnode.dirs,
    transition,
    // These should technically only be non-null on mounted VNodes. However,
    // they *should* be copied for kept-alive vnodes. So we just always copy
    // them since them being non-null during a mount doesn't affect the logic as
    // they will simply be overwritten.
    component: vnode.component,
    suspense: vnode.suspense,
    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),
    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),
    el: vnode.el,
    anchor: vnode.anchor,
    ctx: vnode.ctx,
    ce: vnode.ce
  };
  if (transition && cloneTransition) {
    setTransitionHooks(
      cloned,
      transition.clone(cloned)
    );
  }
  return cloned;
}
function deepCloneVNode(vnode) {
  const cloned = cloneVNode(vnode);
  if (isArray$3(vnode.children)) {
    cloned.children = vnode.children.map(deepCloneVNode);
  }
  return cloned;
}
function createTextVNode(text = " ", flag = 0) {
  return createVNode(Text, null, text, flag);
}
function createStaticVNode(content, numberOfNodes) {
  const vnode = createVNode(Static, null, content);
  vnode.staticCount = numberOfNodes;
  return vnode;
}
function createCommentVNode(text = "", asBlock = false) {
  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);
}
function normalizeVNode(child) {
  if (child == null || typeof child === "boolean") {
    return createVNode(Comment);
  } else if (isArray$3(child)) {
    return createVNode(
      Fragment$1,
      null,
      // #3666, avoid reference pollution when reusing vnode
      child.slice()
    );
  } else if (isVNode(child)) {
    return cloneIfMounted(child);
  } else {
    return createVNode(Text, null, String(child));
  }
}
function cloneIfMounted(child) {
  return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);
}
function normalizeChildren(vnode, children) {
  let type = 0;
  const { shapeFlag } = vnode;
  if (children == null) {
    children = null;
  } else if (isArray$3(children)) {
    type = 16;
  } else if (typeof children === "object") {
    if (shapeFlag & (1 | 64)) {
      const slot = children.default;
      if (slot) {
        slot._c && (slot._d = false);
        normalizeChildren(vnode, slot());
        slot._c && (slot._d = true);
      }
      return;
    } else {
      type = 32;
      const slotFlag = children._;
      if (!slotFlag && !isInternalObject(children)) {
        children._ctx = currentRenderingInstance;
      } else if (slotFlag === 3 && currentRenderingInstance) {
        if (currentRenderingInstance.slots._ === 1) {
          children._ = 1;
        } else {
          children._ = 2;
          vnode.patchFlag |= 1024;
        }
      }
    }
  } else if (isFunction$1(children)) {
    children = { default: children, _ctx: currentRenderingInstance };
    type = 32;
  } else {
    children = String(children);
    if (shapeFlag & 64) {
      type = 16;
      children = [createTextVNode(children)];
    } else {
      type = 8;
    }
  }
  vnode.children = children;
  vnode.shapeFlag |= type;
}
function mergeProps(...args) {
  const ret = {};
  for (let i2 = 0; i2 < args.length; i2++) {
    const toMerge = args[i2];
    for (const key in toMerge) {
      if (key === "class") {
        if (ret.class !== toMerge.class) {
          ret.class = normalizeClass([ret.class, toMerge.class]);
        }
      } else if (key === "style") {
        ret.style = normalizeStyle([ret.style, toMerge.style]);
      } else if (isOn(key)) {
        const existing = ret[key];
        const incoming = toMerge[key];
        if (incoming && existing !== incoming && !(isArray$3(existing) && existing.includes(incoming))) {
          ret[key] = existing ? [].concat(existing, incoming) : incoming;
        }
      } else if (key !== "") {
        ret[key] = toMerge[key];
      }
    }
  }
  return ret;
}
function invokeVNodeHook(hook2, instance, vnode, prevVNode = null) {
  callWithAsyncErrorHandling(hook2, instance, 7, [
    vnode,
    prevVNode
  ]);
}
const emptyAppContext = createAppContext();
let uid = 0;
function createComponentInstance(vnode, parent, suspense) {
  const type = vnode.type;
  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;
  const instance = {
    uid: uid++,
    vnode,
    type,
    parent,
    appContext,
    root: null,
    // to be immediately set
    next: null,
    subTree: null,
    // will be set synchronously right after creation
    effect: null,
    update: null,
    // will be set synchronously right after creation
    job: null,
    scope: new EffectScope(
      true
      /* detached */
    ),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: parent ? parent.provides : Object.create(appContext.provides),
    ids: parent ? parent.ids : ["", 0, 0],
    accessCache: null,
    renderCache: [],
    // local resolved assets
    components: null,
    directives: null,
    // resolved props and emits options
    propsOptions: normalizePropsOptions(type, appContext),
    emitsOptions: normalizeEmitsOptions(type, appContext),
    // emit
    emit: null,
    // to be set immediately
    emitted: null,
    // props default value
    propsDefaults: EMPTY_OBJ,
    // inheritAttrs
    inheritAttrs: type.inheritAttrs,
    // state
    ctx: EMPTY_OBJ,
    data: EMPTY_OBJ,
    props: EMPTY_OBJ,
    attrs: EMPTY_OBJ,
    slots: EMPTY_OBJ,
    refs: EMPTY_OBJ,
    setupState: EMPTY_OBJ,
    setupContext: null,
    // suspense related
    suspense,
    suspenseId: suspense ? suspense.pendingId : 0,
    asyncDep: null,
    asyncResolved: false,
    // lifecycle hooks
    // not using enums here because it results in computed properties
    isMounted: false,
    isUnmounted: false,
    isDeactivated: false,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  {
    instance.ctx = createDevRenderContext(instance);
  }
  instance.root = parent ? parent.root : instance;
  instance.emit = emit.bind(null, instance);
  if (vnode.ce) {
    vnode.ce(instance);
  }
  return instance;
}
let currentInstance = null;
const getCurrentInstance = () => currentInstance || currentRenderingInstance;
let internalSetCurrentInstance;
let setInSSRSetupState;
{
  const g2 = getGlobalThis();
  const registerGlobalSetter = (key, setter) => {
    let setters;
    if (!(setters = g2[key])) setters = g2[key] = [];
    setters.push(setter);
    return (v) => {
      if (setters.length > 1) setters.forEach((set2) => set2(v));
      else setters[0](v);
    };
  };
  internalSetCurrentInstance = registerGlobalSetter(
    `__VUE_INSTANCE_SETTERS__`,
    (v) => currentInstance = v
  );
  setInSSRSetupState = registerGlobalSetter(
    `__VUE_SSR_SETTERS__`,
    (v) => isInSSRComponentSetup = v
  );
}
const setCurrentInstance = (instance) => {
  const prev = currentInstance;
  internalSetCurrentInstance(instance);
  instance.scope.on();
  return () => {
    instance.scope.off();
    internalSetCurrentInstance(prev);
  };
};
const unsetCurrentInstance = () => {
  currentInstance && currentInstance.scope.off();
  internalSetCurrentInstance(null);
};
const isBuiltInTag = /* @__PURE__ */ makeMap("slot,component");
function validateComponentName(name, { isNativeTag }) {
  if (isBuiltInTag(name) || isNativeTag(name)) {
    warn$1(
      "Do not use built-in or reserved HTML elements as component id: " + name
    );
  }
}
function isStatefulComponent(instance) {
  return instance.vnode.shapeFlag & 4;
}
let isInSSRComponentSetup = false;
function setupComponent(instance, isSSR = false, optimized = false) {
  isSSR && setInSSRSetupState(isSSR);
  const { props, children } = instance.vnode;
  const isStateful = isStatefulComponent(instance);
  initProps(instance, props, isStateful, isSSR);
  initSlots(instance, children, optimized);
  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;
  isSSR && setInSSRSetupState(false);
  return setupResult;
}
function setupStatefulComponent(instance, isSSR) {
  var _a25;
  const Component = instance.type;
  {
    if (Component.name) {
      validateComponentName(Component.name, instance.appContext.config);
    }
    if (Component.components) {
      const names = Object.keys(Component.components);
      for (let i2 = 0; i2 < names.length; i2++) {
        validateComponentName(names[i2], instance.appContext.config);
      }
    }
    if (Component.directives) {
      const names = Object.keys(Component.directives);
      for (let i2 = 0; i2 < names.length; i2++) {
        validateDirectiveName(names[i2]);
      }
    }
    if (Component.compilerOptions && isRuntimeOnly()) {
      warn$1(
        `"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.`
      );
    }
  }
  instance.accessCache = /* @__PURE__ */ Object.create(null);
  instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);
  {
    exposePropsOnRenderContext(instance);
  }
  const { setup } = Component;
  if (setup) {
    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;
    const reset = setCurrentInstance(instance);
    pauseTracking();
    const setupResult = callWithErrorHandling(
      setup,
      instance,
      0,
      [
        shallowReadonly(instance.props),
        setupContext
      ]
    );
    resetTracking();
    reset();
    if (isPromise(setupResult)) {
      if (!isAsyncWrapper(instance)) markAsyncBoundary(instance);
      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);
      if (isSSR) {
        return setupResult.then((resolvedResult) => {
          handleSetupResult(instance, resolvedResult, isSSR);
        }).catch((e2) => {
          handleError(e2, instance, 0);
        });
      } else {
        instance.asyncDep = setupResult;
        if (!instance.suspense) {
          const name = (_a25 = Component.name) != null ? _a25 : "Anonymous";
          warn$1(
            `Component <${name}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`
          );
        }
      }
    } else {
      handleSetupResult(instance, setupResult, isSSR);
    }
  } else {
    finishComponentSetup(instance, isSSR);
  }
}
function handleSetupResult(instance, setupResult, isSSR) {
  if (isFunction$1(setupResult)) {
    if (instance.type.__ssrInlineRender) {
      instance.ssrRender = setupResult;
    } else {
      instance.render = setupResult;
    }
  } else if (isObject$1(setupResult)) {
    if (isVNode(setupResult)) {
      warn$1(
        `setup() should not return VNodes directly - return a render function instead.`
      );
    }
    {
      instance.devtoolsRawSetupState = setupResult;
    }
    instance.setupState = proxyRefs(setupResult);
    {
      exposeSetupStateOnRenderContext(instance);
    }
  } else if (setupResult !== void 0) {
    warn$1(
      `setup() should return an object. Received: ${setupResult === null ? "null" : typeof setupResult}`
    );
  }
  finishComponentSetup(instance, isSSR);
}
let compile;
const isRuntimeOnly = () => !compile;
function finishComponentSetup(instance, isSSR, skipOptions) {
  const Component = instance.type;
  if (!instance.render) {
    if (!isSSR && compile && !Component.render) {
      const template = Component.template || resolveMergedOptions(instance).template;
      if (template) {
        {
          startMeasure(instance, `compile`);
        }
        const { isCustomElement, compilerOptions } = instance.appContext.config;
        const { delimiters, compilerOptions: componentCompilerOptions } = Component;
        const finalCompilerOptions = extend(
          extend(
            {
              isCustomElement,
              delimiters
            },
            compilerOptions
          ),
          componentCompilerOptions
        );
        Component.render = compile(template, finalCompilerOptions);
        {
          endMeasure(instance, `compile`);
        }
      }
    }
    instance.render = Component.render || NOOP;
  }
  {
    const reset = setCurrentInstance(instance);
    pauseTracking();
    try {
      applyOptions(instance);
    } finally {
      resetTracking();
      reset();
    }
  }
  if (!Component.render && instance.render === NOOP && !isSSR) {
    if (Component.template) {
      warn$1(
        `Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".`
      );
    } else {
      warn$1(`Component is missing template or render function: `, Component);
    }
  }
}
const attrsProxyHandlers = {
  get(target2, key) {
    markAttrsAccessed();
    track(target2, "get", "");
    return target2[key];
  },
  set() {
    warn$1(`setupContext.attrs is readonly.`);
    return false;
  },
  deleteProperty() {
    warn$1(`setupContext.attrs is readonly.`);
    return false;
  }
};
function getSlotsProxy(instance) {
  return new Proxy(instance.slots, {
    get(target2, key) {
      track(instance, "get", "$slots");
      return target2[key];
    }
  });
}
function createSetupContext(instance) {
  const expose = (exposed) => {
    {
      if (instance.exposed) {
        warn$1(`expose() should be called only once per setup().`);
      }
      if (exposed != null) {
        let exposedType = typeof exposed;
        if (exposedType === "object") {
          if (isArray$3(exposed)) {
            exposedType = "array";
          } else if (isRef$1(exposed)) {
            exposedType = "ref";
          }
        }
        if (exposedType !== "object") {
          warn$1(
            `expose() should be passed a plain object, received ${exposedType}.`
          );
        }
      }
    }
    instance.exposed = exposed || {};
  };
  {
    let attrsProxy;
    let slotsProxy;
    return Object.freeze({
      get attrs() {
        return attrsProxy || (attrsProxy = new Proxy(instance.attrs, attrsProxyHandlers));
      },
      get slots() {
        return slotsProxy || (slotsProxy = getSlotsProxy(instance));
      },
      get emit() {
        return (event, ...args) => instance.emit(event, ...args);
      },
      expose
    });
  }
}
function getComponentPublicInstance(instance) {
  if (instance.exposed) {
    return instance.exposeProxy || (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {
      get(target2, key) {
        if (key in target2) {
          return target2[key];
        } else if (key in publicPropertiesMap) {
          return publicPropertiesMap[key](instance);
        }
      },
      has(target2, key) {
        return key in target2 || key in publicPropertiesMap;
      }
    }));
  } else {
    return instance.proxy;
  }
}
const classifyRE$1 = /(?:^|[-_])(\w)/g;
const classify$1 = (str) => str.replace(classifyRE$1, (c) => c.toUpperCase()).replace(/[-_]/g, "");
function getComponentName(Component, includeInferred = true) {
  return isFunction$1(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;
}
function formatComponentName(instance, Component, isRoot = false) {
  let name = getComponentName(Component);
  if (!name && Component.__file) {
    const match = Component.__file.match(/([^/\\]+)\.\w+$/);
    if (match) {
      name = match[1];
    }
  }
  if (!name && instance && instance.parent) {
    const inferFromRegistry = (registry) => {
      for (const key in registry) {
        if (registry[key] === Component) {
          return key;
        }
      }
    };
    name = inferFromRegistry(
      instance.components || instance.parent.type.components
    ) || inferFromRegistry(instance.appContext.components);
  }
  return name ? classify$1(name) : isRoot ? `App` : `Anonymous`;
}
function isClassComponent(value) {
  return isFunction$1(value) && "__vccOpts" in value;
}
const computed = (getterOrOptions, debugOptions) => {
  const c = computed$1(getterOrOptions, debugOptions, isInSSRComponentSetup);
  {
    const i2 = getCurrentInstance();
    if (i2 && i2.appContext.config.warnRecursiveComputed) {
      c._warnRecursive = true;
    }
  }
  return c;
};
function h$1(type, propsOrChildren, children) {
  const l2 = arguments.length;
  if (l2 === 2) {
    if (isObject$1(propsOrChildren) && !isArray$3(propsOrChildren)) {
      if (isVNode(propsOrChildren)) {
        return createVNode(type, null, [propsOrChildren]);
      }
      return createVNode(type, propsOrChildren);
    } else {
      return createVNode(type, null, propsOrChildren);
    }
  } else {
    if (l2 > 3) {
      children = Array.prototype.slice.call(arguments, 2);
    } else if (l2 === 3 && isVNode(children)) {
      children = [children];
    }
    return createVNode(type, propsOrChildren, children);
  }
}
function initCustomFormatter() {
  if (typeof window === "undefined") {
    return;
  }
  const vueStyle = { style: "color:#3ba776" };
  const numberStyle = { style: "color:#1677ff" };
  const stringStyle = { style: "color:#f5222d" };
  const keywordStyle = { style: "color:#eb2f96" };
  const formatter = {
    __vue_custom_formatter: true,
    header(obj) {
      if (!isObject$1(obj)) {
        return null;
      }
      if (obj.__isVue) {
        return ["div", vueStyle, `VueInstance`];
      } else if (isRef$1(obj)) {
        return [
          "div",
          {},
          ["span", vueStyle, genRefFlag(obj)],
          "<",
          // avoid debugger accessing value affecting behavior
          formatValue("_value" in obj ? obj._value : obj),
          `>`
        ];
      } else if (isReactive$1(obj)) {
        return [
          "div",
          {},
          ["span", vueStyle, isShallow(obj) ? "ShallowReactive" : "Reactive"],
          "<",
          formatValue(obj),
          `>${isReadonly$1(obj) ? ` (readonly)` : ``}`
        ];
      } else if (isReadonly$1(obj)) {
        return [
          "div",
          {},
          ["span", vueStyle, isShallow(obj) ? "ShallowReadonly" : "Readonly"],
          "<",
          formatValue(obj),
          ">"
        ];
      }
      return null;
    },
    hasBody(obj) {
      return obj && obj.__isVue;
    },
    body(obj) {
      if (obj && obj.__isVue) {
        return [
          "div",
          {},
          ...formatInstance(obj.$)
        ];
      }
    }
  };
  function formatInstance(instance) {
    const blocks = [];
    if (instance.type.props && instance.props) {
      blocks.push(createInstanceBlock("props", toRaw$1(instance.props)));
    }
    if (instance.setupState !== EMPTY_OBJ) {
      blocks.push(createInstanceBlock("setup", instance.setupState));
    }
    if (instance.data !== EMPTY_OBJ) {
      blocks.push(createInstanceBlock("data", toRaw$1(instance.data)));
    }
    const computed2 = extractKeys(instance, "computed");
    if (computed2) {
      blocks.push(createInstanceBlock("computed", computed2));
    }
    const injected = extractKeys(instance, "inject");
    if (injected) {
      blocks.push(createInstanceBlock("injected", injected));
    }
    blocks.push([
      "div",
      {},
      [
        "span",
        {
          style: keywordStyle.style + ";opacity:0.66"
        },
        "$ (internal): "
      ],
      ["object", { object: instance }]
    ]);
    return blocks;
  }
  function createInstanceBlock(type, target2) {
    target2 = extend({}, target2);
    if (!Object.keys(target2).length) {
      return ["span", {}];
    }
    return [
      "div",
      { style: "line-height:1.25em;margin-bottom:0.6em" },
      [
        "div",
        {
          style: "color:#476582"
        },
        type
      ],
      [
        "div",
        {
          style: "padding-left:1.25em"
        },
        ...Object.keys(target2).map((key) => {
          return [
            "div",
            {},
            ["span", keywordStyle, key + ": "],
            formatValue(target2[key], false)
          ];
        })
      ]
    ];
  }
  function formatValue(v, asRaw = true) {
    if (typeof v === "number") {
      return ["span", numberStyle, v];
    } else if (typeof v === "string") {
      return ["span", stringStyle, JSON.stringify(v)];
    } else if (typeof v === "boolean") {
      return ["span", keywordStyle, v];
    } else if (isObject$1(v)) {
      return ["object", { object: asRaw ? toRaw$1(v) : v }];
    } else {
      return ["span", stringStyle, String(v)];
    }
  }
  function extractKeys(instance, type) {
    const Comp = instance.type;
    if (isFunction$1(Comp)) {
      return;
    }
    const extracted = {};
    for (const key in instance.ctx) {
      if (isKeyOfType(Comp, key, type)) {
        extracted[key] = instance.ctx[key];
      }
    }
    return extracted;
  }
  function isKeyOfType(Comp, key, type) {
    const opts = Comp[type];
    if (isArray$3(opts) && opts.includes(key) || isObject$1(opts) && key in opts) {
      return true;
    }
    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {
      return true;
    }
    if (Comp.mixins && Comp.mixins.some((m2) => isKeyOfType(m2, key, type))) {
      return true;
    }
  }
  function genRefFlag(v) {
    if (isShallow(v)) {
      return `ShallowRef`;
    }
    if (v.effect) {
      return `ComputedRef`;
    }
    return `Ref`;
  }
  if (window.devtoolsFormatters) {
    window.devtoolsFormatters.push(formatter);
  } else {
    window.devtoolsFormatters = [formatter];
  }
}
const version = "3.5.11";
const warn$2 = warn$1;
/**
* @vue/runtime-dom v3.5.11
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
let policy = void 0;
const tt = typeof window !== "undefined" && window.trustedTypes;
if (tt) {
  try {
    policy = /* @__PURE__ */ tt.createPolicy("vue", {
      createHTML: (val) => val
    });
  } catch (e2) {
    warn$2(`Error creating trusted types policy: ${e2}`);
  }
}
const unsafeToTrustedHTML = policy ? (val) => policy.createHTML(val) : (val) => val;
const svgNS = "http://www.w3.org/2000/svg";
const mathmlNS = "http://www.w3.org/1998/Math/MathML";
const doc = typeof document !== "undefined" ? document : null;
const templateContainer = doc && /* @__PURE__ */ doc.createElement("template");
const nodeOps = {
  insert: (child, parent, anchor) => {
    parent.insertBefore(child, anchor || null);
  },
  remove: (child) => {
    const parent = child.parentNode;
    if (parent) {
      parent.removeChild(child);
    }
  },
  createElement: (tag, namespace, is, props) => {
    const el = namespace === "svg" ? doc.createElementNS(svgNS, tag) : namespace === "mathml" ? doc.createElementNS(mathmlNS, tag) : is ? doc.createElement(tag, { is }) : doc.createElement(tag);
    if (tag === "select" && props && props.multiple != null) {
      el.setAttribute("multiple", props.multiple);
    }
    return el;
  },
  createText: (text) => doc.createTextNode(text),
  createComment: (text) => doc.createComment(text),
  setText: (node, text) => {
    node.nodeValue = text;
  },
  setElementText: (el, text) => {
    el.textContent = text;
  },
  parentNode: (node) => node.parentNode,
  nextSibling: (node) => node.nextSibling,
  querySelector: (selector2) => doc.querySelector(selector2),
  setScopeId(el, id) {
    el.setAttribute(id, "");
  },
  // __UNSAFE__
  // Reason: innerHTML.
  // Static content here can only come from compiled templates.
  // As long as the user only uses trusted templates, this is safe.
  insertStaticContent(content, parent, anchor, namespace, start, end) {
    const before = anchor ? anchor.previousSibling : parent.lastChild;
    if (start && (start === end || start.nextSibling)) {
      while (true) {
        parent.insertBefore(start.cloneNode(true), anchor);
        if (start === end || !(start = start.nextSibling)) break;
      }
    } else {
      templateContainer.innerHTML = unsafeToTrustedHTML(
        namespace === "svg" ? `<svg>${content}</svg>` : namespace === "mathml" ? `<math>${content}</math>` : content
      );
      const template = templateContainer.content;
      if (namespace === "svg" || namespace === "mathml") {
        const wrapper = template.firstChild;
        while (wrapper.firstChild) {
          template.appendChild(wrapper.firstChild);
        }
        template.removeChild(wrapper);
      }
      parent.insertBefore(template, anchor);
    }
    return [
      // first
      before ? before.nextSibling : parent.firstChild,
      // last
      anchor ? anchor.previousSibling : parent.lastChild
    ];
  }
};
const TRANSITION = "transition";
const ANIMATION = "animation";
const vtcKey = Symbol("_vtc");
const DOMTransitionPropsValidators = {
  name: String,
  type: String,
  css: {
    type: Boolean,
    default: true
  },
  duration: [String, Number, Object],
  enterFromClass: String,
  enterActiveClass: String,
  enterToClass: String,
  appearFromClass: String,
  appearActiveClass: String,
  appearToClass: String,
  leaveFromClass: String,
  leaveActiveClass: String,
  leaveToClass: String
};
const TransitionPropsValidators = /* @__PURE__ */ extend(
  {},
  BaseTransitionPropsValidators,
  DOMTransitionPropsValidators
);
const decorate$1 = (t) => {
  t.displayName = "Transition";
  t.props = TransitionPropsValidators;
  return t;
};
const Transition = /* @__PURE__ */ decorate$1(
  (props, { slots }) => h$1(BaseTransition, resolveTransitionProps(props), slots)
);
const callHook = (hook2, args = []) => {
  if (isArray$3(hook2)) {
    hook2.forEach((h2) => h2(...args));
  } else if (hook2) {
    hook2(...args);
  }
};
const hasExplicitCallback = (hook2) => {
  return hook2 ? isArray$3(hook2) ? hook2.some((h2) => h2.length > 1) : hook2.length > 1 : false;
};
function resolveTransitionProps(rawProps) {
  const baseProps = {};
  for (const key in rawProps) {
    if (!(key in DOMTransitionPropsValidators)) {
      baseProps[key] = rawProps[key];
    }
  }
  if (rawProps.css === false) {
    return baseProps;
  }
  const {
    name = "v",
    type,
    duration,
    enterFromClass = `${name}-enter-from`,
    enterActiveClass = `${name}-enter-active`,
    enterToClass = `${name}-enter-to`,
    appearFromClass = enterFromClass,
    appearActiveClass = enterActiveClass,
    appearToClass = enterToClass,
    leaveFromClass = `${name}-leave-from`,
    leaveActiveClass = `${name}-leave-active`,
    leaveToClass = `${name}-leave-to`
  } = rawProps;
  const durations = normalizeDuration(duration);
  const enterDuration = durations && durations[0];
  const leaveDuration = durations && durations[1];
  const {
    onBeforeEnter,
    onEnter,
    onEnterCancelled,
    onLeave,
    onLeaveCancelled,
    onBeforeAppear = onBeforeEnter,
    onAppear = onEnter,
    onAppearCancelled = onEnterCancelled
  } = baseProps;
  const finishEnter = (el, isAppear, done) => {
    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);
    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);
    done && done();
  };
  const finishLeave = (el, done) => {
    el._isLeaving = false;
    removeTransitionClass(el, leaveFromClass);
    removeTransitionClass(el, leaveToClass);
    removeTransitionClass(el, leaveActiveClass);
    done && done();
  };
  const makeEnterHook = (isAppear) => {
    return (el, done) => {
      const hook2 = isAppear ? onAppear : onEnter;
      const resolve2 = () => finishEnter(el, isAppear, done);
      callHook(hook2, [el, resolve2]);
      nextFrame(() => {
        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);
        addTransitionClass(el, isAppear ? appearToClass : enterToClass);
        if (!hasExplicitCallback(hook2)) {
          whenTransitionEnds(el, type, enterDuration, resolve2);
        }
      });
    };
  };
  return extend(baseProps, {
    onBeforeEnter(el) {
      callHook(onBeforeEnter, [el]);
      addTransitionClass(el, enterFromClass);
      addTransitionClass(el, enterActiveClass);
    },
    onBeforeAppear(el) {
      callHook(onBeforeAppear, [el]);
      addTransitionClass(el, appearFromClass);
      addTransitionClass(el, appearActiveClass);
    },
    onEnter: makeEnterHook(false),
    onAppear: makeEnterHook(true),
    onLeave(el, done) {
      el._isLeaving = true;
      const resolve2 = () => finishLeave(el, done);
      addTransitionClass(el, leaveFromClass);
      addTransitionClass(el, leaveActiveClass);
      forceReflow();
      nextFrame(() => {
        if (!el._isLeaving) {
          return;
        }
        removeTransitionClass(el, leaveFromClass);
        addTransitionClass(el, leaveToClass);
        if (!hasExplicitCallback(onLeave)) {
          whenTransitionEnds(el, type, leaveDuration, resolve2);
        }
      });
      callHook(onLeave, [el, resolve2]);
    },
    onEnterCancelled(el) {
      finishEnter(el, false);
      callHook(onEnterCancelled, [el]);
    },
    onAppearCancelled(el) {
      finishEnter(el, true);
      callHook(onAppearCancelled, [el]);
    },
    onLeaveCancelled(el) {
      finishLeave(el);
      callHook(onLeaveCancelled, [el]);
    }
  });
}
function normalizeDuration(duration) {
  if (duration == null) {
    return null;
  } else if (isObject$1(duration)) {
    return [NumberOf(duration.enter), NumberOf(duration.leave)];
  } else {
    const n2 = NumberOf(duration);
    return [n2, n2];
  }
}
function NumberOf(val) {
  const res = toNumber(val);
  {
    assertNumber(res, "<transition> explicit duration");
  }
  return res;
}
function addTransitionClass(el, cls) {
  cls.split(/\s+/).forEach((c) => c && el.classList.add(c));
  (el[vtcKey] || (el[vtcKey] = /* @__PURE__ */ new Set())).add(cls);
}
function removeTransitionClass(el, cls) {
  cls.split(/\s+/).forEach((c) => c && el.classList.remove(c));
  const _vtc = el[vtcKey];
  if (_vtc) {
    _vtc.delete(cls);
    if (!_vtc.size) {
      el[vtcKey] = void 0;
    }
  }
}
function nextFrame(cb) {
  requestAnimationFrame(() => {
    requestAnimationFrame(cb);
  });
}
let endId = 0;
function whenTransitionEnds(el, expectedType, explicitTimeout, resolve2) {
  const id = el._endId = ++endId;
  const resolveIfNotStale = () => {
    if (id === el._endId) {
      resolve2();
    }
  };
  if (explicitTimeout != null) {
    return setTimeout(resolveIfNotStale, explicitTimeout);
  }
  const { type, timeout, propCount } = getTransitionInfo(el, expectedType);
  if (!type) {
    return resolve2();
  }
  const endEvent = type + "end";
  let ended = 0;
  const end = () => {
    el.removeEventListener(endEvent, onEnd);
    resolveIfNotStale();
  };
  const onEnd = (e2) => {
    if (e2.target === el && ++ended >= propCount) {
      end();
    }
  };
  setTimeout(() => {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(endEvent, onEnd);
}
function getTransitionInfo(el, expectedType) {
  const styles = window.getComputedStyle(el);
  const getStyleProperties = (key) => (styles[key] || "").split(", ");
  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);
  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);
  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);
  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);
  const animationTimeout = getTimeout(animationDelays, animationDurations);
  let type = null;
  let timeout = 0;
  let propCount = 0;
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;
    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;
  }
  const hasTransform = type === TRANSITION && /\b(transform|all)(,|$)/.test(
    getStyleProperties(`${TRANSITION}Property`).toString()
  );
  return {
    type,
    timeout,
    propCount,
    hasTransform
  };
}
function getTimeout(delays, durations) {
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }
  return Math.max(...durations.map((d2, i2) => toMs(d2) + toMs(delays[i2])));
}
function toMs(s2) {
  if (s2 === "auto") return 0;
  return Number(s2.slice(0, -1).replace(",", ".")) * 1e3;
}
function forceReflow() {
  return document.body.offsetHeight;
}
function patchClass(el, value, isSVG) {
  const transitionClasses = el[vtcKey];
  if (transitionClasses) {
    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(" ");
  }
  if (value == null) {
    el.removeAttribute("class");
  } else if (isSVG) {
    el.setAttribute("class", value);
  } else {
    el.className = value;
  }
}
const vShowOriginalDisplay = Symbol("_vod");
const vShowHidden = Symbol("_vsh");
const vShow = {
  beforeMount(el, { value }, { transition }) {
    el[vShowOriginalDisplay] = el.style.display === "none" ? "" : el.style.display;
    if (transition && value) {
      transition.beforeEnter(el);
    } else {
      setDisplay(el, value);
    }
  },
  mounted(el, { value }, { transition }) {
    if (transition && value) {
      transition.enter(el);
    }
  },
  updated(el, { value, oldValue }, { transition }) {
    if (!value === !oldValue) return;
    if (transition) {
      if (value) {
        transition.beforeEnter(el);
        setDisplay(el, true);
        transition.enter(el);
      } else {
        transition.leave(el, () => {
          setDisplay(el, false);
        });
      }
    } else {
      setDisplay(el, value);
    }
  },
  beforeUnmount(el, { value }) {
    setDisplay(el, value);
  }
};
{
  vShow.name = "show";
}
function setDisplay(el, value) {
  el.style.display = value ? el[vShowOriginalDisplay] : "none";
  el[vShowHidden] = !value;
}
const CSS_VAR_TEXT = Symbol("CSS_VAR_TEXT");
const displayRE = /(^|;)\s*display\s*:/;
function patchStyle(el, prev, next) {
  const style = el.style;
  const isCssString = isString$3(next);
  let hasControlledDisplay = false;
  if (next && !isCssString) {
    if (prev) {
      if (!isString$3(prev)) {
        for (const key in prev) {
          if (next[key] == null) {
            setStyle(style, key, "");
          }
        }
      } else {
        for (const prevStyle of prev.split(";")) {
          const key = prevStyle.slice(0, prevStyle.indexOf(":")).trim();
          if (next[key] == null) {
            setStyle(style, key, "");
          }
        }
      }
    }
    for (const key in next) {
      if (key === "display") {
        hasControlledDisplay = true;
      }
      setStyle(style, key, next[key]);
    }
  } else {
    if (isCssString) {
      if (prev !== next) {
        const cssVarText = style[CSS_VAR_TEXT];
        if (cssVarText) {
          next += ";" + cssVarText;
        }
        style.cssText = next;
        hasControlledDisplay = displayRE.test(next);
      }
    } else if (prev) {
      el.removeAttribute("style");
    }
  }
  if (vShowOriginalDisplay in el) {
    el[vShowOriginalDisplay] = hasControlledDisplay ? style.display : "";
    if (el[vShowHidden]) {
      style.display = "none";
    }
  }
}
const semicolonRE = /[^\\];\s*$/;
const importantRE = /\s*!important$/;
function setStyle(style, name, val) {
  if (isArray$3(val)) {
    val.forEach((v) => setStyle(style, name, v));
  } else {
    if (val == null) val = "";
    {
      if (semicolonRE.test(val)) {
        warn$2(
          `Unexpected semicolon at the end of '${name}' style value: '${val}'`
        );
      }
    }
    if (name.startsWith("--")) {
      style.setProperty(name, val);
    } else {
      const prefixed = autoPrefix(style, name);
      if (importantRE.test(val)) {
        style.setProperty(
          hyphenate(prefixed),
          val.replace(importantRE, ""),
          "important"
        );
      } else {
        style[prefixed] = val;
      }
    }
  }
}
const prefixes = ["Webkit", "Moz", "ms"];
const prefixCache = {};
function autoPrefix(style, rawName) {
  const cached = prefixCache[rawName];
  if (cached) {
    return cached;
  }
  let name = camelize(rawName);
  if (name !== "filter" && name in style) {
    return prefixCache[rawName] = name;
  }
  name = capitalize(name);
  for (let i2 = 0; i2 < prefixes.length; i2++) {
    const prefixed = prefixes[i2] + name;
    if (prefixed in style) {
      return prefixCache[rawName] = prefixed;
    }
  }
  return rawName;
}
const xlinkNS = "http://www.w3.org/1999/xlink";
function patchAttr(el, key, value, isSVG, instance, isBoolean2 = isSpecialBooleanAttr(key)) {
  if (isSVG && key.startsWith("xlink:")) {
    if (value == null) {
      el.removeAttributeNS(xlinkNS, key.slice(6, key.length));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    if (value == null || isBoolean2 && !includeBooleanAttr(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(
        key,
        isBoolean2 ? "" : isSymbol$1(value) ? String(value) : value
      );
    }
  }
}
function patchDOMProp(el, key, value, parentComponent) {
  if (key === "innerHTML" || key === "textContent") {
    if (value != null) {
      el[key] = key === "innerHTML" ? unsafeToTrustedHTML(value) : value;
    }
    return;
  }
  const tag = el.tagName;
  if (key === "value" && tag !== "PROGRESS" && // custom elements may use _value internally
  !tag.includes("-")) {
    const oldValue = tag === "OPTION" ? el.getAttribute("value") || "" : el.value;
    const newValue = value == null ? (
      // #11647: value should be set as empty string for null and undefined,
      // but <input type="checkbox"> should be set as 'on'.
      el.type === "checkbox" ? "on" : ""
    ) : String(value);
    if (oldValue !== newValue || !("_value" in el)) {
      el.value = newValue;
    }
    if (value == null) {
      el.removeAttribute(key);
    }
    el._value = value;
    return;
  }
  let needRemove = false;
  if (value === "" || value == null) {
    const type = typeof el[key];
    if (type === "boolean") {
      value = includeBooleanAttr(value);
    } else if (value == null && type === "string") {
      value = "";
      needRemove = true;
    } else if (type === "number") {
      value = 0;
      needRemove = true;
    }
  }
  try {
    el[key] = value;
  } catch (e2) {
    if (!needRemove) {
      warn$2(
        `Failed setting prop "${key}" on <${tag.toLowerCase()}>: value ${value} is invalid.`,
        e2
      );
    }
  }
  needRemove && el.removeAttribute(key);
}
function addEventListener(el, event, handler, options) {
  el.addEventListener(event, handler, options);
}
function removeEventListener(el, event, handler, options) {
  el.removeEventListener(event, handler, options);
}
const veiKey = Symbol("_vei");
function patchEvent(el, rawName, prevValue, nextValue, instance = null) {
  const invokers = el[veiKey] || (el[veiKey] = {});
  const existingInvoker = invokers[rawName];
  if (nextValue && existingInvoker) {
    existingInvoker.value = sanitizeEventValue(nextValue, rawName);
  } else {
    const [name, options] = parseName(rawName);
    if (nextValue) {
      const invoker = invokers[rawName] = createInvoker(
        sanitizeEventValue(nextValue, rawName),
        instance
      );
      addEventListener(el, name, invoker, options);
    } else if (existingInvoker) {
      removeEventListener(el, name, existingInvoker, options);
      invokers[rawName] = void 0;
    }
  }
}
const optionsModifierRE = /(?:Once|Passive|Capture)$/;
function parseName(name) {
  let options;
  if (optionsModifierRE.test(name)) {
    options = {};
    let m2;
    while (m2 = name.match(optionsModifierRE)) {
      name = name.slice(0, name.length - m2[0].length);
      options[m2[0].toLowerCase()] = true;
    }
  }
  const event = name[2] === ":" ? name.slice(3) : hyphenate(name.slice(2));
  return [event, options];
}
let cachedNow = 0;
const p$3 = /* @__PURE__ */ Promise.resolve();
const getNow = () => cachedNow || (p$3.then(() => cachedNow = 0), cachedNow = Date.now());
function createInvoker(initialValue, instance) {
  const invoker = (e2) => {
    if (!e2._vts) {
      e2._vts = Date.now();
    } else if (e2._vts <= invoker.attached) {
      return;
    }
    callWithAsyncErrorHandling(
      patchStopImmediatePropagation(e2, invoker.value),
      instance,
      5,
      [e2]
    );
  };
  invoker.value = initialValue;
  invoker.attached = getNow();
  return invoker;
}
function sanitizeEventValue(value, propName) {
  if (isFunction$1(value) || isArray$3(value)) {
    return value;
  }
  warn$2(
    `Wrong type passed as event handler to ${propName} - did you forget @ or : in front of your prop?
Expected function or array of functions, received type ${typeof value}.`
  );
  return NOOP;
}
function patchStopImmediatePropagation(e2, value) {
  if (isArray$3(value)) {
    const originalStop = e2.stopImmediatePropagation;
    e2.stopImmediatePropagation = () => {
      originalStop.call(e2);
      e2._stopped = true;
    };
    return value.map(
      (fn) => (e22) => !e22._stopped && fn && fn(e22)
    );
  } else {
    return value;
  }
}
const isNativeOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // lowercase letter
key.charCodeAt(2) > 96 && key.charCodeAt(2) < 123;
const patchProp = (el, key, prevValue, nextValue, namespace, parentComponent) => {
  const isSVG = namespace === "svg";
  if (key === "class") {
    patchClass(el, nextValue, isSVG);
  } else if (key === "style") {
    patchStyle(el, prevValue, nextValue);
  } else if (isOn(key)) {
    if (!isModelListener(key)) {
      patchEvent(el, key, prevValue, nextValue, parentComponent);
    }
  } else if (key[0] === "." ? (key = key.slice(1), true) : key[0] === "^" ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {
    patchDOMProp(el, key, nextValue);
    if (!el.tagName.includes("-") && (key === "value" || key === "checked" || key === "selected")) {
      patchAttr(el, key, nextValue, isSVG, parentComponent, key !== "value");
    }
  } else if (
    // #11081 force set props for possible async custom element
    el._isVueCE && (/[A-Z]/.test(key) || !isString$3(nextValue))
  ) {
    patchDOMProp(el, camelize(key), nextValue);
  } else {
    if (key === "true-value") {
      el._trueValue = nextValue;
    } else if (key === "false-value") {
      el._falseValue = nextValue;
    }
    patchAttr(el, key, nextValue, isSVG);
  }
};
function shouldSetAsProp(el, key, value, isSVG) {
  if (isSVG) {
    if (key === "innerHTML" || key === "textContent") {
      return true;
    }
    if (key in el && isNativeOn(key) && isFunction$1(value)) {
      return true;
    }
    return false;
  }
  if (key === "spellcheck" || key === "draggable" || key === "translate") {
    return false;
  }
  if (key === "form") {
    return false;
  }
  if (key === "list" && el.tagName === "INPUT") {
    return false;
  }
  if (key === "type" && el.tagName === "TEXTAREA") {
    return false;
  }
  if (key === "width" || key === "height") {
    const tag = el.tagName;
    if (tag === "IMG" || tag === "VIDEO" || tag === "CANVAS" || tag === "SOURCE") {
      return false;
    }
  }
  if (isNativeOn(key) && isString$3(value)) {
    return false;
  }
  return key in el;
}
const positionMap = /* @__PURE__ */ new WeakMap();
const newPositionMap = /* @__PURE__ */ new WeakMap();
const moveCbKey = Symbol("_moveCb");
const enterCbKey = Symbol("_enterCb");
const decorate = (t) => {
  delete t.props.mode;
  return t;
};
const TransitionGroupImpl = /* @__PURE__ */ decorate({
  name: "TransitionGroup",
  props: /* @__PURE__ */ extend({}, TransitionPropsValidators, {
    tag: String,
    moveClass: String
  }),
  setup(props, { slots }) {
    const instance = getCurrentInstance();
    const state = useTransitionState();
    let prevChildren;
    let children;
    onUpdated(() => {
      if (!prevChildren.length) {
        return;
      }
      const moveClass = props.moveClass || `${props.name || "v"}-move`;
      if (!hasCSSTransform(
        prevChildren[0].el,
        instance.vnode.el,
        moveClass
      )) {
        return;
      }
      prevChildren.forEach(callPendingCbs);
      prevChildren.forEach(recordPosition);
      const movedChildren = prevChildren.filter(applyTranslation);
      forceReflow();
      movedChildren.forEach((c) => {
        const el = c.el;
        const style = el.style;
        addTransitionClass(el, moveClass);
        style.transform = style.webkitTransform = style.transitionDuration = "";
        const cb = el[moveCbKey] = (e2) => {
          if (e2 && e2.target !== el) {
            return;
          }
          if (!e2 || /transform$/.test(e2.propertyName)) {
            el.removeEventListener("transitionend", cb);
            el[moveCbKey] = null;
            removeTransitionClass(el, moveClass);
          }
        };
        el.addEventListener("transitionend", cb);
      });
    });
    return () => {
      const rawProps = toRaw$1(props);
      const cssTransitionProps = resolveTransitionProps(rawProps);
      let tag = rawProps.tag || Fragment$1;
      prevChildren = [];
      if (children) {
        for (let i2 = 0; i2 < children.length; i2++) {
          const child = children[i2];
          if (child.el && child.el instanceof Element) {
            prevChildren.push(child);
            setTransitionHooks(
              child,
              resolveTransitionHooks(
                child,
                cssTransitionProps,
                state,
                instance
              )
            );
            positionMap.set(
              child,
              child.el.getBoundingClientRect()
            );
          }
        }
      }
      children = slots.default ? getTransitionRawChildren(slots.default()) : [];
      for (let i2 = 0; i2 < children.length; i2++) {
        const child = children[i2];
        if (child.key != null) {
          setTransitionHooks(
            child,
            resolveTransitionHooks(child, cssTransitionProps, state, instance)
          );
        } else if (child.type !== Text) {
          warn$2(`<TransitionGroup> children must be keyed.`);
        }
      }
      return createVNode(tag, null, children);
    };
  }
});
const TransitionGroup = TransitionGroupImpl;
function callPendingCbs(c) {
  const el = c.el;
  if (el[moveCbKey]) {
    el[moveCbKey]();
  }
  if (el[enterCbKey]) {
    el[enterCbKey]();
  }
}
function recordPosition(c) {
  newPositionMap.set(c, c.el.getBoundingClientRect());
}
function applyTranslation(c) {
  const oldPos = positionMap.get(c);
  const newPos = newPositionMap.get(c);
  const dx = oldPos.left - newPos.left;
  const dy = oldPos.top - newPos.top;
  if (dx || dy) {
    const s2 = c.el.style;
    s2.transform = s2.webkitTransform = `translate(${dx}px,${dy}px)`;
    s2.transitionDuration = "0s";
    return c;
  }
}
function hasCSSTransform(el, root, moveClass) {
  const clone = el.cloneNode();
  const _vtc = el[vtcKey];
  if (_vtc) {
    _vtc.forEach((cls) => {
      cls.split(/\s+/).forEach((c) => c && clone.classList.remove(c));
    });
  }
  moveClass.split(/\s+/).forEach((c) => c && clone.classList.add(c));
  clone.style.display = "none";
  const container = root.nodeType === 1 ? root : root.parentNode;
  container.appendChild(clone);
  const { hasTransform } = getTransitionInfo(clone);
  container.removeChild(clone);
  return hasTransform;
}
const getModelAssigner = (vnode) => {
  const fn = vnode.props["onUpdate:modelValue"] || false;
  return isArray$3(fn) ? (value) => invokeArrayFns(fn, value) : fn;
};
function onCompositionStart(e2) {
  e2.target.composing = true;
}
function onCompositionEnd(e2) {
  const target2 = e2.target;
  if (target2.composing) {
    target2.composing = false;
    target2.dispatchEvent(new Event("input"));
  }
}
const assignKey = Symbol("_assign");
const vModelText = {
  created(el, { modifiers: { lazy, trim, number } }, vnode) {
    el[assignKey] = getModelAssigner(vnode);
    const castToNumber = number || vnode.props && vnode.props.type === "number";
    addEventListener(el, lazy ? "change" : "input", (e2) => {
      if (e2.target.composing) return;
      let domValue = el.value;
      if (trim) {
        domValue = domValue.trim();
      }
      if (castToNumber) {
        domValue = looseToNumber(domValue);
      }
      el[assignKey](domValue);
    });
    if (trim) {
      addEventListener(el, "change", () => {
        el.value = el.value.trim();
      });
    }
    if (!lazy) {
      addEventListener(el, "compositionstart", onCompositionStart);
      addEventListener(el, "compositionend", onCompositionEnd);
      addEventListener(el, "change", onCompositionEnd);
    }
  },
  // set value on mounted so it's after min/max for type="range"
  mounted(el, { value }) {
    el.value = value == null ? "" : value;
  },
  beforeUpdate(el, { value, oldValue, modifiers: { lazy, trim, number } }, vnode) {
    el[assignKey] = getModelAssigner(vnode);
    if (el.composing) return;
    const elValue = (number || el.type === "number") && !/^0\d/.test(el.value) ? looseToNumber(el.value) : el.value;
    const newValue = value == null ? "" : value;
    if (elValue === newValue) {
      return;
    }
    if (document.activeElement === el && el.type !== "range") {
      if (lazy && value === oldValue) {
        return;
      }
      if (trim && el.value.trim() === newValue) {
        return;
      }
    }
    el.value = newValue;
  }
};
const systemModifiers = ["ctrl", "shift", "alt", "meta"];
const modifierGuards = {
  stop: (e2) => e2.stopPropagation(),
  prevent: (e2) => e2.preventDefault(),
  self: (e2) => e2.target !== e2.currentTarget,
  ctrl: (e2) => !e2.ctrlKey,
  shift: (e2) => !e2.shiftKey,
  alt: (e2) => !e2.altKey,
  meta: (e2) => !e2.metaKey,
  left: (e2) => "button" in e2 && e2.button !== 0,
  middle: (e2) => "button" in e2 && e2.button !== 1,
  right: (e2) => "button" in e2 && e2.button !== 2,
  exact: (e2, modifiers) => systemModifiers.some((m2) => e2[`${m2}Key`] && !modifiers.includes(m2))
};
const withModifiers = (fn, modifiers) => {
  const cache = fn._withMods || (fn._withMods = {});
  const cacheKey = modifiers.join(".");
  return cache[cacheKey] || (cache[cacheKey] = (event, ...args) => {
    for (let i2 = 0; i2 < modifiers.length; i2++) {
      const guard = modifierGuards[modifiers[i2]];
      if (guard && guard(event, modifiers)) return;
    }
    return fn(event, ...args);
  });
};
const rendererOptions = /* @__PURE__ */ extend({ patchProp }, nodeOps);
let renderer;
let enabledHydration = false;
function ensureHydrationRenderer() {
  renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions);
  enabledHydration = true;
  return renderer;
}
const createSSRApp = (...args) => {
  const app = ensureHydrationRenderer().createApp(...args);
  {
    injectNativeTagCheck(app);
    injectCompilerOptionsCheck(app);
  }
  const { mount } = app;
  app.mount = (containerOrSelector) => {
    const container = normalizeContainer(containerOrSelector);
    if (container) {
      return mount(container, true, resolveRootNamespace(container));
    }
  };
  return app;
};
function resolveRootNamespace(container) {
  if (container instanceof SVGElement) {
    return "svg";
  }
  if (typeof MathMLElement === "function" && container instanceof MathMLElement) {
    return "mathml";
  }
}
function injectNativeTagCheck(app) {
  Object.defineProperty(app.config, "isNativeTag", {
    value: (tag) => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),
    writable: false
  });
}
function injectCompilerOptionsCheck(app) {
  {
    const isCustomElement = app.config.isCustomElement;
    Object.defineProperty(app.config, "isCustomElement", {
      get() {
        return isCustomElement;
      },
      set() {
        warn$2(
          `The \`isCustomElement\` config option is deprecated. Use \`compilerOptions.isCustomElement\` instead.`
        );
      }
    });
    const compilerOptions = app.config.compilerOptions;
    const msg = `The \`compilerOptions\` config option is only respected when using a build of Vue.js that includes the runtime compiler (aka "full build"). Since you are using the runtime-only build, \`compilerOptions\` must be passed to \`@vue/compiler-dom\` in the build setup instead.
- For vue-loader: pass it via vue-loader's \`compilerOptions\` loader option.
- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader
- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`;
    Object.defineProperty(app.config, "compilerOptions", {
      get() {
        warn$2(msg);
        return compilerOptions;
      },
      set() {
        warn$2(msg);
      }
    });
  }
}
function normalizeContainer(container) {
  if (isString$3(container)) {
    const res = document.querySelector(container);
    if (!res) {
      warn$2(
        `Failed to mount app: mount target selector "${container}" returned null.`
      );
    }
    return res;
  }
  if (window.ShadowRoot && container instanceof window.ShadowRoot && container.mode === "closed") {
    warn$2(
      `mounting on a ShadowRoot with \`{mode: "closed"}\` may lead to unpredictable bugs`
    );
  }
  return container;
}
/**
* vue v3.5.11
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
function initDev() {
  {
    initCustomFormatter();
  }
}
{
  initDev();
}
var isLinkWithProtocol = (link) => /^[a-z][a-z0-9+.-]*:/.test(link) || link.startsWith("//");
var markdownLinkRegexp = /.md((\?|#).*)?$/;
var isLinkExternal = (link, base = "/") => isLinkWithProtocol(link) || // absolute link that does not start with `base` and does not end with `.md`
link.startsWith("/") && !link.startsWith(base) && !markdownLinkRegexp.test(link);
var isLinkHttp = (link) => /^(https?:)?\/\//.test(link);
var inferRoutePath = (rawPath) => {
  if (!rawPath || rawPath.endsWith("/")) return rawPath;
  let routePath = rawPath.replace(/(^|\/)README.md$/i, "$1index.html");
  if (routePath.endsWith(".md")) {
    routePath = `${routePath.substring(0, routePath.length - 3)}.html`;
  } else if (!routePath.endsWith(".html")) {
    routePath = `${routePath}.html`;
  }
  if (routePath.endsWith("/index.html")) {
    routePath = routePath.substring(0, routePath.length - 10);
  }
  return routePath;
};
var FAKE_HOST = "http://.";
var normalizeRoutePath = (pathname, current) => {
  if (!pathname.startsWith("/") && current) {
    const loc = current.slice(0, current.lastIndexOf("/"));
    return inferRoutePath(new URL(`${loc}/${pathname}`, FAKE_HOST).pathname);
  }
  return inferRoutePath(pathname);
};
var resolveLocalePath = (locales2, routePath) => {
  const localePaths = Object.keys(locales2).sort((a2, b) => {
    const levelDelta = b.split("/").length - a2.split("/").length;
    if (levelDelta !== 0) {
      return levelDelta;
    }
    return b.length - a2.length;
  });
  for (const localePath of localePaths) {
    if (routePath.startsWith(localePath)) {
      return localePath;
    }
  }
  return "/";
};
var SPLIT_CHAR_REGEXP = /(#|\?)/;
var splitPath = (path) => {
  const [pathname, ...hashAndQueries] = path.split(SPLIT_CHAR_REGEXP);
  return {
    pathname,
    hashAndQueries: hashAndQueries.join("")
  };
};
var TAGS_ALLOWED = ["link", "meta", "script", "style", "noscript", "template"];
var TAGS_UNIQUE = ["title", "base"];
var resolveHeadIdentifier = ([tag, attrs, content]) => {
  if (TAGS_UNIQUE.includes(tag)) {
    return tag;
  }
  if (!TAGS_ALLOWED.includes(tag)) {
    return null;
  }
  if (tag === "meta" && attrs.name) {
    return `${tag}.${attrs.name}`;
  }
  if (tag === "template" && attrs.id) {
    return `${tag}.${attrs.id}`;
  }
  return JSON.stringify([
    tag,
    Object.entries(attrs).map(([key, value]) => {
      if (typeof value === "boolean") {
        return value ? [key, ""] : null;
      }
      return [key, value];
    }).filter((item) => item != null).sort(([keyA], [keyB]) => keyA.localeCompare(keyB)),
    content
  ]);
};
var dedupeHead = (head) => {
  const identifierSet = /* @__PURE__ */ new Set();
  const result = [];
  head.forEach((item) => {
    const identifier = resolveHeadIdentifier(item);
    if (identifier && !identifierSet.has(identifier)) {
      identifierSet.add(identifier);
      result.push(item);
    }
  });
  return result;
};
var ensureLeadingSlash = (str) => str.startsWith("/") ? str : `/${str}`;
var ensureEndingSlash = (str) => str.endsWith("/") || str.endsWith(".html") ? str : `${str}/`;
var removeEndingSlash = (str) => str.endsWith("/") ? str.slice(0, -1) : str;
var removeLeadingSlash = (str) => str.startsWith("/") ? str.slice(1) : str;
var isPlainObject = (val) => Object.prototype.toString.call(val) === "[object Object]";
var isString$2 = (val) => typeof val === "string";
const redirects$1 = JSON.parse("{}");
const routes$1 = Object.fromEntries([
  ["/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "index.html" */
    "./index.html-GwaVK1vp.js"
  ), true ? __vite__mapDeps([0,1]) : void 0), meta: { "t": "" } }],
  ["/study-plan.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "study-plan.html" */
    "./study-plan.html-Cmv_balm.js"
  ), true ? __vite__mapDeps([2,1]) : void 0), meta: { "t": "学习计划" } }],
  ["/todo.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "todo.html" */
    "./todo.html-CeJRvO0e.js"
  ), true ? __vite__mapDeps([3,1]) : void 0), meta: { "t": "TODO" } }],
  ["/animation-effects/complicated-animations-with-animation-delay.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "animation-effects_complicated-animations-with-animation-delay.html" */
    "./complicated-animations-with-animation-delay.html-Xw2p3Tsb.js"
  ), true ? __vite__mapDeps([4,1]) : void 0), meta: { "t": "利用 animation-delay 实现复杂动画" } }],
  ["/animation-effects/gradient-shadows.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "animation-effects_gradient-shadows.html" */
    "./gradient-shadows.html-KjS_7Wz0.js"
  ), true ? __vite__mapDeps([5,1]) : void 0), meta: { "t": "渐变阴影" } }],
  ["/animation-effects/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "animation-effects_index.html" */
    "./index.html-B97SPbi1.js"
  ), true ? __vite__mapDeps([6,1]) : void 0), meta: { "t": "动画效果" } }],
  ["/animation-effects/scroll-elements-fade-up.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "animation-effects_scroll-elements-fade-up.html" */
    "./scroll-elements-fade-up.html-rYxLP6EF.js"
  ), true ? __vite__mapDeps([7,1]) : void 0), meta: { "t": "滚动列表元素时平滑上升" } }],
  ["/code-snippet/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_index.html" */
    "./index.html-OhRENpp9.js"
  ), true ? __vite__mapDeps([8,1]) : void 0), meta: { "t": "代码片段" } }],
  ["/es6/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_index.html" */
    "./index.html-BcDgnOJc.js"
  ), true ? __vite__mapDeps([9,1]) : void 0), meta: { "t": "需要经常使用的方法" } }],
  ["/full-stack/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_index.html" */
    "./index.html-yfW91MEC.js"
  ), true ? __vite__mapDeps([10,1]) : void 0), meta: { "t": "全栈技能" } }],
  ["/interview/basic.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_basic.html" */
    "./basic.html-CiA7vuhg.js"
  ), true ? __vite__mapDeps([11,1]) : void 0), meta: { "t": "面试基本信息" } }],
  ["/interview/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_index.html" */
    "./index.html-3H_KJudX.js"
  ), true ? __vite__mapDeps([12,1]) : void 0), meta: { "t": "面试准备" } }],
  ["/react/render.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_render.html" */
    "./render.html-CcXrbDDB.js"
  ), true ? __vite__mapDeps([13,1]) : void 0), meta: { "t": "React 渲染机制和原理" } }],
  ["/typescript/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_index.html" */
    "./index.html-BtIgQlNZ.js"
  ), true ? __vite__mapDeps([14,1]) : void 0), meta: { "t": "学习笔记" } }],
  ["/vue3/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue3_index.html" */
    "./index.html-C6C9ep-Y.js"
  ), true ? __vite__mapDeps([15,1]) : void 0), meta: { "t": "Vue 3.x" } }],
  ["/vue3/composition-api.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue3_composition-api.html" */
    "./composition-api.html-YHfywPTm.js"
  ), true ? __vite__mapDeps([16,1]) : void 0), meta: { "t": "composition-api" } }],
  ["/vue3/state-management.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue3_state-management.html" */
    "./state-management.html-DWQjfch4.js"
  ), true ? __vite__mapDeps([17,1]) : void 0), meta: { "t": "Vue3 状态管理" } }],
  ["/wander/tools.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_tools.html" */
    "./tools.html-BRR4HRSZ.js"
  ), true ? __vite__mapDeps([18,1]) : void 0), meta: { "t": "好用的工具推荐" } }],
  ["/writing/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "writing_index.html" */
    "./index.html-DtChMxee.js"
  ), true ? __vite__mapDeps([19,1]) : void 0), meta: { "t": "关于写作" } }],
  ["/articles/good-articles/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "articles_good-articles_index.html" */
    "./index.html-DSSdvS9C.js"
  ), true ? __vite__mapDeps([20,1]) : void 0), meta: { "t": "优秀文章集锦" } }],
  ["/articles/good-articles/javascript.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "articles_good-articles_javascript.html" */
    "./javascript.html-DPcw_Q0F.js"
  ), true ? __vite__mapDeps([21,1]) : void 0), meta: { "t": "JavaScript 语言相关文章" } }],
  ["/articles/line-terminator/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "articles_line-terminator_index.html" */
    "./index.html-CGE-I5Yh.js"
  ), true ? __vite__mapDeps([22,1]) : void 0), meta: { "t": "微信小程序里一次 JSON.parse 解析错误问题的探究" } }],
  ["/articles/string-literal/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "articles_string-literal_index.html" */
    "./index.html-CI5ebDm-.js"
  ), true ? __vite__mapDeps([23,1]) : void 0), meta: { "t": "JavaScript 中字符串字面量的计算" } }],
  ["/articles/wechat-mini-program-sourcemap/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "articles_wechat-mini-program-sourcemap_index.html" */
    "./index.html-B9QO35Dr.js"
  ), true ? __vite__mapDeps([24,1]) : void 0), meta: { "t": "微信小程序 Source Map 的使用及一键解析" } }],
  ["/articles/wechat-mini-program-sourcemap/sourcemap.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "articles_wechat-mini-program-sourcemap_sourcemap.html" */
    "./sourcemap.html-DppSwt-a.js"
  ), true ? __vite__mapDeps([25,1]) : void 0), meta: { "t": "Source Map" } }],
  ["/animation-effects/text-effects/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "animation-effects_text-effects_index.html" */
    "./index.html-Cs3iNUHi.js"
  ), true ? __vite__mapDeps([26,1]) : void 0), meta: { "t": "文字效果" } }],
  ["/animation-effects/text-effects/overlap-text.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "animation-effects_text-effects_overlap-text.html" */
    "./overlap-text.html-CjkMPPMt.js"
  ), true ? __vite__mapDeps([27,1]) : void 0), meta: { "t": "交错排列的文字" } }],
  ["/animation-effects/text-effects/title-animations.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "animation-effects_text-effects_title-animations.html" */
    "./title-animations.html-qLQ1q4E3.js"
  ), true ? __vite__mapDeps([28,1]) : void 0), meta: { "t": "向上出现的标题动画" } }],
  ["/code-snippet/js/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_index.html" */
    "./index.html-Db8R7Vi6.js"
  ), true ? __vite__mapDeps([29,1]) : void 0), meta: { "t": "工具函数" } }],
  ["/code-snippet/vue-components/base-marquee.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_vue-components_base-marquee.html" */
    "./base-marquee.html-B29EYqlC.js"
  ), true ? __vite__mapDeps([30,1]) : void 0), meta: { "t": "简单跑马灯" } }],
  ["/code-snippet/vue-components/common-popup.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_vue-components_common-popup.html" */
    "./common-popup.html-DmC-yU8p.js"
  ), true ? __vite__mapDeps([31,1]) : void 0), meta: { "t": "通用弹窗" } }],
  ["/browser-env/browser/browser-api.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_browser-api.html" */
    "./browser-api.html-BjLkHjc5.js"
  ), true ? __vite__mapDeps([32,1]) : void 0), meta: { "t": "浏览器 API" } }],
  ["/browser-env/browser/browser-requests.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_browser-requests.html" */
    "./browser-requests.html-TwEgh_FA.js"
  ), true ? __vite__mapDeps([33,1]) : void 0), meta: { "t": "浏览器里的资源请求" } }],
  ["/browser-env/browser/cache.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_cache.html" */
    "./cache.html-gZSz6tiF.js"
  ), true ? __vite__mapDeps([34,1]) : void 0), meta: { "t": "缓存机制" } }],
  ["/browser-env/browser/event-loop.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_event-loop.html" */
    "./event-loop.html-nZgERgl5.js"
  ), true ? __vite__mapDeps([35,1]) : void 0), meta: { "t": "事件循环" } }],
  ["/browser-env/browser/faq.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_faq.html" */
    "./faq.html-Db3DbCOK.js"
  ), true ? __vite__mapDeps([36,1]) : void 0), meta: { "t": "FAQ" } }],
  ["/browser-env/browser/fingerprint.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_fingerprint.html" */
    "./fingerprint.html-CnFKMhel.js"
  ), true ? __vite__mapDeps([37,1]) : void 0), meta: { "t": "浏览器指纹" } }],
  ["/browser-env/browser/first-paint.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_first-paint.html" */
    "./first-paint.html-ToJiBT9c.js"
  ), true ? __vite__mapDeps([38,1]) : void 0), meta: { "t": "页面首次渲染" } }],
  ["/browser-env/browser/how-browsers-work.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_how-browsers-work.html" */
    "./how-browsers-work.html-CG7j67bE.js"
  ), true ? __vite__mapDeps([39,1]) : void 0), meta: { "t": "页面渲染：浏览器工作原理（打开页面全流程）" } }],
  ["/browser-env/browser/process-thread.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_process-thread.html" */
    "./process-thread.html-BdOwdiR0.js"
  ), true ? __vite__mapDeps([40,1]) : void 0), meta: { "t": "多进程和 JS 单线程" } }],
  ["/browser-env/compatibility/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_compatibility_index.html" */
    "./index.html-CRp4gu3-.js"
  ), true ? __vite__mapDeps([41,1]) : void 0), meta: { "t": "兼容性" } }],
  ["/browser-env/compatibility/audio.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_compatibility_audio.html" */
    "./audio.html-Dmwd6Q68.js"
  ), true ? __vite__mapDeps([42,1]) : void 0), meta: { "t": "audio 兼容性" } }],
  ["/browser-env/compatibility/video.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_compatibility_video.html" */
    "./video.html-BNwCR4nQ.js"
  ), true ? __vite__mapDeps([43,1]) : void 0), meta: { "t": "video 兼容性" } }],
  ["/browser-env/events/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_events_index.html" */
    "./index.html-CIsu4urb.js"
  ), true ? __vite__mapDeps([44,1]) : void 0), meta: { "t": "事件" } }],
  ["/browser-env/events/blur.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_events_blur.html" */
    "./blur.html-CqJU4oNI.js"
  ), true ? __vite__mapDeps([45,1]) : void 0), meta: { "t": "blur 事件" } }],
  ["/browser-env/html-dom/virtual-dom.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_html-dom_virtual-dom.html" */
    "./virtual-dom.html-CTMiTW4e.js"
  ), true ? __vite__mapDeps([46,1]) : void 0), meta: { "t": "Virtual DOM" } }],
  ["/browser-env/hybrid/h52app.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_hybrid_h52app.html" */
    "./h52app.html-BVb9RTMt.js"
  ), true ? __vite__mapDeps([47,1]) : void 0), meta: { "t": "h5 唤起 APP" } }],
  ["/browser-env/hybrid/jsbridge.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_hybrid_jsbridge.html" */
    "./jsbridge.html-DenM3AmW.js"
  ), true ? __vite__mapDeps([48,1]) : void 0), meta: { "t": "JS Bridge" } }],
  ["/browser-env/hybrid/universal-links.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_hybrid_universal-links.html" */
    "./universal-links.html-Bl36iK4Z.js"
  ), true ? __vite__mapDeps([49,1]) : void 0), meta: { "t": "Universal Links" } }],
  ["/browser-env/network/dns.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_network_dns.html" */
    "./dns.html-BTpmRnh5.js"
  ), true ? __vite__mapDeps([50,1]) : void 0), meta: { "t": "DNS" } }],
  ["/browser-env/security/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_security_index.html" */
    "./index.html-qsUUx95W.js"
  ), true ? __vite__mapDeps([51,1]) : void 0), meta: { "t": "安全" } }],
  ["/browser-env/security/chrome-security-policy.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_security_chrome-security-policy.html" */
    "./chrome-security-policy.html-DZ4Kj4kP.js"
  ), true ? __vite__mapDeps([52,1]) : void 0), meta: { "t": "Chrome 安全策略" } }],
  ["/browser-env/security/cross-domain.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_security_cross-domain.html" */
    "./cross-domain.html-zZahFwWW.js"
  ), true ? __vite__mapDeps([53,1]) : void 0), meta: { "t": "跨域" } }],
  ["/browser-env/security/same-site.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_security_same-site.html" */
    "./same-site.html-iNefBdkR.js"
  ), true ? __vite__mapDeps([54,1]) : void 0), meta: { "t": "SameSite" } }],
  ["/browser-env/scroll/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_scroll_index.html" */
    "./index.html-gmQzglR_.js"
  ), true ? __vite__mapDeps([55,1]) : void 0), meta: { "t": "滚动" } }],
  ["/browser-env/scroll/click-delay.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_scroll_click-delay.html" */
    "./click-delay.html-DdC9bHRF.js"
  ), true ? __vite__mapDeps([56,1]) : void 0), meta: { "t": "click 延迟" } }],
  ["/browser-env/scroll/fastclick.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_scroll_fastclick.html" */
    "./fastclick.html-D_HuwKZp.js"
  ), true ? __vite__mapDeps([57,1]) : void 0), meta: { "t": "fastclick" } }],
  ["/browser-env/scroll/no-bg-scroll.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_scroll_no-bg-scroll.html" */
    "./no-bg-scroll.html-C9sXQL0-.js"
  ), true ? __vite__mapDeps([58,1]) : void 0), meta: { "t": "滚动穿透" } }],
  ["/browser-env/scroll/touch-event.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_scroll_touch-event.html" */
    "./touch-event.html-BoIGzAmF.js"
  ), true ? __vite__mapDeps([59,1]) : void 0), meta: { "t": "触摸事件" } }],
  ["/browser-env/unclassified/file-system.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_unclassified_file-system.html" */
    "./file-system.html-BoCKUPLZ.js"
  ), true ? __vite__mapDeps([60,1]) : void 0), meta: { "t": "文件系统" } }],
  ["/browser-env/unclassified/keyboard.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_unclassified_keyboard.html" */
    "./keyboard.html-Co1VJK-Z.js"
  ), true ? __vite__mapDeps([61,1]) : void 0), meta: { "t": "键盘" } }],
  ["/browser-env/unclassified/pwa.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_unclassified_pwa.html" */
    "./pwa.html-BbjT2Uhu.js"
  ), true ? __vite__mapDeps([62,1]) : void 0), meta: { "t": "PWA" } }],
  ["/browser-env/unclassified/web-components.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_unclassified_web-components.html" */
    "./web-components.html-Dg1Uwdd-.js"
  ), true ? __vite__mapDeps([63,1]) : void 0), meta: { "t": "web components" } }],
  ["/es6/array/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_array_index.html" */
    "./index.html-DE28Uzzl.js"
  ), true ? __vite__mapDeps([64,1]) : void 0), meta: { "t": "Array" } }],
  ["/es6/async-await/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_async-await_index.html" */
    "./index.html-Be1HGytD.js"
  ), true ? __vite__mapDeps([65,1]) : void 0), meta: { "t": "async/await" } }],
  ["/es6/class/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_class_index.html" */
    "./index.html-BfAyGqiN.js"
  ), true ? __vite__mapDeps([66,1]) : void 0), meta: { "t": "Class" } }],
  ["/es6/destructuring-assignment/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_destructuring-assignment_index.html" */
    "./index.html-k-PqtS1j.js"
  ), true ? __vite__mapDeps([67,1]) : void 0), meta: { "t": "解构赋值" } }],
  ["/es6/babel/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_babel_index.html" */
    "./index.html-DQSDag34.js"
  ), true ? __vite__mapDeps([68,1]) : void 0), meta: { "t": "Babel" } }],
  ["/es6/babel/babel-v7.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_babel_babel-v7.html" */
    "./babel-v7.html-CoaJ_bMd.js"
  ), true ? __vite__mapDeps([69,1]) : void 0), meta: { "t": "Babel 7" } }],
  ["/es6/function/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_function_index.html" */
    "./index.html-CvJFAzEA.js"
  ), true ? __vite__mapDeps([70,1]) : void 0), meta: { "t": "函数" } }],
  ["/es6/generator/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_generator_index.html" */
    "./index.html-C9YbcPSn.js"
  ), true ? __vite__mapDeps([71,1]) : void 0), meta: { "t": "Generator" } }],
  ["/es6/let-const/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_let-const_index.html" */
    "./index.html-BETJWE81.js"
  ), true ? __vite__mapDeps([72,1]) : void 0), meta: { "t": "let 和 const" } }],
  ["/es6/iterator/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_iterator_index.html" */
    "./index.html-CRrIYKY0.js"
  ), true ? __vite__mapDeps([73,1]) : void 0), meta: { "t": "Iterator 和 for...of 循环" } }],
  ["/es6/module/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_module_index.html" */
    "./index.html-C199WFSD.js"
  ), true ? __vite__mapDeps([74,1]) : void 0), meta: { "t": "Module" } }],
  ["/es6/promise/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_promise_index.html" */
    "./index.html-BfnIdwwF.js"
  ), true ? __vite__mapDeps([75,1]) : void 0), meta: { "t": "Promise" } }],
  ["/es6/promise/promise-skills.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_promise_promise-skills.html" */
    "./promise-skills.html-CExusFKU.js"
  ), true ? __vite__mapDeps([76,1]) : void 0), meta: { "t": "Promise 使用技巧" } }],
  ["/es6/proxy-reflect/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_proxy-reflect_index.html" */
    "./index.html-HPx99b_z.js"
  ), true ? __vite__mapDeps([77,1]) : void 0), meta: { "t": "Proxy/Reflect" } }],
  ["/es6/proxy-reflect/proxy-practice.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_proxy-reflect_proxy-practice.html" */
    "./proxy-practice.html-B5yZXxUm.js"
  ), true ? __vite__mapDeps([78,1]) : void 0), meta: { "t": "Proxy 实践" } }],
  ["/front-end-engineering/frontend-stability-construction/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_index.html" */
    "./index.html-Cg2YmhW0.js"
  ), true ? __vite__mapDeps([79,1]) : void 0), meta: { "t": "前端稳定性建设" } }],
  ["/front-end-engineering/frontend-stability-construction/summary.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_summary.html" */
    "./summary.html-BH_TlHzd.js"
  ), true ? __vite__mapDeps([80,1]) : void 0), meta: { "t": "总结" } }],
  ["/full-stack/data-management/ES.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_data-management_ES.html" */
    "./ES.html-Do0fyMiw.js"
  ), true ? __vite__mapDeps([81,1]) : void 0), meta: { "t": "" } }],
  ["/full-stack/data-management/mongodb.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_data-management_mongodb.html" */
    "./mongodb.html-BjGrHnQ-.js"
  ), true ? __vite__mapDeps([82,1]) : void 0), meta: { "t": "MongoDB" } }],
  ["/full-stack/data-management/mongoosejs.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_data-management_mongoosejs.html" */
    "./mongoosejs.html-Cu2YterL.js"
  ), true ? __vite__mapDeps([83,1]) : void 0), meta: { "t": "" } }],
  ["/full-stack/design-patterns/singleton-pattern.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_design-patterns_singleton-pattern.html" */
    "./singleton-pattern.html-Cx_PK1qc.js"
  ), true ? __vite__mapDeps([84,1]) : void 0), meta: { "t": "单例模式" } }],
  ["/full-stack/others/google-cloud.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_others_google-cloud.html" */
    "./google-cloud.html-B2ssHz4O.js"
  ), true ? __vite__mapDeps([85,1]) : void 0), meta: { "t": "Google Cloud" } }],
  ["/css/font/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_font_index.html" */
    "./index.html-CDwUN0fZ.js"
  ), true ? __vite__mapDeps([86,1]) : void 0), meta: { "t": "字体" } }],
  ["/css/font/css-font-metrics-line-height-and-vertical-align.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_font_css-font-metrics-line-height-and-vertical-align.html" */
    "./css-font-metrics-line-height-and-vertical-align.html-BrUGGYO0.js"
  ), true ? __vite__mapDeps([87,1]) : void 0), meta: { "t": "深入理解 CSS：字体度量、line-height 和 vertical-align" } }],
  ["/css/layouts/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_layouts_index.html" */
    "./index.html-B9WeuS73.js"
  ), true ? __vite__mapDeps([88,1]) : void 0), meta: { "t": "布局" } }],
  ["/css/practices/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_practices_index.html" */
    "./index.html-CcTmAHsU.js"
  ), true ? __vite__mapDeps([89,1]) : void 0), meta: { "t": "问答篇" } }],
  ["/css/properties/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_properties_index.html" */
    "./index.html-Cvkuqgo9.js"
  ), true ? __vite__mapDeps([90,1]) : void 0), meta: { "t": "属性" } }],
  ["/css/properties/properties-order.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_properties_properties-order.html" */
    "./properties-order.html-CPQo3UWM.js"
  ), true ? __vite__mapDeps([91,1]) : void 0), meta: { "t": "属性书写顺序" } }],
  ["/css/preprocessor/less.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_preprocessor_less.html" */
    "./less.html-UH0QfbBy.js"
  ), true ? __vite__mapDeps([92,1]) : void 0), meta: { "t": "less" } }],
  ["/css/preprocessor/stylus.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_preprocessor_stylus.html" */
    "./stylus.html-R3iHg30C.js"
  ), true ? __vite__mapDeps([93,1]) : void 0), meta: { "t": "stylus 重点" } }],
  ["/css/screen/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_screen_index.html" */
    "./index.html-pDS_q2Bf.js"
  ), true ? __vite__mapDeps([94,1]) : void 0), meta: { "t": "屏幕尺寸单位" } }],
  ["/css/selectors/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_selectors_index.html" */
    "./index.html-z1x9j4CZ.js"
  ), true ? __vite__mapDeps([95,1]) : void 0), meta: { "t": "选择器" } }],
  ["/css/skills/dog-ear.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_skills_dog-ear.html" */
    "./dog-ear.html-OTqwv6v2.js"
  ), true ? __vite__mapDeps([96,1]) : void 0), meta: { "t": "折角效果" } }],
  ["/css/skills/line-boxes-truncation-style.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_skills_line-boxes-truncation-style.html" */
    "./line-boxes-truncation-style.html-DFMRHHrJ.js"
  ), true ? __vite__mapDeps([97,1]) : void 0), meta: { "t": "行盒的截断样式" } }],
  ["/css/tools/safe-area.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_tools_safe-area.html" */
    "./safe-area.html-o8dLyMOg.js"
  ), true ? __vite__mapDeps([98,1]) : void 0), meta: { "t": "安全距离" } }],
  ["/css/tools/text-ellipsis.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_tools_text-ellipsis.html" */
    "./text-ellipsis.html-BUShf_wy.js"
  ), true ? __vite__mapDeps([99,1]) : void 0), meta: { "t": "文字省略" } }],
  ["/css/topics/position-fixed.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_topics_position-fixed.html" */
    "./position-fixed.html-CcWSofMV.js"
  ), true ? __vite__mapDeps([100,1]) : void 0), meta: { "t": "position: fixed 失效" } }],
  ["/css/viewport/a-tale-of-viewports-one.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_viewport_a-tale-of-viewports-one.html" */
    "./a-tale-of-viewports-one.html-sdcYiFgs.js"
  ), true ? __vite__mapDeps([101,1]) : void 0), meta: { "t": "A tale of two viewports — part one" } }],
  ["/css/viewport/a-tale-of-viewports-two.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_viewport_a-tale-of-viewports-two.html" */
    "./a-tale-of-viewports-two.html-DG8J7jeG.js"
  ), true ? __vite__mapDeps([102,1]) : void 0), meta: { "t": "A tale of two viewports — part two" } }],
  ["/css/unclassified/compatibility.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_unclassified_compatibility.html" */
    "./compatibility.html-vhIlLBLr.js"
  ), true ? __vite__mapDeps([103,1]) : void 0), meta: { "t": "CSS 兼容性" } }],
  ["/css/unclassified/skill-pitfall.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_unclassified_skill-pitfall.html" */
    "./skill-pitfall.html-CwbdLpgX.js"
  ), true ? __vite__mapDeps([104,1]) : void 0), meta: { "t": "技巧和坑" } }],
  ["/css/unclassified/user-experience.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_unclassified_user-experience.html" */
    "./user-experience.html-X7hNkuzn.js"
  ), true ? __vite__mapDeps([105,1]) : void 0), meta: { "t": "用户体验" } }],
  ["/interview/browser/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_browser_index.html" */
    "./index.html-1HslgC2V.js"
  ), true ? __vite__mapDeps([106,1]) : void 0), meta: { "t": "浏览器" } }],
  ["/interview/browser/the-process-of-input-an-url.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_browser_the-process-of-input-an-url.html" */
    "./the-process-of-input-an-url.html-CsmAJdVE.js"
  ), true ? __vite__mapDeps([107,1]) : void 0), meta: { "t": "【中级】输入 url 到页面展现发生了什么：主要考察网络和渲染" } }],
  ["/interview/browser/the-reason-for-the-position-of-css-and-js-in-html.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_browser_the-reason-for-the-position-of-css-and-js-in-html.html" */
    "./the-reason-for-the-position-of-css-and-js-in-html.html-BtVjXJ1S.js"
  ), true ? __vite__mapDeps([108,1]) : void 0), meta: { "t": "【中级】HTML 里外链 CSS、JS 文件放置位置和原因" } }],
  ["/interview/css/hide-elements-methods.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_css_hide-elements-methods.html" */
    "./hide-elements-methods.html-mqf1f2Ov.js"
  ), true ? __vite__mapDeps([109,1]) : void 0), meta: { "t": "【初级】隐藏页面元素的方式有哪些？" } }],
  ["/interview/css/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_css_index.html" */
    "./index.html-BZZPE4ET.js"
  ), true ? __vite__mapDeps([110,1]) : void 0), meta: { "t": "CSS" } }],
  ["/interview/css/self-fit-square.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_css_self-fit-square.html" */
    "./self-fit-square.html-DT9xFjJC.js"
  ), true ? __vite__mapDeps([111,1]) : void 0), meta: { "t": "【高级】如何实现自适应的正方形？" } }],
  ["/interview/data-structure/binary-tree.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_data-structure_binary-tree.html" */
    "./binary-tree.html-au4EZPSS.js"
  ), true ? __vite__mapDeps([112,1]) : void 0), meta: { "t": "二叉树" } }],
  ["/interview/javascript/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_index.html" */
    "./index.html-Dk5iHRz8.js"
  ), true ? __vite__mapDeps([113,1]) : void 0), meta: { "t": "JavaScript 面试题" } }],
  ["/interview/network/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_network_index.html" */
    "./index.html-CPqifITK.js"
  ), true ? __vite__mapDeps([114,1]) : void 0), meta: { "t": "计算机网络" } }],
  ["/interview/project-experience/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_project-experience_index.html" */
    "./index.html-BBuUkIV2.js"
  ), true ? __vite__mapDeps([115,1]) : void 0), meta: { "t": "项目经验" } }],
  ["/interview/nodejs/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_nodejs_index.html" */
    "./index.html-Dexx6jza.js"
  ), true ? __vite__mapDeps([116,1]) : void 0), meta: { "t": "NodeJS" } }],
  ["/interview/topic/large-file-upload.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_topic_large-file-upload.html" */
    "./large-file-upload.html-D6ou8wCp.js"
  ), true ? __vite__mapDeps([117,1]) : void 0), meta: { "t": "大文件上传及断点续传" } }],
  ["/js/error-handling/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_error-handling_index.html" */
    "./index.html-Cd0zOQqR.js"
  ), true ? __vite__mapDeps([118,1]) : void 0), meta: { "t": "错误处理" } }],
  ["/js/error-handling/browser-error-handling.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_error-handling_browser-error-handling.html" */
    "./browser-error-handling.html-BFScR_Q3.js"
  ), true ? __vite__mapDeps([119,1]) : void 0), meta: { "t": "错误处理 - 浏览器环境" } }],
  ["/js/error-handling/log.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_error-handling_log.html" */
    "./log.html-C2G2fxlG.js"
  ), true ? __vite__mapDeps([120,1]) : void 0), meta: { "t": "日志" } }],
  ["/js/error-handling/try-catch.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_error-handling_try-catch.html" */
    "./try-catch.html-BOd5a1-T.js"
  ), true ? __vite__mapDeps([121,1]) : void 0), meta: { "t": "错误处理 - try catch" } }],
  ["/js/execution-mechanism/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_execution-mechanism_index.html" */
    "./index.html-BS_I4eL6.js"
  ), true ? __vite__mapDeps([122,1]) : void 0), meta: { "t": "JavaScript 执行机制" } }],
  ["/js/execution-mechanism/event-loop.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_execution-mechanism_event-loop.html" */
    "./event-loop.html-yMoZQ9xh.js"
  ), true ? __vite__mapDeps([123,1]) : void 0), meta: { "t": "事件循环" } }],
  ["/js/execution-mechanism/execution-context.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_execution-mechanism_execution-context.html" */
    "./execution-context.html-CnczWXHg.js"
  ), true ? __vite__mapDeps([124,1]) : void 0), meta: { "t": "执行上下文" } }],
  ["/js/execution-mechanism/prototype.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_execution-mechanism_prototype.html" */
    "./prototype.html-BIjov9uO.js"
  ), true ? __vite__mapDeps([125,1]) : void 0), meta: { "t": "原型-prototype" } }],
  ["/js/execution-mechanism/this.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_execution-mechanism_this.html" */
    "./this.html-BQSGR2zT.js"
  ), true ? __vite__mapDeps([126,1]) : void 0), meta: { "t": "this" } }],
  ["/js/data-types/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_index.html" */
    "./index.html-BEPj2jkr.js"
  ), true ? __vite__mapDeps([127,1]) : void 0), meta: { "t": "数据类型" } }],
  ["/js/data-types/type-conversion.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_type-conversion.html" */
    "./type-conversion.html-DJij4hiO.js"
  ), true ? __vite__mapDeps([128,1]) : void 0), meta: { "t": "类型转换" } }],
  ["/js/unclassified/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_unclassified_index.html" */
    "./index.html-D-iWUexh.js"
  ), true ? __vite__mapDeps([129,1]) : void 0), meta: { "t": "未分类内容" } }],
  ["/js/unclassified/functional-programming.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_unclassified_functional-programming.html" */
    "./functional-programming.html-BeBR43Zm.js"
  ), true ? __vite__mapDeps([130,1]) : void 0), meta: { "t": "函数式编程" } }],
  ["/js/unclassified/pitfall.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_unclassified_pitfall.html" */
    "./pitfall.html-V94pJpK6.js"
  ), true ? __vite__mapDeps([131,1]) : void 0), meta: { "t": "踩过的坑" } }],
  ["/js/web-assembly/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_web-assembly_index.html" */
    "./index.html-Cqvr0JlB.js"
  ), true ? __vite__mapDeps([132,1]) : void 0), meta: { "t": "WebAssemply" } }],
  ["/mini-program/uni-app/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "mini-program_uni-app_index.html" */
    "./index.html-3bCnzacb.js"
  ), true ? __vite__mapDeps([133,1]) : void 0), meta: { "t": "uni-app" } }],
  ["/mini-program/uni-app/v-for-key.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "mini-program_uni-app_v-for-key.html" */
    "./v-for-key.html-_bVTQCJI.js"
  ), true ? __vite__mapDeps([134,1]) : void 0), meta: { "t": "列表循环里的 key 不生效" } }],
  ["/js/operators/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_operators_index.html" */
    "./index.html-C2vnr491.js"
  ), true ? __vite__mapDeps([135,1]) : void 0), meta: { "t": "运算符" } }],
  ["/js/operators/bitwise-operators.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_operators_bitwise-operators.html" */
    "./bitwise-operators.html-DFaHkUVC.js"
  ), true ? __vite__mapDeps([136,1]) : void 0), meta: { "t": "" } }],
  ["/mini-program/weixin/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "mini-program_weixin_index.html" */
    "./index.html-BPtd2OkY.js"
  ), true ? __vite__mapDeps([137,1]) : void 0), meta: { "t": "微信小程序" } }],
  ["/react/hooks/custom-hooks.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_hooks_custom-hooks.html" */
    "./custom-hooks.html-Ho2nGGnC.js"
  ), true ? __vite__mapDeps([138,1]) : void 0), meta: { "t": "自定义 Hooks" } }],
  ["/react/hooks/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_hooks_index.html" */
    "./index.html-CecBf1FK.js"
  ), true ? __vite__mapDeps([139,1]) : void 0), meta: { "t": "总览" } }],
  ["/react/hooks/useContext.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_hooks_useContext.html" */
    "./useContext.html-giTZnx8M.js"
  ), true ? __vite__mapDeps([140,1]) : void 0), meta: { "t": "useContext" } }],
  ["/react/hooks/useEffect.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_hooks_useEffect.html" */
    "./useEffect.html-QJZQofZN.js"
  ), true ? __vite__mapDeps([141,1]) : void 0), meta: { "t": "useEffect/useLayoutEffect" } }],
  ["/react/hooks/useMemo.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_hooks_useMemo.html" */
    "./useMemo.html-BASK4xoW.js"
  ), true ? __vite__mapDeps([142,1]) : void 0), meta: { "t": "useMemo/useCallback/memo" } }],
  ["/react/hooks/useReducer.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_hooks_useReducer.html" */
    "./useReducer.html-CPXKFf6c.js"
  ), true ? __vite__mapDeps([143,1]) : void 0), meta: { "t": "useReducer" } }],
  ["/react/hooks/useRef.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_hooks_useRef.html" */
    "./useRef.html-1_4fRZmf.js"
  ), true ? __vite__mapDeps([144,1]) : void 0), meta: { "t": "useRef/forwardRef/useImperativeHandle" } }],
  ["/react/hooks/useState.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_hooks_useState.html" */
    "./useState.html-CFH4MElZ.js"
  ), true ? __vite__mapDeps([145,1]) : void 0), meta: { "t": "useState" } }],
  ["/react/hooks/useSyncExternalStore.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_hooks_useSyncExternalStore.html" */
    "./useSyncExternalStore.html-CBnMkw6u.js"
  ), true ? __vite__mapDeps([146,1]) : void 0), meta: { "t": "useSyncExternalStore" } }],
  ["/typescript/data-types/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_data-types_index.html" */
    "./index.html-BAFIDYEt.js"
  ), true ? __vite__mapDeps([147,1]) : void 0), meta: { "t": "数据类型" } }],
  ["/typescript/data-types/array.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_data-types_array.html" */
    "./array.html-DXaxjJ9t.js"
  ), true ? __vite__mapDeps([148,1]) : void 0), meta: { "t": "数组" } }],
  ["/typescript/data-types/class.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_data-types_class.html" */
    "./class.html-CWkcEkVM.js"
  ), true ? __vite__mapDeps([149,1]) : void 0), meta: { "t": "类" } }],
  ["/typescript/data-types/enum.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_data-types_enum.html" */
    "./enum.html-Db1v-i9I.js"
  ), true ? __vite__mapDeps([150,1]) : void 0), meta: { "t": "枚举" } }],
  ["/typescript/data-types/function.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_data-types_function.html" */
    "./function.html-CUf714g9.js"
  ), true ? __vite__mapDeps([151,1]) : void 0), meta: { "t": "函数" } }],
  ["/typescript/data-types/object-type.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_data-types_object-type.html" */
    "./object-type.html-CrCQYDAD.js"
  ), true ? __vite__mapDeps([152,1]) : void 0), meta: { "t": "对象类型" } }],
  ["/typescript/data-types/primitive-types.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_data-types_primitive-types.html" */
    "./primitive-types.html-BDyBKCBM.js"
  ), true ? __vite__mapDeps([153,1]) : void 0), meta: { "t": "基本类型" } }],
  ["/typescript/decorators/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_decorators_index.html" */
    "./index.html-Bu1iXgVf.js"
  ), true ? __vite__mapDeps([154,1]) : void 0), meta: { "t": "装饰器" } }],
  ["/typescript/module-system/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_module-system_index.html" */
    "./index.html-xZI6kIiP.js"
  ), true ? __vite__mapDeps([155,1]) : void 0), meta: { "t": "模块及模块解析" } }],
  ["/typescript/type-manipulation/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_type-manipulation_index.html" */
    "./index.html-Cw_jO-yb.js"
  ), true ? __vite__mapDeps([156,1]) : void 0), meta: { "t": "类型操作" } }],
  ["/typescript/type-manipulation/type-challenges.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_type-manipulation_type-challenges.html" */
    "./type-challenges.html-okcZT0dm.js"
  ), true ? __vite__mapDeps([157,1]) : void 0), meta: { "t": "TypeScript 类型体操" } }],
  ["/typescript/type-manipulation/type-operators.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_type-manipulation_type-operators.html" */
    "./type-operators.html-D7cje0_O.js"
  ), true ? __vite__mapDeps([158,1]) : void 0), meta: { "t": "类型操作符" } }],
  ["/typescript/type-system/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_type-system_index.html" */
    "./index.html-DAusnEx4.js"
  ), true ? __vite__mapDeps([159,1]) : void 0), meta: { "t": "类型系统" } }],
  ["/typescript/type-system/generics.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_type-system_generics.html" */
    "./generics.html-CkW-LEib.js"
  ), true ? __vite__mapDeps([160,1]) : void 0), meta: { "t": "泛型" } }],
  ["/typescript/type-system/property-modifiers.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_type-system_property-modifiers.html" */
    "./property-modifiers.html-D2cz7q_f.js"
  ), true ? __vite__mapDeps([161,1]) : void 0), meta: { "t": "属性修饰符" } }],
  ["/typescript/type-system/utility-types.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_type-system_utility-types.html" */
    "./utility-types.html-O5A5U1LO.js"
  ), true ? __vite__mapDeps([162,1]) : void 0), meta: { "t": "内置工具类型" } }],
  ["/typescript/typescript-compilation/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_typescript-compilation_index.html" */
    "./index.html-D27on0mY.js"
  ), true ? __vite__mapDeps([163,1]) : void 0), meta: { "t": "编译" } }],
  ["/typescript/usage/declaration-files.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_usage_declaration-files.html" */
    "./declaration-files.html-sXKEWxwK.js"
  ), true ? __vite__mapDeps([164,1]) : void 0), meta: { "t": "声明文件" } }],
  ["/typescript/usage/publish.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_usage_publish.html" */
    "./publish.html-BwlfCIcA.js"
  ), true ? __vite__mapDeps([165,1]) : void 0), meta: { "t": "发布" } }],
  ["/typescript/usage/tsconfig-json.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_usage_tsconfig-json.html" */
    "./tsconfig-json.html-la6mfLRb.js"
  ), true ? __vite__mapDeps([166,1]) : void 0), meta: { "t": "tsconfig.json" } }],
  ["/vue/source-study/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_index.html" */
    "./index.html-tKhaC9p-.js"
  ), true ? __vite__mapDeps([167,1]) : void 0), meta: { "t": "整体说明" } }],
  ["/vue/source-study/vue-constructor.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vue-constructor.html" */
    "./vue-constructor.html-P43plbaf.js"
  ), true ? __vite__mapDeps([168,1]) : void 0), meta: { "t": "Vue 构造函数" } }],
  ["/vue3/reactivity/use-difference.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue3_reactivity_use-difference.html" */
    "./use-difference.html-C0SLYdEX.js"
  ), true ? __vite__mapDeps([169,1]) : void 0), meta: { "t": "Vue 2 和 Vue 3 响应式使用的差异" } }],
  ["/wander/house/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_house_index.html" */
    "./index.html-CcblYgDc.js"
  ), true ? __vite__mapDeps([170,1]) : void 0), meta: { "t": "房地产" } }],
  ["/wander/house/comparison.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_house_comparison.html" */
    "./comparison.html-DLz36jWr.js"
  ), true ? __vite__mapDeps([171,1]) : void 0), meta: { "t": "各个楼盘对比" } }],
  ["/wander/house/tianya-post.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_house_tianya-post.html" */
    "./tianya-post.html-CSmZKuDe.js"
  ), true ? __vite__mapDeps([172,1]) : void 0), meta: { "t": "天涯神贴" } }],
  ["/wander/investment/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_investment_index.html" */
    "./index.html-DE16wuek.js"
  ), true ? __vite__mapDeps([173,1]) : void 0), meta: { "t": "投资理财" } }],
  ["/wander/investment/stocks.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_investment_stocks.html" */
    "./stocks.html-CrOGn4GP.js"
  ), true ? __vite__mapDeps([174,1]) : void 0), meta: { "t": "股票" } }],
  ["/wander/others/apple-mac.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_others_apple-mac.html" */
    "./apple-mac.html-D3F39REQ.js"
  ), true ? __vite__mapDeps([175,1]) : void 0), meta: { "t": "Apple 产品使用" } }],
  ["/wander/others/mac-shortcut-keys.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_others_mac-shortcut-keys.html" */
    "./mac-shortcut-keys.html-COW7eAfb.js"
  ), true ? __vite__mapDeps([176,1]) : void 0), meta: { "t": "Mac 快捷键" } }],
  ["/wander/others/quotes.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_others_quotes.html" */
    "./quotes.html-CBxxl_HT.js"
  ), true ? __vite__mapDeps([177,1]) : void 0), meta: { "t": "名人名言" } }],
  ["/wander/others/theories.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_others_theories.html" */
    "./theories.html-DXNTOO7h.js"
  ), true ? __vite__mapDeps([178,1]) : void 0), meta: { "t": "各类理论" } }],
  ["/wander/others/word-pronunciation.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_others_word-pronunciation.html" */
    "./word-pronunciation.html-BimY0VZK.js"
  ), true ? __vite__mapDeps([179,1]) : void 0), meta: { "t": "常见英语单词发音" } }],
  ["/wander/outdoor/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_outdoor_index.html" */
    "./index.html-DFRy9K0m.js"
  ), true ? __vite__mapDeps([180,1]) : void 0), meta: { "t": "旅游计划" } }],
  ["/code-snippet/browser-env/rem/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_browser-env_rem_index.html" */
    "./index.html-Bc22n7qM.js"
  ), true ? __vite__mapDeps([181,1]) : void 0), meta: { "t": "rem 组件" } }],
  ["/code-snippet/js/browser/class.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_browser_class.html" */
    "./class.html-iTOeMMiT.js"
  ), true ? __vite__mapDeps([182,1]) : void 0), meta: { "t": "Class 操作" } }],
  ["/code-snippet/js/browser/clipboard.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_browser_clipboard.html" */
    "./clipboard.html-V5L5OQcG.js"
  ), true ? __vite__mapDeps([183,1]) : void 0), meta: { "t": "复制内容到剪贴板" } }],
  ["/code-snippet/js/browser/cookie.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_browser_cookie.html" */
    "./cookie.html-N81XuLh4.js"
  ), true ? __vite__mapDeps([184,1]) : void 0), meta: { "t": "Cookie 操作" } }],
  ["/code-snippet/js/browser/load-script.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_browser_load-script.html" */
    "./load-script.html-DiaWWRFV.js"
  ), true ? __vite__mapDeps([185,1]) : void 0), meta: { "t": "异步加载 JS 文件" } }],
  ["/code-snippet/js/browser/storage.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_browser_storage.html" */
    "./storage.html-CohJSJ4h.js"
  ), true ? __vite__mapDeps([186,1]) : void 0), meta: { "t": "Storage" } }],
  ["/code-snippet/js/browser/url.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_browser_url.html" */
    "./url.html-C1Lxe_Wu.js"
  ), true ? __vite__mapDeps([187,1]) : void 0), meta: { "t": "URL" } }],
  ["/code-snippet/js/utils/data-type.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_utils_data-type.html" */
    "./data-type.html-Bul2dXTh.js"
  ), true ? __vite__mapDeps([188,1]) : void 0), meta: { "t": "数据类型判断" } }],
  ["/code-snippet/js/utils/env.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_utils_env.html" */
    "./env.html-BOaIzyCD.js"
  ), true ? __vite__mapDeps([189,1]) : void 0), meta: { "t": "环境判断" } }],
  ["/code-snippet/js/utils/event-emitter.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_utils_event-emitter.html" */
    "./event-emitter.html-Udc39D95.js"
  ), true ? __vite__mapDeps([190,1]) : void 0), meta: { "t": "EventEmitter" } }],
  ["/code-snippet/js/utils/format.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_utils_format.html" */
    "./format.html-DF5BhCH3.js"
  ), true ? __vite__mapDeps([191,1]) : void 0), meta: { "t": "格式化" } }],
  ["/code-snippet/js/utils/queen-next.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_utils_queen-next.html" */
    "./queen-next.html-BVL0izUG.js"
  ), true ? __vite__mapDeps([192,1]) : void 0), meta: { "t": "队列函数迭代执行" } }],
  ["/code-snippet/js/utils/version.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_utils_version.html" */
    "./version.html-CM1z50jL.js"
  ), true ? __vite__mapDeps([193,1]) : void 0), meta: { "t": "版本比较" } }],
  ["/code-snippet/js/server/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_server_index.html" */
    "./index.html-BdWcDDJb.js"
  ), true ? __vite__mapDeps([194,1]) : void 0), meta: { "t": "服务器环境" } }],
  ["/code-snippet/js/validate/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_validate_index.html" */
    "./index.html-CYAy7tdA.js"
  ), true ? __vite__mapDeps([195,1]) : void 0), meta: { "t": "校验规则" } }],
  ["/browser-env/browser/dev-tools/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_dev-tools_index.html" */
    "./index.html-BKyEiPJb.js"
  ), true ? __vite__mapDeps([196,1]) : void 0), meta: { "t": "DevTools" } }],
  ["/browser-env/browser/performance/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_performance_index.html" */
    "./index.html-Dx2Nkkgp.js"
  ), true ? __vite__mapDeps([197,1]) : void 0), meta: { "t": "性能优化" } }],
  ["/browser-env/compatibility/input-delay/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_compatibility_input-delay_index.html" */
    "./index.html-DWBxiZTB.js"
  ), true ? __vite__mapDeps([198,1]) : void 0), meta: { "t": "非视口内 input 输入延迟" } }],
  ["/browser-env/compatibility/ios/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_compatibility_ios_index.html" */
    "./index.html-CcgbCRoJ.js"
  ), true ? __vite__mapDeps([199,1]) : void 0), meta: { "t": "iOS 兼容性问题" } }],
  ["/browser-env/compatibility/ios/safari-script-block-render.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_compatibility_ios_safari-script-block-render.html" */
    "./safari-script-block-render.html-Bq52wE-5.js"
  ), true ? __vite__mapDeps([200,1]) : void 0), meta: { "t": "Mobile Safari 页面底部脚本下载会阻塞首屏渲染" } }],
  ["/browser-env/html-dom/attributes-properties/attributes.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_html-dom_attributes-properties_attributes.html" */
    "./attributes.html-Da0KziEE.js"
  ), true ? __vite__mapDeps([201,1]) : void 0), meta: { "t": "特性" } }],
  ["/browser-env/html-dom/attributes-properties/differences-between-properties-and-attributes.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_html-dom_attributes-properties_differences-between-properties-and-attributes.html" */
    "./differences-between-properties-and-attributes.html-DshgYeJk.js"
  ), true ? __vite__mapDeps([202,1]) : void 0), meta: { "t": "特性和属性的区别" } }],
  ["/browser-env/html-dom/attributes-properties/properties.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_html-dom_attributes-properties_properties.html" */
    "./properties.html-DdHI4mMI.js"
  ), true ? __vite__mapDeps([203,1]) : void 0), meta: { "t": "属性" } }],
  ["/browser-env/html-dom/image/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_html-dom_image_index.html" */
    "./index.html-CASX8tOQ.js"
  ), true ? __vite__mapDeps([204,1]) : void 0), meta: { "t": "图片" } }],
  ["/browser-env/html-dom/image/image-lazy-load.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_html-dom_image_image-lazy-load.html" */
    "./image-lazy-load.html-BeKdxQVu.js"
  ), true ? __vite__mapDeps([205,1]) : void 0), meta: { "t": "图片 - 懒加载" } }],
  ["/browser-env/html-dom/elements/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_html-dom_elements_index.html" */
    "./index.html-tBK4t-zj.js"
  ), true ? __vite__mapDeps([206,1]) : void 0), meta: { "t": "元素" } }],
  ["/browser-env/html-dom/svg/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_html-dom_svg_index.html" */
    "./index.html-rKch0FAt.js"
  ), true ? __vite__mapDeps([207,1]) : void 0), meta: { "t": "SVG" } }],
  ["/browser-env/network/cors/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_network_cors_index.html" */
    "./index.html-DS0WELiu.js"
  ), true ? __vite__mapDeps([208,1]) : void 0), meta: { "t": "CORS" } }],
  ["/browser-env/network/http/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_network_http_index.html" */
    "./index.html-DjvBt_3n.js"
  ), true ? __vite__mapDeps([209,1]) : void 0), meta: { "t": "HTTP" } }],
  ["/browser-env/network/http2/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_network_http2_index.html" */
    "./index.html-Cgw-MLUo.js"
  ), true ? __vite__mapDeps([210,1]) : void 0), meta: { "t": "HTTP2" } }],
  ["/browser-env/network/https/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_network_https_index.html" */
    "./index.html-SzhB1IeW.js"
  ), true ? __vite__mapDeps([211,1]) : void 0), meta: { "t": "HTTPS" } }],
  ["/browser-env/vendor-app/wechat/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_vendor-app_wechat_index.html" */
    "./index.html-JvcPNkWb.js"
  ), true ? __vite__mapDeps([212,1]) : void 0), meta: { "t": "微信" } }],
  ["/browser-env/vendor-app/wechat/android-weixin-auto-open-browser.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_vendor-app_wechat_android-weixin-auto-open-browser.html" */
    "./android-weixin-auto-open-browser.html-DWJZCXGc.js"
  ), true ? __vite__mapDeps([213,1]) : void 0), meta: { "t": "微信 - Android 微信里自动调起系统浏览器访问页面" } }],
  ["/es6/babel/@babel/plugin-transform-runtime.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_babel_@babel_plugin-transform-runtime.html" */
    "./plugin-transform-runtime.html-BzLl9de-.js"
  ), true ? __vite__mapDeps([214,1]) : void 0), meta: { "t": "@babel/plugin-transform-runtime" } }],
  ["/es6/babel/@babel/preset-env.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_babel_@babel_preset-env.html" */
    "./preset-env.html-HD2Mg9SR.js"
  ), true ? __vite__mapDeps([215,1]) : void 0), meta: { "t": "@babel/preset-env" } }],
  ["/es6/babel/@babel/runtime-corejs2.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_babel_@babel_runtime-corejs2.html" */
    "./runtime-corejs2.html-CcaXuq4N.js"
  ), true ? __vite__mapDeps([216,1]) : void 0), meta: { "t": "@babel/runtime-corejs2" } }],
  ["/es6/babel/@babel/runtime.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_babel_@babel_runtime.html" */
    "./runtime.html-BBhl6t4k.js"
  ), true ? __vite__mapDeps([217,1]) : void 0), meta: { "t": "@babel/runtime" } }],
  ["/es6/polyfill/array/array-prototype-forEach.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_array_array-prototype-forEach.html" */
    "./array-prototype-forEach.html-DFNktEUD.js"
  ), true ? __vite__mapDeps([218,1]) : void 0), meta: { "t": "Array.prototype.forEach" } }],
  ["/es6/polyfill/array/array-prototype-reduce.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_array_array-prototype-reduce.html" */
    "./array-prototype-reduce.html-Cu_bKzXb.js"
  ), true ? __vite__mapDeps([219,1]) : void 0), meta: { "t": "Array.prototype.reduce" } }],
  ["/es6/polyfill/object/new.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_object_new.html" */
    "./new.html-b5riIlsT.js"
  ), true ? __vite__mapDeps([220,1]) : void 0), meta: { "t": "new 操作符" } }],
  ["/es6/polyfill/object/object-assign.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_object_object-assign.html" */
    "./object-assign.html-CzGhJSr_.js"
  ), true ? __vite__mapDeps([221,1]) : void 0), meta: { "t": "Object.assign" } }],
  ["/es6/polyfill/object/object-create.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_object_object-create.html" */
    "./object-create.html-DFQLX9pf.js"
  ), true ? __vite__mapDeps([222,1]) : void 0), meta: { "t": "Object.create" } }],
  ["/es6/polyfill/promise/promise-allSettled.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_promise_promise-allSettled.html" */
    "./promise-allSettled.html-vB6Eq6eb.js"
  ), true ? __vite__mapDeps([223,1]) : void 0), meta: { "t": "Promise.allSettled" } }],
  ["/es6/polyfill/promise/promise-race.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_promise_promise-race.html" */
    "./promise-race.html-en6Mwnhb.js"
  ), true ? __vite__mapDeps([224,1]) : void 0), meta: { "t": "Promise.race" } }],
  ["/es6/polyfill/string/padStart.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_string_padStart.html" */
    "./padStart.html-DaIiYjLM.js"
  ), true ? __vite__mapDeps([225,1]) : void 0), meta: { "t": "String.prototype.padStart" } }],
  ["/front-end-engineering/development-skills/h5/css-style.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_h5_css-style.html" */
    "./css-style.html-DI-trbUk.js"
  ), true ? __vite__mapDeps([226,1]) : void 0), meta: { "t": "样式" } }],
  ["/front-end-engineering/development-skills/h5/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_h5_index.html" */
    "./index.html-DZKSpGEx.js"
  ), true ? __vite__mapDeps([227,1]) : void 0), meta: { "t": "注意事项" } }],
  ["/front-end-engineering/development-skills/h5/local-mock.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_h5_local-mock.html" */
    "./local-mock.html-BWaiLZuM.js"
  ), true ? __vite__mapDeps([228,1]) : void 0), meta: { "t": "本地 Mock 数据" } }],
  ["/front-end-engineering/environment/ide/code-sandbox.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_ide_code-sandbox.html" */
    "./code-sandbox.html-qIpHpS7u.js"
  ), true ? __vite__mapDeps([229,1]) : void 0), meta: { "t": "CodeSandbox" } }],
  ["/front-end-engineering/environment/ide/vscode.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_ide_vscode.html" */
    "./vscode.html-DOIn3M4U.js"
  ), true ? __vite__mapDeps([230,1]) : void 0), meta: { "t": "VSCode" } }],
  ["/front-end-engineering/development-skills/nodejs/api.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_nodejs_api.html" */
    "./api.html-DrykKdvu.js"
  ), true ? __vite__mapDeps([231,1]) : void 0), meta: { "t": "Node API" } }],
  ["/front-end-engineering/development-skills/nodejs/commonjs.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_nodejs_commonjs.html" */
    "./commonjs.html-BXJpBeVS.js"
  ), true ? __vite__mapDeps([232,1]) : void 0), meta: { "t": "CommonJS 规范及实现" } }],
  ["/front-end-engineering/development-skills/nodejs/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_nodejs_index.html" */
    "./index.html-BAUGXEK3.js"
  ), true ? __vite__mapDeps([233,1]) : void 0), meta: { "t": "Node" } }],
  ["/front-end-engineering/development-skills/nodejs/node-api.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_nodejs_node-api.html" */
    "./node-api.html-D--sB_SG.js"
  ), true ? __vite__mapDeps([234,1]) : void 0), meta: { "t": "Node.js API" } }],
  ["/front-end-engineering/development-skills/nodejs/pm2.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_nodejs_pm2.html" */
    "./pm2.html-BtSLrBzO.js"
  ), true ? __vite__mapDeps([235,1]) : void 0), meta: { "t": "PM2" } }],
  ["/front-end-engineering/development-skills/nodejs/server.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_nodejs_server.html" */
    "./server.html-C87CMpco.js"
  ), true ? __vite__mapDeps([236,1]) : void 0), meta: { "t": "Node Server" } }],
  ["/front-end-engineering/environment/package-manager/semantic-version.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_semantic-version.html" */
    "./semantic-version.html-BVjE1Rhd.js"
  ), true ? __vite__mapDeps([237,1]) : void 0), meta: { "t": "语义化版本" } }],
  ["/front-end-engineering/environment/repository/monorepo.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_repository_monorepo.html" */
    "./monorepo.html-w6LIrCeL.js"
  ), true ? __vite__mapDeps([238,1]) : void 0), meta: { "t": "Monorepo" } }],
  ["/front-end-engineering/frontend-stability-construction/engineering-construction/automated-testing.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_engineering-construction_automated-testing.html" */
    "./automated-testing.html-Bj5p5mzB.js"
  ), true ? __vite__mapDeps([239,1]) : void 0), meta: { "t": "自动化测试" } }],
  ["/front-end-engineering/frontend-stability-construction/engineering-construction/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_engineering-construction_index.html" */
    "./index.html-xn1XWLD3.js"
  ), true ? __vite__mapDeps([240,1]) : void 0), meta: { "t": "7. 工程建设：稳定性的基石" } }],
  ["/front-end-engineering/frontend-stability-construction/full-link-monitoring/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_full-link-monitoring_index.html" */
    "./index.html-BrDxZkYd.js"
  ), true ? __vite__mapDeps([241,1]) : void 0), meta: { "t": "2. 全链路监控：稳定性的守护者" } }],
  ["/front-end-engineering/frontend-stability-construction/high-availability-architecture/cdn-disaster-tolerance.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_high-availability-architecture_cdn-disaster-tolerance.html" */
    "./cdn-disaster-tolerance.html-DHjRdO55.js"
  ), true ? __vite__mapDeps([242,1]) : void 0), meta: { "t": "CDN 容灾" } }],
  ["/front-end-engineering/frontend-stability-construction/high-availability-architecture/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_high-availability-architecture_index.html" */
    "./index.html-BYcfmKZt.js"
  ), true ? __vite__mapDeps([243,1]) : void 0), meta: { "t": "3. 高可用架构：稳定性的核心" } }],
  ["/front-end-engineering/frontend-stability-construction/observable-system/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_observable-system_index.html" */
    "./index.html-D2zNaSuR.js"
  ), true ? __vite__mapDeps([244,1]) : void 0), meta: { "t": "1. 可观测体系：稳定性的前提" } }],
  ["/front-end-engineering/frontend-stability-construction/processs-mechanism/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_processs-mechanism_index.html" */
    "./index.html-CsG4BS10.js"
  ), true ? __vite__mapDeps([245,1]) : void 0), meta: { "t": "6. 流程机制：稳定性的保障" } }],
  ["/front-end-engineering/frontend-stability-construction/performance/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_performance_index.html" */
    "./index.html-i5TcJjR3.js"
  ), true ? __vite__mapDeps([246,1]) : void 0), meta: { "t": "4. 性能管理：稳定性的保证" } }],
  ["/front-end-engineering/frontend-stability-construction/risk-management/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_frontend-stability-construction_risk-management_index.html" */
    "./index.html-FAuGLCrP.js"
  ), true ? __vite__mapDeps([247,1]) : void 0), meta: { "t": "5. 风险治理：稳定性的屏障" } }],
  ["/front-end-engineering/tools/build/rollup.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_rollup.html" */
    "./rollup.html-DsvWHWZy.js"
  ), true ? __vite__mapDeps([248,1]) : void 0), meta: { "t": "Rollup" } }],
  ["/front-end-engineering/tools/build/source-map.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_source-map.html" */
    "./source-map.html-DbTBdSuF.js"
  ), true ? __vite__mapDeps([249,1]) : void 0), meta: { "t": "Source Map" } }],
  ["/front-end-engineering/tools/publish/changelog.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_publish_changelog.html" */
    "./changelog.html-Bz2HKXSB.js"
  ), true ? __vite__mapDeps([250,1]) : void 0), meta: { "t": "Changelog" } }],
  ["/front-end-engineering/tools/runtime/axios.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_runtime_axios.html" */
    "./axios.html-CZLSPXRB.js"
  ), true ? __vite__mapDeps([251,1]) : void 0), meta: { "t": "Axios" } }],
  ["/full-stack/backend/nestjs/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_backend_nestjs_index.html" */
    "./index.html-DPfPpQ7n.js"
  ), true ? __vite__mapDeps([252,1]) : void 0), meta: { "t": "Nest.js" } }],
  ["/full-stack/data-management/data-observability/clickhouse.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_data-management_data-observability_clickhouse.html" */
    "./clickhouse.html-BawcE2t9.js"
  ), true ? __vite__mapDeps([253,1]) : void 0), meta: { "t": "ClickHouse" } }],
  ["/full-stack/data-management/data-observability/sql.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_data-management_data-observability_sql.html" */
    "./sql.html-DKFrYuAN.js"
  ), true ? __vite__mapDeps([254,1]) : void 0), meta: { "t": "SQL" } }],
  ["/full-stack/data-management/kafka/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_data-management_kafka_index.html" */
    "./index.html-BnDWjKGo.js"
  ), true ? __vite__mapDeps([255,1]) : void 0), meta: { "t": "Kafka" } }],
  ["/full-stack/operating-system/docker/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_docker_index.html" */
    "./index.html-DxQ0Jtfo.js"
  ), true ? __vite__mapDeps([256,1]) : void 0), meta: { "t": "Docker" } }],
  ["/full-stack/operating-system/git/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_git_index.html" */
    "./index.html-BdSrLJQ7.js"
  ), true ? __vite__mapDeps([257,1]) : void 0), meta: { "t": "GIT" } }],
  ["/full-stack/operating-system/git/git-command.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_git_git-command.html" */
    "./git-command.html-DebKS1qc.js"
  ), true ? __vite__mapDeps([258,1]) : void 0), meta: { "t": "Git 命令" } }],
  ["/full-stack/operating-system/git/git-commit-guidelines.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_git_git-commit-guidelines.html" */
    "./git-commit-guidelines.html-Dyga-gla.js"
  ), true ? __vite__mapDeps([259,1]) : void 0), meta: { "t": "Git commit 规范" } }],
  ["/full-stack/operating-system/git/gitlab.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_git_gitlab.html" */
    "./gitlab.html-D-rzdmzj.js"
  ), true ? __vite__mapDeps([260,1]) : void 0), meta: { "t": "Gitlab" } }],
  ["/full-stack/operating-system/linux/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_linux_index.html" */
    "./index.html-DaW15a08.js"
  ), true ? __vite__mapDeps([261,1]) : void 0), meta: { "t": "CLI" } }],
  ["/full-stack/operating-system/linux/environment-variables.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_linux_environment-variables.html" */
    "./environment-variables.html-C_G3eMmc.js"
  ), true ? __vite__mapDeps([262,1]) : void 0), meta: { "t": "环境变量" } }],
  ["/full-stack/operating-system/linux/glob.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_linux_glob.html" */
    "./glob.html-BVU8zGG8.js"
  ), true ? __vite__mapDeps([263,1]) : void 0), meta: { "t": "glob 匹配模式" } }],
  ["/full-stack/operating-system/linux/linux-command.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_linux_linux-command.html" */
    "./linux-command.html-ssf3engU.js"
  ), true ? __vite__mapDeps([264,1]) : void 0), meta: { "t": "Linux 命令" } }],
  ["/full-stack/operating-system/linux/shell.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_linux_shell.html" */
    "./shell.html-DlUYTKPb.js"
  ), true ? __vite__mapDeps([265,1]) : void 0), meta: { "t": "Shell 脚本" } }],
  ["/full-stack/software/nginx/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_software_nginx_index.html" */
    "./index.html-BA1m0_sq.js"
  ), true ? __vite__mapDeps([266,1]) : void 0), meta: { "t": "Nginx" } }],
  ["/full-stack/software/nginx/nginx-conf.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_software_nginx_nginx-conf.html" */
    "./nginx-conf.html-B4LDJLif.js"
  ), true ? __vite__mapDeps([267,1]) : void 0), meta: { "t": "nginx.conf" } }],
  ["/full-stack/software/nginx/ngx_http_proxy_module.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_software_nginx_ngx_http_proxy_module.html" */
    "./ngx_http_proxy_module.html-Cgus6HAj.js"
  ), true ? __vite__mapDeps([268,1]) : void 0), meta: { "t": "ngx_http_proxy_module 模块" } }],
  ["/full-stack/software/nginx/ngx_http_upstream_module.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_software_nginx_ngx_http_upstream_module.html" */
    "./ngx_http_upstream_module.html-BbLZZ7g3.js"
  ), true ? __vite__mapDeps([269,1]) : void 0), meta: { "t": "ngx_http_upstream_module 模块" } }],
  ["/full-stack/software/nginx/practices.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_software_nginx_practices.html" */
    "./practices.html-CFJez20s.js"
  ), true ? __vite__mapDeps([270,1]) : void 0), meta: { "t": "Nginx 实践" } }],
  ["/css/layouts/ifc/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_layouts_ifc_index.html" */
    "./index.html-DF26zbOh.js"
  ), true ? __vite__mapDeps([271,1]) : void 0), meta: { "t": "IFC" } }],
  ["/css/topics/border/border-image.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_topics_border_border-image.html" */
    "./border-image.html-Cd6tHyQZ.js"
  ), true ? __vite__mapDeps([272,1]) : void 0), meta: { "t": "border-image" } }],
  ["/css/topics/flex/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_topics_flex_index.html" */
    "./index.html-h6qnfrNz.js"
  ), true ? __vite__mapDeps([273,1]) : void 0), meta: { "t": "flex 布局" } }],
  ["/interview/algorithm/others/fibonacci-sequence.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_others_fibonacci-sequence.html" */
    "./fibonacci-sequence.html-C20xCRwq.js"
  ), true ? __vite__mapDeps([274,1]) : void 0), meta: { "t": "斐波那契数列" } }],
  ["/interview/algorithm/interview/binary-search.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_interview_binary-search.html" */
    "./binary-search.html-nssXGCF2.js"
  ), true ? __vite__mapDeps([275,1]) : void 0), meta: { "t": "【初级】二分查找" } }],
  ["/interview/algorithm/interview/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_interview_index.html" */
    "./index.html-BPslFTUW.js"
  ), true ? __vite__mapDeps([276,1]) : void 0), meta: { "t": "算法" } }],
  ["/interview/algorithm/interview/the-all-nodes-of-binary-tree.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_interview_the-all-nodes-of-binary-tree.html" */
    "./the-all-nodes-of-binary-tree.html-BScIGl-V.js"
  ), true ? __vite__mapDeps([277,1]) : void 0), meta: { "t": "【中级】求二叉树所有节点个数" } }],
  ["/interview/algorithm/interview/the-self-closing-string.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_interview_the-self-closing-string.html" */
    "./the-self-closing-string.html-DXL68Lll.js"
  ), true ? __vite__mapDeps([278,1]) : void 0), meta: { "t": "【初级】给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效" } }],
  ["/interview/algorithm/sorting-algorithm/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_sorting-algorithm_index.html" */
    "./index.html-B7GgJSox.js"
  ), true ? __vite__mapDeps([279,1]) : void 0), meta: { "t": "排序算法对比" } }],
  ["/interview/browser/dom/event-delegation.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_browser_dom_event-delegation.html" */
    "./event-delegation.html-jcfOcGg2.js"
  ), true ? __vite__mapDeps([280,1]) : void 0), meta: { "t": "【初级】事件代理" } }],
  ["/interview/browser/dom/flip-ul.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_browser_dom_flip-ul.html" */
    "./flip-ul.html-D9EOR8Ob.js"
  ), true ? __vite__mapDeps([281,1]) : void 0), meta: { "t": "【中级】ul 翻转" } }],
  ["/interview/browser/dom/the-difference-between-dom-property-and-html-attribute.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_browser_dom_the-difference-between-dom-property-and-html-attribute.html" */
    "./the-difference-between-dom-property-and-html-attribute.html-DF2YAjXk.js"
  ), true ? __vite__mapDeps([282,1]) : void 0), meta: { "t": "【高级】回答问题，说明属性（DOM Property）和特性（HTML Attribute）的区别与联系" } }],
  ["/interview/css/layout/footer-attach-to-the-bottom.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_css_layout_footer-attach-to-the-bottom.html" */
    "./footer-attach-to-the-bottom.html-BCBX4apL.js"
  ), true ? __vite__mapDeps([283,1]) : void 0), meta: { "t": "【中级】如何实现内容高度不够时 footer 吸底的效果" } }],
  ["/interview/css/layout/two-columns-layout.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_css_layout_two-columns-layout.html" */
    "./two-columns-layout.html-pavbKFdl.js"
  ), true ? __vite__mapDeps([284,1]) : void 0), meta: { "t": "【中级】有如下 DOM 结构，要求仅补充 style 中的部分实现布局要求" } }],
  ["/interview/css/position/position-question-1.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_css_position_position-question-1.html" */
    "./position-question-1.html-CnYp1lur.js"
  ), true ? __vite__mapDeps([285,1]) : void 0), meta: { "t": "【初级】加/不加 position 属性，分别如何显示？" } }],
  ["/interview/css/position/position-question-2.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_css_position_position-question-2.html" */
    "./position-question-2.html-DjnqeMfS.js"
  ), true ? __vite__mapDeps([286,1]) : void 0), meta: { "t": "【中级-好题】one、two 哪个 div 在 z 轴的上面" } }],
  ["/interview/data-structure/heap/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_data-structure_heap_index.html" */
    "./index.html-qaNI2TOQ.js"
  ), true ? __vite__mapDeps([287,1]) : void 0), meta: { "t": "堆" } }],
  ["/interview/data-structure/stack-queue/implement-queue-with-two-stacks.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_data-structure_stack-queue_implement-queue-with-two-stacks.html" */
    "./implement-queue-with-two-stacks.html-CUz5k5-4.js"
  ), true ? __vite__mapDeps([288,1]) : void 0), meta: { "t": "【初级】用两个栈，实现一个队列" } }],
  ["/interview/data-structure/stack-queue/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_data-structure_stack-queue_index.html" */
    "./index.html-FqI1PLhz.js"
  ), true ? __vite__mapDeps([289,1]) : void 0), meta: { "t": "栈和队列" } }],
  ["/interview/javascript/javascript-libs/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_javascript-libs_index.html" */
    "./index.html-CZZxach8.js"
  ), true ? __vite__mapDeps([290,1]) : void 0), meta: { "t": "JavaScript 框架/库" } }],
  ["/interview/javascript/javascript-libs/vue.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_javascript-libs_vue.html" */
    "./vue.html-CW4jrwIB.js"
  ), true ? __vite__mapDeps([291,1]) : void 0), meta: { "t": "Vue" } }],
  ["/js/error-handling/debug/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_error-handling_debug_index.html" */
    "./index.html-xEJlP2wM.js"
  ), true ? __vite__mapDeps([292,1]) : void 0), meta: { "t": "调试" } }],
  ["/js/data-types/array/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_array_index.html" */
    "./index.html-Cq_tpLg-.js"
  ), true ? __vite__mapDeps([293,1]) : void 0), meta: { "t": "数组" } }],
  ["/js/data-types/date/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_date_index.html" */
    "./index.html-GsdoNIBx.js"
  ), true ? __vite__mapDeps([294,1]) : void 0), meta: { "t": "Date" } }],
  ["/js/data-types/function/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_function_index.html" */
    "./index.html-PwEQFZ1m.js"
  ), true ? __vite__mapDeps([295,1]) : void 0), meta: { "t": "函数" } }],
  ["/js/data-types/number/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_number_index.html" */
    "./index.html-B08FB0ed.js"
  ), true ? __vite__mapDeps([296,1]) : void 0), meta: { "t": "Number" } }],
  ["/js/data-types/number/floating.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_number_floating.html" */
    "./floating.html-CAQYhIY8.js"
  ), true ? __vite__mapDeps([297,1]) : void 0), meta: { "t": "JavaScript 关于 IEEE 754 双精度浮点数的实现" } }],
  ["/js/data-types/object/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_object_index.html" */
    "./index.html-5ihBy0lS.js"
  ), true ? __vite__mapDeps([298,1]) : void 0), meta: { "t": "对象" } }],
  ["/js/data-types/object/class.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_object_class.html" */
    "./class.html-NynH1Yiu.js"
  ), true ? __vite__mapDeps([299,1]) : void 0), meta: { "t": "类" } }],
  ["/js/data-types/reg-exp/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_reg-exp_index.html" */
    "./index.html-W_CkrnfP.js"
  ), true ? __vite__mapDeps([300,1]) : void 0), meta: { "t": "正则表达式" } }],
  ["/js/data-types/string/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_string_index.html" */
    "./index.html-1GGmfsrw.js"
  ), true ? __vite__mapDeps([301,1]) : void 0), meta: { "t": "字符串" } }],
  ["/js/data-types/string/unicode.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_data-types_string_unicode.html" */
    "./unicode.html-DStCO__N.js"
  ), true ? __vite__mapDeps([302,1]) : void 0), meta: { "t": "Unicode" } }],
  ["/vue/source-study/component/async-component.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_component_async-component.html" */
    "./async-component.html-CSeq6KiB.js"
  ), true ? __vite__mapDeps([303,1]) : void 0), meta: { "t": "异步组件" } }],
  ["/vue/source-study/component/extend.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_component_extend.html" */
    "./extend.html-M3UnP_9K.js"
  ), true ? __vite__mapDeps([304,1]) : void 0), meta: { "t": "组件继承：Vue.extend" } }],
  ["/vue/source-study/component/functional-component.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_component_functional-component.html" */
    "./functional-component.html-nIQ3qov7.js"
  ), true ? __vite__mapDeps([305,1]) : void 0), meta: { "t": "函数式组件" } }],
  ["/vue/source-study/component/options.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_component_options.html" */
    "./options.html-BHF09BSu.js"
  ), true ? __vite__mapDeps([306,1]) : void 0), meta: { "t": "合并配置" } }],
  ["/vue/source-study/component/register.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_component_register.html" */
    "./register.html-wVMQmd1k.js"
  ), true ? __vite__mapDeps([307,1]) : void 0), meta: { "t": "组件注册" } }],
  ["/vue/source-study/compile/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_index.html" */
    "./index.html-Cnu5LxBH.js"
  ), true ? __vite__mapDeps([308,1]) : void 0), meta: { "t": "编译概览" } }],
  ["/vue/source-study/compile/base-compile.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_base-compile.html" */
    "./base-compile.html-DGZpj7dQ.js"
  ), true ? __vite__mapDeps([309,1]) : void 0), meta: { "t": "核心编译" } }],
  ["/vue/source-study/compile/codegen.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_codegen.html" */
    "./codegen.html-B25xjGFB.js"
  ), true ? __vite__mapDeps([310,1]) : void 0), meta: { "t": "生成 render 函数" } }],
  ["/vue/source-study/compile/compile-process.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_compile-process.html" */
    "./compile-process.html-DJuNPud1.js"
  ), true ? __vite__mapDeps([311,1]) : void 0), meta: { "t": "编译流程" } }],
  ["/vue/source-study/compile/optimize.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_optimize.html" */
    "./optimize.html-BoG6ZgML.js"
  ), true ? __vite__mapDeps([312,1]) : void 0), meta: { "t": "优化 AST 树" } }],
  ["/vue/source-study/compile/parse-html.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_parse-html.html" */
    "./parse-html.html-VfpADya6.js"
  ), true ? __vite__mapDeps([313,1]) : void 0), meta: { "t": "解析模板字符串" } }],
  ["/vue/source-study/compile/parse.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_parse.html" */
    "./parse.html-BNdXQJr0.js"
  ), true ? __vite__mapDeps([314,1]) : void 0), meta: { "t": "创建 AST" } }],
  ["/vue/source-study/instance/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_instance_index.html" */
    "./index.html-Ci2y_QMb.js"
  ), true ? __vite__mapDeps([315,1]) : void 0), meta: { "t": "组件实例化" } }],
  ["/vue/source-study/instance/create.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_instance_create.html" */
    "./create.html-DAwSfso0.js"
  ), true ? __vite__mapDeps([316,1]) : void 0), meta: { "t": "创建组件实例" } }],
  ["/vue/source-study/instance/directives.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_instance_directives.html" */
    "./directives.html-h6qN8iYY.js"
  ), true ? __vite__mapDeps([317,1]) : void 0), meta: { "t": "指令" } }],
  ["/vue/source-study/instance/events.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_instance_events.html" */
    "./events.html-ZKR6RSWn.js"
  ), true ? __vite__mapDeps([318,1]) : void 0), meta: { "t": "事件监听器" } }],
  ["/vue/source-study/global-api/use.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_global-api_use.html" */
    "./use.html-DiluNTfq.js"
  ), true ? __vite__mapDeps([319,1]) : void 0), meta: { "t": "Vue.use" } }],
  ["/vue/source-study/observer/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_observer_index.html" */
    "./index.html-QqSq2XuO.js"
  ), true ? __vite__mapDeps([320,1]) : void 0), meta: { "t": "Observer" } }],
  ["/vue/source-study/observer/array-observe-limit.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_observer_array-observe-limit.html" */
    "./array-observe-limit.html-ByWBfT6_.js"
  ), true ? __vite__mapDeps([321,1]) : void 0), meta: { "t": "数组的响应式限制" } }],
  ["/vue/source-study/observer/dep-collection.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_observer_dep-collection.html" */
    "./dep-collection.html-DcrHbwp4.js"
  ), true ? __vite__mapDeps([322,1]) : void 0), meta: { "t": "依赖收集" } }],
  ["/vue/source-study/observer/dep.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_observer_dep.html" */
    "./dep.html-Dt-26yDa.js"
  ), true ? __vite__mapDeps([323,1]) : void 0), meta: { "t": "Dep" } }],
  ["/vue/source-study/observer/notify-update.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_observer_notify-update.html" */
    "./notify-update.html-86u-CNeN.js"
  ), true ? __vite__mapDeps([324,1]) : void 0), meta: { "t": "通知更新" } }],
  ["/vue/source-study/observer/scheduler.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_observer_scheduler.html" */
    "./scheduler.html-BieOjpjQ.js"
  ), true ? __vite__mapDeps([325,1]) : void 0), meta: { "t": "scheduler" } }],
  ["/vue/source-study/observer/watcher.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_observer_watcher.html" */
    "./watcher.html-DKcbKO2P.js"
  ), true ? __vite__mapDeps([326,1]) : void 0), meta: { "t": "Watcher" } }],
  ["/vue/source-study/ssr/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_ssr_index.html" */
    "./index.html-_w84xyvm.js"
  ), true ? __vite__mapDeps([327,1]) : void 0), meta: { "t": "Vue SSR" } }],
  ["/vue/source-study/ssr/hydrate.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_ssr_hydrate.html" */
    "./hydrate.html-BSGzs60c.js"
  ), true ? __vite__mapDeps([328,1]) : void 0), meta: { "t": "客户端激活" } }],
  ["/vue/source-study/ssr/vue-server-renderer.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_ssr_vue-server-renderer.html" */
    "./vue-server-renderer.html-BAYNkvib.js"
  ), true ? __vite__mapDeps([329,1]) : void 0), meta: { "t": "vue-server-renderer" } }],
  ["/vue/source-study/util/lifecycle-hook-event.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_util_lifecycle-hook-event.html" */
    "./lifecycle-hook-event.html-BCD17nfo.js"
  ), true ? __vite__mapDeps([330,1]) : void 0), meta: { "t": "生命周期钩子事件 hook events" } }],
  ["/vue/source-study/util/next-tick.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_util_next-tick.html" */
    "./next-tick.html-BuGMF7C9.js"
  ), true ? __vite__mapDeps([331,1]) : void 0), meta: { "t": "nextTick" } }],
  ["/vue/source-study/vdom/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_index.html" */
    "./index.html-CcRWkNLO.js"
  ), true ? __vite__mapDeps([332,1]) : void 0), meta: { "t": "概览" } }],
  ["/vue/source-study/vdom/child-component-create.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_child-component-create.html" */
    "./child-component-create.html-R3LQx8QJ.js"
  ), true ? __vite__mapDeps([333,1]) : void 0), meta: { "t": "创建子组件实例" } }],
  ["/vue/source-study/vdom/patch-fn.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_patch-fn.html" */
    "./patch-fn.html-CnUgUzPC.js"
  ), true ? __vite__mapDeps([334,1]) : void 0), meta: { "t": "patch 辅助函数" } }],
  ["/vue/source-study/vdom/patch-vnode.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_patch-vnode.html" */
    "./patch-vnode.html-DbziMvaS.js"
  ), true ? __vite__mapDeps([335,1]) : void 0), meta: { "t": "修补 VNode" } }],
  ["/vue/source-study/vdom/patch.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_patch.html" */
    "./patch.html-CDU2yoym.js"
  ), true ? __vite__mapDeps([336,1]) : void 0), meta: { "t": "patch 函数" } }],
  ["/vue/source-study/vdom/vnode-tree-create.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_vnode-tree-create.html" */
    "./vnode-tree-create.html-DsZzxA20.js"
  ), true ? __vite__mapDeps([337,1]) : void 0), meta: { "t": "创建 VNode Tree" } }],
  ["/vue/vue-series/vue-router/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_vue-series_vue-router_index.html" */
    "./index.html-Cjgvfkqf.js"
  ), true ? __vite__mapDeps([338,1]) : void 0), meta: { "t": "vue-router 原理" } }],
  ["/vue/vue-series/vuejs/scoped-css.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_vue-series_vuejs_scoped-css.html" */
    "./scoped-css.html-BCVjYr6f.js"
  ), true ? __vite__mapDeps([339,1]) : void 0), meta: { "t": "Scoped CSS" } }],
  ["/wander/house/beijing/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_house_beijing_index.html" */
    "./index.html-BaC8iapu.js"
  ), true ? __vite__mapDeps([340,1]) : void 0), meta: { "t": "北京" } }],
  ["/vue/vue-series/vuex/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_vue-series_vuex_index.html" */
    "./index.html-BZEZvWts.js"
  ), true ? __vite__mapDeps([341,1]) : void 0), meta: { "t": "Vuex 源码学习" } }],
  ["/vue/vue-series/vuex/get-state-after-mutation.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_vue-series_vuex_get-state-after-mutation.html" */
    "./get-state-after-mutation.html-DqpgrCn7.js"
  ), true ? __vite__mapDeps([342,1]) : void 0), meta: { "t": "vuex 里在 action 里提交 mutation 之后可以立即同步获取到最新的 state 吗" } }],
  ["/vue/vue-series/vuex/register-module.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_vue-series_vuex_register-module.html" */
    "./register-module.html-vF4PfXoc.js"
  ), true ? __vite__mapDeps([343,1]) : void 0), meta: { "t": "Vuex registerModule 里的坑" } }],
  ["/vue/vue-series/vuex/reset-child-module-state.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_vue-series_vuex_reset-child-module-state.html" */
    "./reset-child-module-state.html-DfUYEOMI.js"
  ), true ? __vite__mapDeps([344,1]) : void 0), meta: { "t": "优雅地重置 Vuex 子模块的 State" } }],
  ["/wander/house/wanxiangyuefu/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_house_wanxiangyuefu_index.html" */
    "./index.html-Bv7cXlCP.js"
  ), true ? __vite__mapDeps([345,346,1]) : void 0), meta: { "t": "万象悦府" } }],
  ["/wander/house/xishanjinxiufu/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_house_xishanjinxiufu_index.html" */
    "./index.html-BCg-nXtU.js"
  ), true ? __vite__mapDeps([347,1]) : void 0), meta: { "t": "西山锦绣府" } }],
  ["/wander/others/ssr/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_others_ssr_index.html" */
    "./index.html-C09GlSnQ.js"
  ), true ? __vite__mapDeps([348,1]) : void 0), meta: { "t": "科学上网" } }],
  ["/wander/house/zhonghailichunhushu/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_house_zhonghailichunhushu_index.html" */
    "./index.html-DVecNgXb.js"
  ), true ? __vite__mapDeps([349,346,1]) : void 0), meta: { "t": "中海丽春湖墅" } }],
  ["/code-snippet/practices/css/1-%E5%9C%86%E5%9C%88%E5%A3%B0%E6%B3%A2%E6%89%A9%E6%95%A3%E6%95%88%E6%9E%9C/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_css_1-圆圈声波扩散效果_index.html" */
    "./index.html-w0_OKqHk.js"
  ), true ? __vite__mapDeps([350,1]) : void 0), meta: { "t": "CSS3-Circle-Diffusion" } }],
  ["/code-snippet/practices/css/2-%E9%BC%A0%E6%A0%87%E6%82%AC%E5%81%9C%E6%95%88%E6%9E%9C/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_css_2-鼠标悬停效果_index.html" */
    "./index.html-BX8f8ppi.js"
  ), true ? __vite__mapDeps([351,1]) : void 0), meta: { "t": "CSS3-Hover" } }],
  ["/code-snippet/practices/css/3-%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%95%88%E6%9E%9C/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_css_3-加载进度效果_index.html" */
    "./index.html-TaFMX11g.js"
  ), true ? __vite__mapDeps([352,1]) : void 0), meta: { "t": "CSS3-Loading" } }],
  ["/code-snippet/practices/css/4-%E9%9D%A2%E5%8C%85%E5%B1%91/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_css_4-面包屑_index.html" */
    "./index.html-KkDOdPdb.js"
  ), true ? __vite__mapDeps([353,1]) : void 0), meta: { "t": "CSS-Bread-Crumbs" } }],
  ["/code-snippet/practices/css/6-%E5%BE%84%E5%90%91%E5%8A%A8%E7%94%BB%E8%8F%9C%E5%8D%95/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_css_6-径向动画菜单_index.html" */
    "./index.html-CknbdulZ.js"
  ), true ? __vite__mapDeps([354,1]) : void 0), meta: { "t": "simple-radius-menu" } }],
  ["/code-snippet/practices/js/%E5%9B%BE%E7%89%87%E8%A3%81%E5%89%AA/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_js_图片裁剪_index.html" */
    "./index.html-DrPAFOwU.js"
  ), true ? __vite__mapDeps([355,1]) : void 0), meta: { "t": "image-clipping" } }],
  ["/code-snippet/practices/js/%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97%E5%99%A8/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_js_简单计算器_index.html" */
    "./index.html-DTl47xSu.js"
  ), true ? __vite__mapDeps([356,1]) : void 0), meta: { "t": "simple-calculator" } }],
  ["/code-snippet/practices/js/%E7%AE%80%E5%8D%95%E6%8B%96%E6%8B%BD%E5%8A%9F%E8%83%BD/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_js_简单拖拽功能_index.html" */
    "./index.html-BCTgYpir.js"
  ), true ? __vite__mapDeps([357,1]) : void 0), meta: { "t": "simple-drag" } }],
  ["/front-end-engineering/development-skills/nodejs/koa/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_nodejs_koa_index.html" */
    "./index.html-Bw4eBeW5.js"
  ), true ? __vite__mapDeps([358,1]) : void 0), meta: { "t": "Koa" } }],
  ["/front-end-engineering/environment/package-manager/pnpm/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_pnpm_index.html" */
    "./index.html-CS6Va8Li.js"
  ), true ? __vite__mapDeps([359,1]) : void 0), meta: { "t": "pnpm" } }],
  ["/front-end-engineering/environment/package-manager/npm/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_npm_index.html" */
    "./index.html-B8e1-rlT.js"
  ), true ? __vite__mapDeps([360,1]) : void 0), meta: { "t": "npm" } }],
  ["/front-end-engineering/environment/package-manager/npm/npm-command.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_npm_npm-command.html" */
    "./npm-command.html-Q7d-FUx0.js"
  ), true ? __vite__mapDeps([361,1]) : void 0), meta: { "t": "npm 命令" } }],
  ["/front-end-engineering/environment/package-manager/npm/npm-config.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_npm_npm-config.html" */
    "./npm-config.html-DRWuW_8y.js"
  ), true ? __vite__mapDeps([362,1]) : void 0), meta: { "t": "npm-config" } }],
  ["/front-end-engineering/environment/package-manager/npm/npm-scripts.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_npm_npm-scripts.html" */
    "./npm-scripts.html-ChSzogbJ.js"
  ), true ? __vite__mapDeps([363,1]) : void 0), meta: { "t": "npm-scripts" } }],
  ["/front-end-engineering/environment/package-manager/npm/npmrc.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_npm_npmrc.html" */
    "./npmrc.html-tnYnLRId.js"
  ), true ? __vite__mapDeps([364,1]) : void 0), meta: { "t": "npmrc" } }],
  ["/front-end-engineering/environment/package-manager/npm/package-lock.json.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_npm_package-lock.json.html" */
    "./package-lock.json.html-DqLaOpFN.js"
  ), true ? __vite__mapDeps([365,1]) : void 0), meta: { "t": "package-lock.json" } }],
  ["/front-end-engineering/environment/package-manager/npm/package.json.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_npm_package.json.html" */
    "./package.json.html-mCmkIBTg.js"
  ), true ? __vite__mapDeps([366,1]) : void 0), meta: { "t": "package.json" } }],
  ["/front-end-engineering/environment/package-manager/third-party-packages/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_third-party-packages_index.html" */
    "./index.html-pWktRUDW.js"
  ), true ? __vite__mapDeps([367,1]) : void 0), meta: { "t": "第三方工具" } }],
  ["/front-end-engineering/environment/package-manager/third-party-packages/koa.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_third-party-packages_koa.html" */
    "./koa.html-DOtQmncZ.js"
  ), true ? __vite__mapDeps([368,1]) : void 0), meta: { "t": "koa 相关包" } }],
  ["/front-end-engineering/tools/build/webpack/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_index.html" */
    "./index.html-3incSQ4H.js"
  ), true ? __vite__mapDeps([369,1]) : void 0), meta: { "t": "Webpack 核心概念" } }],
  ["/front-end-engineering/tools/build/webpack/webpack-runtime.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_webpack-runtime.html" */
    "./webpack-runtime.html-B-R9C9RH.js"
  ), true ? __vite__mapDeps([370,1]) : void 0), meta: { "t": "Webpack runtime 简单分析" } }],
  ["/front-end-engineering/tools/build/webpack/webpack-todo.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_webpack-todo.html" */
    "./webpack-todo.html-BxUWLdkc.js"
  ), true ? __vite__mapDeps([371,1]) : void 0), meta: { "t": "TODO" } }],
  ["/front-end-engineering/tools/build/webpack/webpack4-import.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_webpack4-import.html" */
    "./webpack4-import.html-DoLgiw3N.js"
  ), true ? __vite__mapDeps([372,1]) : void 0), meta: { "t": "Webpack 4: import() and CommonJs" } }],
  ["/front-end-engineering/tools/style-guide/naming-conventions/js.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_style-guide_naming-conventions_js.html" */
    "./js.html-4kORKOfo.js"
  ), true ? __vite__mapDeps([373,1]) : void 0), meta: { "t": "JavaScript 命名规范" } }],
  ["/front-end-engineering/tools/style-guide/naming-conventions/naming-references.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_style-guide_naming-conventions_naming-references.html" */
    "./naming-references.html-DE_TVwgJ.js"
  ), true ? __vite__mapDeps([374,1]) : void 0), meta: { "t": "命名参考" } }],
  ["/css/css-spec/css2.2/8-box-model/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_css-spec_css2.2_8-box-model_index.html" */
    "./index.html-C5atDoVD.js"
  ), true ? __vite__mapDeps([375,1]) : void 0), meta: { "t": "8 盒模型" } }],
  ["/css/css-spec/css2.2/9-visual-formatting-model/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_css-spec_css2.2_9-visual-formatting-model_index.html" */
    "./index.html-CnpBRQJA.js"
  ), true ? __vite__mapDeps([376,1]) : void 0), meta: { "t": "9 视觉格式化模型" } }],
  ["/css/topics/flex/flex-image/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_topics_flex_flex-image_index.html" */
    "./index.html-BW-GNQ8Y.js"
  ), true ? __vite__mapDeps([377,1]) : void 0), meta: { "t": "flex 布局下 img 显示问题" } }],
  ["/css/topics/text/text-wrap-and-ellipsis/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_topics_text_text-wrap-and-ellipsis_index.html" */
    "./index.html-o22MvTf6.js"
  ), true ? __vite__mapDeps([378,1]) : void 0), meta: { "t": "文本换行和省略" } }],
  ["/interview/algorithm/others/binary-search/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_others_binary-search_index.html" */
    "./index.html-C2Yu6D1L.js"
  ), true ? __vite__mapDeps([379,1]) : void 0), meta: { "t": "二分搜索" } }],
  ["/interview/algorithm/interview/leetcode/kth-largest-element-in-an-array.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_interview_leetcode_kth-largest-element-in-an-array.html" */
    "./kth-largest-element-in-an-array.html-DgD-QFoK.js"
  ), true ? __vite__mapDeps([380,1]) : void 0), meta: { "t": "LeetCode - 数组中的第K个最大元素" } }],
  ["/interview/algorithm/interview/leetcode/partition-array-into-three-parts-with-equal-sum.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_interview_leetcode_partition-array-into-three-parts-with-equal-sum.html" */
    "./partition-array-into-three-parts-with-equal-sum.html-Ci2oldrP.js"
  ), true ? __vite__mapDeps([381,1]) : void 0), meta: { "t": "LeetCode - 将数组分成和相等的三个部分" } }],
  ["/interview/algorithm/sorting-algorithm/bubble-sort/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_sorting-algorithm_bubble-sort_index.html" */
    "./index.html-BOMQ5sjl.js"
  ), true ? __vite__mapDeps([382,1]) : void 0), meta: { "t": "冒泡排序" } }],
  ["/interview/algorithm/sorting-algorithm/insertion-sort/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_sorting-algorithm_insertion-sort_index.html" */
    "./index.html-C5QVwCs0.js"
  ), true ? __vite__mapDeps([383,1]) : void 0), meta: { "t": "插入排序" } }],
  ["/interview/algorithm/sorting-algorithm/merge-sort/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_sorting-algorithm_merge-sort_index.html" */
    "./index.html-3bXFimlA.js"
  ), true ? __vite__mapDeps([384,1]) : void 0), meta: { "t": "归并排序" } }],
  ["/interview/algorithm/sorting-algorithm/quick-sort/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_sorting-algorithm_quick-sort_index.html" */
    "./index.html-dhhc3QRs.js"
  ), true ? __vite__mapDeps([385,1]) : void 0), meta: { "t": "快速排序" } }],
  ["/interview/algorithm/sorting-algorithm/selection-sort/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_sorting-algorithm_selection-sort_index.html" */
    "./index.html-CA7OYjo_.js"
  ), true ? __vite__mapDeps([386,1]) : void 0), meta: { "t": "选择排序" } }],
  ["/interview/javascript/coding/basic-api-usage/create-a-random-valid-hex-color.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_create-a-random-valid-hex-color.html" */
    "./create-a-random-valid-hex-color.html-C0j6SZjS.js"
  ), true ? __vite__mapDeps([387,1]) : void 0), meta: { "t": "【高级】随机生成一个合法的 css 颜色值，比如 #c1c1c1" } }],
  ["/interview/javascript/coding/basic-api-usage/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_index.html" */
    "./index.html-BVTVXvI7.js"
  ), true ? __vite__mapDeps([388,1]) : void 0), meta: { "t": "基础 API 使用" } }],
  ["/interview/javascript/coding/basic-api-usage/rgb-to-hex.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_rgb-to-hex.html" */
    "./rgb-to-hex.html-BSL4xeFF.js"
  ), true ? __vite__mapDeps([389,1]) : void 0), meta: { "t": "【初级】颜色转换，rgbToHex" } }],
  ["/interview/javascript/coding/basic-api-usage/variable-naming-style.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_variable-naming-style.html" */
    "./variable-naming-style.html-CyUIgiQN.js"
  ), true ? __vite__mapDeps([390,1]) : void 0), meta: { "t": "【初级】变量命名风格转换" } }],
  ["/interview/javascript/coding/program-design/deep-clone.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_program-design_deep-clone.html" */
    "./deep-clone.html-BI505Rv1.js"
  ), true ? __vite__mapDeps([391,1]) : void 0), meta: { "t": "【高级】深拷贝" } }],
  ["/interview/javascript/coding/program-design/event-emitter.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_program-design_event-emitter.html" */
    "./event-emitter.html-VDX9YBJy.js"
  ), true ? __vite__mapDeps([392,1]) : void 0), meta: { "t": "【高级】EventEmitter" } }],
  ["/interview/javascript/coding/program-design/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_program-design_index.html" */
    "./index.html-DSJcZaKT.js"
  ), true ? __vite__mapDeps([393,1]) : void 0), meta: { "t": "程序设计" } }],
  ["/interview/javascript/coding/program-design/max-parallel-request-count-control.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_program-design_max-parallel-request-count-control.html" */
    "./max-parallel-request-count-control.html-CthT1n1E.js"
  ), true ? __vite__mapDeps([394,1]) : void 0), meta: { "t": "【高级】最大并发请求控制" } }],
  ["/interview/javascript/foundation/data-type/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_data-type_index.html" */
    "./index.html-Dwz97NYU.js"
  ), true ? __vite__mapDeps([395,1]) : void 0), meta: { "t": "数据类型" } }],
  ["/interview/javascript/foundation/data-type/the-value-of-the-params-passed-to-function.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_data-type_the-value-of-the-params-passed-to-function.html" */
    "./the-value-of-the-params-passed-to-function.html-F4AHNznr.js"
  ), true ? __vite__mapDeps([396,1]) : void 0), meta: { "t": "【初级】函数参数值传递问题" } }],
  ["/interview/javascript/foundation/data-type/typeof.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_data-type_typeof.html" */
    "./typeof.html-Cqo2-WVZ.js"
  ), true ? __vite__mapDeps([397,1]) : void 0), meta: { "t": "【初级】typeof" } }],
  ["/interview/javascript/foundation/execution-context/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_index.html" */
    "./index.html-DSPTmTFm.js"
  ), true ? __vite__mapDeps([398,1]) : void 0), meta: { "t": "执行上下文" } }],
  ["/interview/javascript/foundation/execution-mechanism/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-mechanism_index.html" */
    "./index.html-CPCCScT9.js"
  ), true ? __vite__mapDeps([399,1]) : void 0), meta: { "t": "执行机制" } }],
  ["/interview/javascript/performance-optimization/debounce-throttle/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_performance-optimization_debounce-throttle_index.html" */
    "./index.html-BTXCC_G0.js"
  ), true ? __vite__mapDeps([400,1]) : void 0), meta: { "t": "防抖和节流" } }],
  ["/js/error-handling/debug/console/console-log-event.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_error-handling_debug_console_console-log-event.html" */
    "./console-log-event.html-D5nUSAPm.js"
  ), true ? __vite__mapDeps([401,1]) : void 0), meta: { "t": "console.log(event)" } }],
  ["/js/error-handling/debug/console/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_error-handling_debug_console_index.html" */
    "./index.html-DwqxYrFF.js"
  ), true ? __vite__mapDeps([402,1]) : void 0), meta: { "t": "console" } }],
  ["/vue/source-study/compile/topics/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_topics_index.html" */
    "./index.html-DqGbId4b.js"
  ), true ? __vite__mapDeps([403,1]) : void 0), meta: { "t": "概览" } }],
  ["/vue/source-study/compile/topics/event.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_topics_event.html" */
    "./event.html-DVth2e0t.js"
  ), true ? __vite__mapDeps([404,1]) : void 0), meta: { "t": "event" } }],
  ["/vue/source-study/compile/topics/slot.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_topics_slot.html" */
    "./slot.html-eBgoRWSB.js"
  ), true ? __vite__mapDeps([405,1]) : void 0), meta: { "t": "插槽" } }],
  ["/vue/source-study/compile/topics/v-model.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_compile_topics_v-model.html" */
    "./v-model.html-MivK9cmc.js"
  ), true ? __vite__mapDeps([406,1]) : void 0), meta: { "t": "v-model" } }],
  ["/vue/source-study/instance/state/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_instance_state_index.html" */
    "./index.html-BVMNQJDS.js"
  ), true ? __vite__mapDeps([407,1]) : void 0), meta: { "t": "状态数据初始化" } }],
  ["/vue/source-study/instance/state/computed.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_instance_state_computed.html" */
    "./computed.html-cW68nEk3.js"
  ), true ? __vite__mapDeps([408,1]) : void 0), meta: { "t": "计算属性" } }],
  ["/vue/source-study/instance/state/data.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_instance_state_data.html" */
    "./data.html-D-3otn8B.js"
  ), true ? __vite__mapDeps([409,1]) : void 0), meta: { "t": "data" } }],
  ["/vue/source-study/instance/state/methods.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_instance_state_methods.html" */
    "./methods.html-7ZWKXkep.js"
  ), true ? __vite__mapDeps([410,1]) : void 0), meta: { "t": "methods" } }],
  ["/vue/source-study/instance/state/props.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_instance_state_props.html" */
    "./props.html-CTelLBEH.js"
  ), true ? __vite__mapDeps([411,1]) : void 0), meta: { "t": "props" } }],
  ["/vue/source-study/instance/state/watch.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_instance_state_watch.html" */
    "./watch.html-CZTJ5NC4.js"
  ), true ? __vite__mapDeps([412,1]) : void 0), meta: { "t": "watch" } }],
  ["/vue/source-study/vdom/patch-modules/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_patch-modules_index.html" */
    "./index.html-C4feoLLV.js"
  ), true ? __vite__mapDeps([413,1]) : void 0), meta: { "t": "功能模块的钩子函数" } }],
  ["/vue/source-study/vdom/patch-modules/attrs.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_patch-modules_attrs.html" */
    "./attrs.html-SckOF5a9.js"
  ), true ? __vite__mapDeps([414,1]) : void 0), meta: { "t": "attrs" } }],
  ["/vue/source-study/vdom/patch-modules/class.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_patch-modules_class.html" */
    "./class.html-B5wzZWrv.js"
  ), true ? __vite__mapDeps([415,1]) : void 0), meta: { "t": "class 模块" } }],
  ["/vue/source-study/vdom/patch-modules/dom-props.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_patch-modules_dom-props.html" */
    "./dom-props.html-BJhqAHh0.js"
  ), true ? __vite__mapDeps([416,1]) : void 0), meta: { "t": "dom-props 模块" } }],
  ["/vue/source-study/vdom/patch-modules/ref.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_patch-modules_ref.html" */
    "./ref.html-C4ft4GhQ.js"
  ), true ? __vite__mapDeps([417,1]) : void 0), meta: { "t": "ref 模块" } }],
  ["/vue/source-study/vdom/patch-modules/style.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_patch-modules_style.html" */
    "./style.html-B6P3e4cl.js"
  ), true ? __vite__mapDeps([418,1]) : void 0), meta: { "t": "style 模块" } }],
  ["/vue/source-study/vdom/topics/dom-binding.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_topics_dom-binding.html" */
    "./dom-binding.html-Cy7ksVYI.js"
  ), true ? __vite__mapDeps([419,1]) : void 0), meta: { "t": "组件的 DOM Tree 是如何插入到父元素上的？" } }],
  ["/code-snippet/practices/css/%E6%A0%B9%E6%8D%AE%E5%85%84%E5%BC%9F%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%B0%E9%87%8F%E6%9D%A5%E8%AE%BE%E7%BD%AE%E6%A0%B7%E5%BC%8F/rem/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_css_根据兄弟元素的数量来设置样式_rem_index.html" */
    "./index.html-CB3uPyMy.js"
  ), true ? __vite__mapDeps([420,1]) : void 0), meta: { "t": "rem 组件" } }],
  ["/front-end-engineering/environment/package-manager/third-party-packages/package-env-management/cross-env.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_third-party-packages_package-env-management_cross-env.html" */
    "./cross-env.html-NUeUSJ22.js"
  ), true ? __vite__mapDeps([421,1]) : void 0), meta: { "t": "cross-env 跨平台设置环境变量" } }],
  ["/front-end-engineering/environment/package-manager/third-party-packages/package-env-management/npx.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_third-party-packages_package-env-management_npx.html" */
    "./npx.html-BAswDUcT.js"
  ), true ? __vite__mapDeps([422,1]) : void 0), meta: { "t": "npx 调用局部安装的模块" } }],
  ["/front-end-engineering/environment/package-manager/third-party-packages/package-env-management/nrm.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_third-party-packages_package-env-management_nrm.html" */
    "./nrm.html-DqQ5550q.js"
  ), true ? __vite__mapDeps([423,1]) : void 0), meta: { "t": "nrm 管理 npm registry" } }],
  ["/front-end-engineering/environment/package-manager/third-party-packages/package-env-management/nvm.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_third-party-packages_package-env-management_nvm.html" */
    "./nvm.html-H3gBJwgq.js"
  ), true ? __vite__mapDeps([424,1]) : void 0), meta: { "t": "nvm 管理 Node.js 版本" } }],
  ["/front-end-engineering/tools/build/webpack/config/config-tools.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_config_config-tools.html" */
    "./config-tools.html-BhlZ_Twj.js"
  ), true ? __vite__mapDeps([425,1]) : void 0), meta: { "t": "第三方配置工具" } }],
  ["/front-end-engineering/tools/build/webpack/config/dead-code.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_config_dead-code.html" */
    "./dead-code.html-NgcwL3Mq.js"
  ), true ? __vite__mapDeps([426,1]) : void 0), meta: { "t": "dead code" } }],
  ["/front-end-engineering/tools/build/webpack/config/practical-config.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_config_practical-config.html" */
    "./practical-config.html-DR5aXZKW.js"
  ), true ? __vite__mapDeps([427,1]) : void 0), meta: { "t": "Webpack 配置实践" } }],
  ["/front-end-engineering/tools/build/webpack/config/whole-config.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_config_whole-config.html" */
    "./whole-config.html-B3OZzl-y.js"
  ), true ? __vite__mapDeps([428,1]) : void 0), meta: { "t": "完整 webpack.config.js 配置" } }],
  ["/front-end-engineering/tools/build/webpack/tapable/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_tapable_index.html" */
    "./index.html-CrSnumag.js"
  ), true ? __vite__mapDeps([429,1]) : void 0), meta: { "t": "Tapable" } }],
  ["/front-end-engineering/tools/build/webpack/tapable/tapable-readme.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_tapable_tapable-readme.html" */
    "./tapable-readme.html-CiXp576O.js"
  ), true ? __vite__mapDeps([430,1]) : void 0), meta: { "t": "Tapable README.md" } }],
  ["/front-end-engineering/tools/style-guide/code-formatter/eslint/eslint-prettier.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_style-guide_code-formatter_eslint_eslint-prettier.html" */
    "./eslint-prettier.html-0YuJjpmZ.js"
  ), true ? __vite__mapDeps([431,1]) : void 0), meta: { "t": "ESLint - 与 Prettier 的集成" } }],
  ["/front-end-engineering/tools/style-guide/code-formatter/eslint/eslint-vscode.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_style-guide_code-formatter_eslint_eslint-vscode.html" */
    "./eslint-vscode.html-Cz41q0D5.js"
  ), true ? __vite__mapDeps([432,1]) : void 0), meta: { "t": "ESLint - VSCode 配置" } }],
  ["/front-end-engineering/tools/style-guide/code-formatter/eslint/eslint-vue.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_style-guide_code-formatter_eslint_eslint-vue.html" */
    "./eslint-vue.html-sh0Z41Rk.js"
  ), true ? __vite__mapDeps([433,1]) : void 0), meta: { "t": "ESLint - Vue 项目配置" } }],
  ["/front-end-engineering/tools/style-guide/code-formatter/eslint/how-to-write-a-custom-eslint-rule.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_style-guide_code-formatter_eslint_how-to-write-a-custom-eslint-rule.html" */
    "./how-to-write-a-custom-eslint-rule.html-DyUXQh9f.js"
  ), true ? __vite__mapDeps([434,1]) : void 0), meta: { "t": "如何开发自定义的 ESLint 规则" } }],
  ["/front-end-engineering/tools/style-guide/code-formatter/eslint/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_style-guide_code-formatter_eslint_index.html" */
    "./index.html-BF4IcbIn.js"
  ), true ? __vite__mapDeps([435,1]) : void 0), meta: { "t": "ESLint" } }],
  ["/interview/javascript/coding/basic-api-usage/array-operation/array-elements-deduplication.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_array-operation_array-elements-deduplication.html" */
    "./array-elements-deduplication.html-C8NN_ZUA.js"
  ), true ? __vite__mapDeps([436,1]) : void 0), meta: { "t": "【初级】数组去重" } }],
  ["/interview/javascript/coding/basic-api-usage/array-operation/flat-array-elements-and-deduplicate.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_array-operation_flat-array-elements-and-deduplicate.html" */
    "./flat-array-elements-and-deduplicate.html-69CW4IlK.js"
  ), true ? __vite__mapDeps([437,1]) : void 0), meta: { "t": "【中级】将数组扁平化并去除其中重复部分数据，得到一个升序且不重复的数组" } }],
  ["/interview/javascript/coding/basic-api-usage/array-operation/merge-sorted-array.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_array-operation_merge-sorted-array.html" */
    "./merge-sorted-array.html-B_Mp52gU.js"
  ), true ? __vite__mapDeps([438,1]) : void 0), meta: { "t": "【中级】合并有序数组" } }],
  ["/interview/javascript/coding/basic-api-usage/es6/synchronous-event-listener-with-proxy.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_es6_synchronous-event-listener-with-proxy.html" */
    "./synchronous-event-listener-with-proxy.html-DoYMvLPb.js"
  ), true ? __vite__mapDeps([439,1]) : void 0), meta: { "t": "考察 Proxy 应用：以同步的方式实现事件监听" } }],
  ["/interview/javascript/coding/basic-api-usage/event-loop/repeat-invoke-functions-with-times.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_event-loop_repeat-invoke-functions-with-times.html" */
    "./repeat-invoke-functions-with-times.html-BHSkmLY0.js"
  ), true ? __vite__mapDeps([440,1]) : void 0), meta: { "t": "【中级-好题】周期执行某个函数n次" } }],
  ["/interview/javascript/coding/basic-api-usage/polyfill/array-prototype-flat.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_polyfill_array-prototype-flat.html" */
    "./array-prototype-flat.html-Cog1rkFx.js"
  ), true ? __vite__mapDeps([441,1]) : void 0), meta: { "t": "【中级】实现 Array.prototype.flat 方法" } }],
  ["/interview/javascript/coding/basic-api-usage/polyfill/promise-race-and-allsettled.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_polyfill_promise-race-and-allsettled.html" */
    "./promise-race-and-allsettled.html-B3vytGIx.js"
  ), true ? __vite__mapDeps([442,1]) : void 0), meta: { "t": "【高级】实现 Promise.race/allSettled 方法的 polyfill" } }],
  ["/interview/javascript/foundation/execution-context/call-stack/function-call-stack.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_call-stack_function-call-stack.html" */
    "./function-call-stack.html-CZfzThu9.js"
  ), true ? __vite__mapDeps([443,1]) : void 0), meta: { "t": "【初级，可进阶高级】调用栈溢出问题" } }],
  ["/interview/javascript/foundation/execution-context/prototype/prototype-extend-input.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_prototype_prototype-extend-input.html" */
    "./prototype-extend-input.html-DTC9cpp1.js"
  ), true ? __vite__mapDeps([444,1]) : void 0), meta: { "t": "【中级】原型、继承输出题" } }],
  ["/interview/javascript/foundation/execution-context/prototype/prototype-input.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_prototype_prototype-input.html" */
    "./prototype-input.html-BdvqJqq2.js"
  ), true ? __vite__mapDeps([445,1]) : void 0), meta: { "t": "【初级】原型链输出题" } }],
  ["/interview/javascript/foundation/execution-context/prototype/the-relationship-between-and-constructor-prototype.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_prototype_the-relationship-between-and-constructor-prototype.html" */
    "./the-relationship-between-and-constructor-prototype.html-DnnpEn1d.js"
  ), true ? __vite__mapDeps([446,1]) : void 0), meta: { "t": "【初级】原型、构造函数、实例 之间的关系？" } }],
  ["/interview/javascript/foundation/execution-context/closure/closure-input.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_closure_closure-input.html" */
    "./closure-input.html-CEtV_oR3.js"
  ), true ? __vite__mapDeps([447,1]) : void 0), meta: { "t": "【初级】简述闭包的概念，输出结果" } }],
  ["/interview/javascript/foundation/execution-context/closure/modify-closure.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_closure_modify-closure.html" */
    "./modify-closure.html-Cj-fPp6x.js"
  ), true ? __vite__mapDeps([448,1]) : void 0), meta: { "t": "【高级-好题】修改闭包对象" } }],
  ["/interview/javascript/foundation/execution-context/new/new-operator.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_new_new-operator.html" */
    "./new-operator.html-Dzmy3eJQ.js"
  ), true ? __vite__mapDeps([449,1]) : void 0), meta: { "t": "new 操作符" } }],
  ["/interview/javascript/foundation/execution-context/scope/concept.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_scope_concept.html" */
    "./concept.html-B96CdD19.js"
  ), true ? __vite__mapDeps([450,1]) : void 0), meta: { "t": "【初级】JS 中有几种类型的作用域？如何形成？" } }],
  ["/interview/javascript/foundation/execution-context/scope/var-scope.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_scope_var-scope.html" */
    "./var-scope.html-DFSbCIjb.js"
  ), true ? __vite__mapDeps([451,1]) : void 0), meta: { "t": "【初级】作用域输出题" } }],
  ["/interview/javascript/foundation/execution-context/this/this-input.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_this_this-input.html" */
    "./this-input.html-D5DRqNkh.js"
  ), true ? __vite__mapDeps([452,1]) : void 0), meta: { "t": "【初级】this 指向输出题" } }],
  ["/interview/javascript/foundation/execution-context/variables/variable-promotion.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_variables_variable-promotion.html" */
    "./variable-promotion.html-CGnX6Atk.js"
  ), true ? __vite__mapDeps([453,1]) : void 0), meta: { "t": "【初级】变量提升" } }],
  ["/interview/javascript/foundation/execution-mechanism/event-loop/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-mechanism_event-loop_index.html" */
    "./index.html-B8VCiiwh.js"
  ), true ? __vite__mapDeps([454,1]) : void 0), meta: { "t": "【初级】事件循环输出题" } }],
  ["/404.html", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "404.html" */
    "./404.html-tnCdexY1.js"
  ), true ? __vite__mapDeps([455,1]) : void 0), meta: { "t": "" } }],
  ["/react/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "react_index.html" */
    "./index.html-C-1peJd_.js"
  ), true ? __vite__mapDeps([456,1]) : void 0), meta: { "t": "React" } }],
  ["/wander/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_index.html" */
    "./index.html-DYk3nyLG.js"
  ), true ? __vite__mapDeps([457,1]) : void 0), meta: { "t": "Wander" } }],
  ["/articles/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "articles_index.html" */
    "./index.html-B-KuSocN.js"
  ), true ? __vite__mapDeps([458,1]) : void 0), meta: { "t": "Articles" } }],
  ["/code-snippet/vue-components/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_vue-components_index.html" */
    "./index.html-MjvI-idy.js"
  ), true ? __vite__mapDeps([459,1]) : void 0), meta: { "t": "Vue Components" } }],
  ["/browser-env/browser/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_browser_index.html" */
    "./index.html-BBf7kb-t.js"
  ), true ? __vite__mapDeps([460,1]) : void 0), meta: { "t": "Browser" } }],
  ["/browser-env/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_index.html" */
    "./index.html-O0vtgNrN.js"
  ), true ? __vite__mapDeps([461,1]) : void 0), meta: { "t": "Browser Env" } }],
  ["/browser-env/html-dom/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_html-dom_index.html" */
    "./index.html-DjJAdxXV.js"
  ), true ? __vite__mapDeps([462,1]) : void 0), meta: { "t": "Html Dom" } }],
  ["/browser-env/hybrid/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_hybrid_index.html" */
    "./index.html-D6Dd-gHp.js"
  ), true ? __vite__mapDeps([463,1]) : void 0), meta: { "t": "Hybrid" } }],
  ["/browser-env/network/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_network_index.html" */
    "./index.html-DqJdiyPA.js"
  ), true ? __vite__mapDeps([464,1]) : void 0), meta: { "t": "Network" } }],
  ["/browser-env/unclassified/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_unclassified_index.html" */
    "./index.html-XObDuN4C.js"
  ), true ? __vite__mapDeps([465,1]) : void 0), meta: { "t": "Unclassified" } }],
  ["/front-end-engineering/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_index.html" */
    "./index.html-tuiR816L.js"
  ), true ? __vite__mapDeps([466,1]) : void 0), meta: { "t": "Front End Engineering" } }],
  ["/full-stack/data-management/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_data-management_index.html" */
    "./index.html-B-lZSHiD.js"
  ), true ? __vite__mapDeps([467,1]) : void 0), meta: { "t": "Data Management" } }],
  ["/full-stack/design-patterns/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_design-patterns_index.html" */
    "./index.html-D36dAm5d.js"
  ), true ? __vite__mapDeps([468,1]) : void 0), meta: { "t": "Design Patterns" } }],
  ["/full-stack/others/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_others_index.html" */
    "./index.html-CV1eobPV.js"
  ), true ? __vite__mapDeps([469,1]) : void 0), meta: { "t": "Others" } }],
  ["/css/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_index.html" */
    "./index.html-ByNax9nG.js"
  ), true ? __vite__mapDeps([470,1]) : void 0), meta: { "t": "Css" } }],
  ["/css/preprocessor/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_preprocessor_index.html" */
    "./index.html-DQRwY8Jx.js"
  ), true ? __vite__mapDeps([471,1]) : void 0), meta: { "t": "Preprocessor" } }],
  ["/css/skills/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_skills_index.html" */
    "./index.html-DYyrgWLD.js"
  ), true ? __vite__mapDeps([472,1]) : void 0), meta: { "t": "Skills" } }],
  ["/css/tools/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_tools_index.html" */
    "./index.html-D2SyheMj.js"
  ), true ? __vite__mapDeps([473,1]) : void 0), meta: { "t": "Tools" } }],
  ["/css/topics/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_topics_index.html" */
    "./index.html-8-0lwW-6.js"
  ), true ? __vite__mapDeps([474,1]) : void 0), meta: { "t": "Topics" } }],
  ["/css/viewport/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_viewport_index.html" */
    "./index.html-AUmiYXoF.js"
  ), true ? __vite__mapDeps([475,1]) : void 0), meta: { "t": "Viewport" } }],
  ["/css/unclassified/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_unclassified_index.html" */
    "./index.html-CiX_aVV-.js"
  ), true ? __vite__mapDeps([476,1]) : void 0), meta: { "t": "Unclassified" } }],
  ["/interview/data-structure/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_data-structure_index.html" */
    "./index.html-BkOW4IJN.js"
  ), true ? __vite__mapDeps([477,1]) : void 0), meta: { "t": "Data Structure" } }],
  ["/interview/topic/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_topic_index.html" */
    "./index.html-Dli-1zcU.js"
  ), true ? __vite__mapDeps([478,1]) : void 0), meta: { "t": "Topic" } }],
  ["/js/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "js_index.html" */
    "./index.html-S4QFoQd2.js"
  ), true ? __vite__mapDeps([479,1]) : void 0), meta: { "t": "Js" } }],
  ["/mini-program/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "mini-program_index.html" */
    "./index.html-BclguFpm.js"
  ), true ? __vite__mapDeps([480,1]) : void 0), meta: { "t": "Mini Program" } }],
  ["/typescript/usage/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "typescript_usage_index.html" */
    "./index.html-BnLXj17B.js"
  ), true ? __vite__mapDeps([481,1]) : void 0), meta: { "t": "Usage" } }],
  ["/vue/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_index.html" */
    "./index.html-1m9BsYn-.js"
  ), true ? __vite__mapDeps([482,1]) : void 0), meta: { "t": "Vue" } }],
  ["/vue3/reactivity/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue3_reactivity_index.html" */
    "./index.html-CrLgw10i.js"
  ), true ? __vite__mapDeps([483,1]) : void 0), meta: { "t": "Reactivity" } }],
  ["/wander/others/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "wander_others_index.html" */
    "./index.html-Cbs2I2j2.js"
  ), true ? __vite__mapDeps([484,1]) : void 0), meta: { "t": "Others" } }],
  ["/code-snippet/browser-env/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_browser-env_index.html" */
    "./index.html-B5A_uYB2.js"
  ), true ? __vite__mapDeps([485,1]) : void 0), meta: { "t": "Browser Env" } }],
  ["/code-snippet/js/browser/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_browser_index.html" */
    "./index.html-DGQr8VQk.js"
  ), true ? __vite__mapDeps([486,1]) : void 0), meta: { "t": "Browser" } }],
  ["/code-snippet/js/utils/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_js_utils_index.html" */
    "./index.html-RMHsqq38.js"
  ), true ? __vite__mapDeps([487,1]) : void 0), meta: { "t": "Utils" } }],
  ["/browser-env/html-dom/attributes-properties/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_html-dom_attributes-properties_index.html" */
    "./index.html-BiFfbYUR.js"
  ), true ? __vite__mapDeps([488,1]) : void 0), meta: { "t": "Attributes Properties" } }],
  ["/browser-env/vendor-app/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "browser-env_vendor-app_index.html" */
    "./index.html-Y9Hns1sd.js"
  ), true ? __vite__mapDeps([489,1]) : void 0), meta: { "t": "Vendor App" } }],
  ["/es6/babel/@babel/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_babel_@babel_index.html" */
    "./index.html-CpN2N-Nc.js"
  ), true ? __vite__mapDeps([490,1]) : void 0), meta: { "t": "@babel" } }],
  ["/es6/polyfill/array/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_array_index.html" */
    "./index.html-P89gtSWJ.js"
  ), true ? __vite__mapDeps([491,1]) : void 0), meta: { "t": "Array" } }],
  ["/es6/polyfill/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_index.html" */
    "./index.html-B47cO7Et.js"
  ), true ? __vite__mapDeps([492,1]) : void 0), meta: { "t": "Polyfill" } }],
  ["/es6/polyfill/object/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_object_index.html" */
    "./index.html-FE6uOXA8.js"
  ), true ? __vite__mapDeps([493,1]) : void 0), meta: { "t": "Object" } }],
  ["/es6/polyfill/promise/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_promise_index.html" */
    "./index.html-Dcq4v6LW.js"
  ), true ? __vite__mapDeps([494,1]) : void 0), meta: { "t": "Promise" } }],
  ["/es6/polyfill/string/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "es6_polyfill_string_index.html" */
    "./index.html-DPZr6qGy.js"
  ), true ? __vite__mapDeps([495,1]) : void 0), meta: { "t": "String" } }],
  ["/front-end-engineering/development-skills/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_development-skills_index.html" */
    "./index.html-BiFbvvqd.js"
  ), true ? __vite__mapDeps([496,1]) : void 0), meta: { "t": "Development Skills" } }],
  ["/front-end-engineering/environment/ide/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_ide_index.html" */
    "./index.html-BzqFKubv.js"
  ), true ? __vite__mapDeps([497,1]) : void 0), meta: { "t": "Ide" } }],
  ["/front-end-engineering/environment/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_index.html" */
    "./index.html-BXR2bRwZ.js"
  ), true ? __vite__mapDeps([498,1]) : void 0), meta: { "t": "Environment" } }],
  ["/front-end-engineering/environment/package-manager/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_index.html" */
    "./index.html-2te0OGqk.js"
  ), true ? __vite__mapDeps([499,1]) : void 0), meta: { "t": "Package Manager" } }],
  ["/front-end-engineering/environment/repository/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_repository_index.html" */
    "./index.html-IeRU1fSG.js"
  ), true ? __vite__mapDeps([500,1]) : void 0), meta: { "t": "Repository" } }],
  ["/front-end-engineering/tools/build/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_index.html" */
    "./index.html-t_Dsb2h4.js"
  ), true ? __vite__mapDeps([501,1]) : void 0), meta: { "t": "Build" } }],
  ["/front-end-engineering/tools/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_index.html" */
    "./index.html-bsI16-BX.js"
  ), true ? __vite__mapDeps([502,1]) : void 0), meta: { "t": "Tools" } }],
  ["/front-end-engineering/tools/publish/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_publish_index.html" */
    "./index.html-C5p80Q1J.js"
  ), true ? __vite__mapDeps([503,1]) : void 0), meta: { "t": "Publish" } }],
  ["/front-end-engineering/tools/runtime/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_runtime_index.html" */
    "./index.html-BaF0ZWXk.js"
  ), true ? __vite__mapDeps([504,1]) : void 0), meta: { "t": "Runtime" } }],
  ["/full-stack/backend/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_backend_index.html" */
    "./index.html-pU1QQsc3.js"
  ), true ? __vite__mapDeps([505,1]) : void 0), meta: { "t": "Backend" } }],
  ["/full-stack/data-management/data-observability/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_data-management_data-observability_index.html" */
    "./index.html-DZxSMUUl.js"
  ), true ? __vite__mapDeps([506,1]) : void 0), meta: { "t": "Data Observability" } }],
  ["/full-stack/operating-system/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_operating-system_index.html" */
    "./index.html-CV7dcSqM.js"
  ), true ? __vite__mapDeps([507,1]) : void 0), meta: { "t": "Operating System" } }],
  ["/full-stack/software/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "full-stack_software_index.html" */
    "./index.html-CwJjz7SI.js"
  ), true ? __vite__mapDeps([508,1]) : void 0), meta: { "t": "Software" } }],
  ["/css/topics/border/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_topics_border_index.html" */
    "./index.html-BZfBC5cH.js"
  ), true ? __vite__mapDeps([509,1]) : void 0), meta: { "t": "Border" } }],
  ["/interview/algorithm/others/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_others_index.html" */
    "./index.html-CGkxKn8l.js"
  ), true ? __vite__mapDeps([510,1]) : void 0), meta: { "t": "Others" } }],
  ["/interview/algorithm/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_index.html" */
    "./index.html-qZ_VU6Ym.js"
  ), true ? __vite__mapDeps([511,1]) : void 0), meta: { "t": "Algorithm" } }],
  ["/interview/browser/dom/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_browser_dom_index.html" */
    "./index.html-Bc70ShHI.js"
  ), true ? __vite__mapDeps([512,1]) : void 0), meta: { "t": "Dom" } }],
  ["/interview/css/layout/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_css_layout_index.html" */
    "./index.html-Bq_qs8MQ.js"
  ), true ? __vite__mapDeps([513,1]) : void 0), meta: { "t": "Layout" } }],
  ["/interview/css/position/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_css_position_index.html" */
    "./index.html-BBvm8Buj.js"
  ), true ? __vite__mapDeps([514,1]) : void 0), meta: { "t": "Position" } }],
  ["/vue/source-study/component/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_component_index.html" */
    "./index.html-CATdEoHn.js"
  ), true ? __vite__mapDeps([515,1]) : void 0), meta: { "t": "Component" } }],
  ["/vue/source-study/global-api/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_global-api_index.html" */
    "./index.html-D98OJD2b.js"
  ), true ? __vite__mapDeps([516,1]) : void 0), meta: { "t": "Global Api" } }],
  ["/vue/source-study/util/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_util_index.html" */
    "./index.html-jn03fDRK.js"
  ), true ? __vite__mapDeps([517,1]) : void 0), meta: { "t": "Util" } }],
  ["/vue/vue-series/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_vue-series_index.html" */
    "./index.html-dUGJUM8X.js"
  ), true ? __vite__mapDeps([518,1]) : void 0), meta: { "t": "Vue Series" } }],
  ["/vue/vue-series/vuejs/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_vue-series_vuejs_index.html" */
    "./index.html-B3ct9rBB.js"
  ), true ? __vite__mapDeps([519,1]) : void 0), meta: { "t": "Vuejs" } }],
  ["/code-snippet/practices/css/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_css_index.html" */
    "./index.html-k-EKoYsM.js"
  ), true ? __vite__mapDeps([520,1]) : void 0), meta: { "t": "Css" } }],
  ["/code-snippet/practices/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_index.html" */
    "./index.html-3t1o7doq.js"
  ), true ? __vite__mapDeps([521,1]) : void 0), meta: { "t": "Practices" } }],
  ["/code-snippet/practices/js/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_js_index.html" */
    "./index.html-Dx46KKQJ.js"
  ), true ? __vite__mapDeps([522,1]) : void 0), meta: { "t": "Js" } }],
  ["/front-end-engineering/tools/style-guide/naming-conventions/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_style-guide_naming-conventions_index.html" */
    "./index.html-ChkKfnSF.js"
  ), true ? __vite__mapDeps([523,1]) : void 0), meta: { "t": "Naming Conventions" } }],
  ["/front-end-engineering/tools/style-guide/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_style-guide_index.html" */
    "./index.html-DV_Rethv.js"
  ), true ? __vite__mapDeps([524,1]) : void 0), meta: { "t": "Style Guide" } }],
  ["/css/css-spec/css2.2/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_css-spec_css2.2_index.html" */
    "./index.html-B03Up3pw.js"
  ), true ? __vite__mapDeps([525,1]) : void 0), meta: { "t": "Css2.2" } }],
  ["/css/css-spec/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_css-spec_index.html" */
    "./index.html-08-aT6RV.js"
  ), true ? __vite__mapDeps([526,1]) : void 0), meta: { "t": "Css Spec" } }],
  ["/css/topics/text/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "css_topics_text_index.html" */
    "./index.html-BPihYQUV.js"
  ), true ? __vite__mapDeps([527,1]) : void 0), meta: { "t": "Text" } }],
  ["/interview/algorithm/interview/leetcode/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_algorithm_interview_leetcode_index.html" */
    "./index.html-rZu-boT4.js"
  ), true ? __vite__mapDeps([528,1]) : void 0), meta: { "t": "Leetcode" } }],
  ["/interview/javascript/coding/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_index.html" */
    "./index.html-DH7pGTcN.js"
  ), true ? __vite__mapDeps([529,1]) : void 0), meta: { "t": "Coding" } }],
  ["/interview/javascript/foundation/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_index.html" */
    "./index.html-D5OW7tYm.js"
  ), true ? __vite__mapDeps([530,1]) : void 0), meta: { "t": "Foundation" } }],
  ["/interview/javascript/performance-optimization/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_performance-optimization_index.html" */
    "./index.html-Dnv1tiA2.js"
  ), true ? __vite__mapDeps([531,1]) : void 0), meta: { "t": "Performance Optimization" } }],
  ["/vue/source-study/vdom/topics/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "vue_source-study_vdom_topics_index.html" */
    "./index.html-Mux8Ptw9.js"
  ), true ? __vite__mapDeps([532,1]) : void 0), meta: { "t": "Topics" } }],
  ["/code-snippet/practices/css/%E6%A0%B9%E6%8D%AE%E5%85%84%E5%BC%9F%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%B0%E9%87%8F%E6%9D%A5%E8%AE%BE%E7%BD%AE%E6%A0%B7%E5%BC%8F/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "code-snippet_practices_css_根据兄弟元素的数量来设置样式_index.html" */
    "./index.html-CzXVQYK4.js"
  ), true ? __vite__mapDeps([533,1]) : void 0), meta: { "t": "根据兄弟元素的数量来设置样式" } }],
  ["/front-end-engineering/environment/package-manager/third-party-packages/package-env-management/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_environment_package-manager_third-party-packages_package-env-management_index.html" */
    "./index.html-DXzJzm-w.js"
  ), true ? __vite__mapDeps([534,1]) : void 0), meta: { "t": "Package Env Management" } }],
  ["/front-end-engineering/tools/build/webpack/config/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_build_webpack_config_index.html" */
    "./index.html-CJNQCzEO.js"
  ), true ? __vite__mapDeps([535,1]) : void 0), meta: { "t": "Config" } }],
  ["/front-end-engineering/tools/style-guide/code-formatter/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "front-end-engineering_tools_style-guide_code-formatter_index.html" */
    "./index.html-BZJXJB9M.js"
  ), true ? __vite__mapDeps([536,1]) : void 0), meta: { "t": "Code Formatter" } }],
  ["/interview/javascript/coding/basic-api-usage/array-operation/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_array-operation_index.html" */
    "./index.html-BfOVPbSS.js"
  ), true ? __vite__mapDeps([537,1]) : void 0), meta: { "t": "Array Operation" } }],
  ["/interview/javascript/coding/basic-api-usage/es6/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_es6_index.html" */
    "./index.html-C8ovTL4R.js"
  ), true ? __vite__mapDeps([538,1]) : void 0), meta: { "t": "Es6" } }],
  ["/interview/javascript/coding/basic-api-usage/event-loop/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_event-loop_index.html" */
    "./index.html-CQgfzwCn.js"
  ), true ? __vite__mapDeps([539,1]) : void 0), meta: { "t": "Event Loop" } }],
  ["/interview/javascript/coding/basic-api-usage/polyfill/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_coding_basic-api-usage_polyfill_index.html" */
    "./index.html-Dt3rrplG.js"
  ), true ? __vite__mapDeps([540,1]) : void 0), meta: { "t": "Polyfill" } }],
  ["/interview/javascript/foundation/execution-context/call-stack/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_call-stack_index.html" */
    "./index.html-BgBHpPnf.js"
  ), true ? __vite__mapDeps([541,1]) : void 0), meta: { "t": "Call Stack" } }],
  ["/interview/javascript/foundation/execution-context/prototype/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_prototype_index.html" */
    "./index.html-B_xTOziG.js"
  ), true ? __vite__mapDeps([542,1]) : void 0), meta: { "t": "Prototype" } }],
  ["/interview/javascript/foundation/execution-context/closure/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_closure_index.html" */
    "./index.html-kYhEXagv.js"
  ), true ? __vite__mapDeps([543,1]) : void 0), meta: { "t": "Closure" } }],
  ["/interview/javascript/foundation/execution-context/new/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_new_index.html" */
    "./index.html-BWb4LSxn.js"
  ), true ? __vite__mapDeps([544,1]) : void 0), meta: { "t": "New" } }],
  ["/interview/javascript/foundation/execution-context/scope/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_scope_index.html" */
    "./index.html-BkcGdQiX.js"
  ), true ? __vite__mapDeps([545,1]) : void 0), meta: { "t": "Scope" } }],
  ["/interview/javascript/foundation/execution-context/this/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_this_index.html" */
    "./index.html-BImPGpKe.js"
  ), true ? __vite__mapDeps([546,1]) : void 0), meta: { "t": "This" } }],
  ["/interview/javascript/foundation/execution-context/variables/", { loader: () => __vitePreload(() => import(
    /* webpackChunkName: "interview_javascript_foundation_execution-context_variables_index.html" */
    "./index.html-CjCYY4l-.js"
  ), true ? __vite__mapDeps([547,1]) : void 0), meta: { "t": "Variables" } }]
]);
function getDevtoolsGlobalHook() {
  return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;
}
function getTarget() {
  return typeof navigator !== "undefined" && typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : {};
}
const isProxyAvailable = typeof Proxy === "function";
const HOOK_SETUP = "devtools-plugin:setup";
const HOOK_PLUGIN_SETTINGS_SET = "plugin:settings:set";
let supported;
let perf;
function isPerformanceSupported() {
  var _a25;
  if (supported !== void 0) {
    return supported;
  }
  if (typeof window !== "undefined" && window.performance) {
    supported = true;
    perf = window.performance;
  } else if (typeof globalThis !== "undefined" && ((_a25 = globalThis.perf_hooks) === null || _a25 === void 0 ? void 0 : _a25.performance)) {
    supported = true;
    perf = globalThis.perf_hooks.performance;
  } else {
    supported = false;
  }
  return supported;
}
function now() {
  return isPerformanceSupported() ? perf.now() : Date.now();
}
class ApiProxy {
  constructor(plugin, hook2) {
    this.target = null;
    this.targetQueue = [];
    this.onQueue = [];
    this.plugin = plugin;
    this.hook = hook2;
    const defaultSettings = {};
    if (plugin.settings) {
      for (const id in plugin.settings) {
        const item = plugin.settings[id];
        defaultSettings[id] = item.defaultValue;
      }
    }
    const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;
    let currentSettings = Object.assign({}, defaultSettings);
    try {
      const raw = localStorage.getItem(localSettingsSaveId);
      const data = JSON.parse(raw);
      Object.assign(currentSettings, data);
    } catch (e2) {
    }
    this.fallbacks = {
      getSettings() {
        return currentSettings;
      },
      setSettings(value) {
        try {
          localStorage.setItem(localSettingsSaveId, JSON.stringify(value));
        } catch (e2) {
        }
        currentSettings = value;
      },
      now() {
        return now();
      }
    };
    if (hook2) {
      hook2.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {
        if (pluginId === this.plugin.id) {
          this.fallbacks.setSettings(value);
        }
      });
    }
    this.proxiedOn = new Proxy({}, {
      get: (_target, prop) => {
        if (this.target) {
          return this.target.on[prop];
        } else {
          return (...args) => {
            this.onQueue.push({
              method: prop,
              args
            });
          };
        }
      }
    });
    this.proxiedTarget = new Proxy({}, {
      get: (_target, prop) => {
        if (this.target) {
          return this.target[prop];
        } else if (prop === "on") {
          return this.proxiedOn;
        } else if (Object.keys(this.fallbacks).includes(prop)) {
          return (...args) => {
            this.targetQueue.push({
              method: prop,
              args,
              resolve: () => {
              }
            });
            return this.fallbacks[prop](...args);
          };
        } else {
          return (...args) => {
            return new Promise((resolve2) => {
              this.targetQueue.push({
                method: prop,
                args,
                resolve: resolve2
              });
            });
          };
        }
      }
    });
  }
  async setRealTarget(target2) {
    this.target = target2;
    for (const item of this.onQueue) {
      this.target.on[item.method](...item.args);
    }
    for (const item of this.targetQueue) {
      item.resolve(await this.target[item.method](...item.args));
    }
  }
}
function setupDevtoolsPlugin(pluginDescriptor, setupFn) {
  const descriptor = pluginDescriptor;
  const target2 = getTarget();
  const hook2 = getDevtoolsGlobalHook();
  const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;
  if (hook2 && (target2.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {
    hook2.emit(HOOK_SETUP, pluginDescriptor, setupFn);
  } else {
    const proxy = enableProxy ? new ApiProxy(descriptor, hook2) : null;
    const list = target2.__VUE_DEVTOOLS_PLUGINS__ = target2.__VUE_DEVTOOLS_PLUGINS__ || [];
    list.push({
      pluginDescriptor: descriptor,
      setupFn,
      proxy
    });
    if (proxy) {
      setupFn(proxy.proxiedTarget);
    }
  }
}
/*!
  * vue-router v4.4.5
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */
const isBrowser$1 = typeof document !== "undefined";
function isRouteComponent(component) {
  return typeof component === "object" || "displayName" in component || "props" in component || "__vccOpts" in component;
}
function isESModule(obj) {
  return obj.__esModule || obj[Symbol.toStringTag] === "Module" || // support CF with dynamic imports that do not
  // add the Module string tag
  obj.default && isRouteComponent(obj.default);
}
const assign = Object.assign;
function applyToParams(fn, params) {
  const newParams = {};
  for (const key in params) {
    const value = params[key];
    newParams[key] = isArray$2(value) ? value.map(fn) : fn(value);
  }
  return newParams;
}
const noop$1 = () => {
};
const isArray$2 = Array.isArray;
function warn(msg) {
  const args = Array.from(arguments).slice(1);
  console.warn.apply(console, ["[Vue Router warn]: " + msg].concat(args));
}
const HASH_RE = /#/g;
const AMPERSAND_RE = /&/g;
const SLASH_RE = /\//g;
const EQUAL_RE = /=/g;
const IM_RE = /\?/g;
const PLUS_RE = /\+/g;
const ENC_BRACKET_OPEN_RE = /%5B/g;
const ENC_BRACKET_CLOSE_RE = /%5D/g;
const ENC_CARET_RE = /%5E/g;
const ENC_BACKTICK_RE = /%60/g;
const ENC_CURLY_OPEN_RE = /%7B/g;
const ENC_PIPE_RE = /%7C/g;
const ENC_CURLY_CLOSE_RE = /%7D/g;
const ENC_SPACE_RE = /%20/g;
function commonEncode(text) {
  return encodeURI("" + text).replace(ENC_PIPE_RE, "|").replace(ENC_BRACKET_OPEN_RE, "[").replace(ENC_BRACKET_CLOSE_RE, "]");
}
function encodeHash(text) {
  return commonEncode(text).replace(ENC_CURLY_OPEN_RE, "{").replace(ENC_CURLY_CLOSE_RE, "}").replace(ENC_CARET_RE, "^");
}
function encodeQueryValue(text) {
  return commonEncode(text).replace(PLUS_RE, "%2B").replace(ENC_SPACE_RE, "+").replace(HASH_RE, "%23").replace(AMPERSAND_RE, "%26").replace(ENC_BACKTICK_RE, "`").replace(ENC_CURLY_OPEN_RE, "{").replace(ENC_CURLY_CLOSE_RE, "}").replace(ENC_CARET_RE, "^");
}
function encodeQueryKey(text) {
  return encodeQueryValue(text).replace(EQUAL_RE, "%3D");
}
function encodePath(text) {
  return commonEncode(text).replace(HASH_RE, "%23").replace(IM_RE, "%3F");
}
function encodeParam(text) {
  return text == null ? "" : encodePath(text).replace(SLASH_RE, "%2F");
}
function decode(text) {
  try {
    return decodeURIComponent("" + text);
  } catch (err) {
    warn(`Error decoding "${text}". Using original value`);
  }
  return "" + text;
}
const TRAILING_SLASH_RE = /\/$/;
const removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, "");
function parseURL(parseQuery2, location2, currentLocation = "/") {
  let path, query = {}, searchString = "", hash = "";
  const hashPos = location2.indexOf("#");
  let searchPos = location2.indexOf("?");
  if (hashPos < searchPos && hashPos >= 0) {
    searchPos = -1;
  }
  if (searchPos > -1) {
    path = location2.slice(0, searchPos);
    searchString = location2.slice(searchPos + 1, hashPos > -1 ? hashPos : location2.length);
    query = parseQuery2(searchString);
  }
  if (hashPos > -1) {
    path = path || location2.slice(0, hashPos);
    hash = location2.slice(hashPos, location2.length);
  }
  path = resolveRelativePath(path != null ? path : location2, currentLocation);
  return {
    fullPath: path + (searchString && "?") + searchString + hash,
    path,
    query,
    hash: decode(hash)
  };
}
function stringifyURL(stringifyQuery2, location2) {
  const query = location2.query ? stringifyQuery2(location2.query) : "";
  return location2.path + (query && "?") + query + (location2.hash || "");
}
function stripBase(pathname, base) {
  if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))
    return pathname;
  return pathname.slice(base.length) || "/";
}
function isSameRouteLocation(stringifyQuery2, a2, b) {
  const aLastIndex = a2.matched.length - 1;
  const bLastIndex = b.matched.length - 1;
  return aLastIndex > -1 && aLastIndex === bLastIndex && isSameRouteRecord(a2.matched[aLastIndex], b.matched[bLastIndex]) && isSameRouteLocationParams(a2.params, b.params) && stringifyQuery2(a2.query) === stringifyQuery2(b.query) && a2.hash === b.hash;
}
function isSameRouteRecord(a2, b) {
  return (a2.aliasOf || a2) === (b.aliasOf || b);
}
function isSameRouteLocationParams(a2, b) {
  if (Object.keys(a2).length !== Object.keys(b).length)
    return false;
  for (const key in a2) {
    if (!isSameRouteLocationParamsValue(a2[key], b[key]))
      return false;
  }
  return true;
}
function isSameRouteLocationParamsValue(a2, b) {
  return isArray$2(a2) ? isEquivalentArray(a2, b) : isArray$2(b) ? isEquivalentArray(b, a2) : a2 === b;
}
function isEquivalentArray(a2, b) {
  return isArray$2(b) ? a2.length === b.length && a2.every((value, i2) => value === b[i2]) : a2.length === 1 && a2[0] === b;
}
function resolveRelativePath(to, from) {
  if (to.startsWith("/"))
    return to;
  if (!from.startsWith("/")) {
    warn(`Cannot resolve a relative location without an absolute path. Trying to resolve "${to}" from "${from}". It should look like "/${from}".`);
    return to;
  }
  if (!to)
    return from;
  const fromSegments = from.split("/");
  const toSegments = to.split("/");
  const lastToSegment = toSegments[toSegments.length - 1];
  if (lastToSegment === ".." || lastToSegment === ".") {
    toSegments.push("");
  }
  let position = fromSegments.length - 1;
  let toPosition;
  let segment;
  for (toPosition = 0; toPosition < toSegments.length; toPosition++) {
    segment = toSegments[toPosition];
    if (segment === ".")
      continue;
    if (segment === "..") {
      if (position > 1)
        position--;
    } else
      break;
  }
  return fromSegments.slice(0, position).join("/") + "/" + toSegments.slice(toPosition).join("/");
}
const START_LOCATION_NORMALIZED = {
  path: "/",
  // TODO: could we use a symbol in the future?
  name: void 0,
  params: {},
  query: {},
  hash: "",
  fullPath: "/",
  matched: [],
  meta: {},
  redirectedFrom: void 0
};
var NavigationType;
(function(NavigationType2) {
  NavigationType2["pop"] = "pop";
  NavigationType2["push"] = "push";
})(NavigationType || (NavigationType = {}));
var NavigationDirection;
(function(NavigationDirection2) {
  NavigationDirection2["back"] = "back";
  NavigationDirection2["forward"] = "forward";
  NavigationDirection2["unknown"] = "";
})(NavigationDirection || (NavigationDirection = {}));
function normalizeBase(base) {
  if (!base) {
    if (isBrowser$1) {
      const baseEl = document.querySelector("base");
      base = baseEl && baseEl.getAttribute("href") || "/";
      base = base.replace(/^\w+:\/\/[^\/]+/, "");
    } else {
      base = "/";
    }
  }
  if (base[0] !== "/" && base[0] !== "#")
    base = "/" + base;
  return removeTrailingSlash(base);
}
const BEFORE_HASH_RE = /^[^#]+#/;
function createHref(base, location2) {
  return base.replace(BEFORE_HASH_RE, "#") + location2;
}
function getElementPosition(el, offset2) {
  const docRect = document.documentElement.getBoundingClientRect();
  const elRect = el.getBoundingClientRect();
  return {
    behavior: offset2.behavior,
    left: elRect.left - docRect.left - (offset2.left || 0),
    top: elRect.top - docRect.top - (offset2.top || 0)
  };
}
const computeScrollPosition = () => ({
  left: window.scrollX,
  top: window.scrollY
});
function scrollToPosition(position) {
  let scrollToOptions;
  if ("el" in position) {
    const positionEl = position.el;
    const isIdSelector = typeof positionEl === "string" && positionEl.startsWith("#");
    if (typeof position.el === "string") {
      if (!isIdSelector || !document.getElementById(position.el.slice(1))) {
        try {
          const foundEl = document.querySelector(position.el);
          if (isIdSelector && foundEl) {
            warn(`The selector "${position.el}" should be passed as "el: document.querySelector('${position.el}')" because it starts with "#".`);
            return;
          }
        } catch (err) {
          warn(`The selector "${position.el}" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);
          return;
        }
      }
    }
    const el = typeof positionEl === "string" ? isIdSelector ? document.getElementById(positionEl.slice(1)) : document.querySelector(positionEl) : positionEl;
    if (!el) {
      warn(`Couldn't find element using selector "${position.el}" returned by scrollBehavior.`);
      return;
    }
    scrollToOptions = getElementPosition(el, position);
  } else {
    scrollToOptions = position;
  }
  if ("scrollBehavior" in document.documentElement.style)
    window.scrollTo(scrollToOptions);
  else {
    window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.scrollX, scrollToOptions.top != null ? scrollToOptions.top : window.scrollY);
  }
}
function getScrollKey(path, delta) {
  const position = history.state ? history.state.position - delta : -1;
  return position + path;
}
const scrollPositions = /* @__PURE__ */ new Map();
function saveScrollPosition(key, scrollPosition) {
  scrollPositions.set(key, scrollPosition);
}
function getSavedScrollPosition(key) {
  const scroll = scrollPositions.get(key);
  scrollPositions.delete(key);
  return scroll;
}
let createBaseLocation = () => location.protocol + "//" + location.host;
function createCurrentLocation(base, location2) {
  const { pathname, search, hash } = location2;
  const hashPos = base.indexOf("#");
  if (hashPos > -1) {
    let slicePos = hash.includes(base.slice(hashPos)) ? base.slice(hashPos).length : 1;
    let pathFromHash = hash.slice(slicePos);
    if (pathFromHash[0] !== "/")
      pathFromHash = "/" + pathFromHash;
    return stripBase(pathFromHash, "");
  }
  const path = stripBase(pathname, base);
  return path + search + hash;
}
function useHistoryListeners(base, historyState, currentLocation, replace) {
  let listeners = [];
  let teardowns = [];
  let pauseState = null;
  const popStateHandler = ({ state }) => {
    const to = createCurrentLocation(base, location);
    const from = currentLocation.value;
    const fromState = historyState.value;
    let delta = 0;
    if (state) {
      currentLocation.value = to;
      historyState.value = state;
      if (pauseState && pauseState === from) {
        pauseState = null;
        return;
      }
      delta = fromState ? state.position - fromState.position : 0;
    } else {
      replace(to);
    }
    listeners.forEach((listener) => {
      listener(currentLocation.value, from, {
        delta,
        type: NavigationType.pop,
        direction: delta ? delta > 0 ? NavigationDirection.forward : NavigationDirection.back : NavigationDirection.unknown
      });
    });
  };
  function pauseListeners() {
    pauseState = currentLocation.value;
  }
  function listen(callback) {
    listeners.push(callback);
    const teardown = () => {
      const index = listeners.indexOf(callback);
      if (index > -1)
        listeners.splice(index, 1);
    };
    teardowns.push(teardown);
    return teardown;
  }
  function beforeUnloadListener() {
    const { history: history2 } = window;
    if (!history2.state)
      return;
    history2.replaceState(assign({}, history2.state, { scroll: computeScrollPosition() }), "");
  }
  function destroy() {
    for (const teardown of teardowns)
      teardown();
    teardowns = [];
    window.removeEventListener("popstate", popStateHandler);
    window.removeEventListener("beforeunload", beforeUnloadListener);
  }
  window.addEventListener("popstate", popStateHandler);
  window.addEventListener("beforeunload", beforeUnloadListener, {
    passive: true
  });
  return {
    pauseListeners,
    listen,
    destroy
  };
}
function buildState(back, current, forward, replaced = false, computeScroll = false) {
  return {
    back,
    current,
    forward,
    replaced,
    position: window.history.length,
    scroll: computeScroll ? computeScrollPosition() : null
  };
}
function useHistoryStateNavigation(base) {
  const { history: history2, location: location2 } = window;
  const currentLocation = {
    value: createCurrentLocation(base, location2)
  };
  const historyState = { value: history2.state };
  if (!historyState.value) {
    changeLocation(currentLocation.value, {
      back: null,
      current: currentLocation.value,
      forward: null,
      // the length is off by one, we need to decrease it
      position: history2.length - 1,
      replaced: true,
      // don't add a scroll as the user may have an anchor, and we want
      // scrollBehavior to be triggered without a saved position
      scroll: null
    }, true);
  }
  function changeLocation(to, state, replace2) {
    const hashIndex = base.indexOf("#");
    const url = hashIndex > -1 ? (location2.host && document.querySelector("base") ? base : base.slice(hashIndex)) + to : createBaseLocation() + base + to;
    try {
      history2[replace2 ? "replaceState" : "pushState"](state, "", url);
      historyState.value = state;
    } catch (err) {
      {
        warn("Error with push/replace State", err);
      }
      location2[replace2 ? "replace" : "assign"](url);
    }
  }
  function replace(to, data) {
    const state = assign({}, history2.state, buildState(
      historyState.value.back,
      // keep back and forward entries but override current position
      to,
      historyState.value.forward,
      true
    ), data, { position: historyState.value.position });
    changeLocation(to, state, true);
    currentLocation.value = to;
  }
  function push(to, data) {
    const currentState = assign(
      {},
      // use current history state to gracefully handle a wrong call to
      // history.replaceState
      // https://github.com/vuejs/router/issues/366
      historyState.value,
      history2.state,
      {
        forward: to,
        scroll: computeScrollPosition()
      }
    );
    if (!history2.state) {
      warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:

history.replaceState(history.state, '', url)

You can find more information at https://router.vuejs.org/guide/migration/#Usage-of-history-state`);
    }
    changeLocation(currentState.current, currentState, true);
    const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);
    changeLocation(to, state, false);
    currentLocation.value = to;
  }
  return {
    location: currentLocation,
    state: historyState,
    push,
    replace
  };
}
function createWebHistory(base) {
  base = normalizeBase(base);
  const historyNavigation = useHistoryStateNavigation(base);
  const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);
  function go(delta, triggerListeners = true) {
    if (!triggerListeners)
      historyListeners.pauseListeners();
    history.go(delta);
  }
  const routerHistory = assign({
    // it's overridden right after
    location: "",
    base,
    go,
    createHref: createHref.bind(null, base)
  }, historyNavigation, historyListeners);
  Object.defineProperty(routerHistory, "location", {
    enumerable: true,
    get: () => historyNavigation.location.value
  });
  Object.defineProperty(routerHistory, "state", {
    enumerable: true,
    get: () => historyNavigation.state.value
  });
  return routerHistory;
}
function isRouteLocation(route) {
  return typeof route === "string" || route && typeof route === "object";
}
function isRouteName(name) {
  return typeof name === "string" || typeof name === "symbol";
}
const NavigationFailureSymbol = Symbol("navigation failure");
var NavigationFailureType;
(function(NavigationFailureType2) {
  NavigationFailureType2[NavigationFailureType2["aborted"] = 4] = "aborted";
  NavigationFailureType2[NavigationFailureType2["cancelled"] = 8] = "cancelled";
  NavigationFailureType2[NavigationFailureType2["duplicated"] = 16] = "duplicated";
})(NavigationFailureType || (NavigationFailureType = {}));
const ErrorTypeMessages = {
  [
    1
    /* ErrorTypes.MATCHER_NOT_FOUND */
  ]({ location: location2, currentLocation }) {
    return `No match for
 ${JSON.stringify(location2)}${currentLocation ? "\nwhile being at\n" + JSON.stringify(currentLocation) : ""}`;
  },
  [
    2
    /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */
  ]({ from, to }) {
    return `Redirected from "${from.fullPath}" to "${stringifyRoute(to)}" via a navigation guard.`;
  },
  [
    4
    /* ErrorTypes.NAVIGATION_ABORTED */
  ]({ from, to }) {
    return `Navigation aborted from "${from.fullPath}" to "${to.fullPath}" via a navigation guard.`;
  },
  [
    8
    /* ErrorTypes.NAVIGATION_CANCELLED */
  ]({ from, to }) {
    return `Navigation cancelled from "${from.fullPath}" to "${to.fullPath}" with a new navigation.`;
  },
  [
    16
    /* ErrorTypes.NAVIGATION_DUPLICATED */
  ]({ from, to }) {
    return `Avoided redundant navigation to current location: "${from.fullPath}".`;
  }
};
function createRouterError(type, params) {
  {
    return assign(new Error(ErrorTypeMessages[type](params)), {
      type,
      [NavigationFailureSymbol]: true
    }, params);
  }
}
function isNavigationFailure(error, type) {
  return error instanceof Error && NavigationFailureSymbol in error && (type == null || !!(error.type & type));
}
const propertiesToLog = ["params", "query", "hash"];
function stringifyRoute(to) {
  if (typeof to === "string")
    return to;
  if (to.path != null)
    return to.path;
  const location2 = {};
  for (const key of propertiesToLog) {
    if (key in to)
      location2[key] = to[key];
  }
  return JSON.stringify(location2, null, 2);
}
const BASE_PARAM_PATTERN = "[^/]+?";
const BASE_PATH_PARSER_OPTIONS = {
  sensitive: false,
  strict: false,
  start: true,
  end: true
};
const REGEX_CHARS_RE = /[.+*?^${}()[\]/\\]/g;
function tokensToParser(segments, extraOptions) {
  const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);
  const score = [];
  let pattern = options.start ? "^" : "";
  const keys2 = [];
  for (const segment of segments) {
    const segmentScores = segment.length ? [] : [
      90
      /* PathScore.Root */
    ];
    if (options.strict && !segment.length)
      pattern += "/";
    for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {
      const token = segment[tokenIndex];
      let subSegmentScore = 40 + (options.sensitive ? 0.25 : 0);
      if (token.type === 0) {
        if (!tokenIndex)
          pattern += "/";
        pattern += token.value.replace(REGEX_CHARS_RE, "\\$&");
        subSegmentScore += 40;
      } else if (token.type === 1) {
        const { value, repeatable, optional, regexp } = token;
        keys2.push({
          name: value,
          repeatable,
          optional
        });
        const re2 = regexp ? regexp : BASE_PARAM_PATTERN;
        if (re2 !== BASE_PARAM_PATTERN) {
          subSegmentScore += 10;
          try {
            new RegExp(`(${re2})`);
          } catch (err) {
            throw new Error(`Invalid custom RegExp for param "${value}" (${re2}): ` + err.message);
          }
        }
        let subPattern = repeatable ? `((?:${re2})(?:/(?:${re2}))*)` : `(${re2})`;
        if (!tokenIndex)
          subPattern = // avoid an optional / if there are more segments e.g. /:p?-static
          // or /:p?-:p2
          optional && segment.length < 2 ? `(?:/${subPattern})` : "/" + subPattern;
        if (optional)
          subPattern += "?";
        pattern += subPattern;
        subSegmentScore += 20;
        if (optional)
          subSegmentScore += -8;
        if (repeatable)
          subSegmentScore += -20;
        if (re2 === ".*")
          subSegmentScore += -50;
      }
      segmentScores.push(subSegmentScore);
    }
    score.push(segmentScores);
  }
  if (options.strict && options.end) {
    const i2 = score.length - 1;
    score[i2][score[i2].length - 1] += 0.7000000000000001;
  }
  if (!options.strict)
    pattern += "/?";
  if (options.end)
    pattern += "$";
  else if (options.strict)
    pattern += "(?:/|$)";
  const re = new RegExp(pattern, options.sensitive ? "" : "i");
  function parse(path) {
    const match = path.match(re);
    const params = {};
    if (!match)
      return null;
    for (let i2 = 1; i2 < match.length; i2++) {
      const value = match[i2] || "";
      const key = keys2[i2 - 1];
      params[key.name] = value && key.repeatable ? value.split("/") : value;
    }
    return params;
  }
  function stringify(params) {
    let path = "";
    let avoidDuplicatedSlash = false;
    for (const segment of segments) {
      if (!avoidDuplicatedSlash || !path.endsWith("/"))
        path += "/";
      avoidDuplicatedSlash = false;
      for (const token of segment) {
        if (token.type === 0) {
          path += token.value;
        } else if (token.type === 1) {
          const { value, repeatable, optional } = token;
          const param = value in params ? params[value] : "";
          if (isArray$2(param) && !repeatable) {
            throw new Error(`Provided param "${value}" is an array but it is not repeatable (* or + modifiers)`);
          }
          const text = isArray$2(param) ? param.join("/") : param;
          if (!text) {
            if (optional) {
              if (segment.length < 2) {
                if (path.endsWith("/"))
                  path = path.slice(0, -1);
                else
                  avoidDuplicatedSlash = true;
              }
            } else
              throw new Error(`Missing required param "${value}"`);
          }
          path += text;
        }
      }
    }
    return path || "/";
  }
  return {
    re,
    score,
    keys: keys2,
    parse,
    stringify
  };
}
function compareScoreArray(a2, b) {
  let i2 = 0;
  while (i2 < a2.length && i2 < b.length) {
    const diff = b[i2] - a2[i2];
    if (diff)
      return diff;
    i2++;
  }
  if (a2.length < b.length) {
    return a2.length === 1 && a2[0] === 40 + 40 ? -1 : 1;
  } else if (a2.length > b.length) {
    return b.length === 1 && b[0] === 40 + 40 ? 1 : -1;
  }
  return 0;
}
function comparePathParserScore(a2, b) {
  let i2 = 0;
  const aScore = a2.score;
  const bScore = b.score;
  while (i2 < aScore.length && i2 < bScore.length) {
    const comp = compareScoreArray(aScore[i2], bScore[i2]);
    if (comp)
      return comp;
    i2++;
  }
  if (Math.abs(bScore.length - aScore.length) === 1) {
    if (isLastScoreNegative(aScore))
      return 1;
    if (isLastScoreNegative(bScore))
      return -1;
  }
  return bScore.length - aScore.length;
}
function isLastScoreNegative(score) {
  const last = score[score.length - 1];
  return score.length > 0 && last[last.length - 1] < 0;
}
const ROOT_TOKEN = {
  type: 0,
  value: ""
};
const VALID_PARAM_RE = /[a-zA-Z0-9_]/;
function tokenizePath(path) {
  if (!path)
    return [[]];
  if (path === "/")
    return [[ROOT_TOKEN]];
  if (!path.startsWith("/")) {
    throw new Error(`Route paths should start with a "/": "${path}" should be "/${path}".`);
  }
  function crash(message) {
    throw new Error(`ERR (${state})/"${buffer2}": ${message}`);
  }
  let state = 0;
  let previousState = state;
  const tokens = [];
  let segment;
  function finalizeSegment() {
    if (segment)
      tokens.push(segment);
    segment = [];
  }
  let i2 = 0;
  let char;
  let buffer2 = "";
  let customRe = "";
  function consumeBuffer() {
    if (!buffer2)
      return;
    if (state === 0) {
      segment.push({
        type: 0,
        value: buffer2
      });
    } else if (state === 1 || state === 2 || state === 3) {
      if (segment.length > 1 && (char === "*" || char === "+"))
        crash(`A repeatable param (${buffer2}) must be alone in its segment. eg: '/:ids+.`);
      segment.push({
        type: 1,
        value: buffer2,
        regexp: customRe,
        repeatable: char === "*" || char === "+",
        optional: char === "*" || char === "?"
      });
    } else {
      crash("Invalid state to consume buffer");
    }
    buffer2 = "";
  }
  function addCharToBuffer() {
    buffer2 += char;
  }
  while (i2 < path.length) {
    char = path[i2++];
    if (char === "\\" && state !== 2) {
      previousState = state;
      state = 4;
      continue;
    }
    switch (state) {
      case 0:
        if (char === "/") {
          if (buffer2) {
            consumeBuffer();
          }
          finalizeSegment();
        } else if (char === ":") {
          consumeBuffer();
          state = 1;
        } else {
          addCharToBuffer();
        }
        break;
      case 4:
        addCharToBuffer();
        state = previousState;
        break;
      case 1:
        if (char === "(") {
          state = 2;
        } else if (VALID_PARAM_RE.test(char)) {
          addCharToBuffer();
        } else {
          consumeBuffer();
          state = 0;
          if (char !== "*" && char !== "?" && char !== "+")
            i2--;
        }
        break;
      case 2:
        if (char === ")") {
          if (customRe[customRe.length - 1] == "\\")
            customRe = customRe.slice(0, -1) + char;
          else
            state = 3;
        } else {
          customRe += char;
        }
        break;
      case 3:
        consumeBuffer();
        state = 0;
        if (char !== "*" && char !== "?" && char !== "+")
          i2--;
        customRe = "";
        break;
      default:
        crash("Unknown state");
        break;
    }
  }
  if (state === 2)
    crash(`Unfinished custom RegExp for param "${buffer2}"`);
  consumeBuffer();
  finalizeSegment();
  return tokens;
}
function createRouteRecordMatcher(record, parent, options) {
  const parser = tokensToParser(tokenizePath(record.path), options);
  {
    const existingKeys = /* @__PURE__ */ new Set();
    for (const key of parser.keys) {
      if (existingKeys.has(key.name))
        warn(`Found duplicated params with name "${key.name}" for path "${record.path}". Only the last one will be available on "$route.params".`);
      existingKeys.add(key.name);
    }
  }
  const matcher = assign(parser, {
    record,
    parent,
    // these needs to be populated by the parent
    children: [],
    alias: []
  });
  if (parent) {
    if (!matcher.record.aliasOf === !parent.record.aliasOf)
      parent.children.push(matcher);
  }
  return matcher;
}
function createRouterMatcher(routes2, globalOptions) {
  const matchers = [];
  const matcherMap = /* @__PURE__ */ new Map();
  globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);
  function getRecordMatcher(name) {
    return matcherMap.get(name);
  }
  function addRoute(record, parent, originalRecord) {
    const isRootAdd = !originalRecord;
    const mainNormalizedRecord = normalizeRouteRecord(record);
    {
      checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent);
    }
    mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;
    const options = mergeOptions(globalOptions, record);
    const normalizedRecords = [mainNormalizedRecord];
    if ("alias" in record) {
      const aliases = typeof record.alias === "string" ? [record.alias] : record.alias;
      for (const alias of aliases) {
        normalizedRecords.push(
          // we need to normalize again to ensure the `mods` property
          // being non enumerable
          normalizeRouteRecord(assign({}, mainNormalizedRecord, {
            // this allows us to hold a copy of the `components` option
            // so that async components cache is hold on the original record
            components: originalRecord ? originalRecord.record.components : mainNormalizedRecord.components,
            path: alias,
            // we might be the child of an alias
            aliasOf: originalRecord ? originalRecord.record : mainNormalizedRecord
            // the aliases are always of the same kind as the original since they
            // are defined on the same record
          }))
        );
      }
    }
    let matcher;
    let originalMatcher;
    for (const normalizedRecord of normalizedRecords) {
      const { path } = normalizedRecord;
      if (parent && path[0] !== "/") {
        const parentPath = parent.record.path;
        const connectingSlash = parentPath[parentPath.length - 1] === "/" ? "" : "/";
        normalizedRecord.path = parent.record.path + (path && connectingSlash + path);
      }
      if (normalizedRecord.path === "*") {
        throw new Error('Catch all routes ("*") must now be defined using a param with a custom regexp.\nSee more at https://router.vuejs.org/guide/migration/#Removed-star-or-catch-all-routes.');
      }
      matcher = createRouteRecordMatcher(normalizedRecord, parent, options);
      if (parent && path[0] === "/")
        checkMissingParamsInAbsolutePath(matcher, parent);
      if (originalRecord) {
        originalRecord.alias.push(matcher);
        {
          checkSameParams(originalRecord, matcher);
        }
      } else {
        originalMatcher = originalMatcher || matcher;
        if (originalMatcher !== matcher)
          originalMatcher.alias.push(matcher);
        if (isRootAdd && record.name && !isAliasRecord(matcher))
          removeRoute(record.name);
      }
      if (isMatchable(matcher)) {
        insertMatcher(matcher);
      }
      if (mainNormalizedRecord.children) {
        const children = mainNormalizedRecord.children;
        for (let i2 = 0; i2 < children.length; i2++) {
          addRoute(children[i2], matcher, originalRecord && originalRecord.children[i2]);
        }
      }
      originalRecord = originalRecord || matcher;
    }
    return originalMatcher ? () => {
      removeRoute(originalMatcher);
    } : noop$1;
  }
  function removeRoute(matcherRef) {
    if (isRouteName(matcherRef)) {
      const matcher = matcherMap.get(matcherRef);
      if (matcher) {
        matcherMap.delete(matcherRef);
        matchers.splice(matchers.indexOf(matcher), 1);
        matcher.children.forEach(removeRoute);
        matcher.alias.forEach(removeRoute);
      }
    } else {
      const index = matchers.indexOf(matcherRef);
      if (index > -1) {
        matchers.splice(index, 1);
        if (matcherRef.record.name)
          matcherMap.delete(matcherRef.record.name);
        matcherRef.children.forEach(removeRoute);
        matcherRef.alias.forEach(removeRoute);
      }
    }
  }
  function getRoutes2() {
    return matchers;
  }
  function insertMatcher(matcher) {
    const index = findInsertionIndex(matcher, matchers);
    matchers.splice(index, 0, matcher);
    if (matcher.record.name && !isAliasRecord(matcher))
      matcherMap.set(matcher.record.name, matcher);
  }
  function resolve2(location2, currentLocation) {
    let matcher;
    let params = {};
    let path;
    let name;
    if ("name" in location2 && location2.name) {
      matcher = matcherMap.get(location2.name);
      if (!matcher)
        throw createRouterError(1, {
          location: location2
        });
      {
        const invalidParams = Object.keys(location2.params || {}).filter((paramName) => !matcher.keys.find((k2) => k2.name === paramName));
        if (invalidParams.length) {
          warn(`Discarded invalid param(s) "${invalidParams.join('", "')}" when navigating. See https://github.com/vuejs/router/blob/main/packages/router/CHANGELOG.md#414-2022-08-22 for more details.`);
        }
      }
      name = matcher.record.name;
      params = assign(
        // paramsFromLocation is a new object
        paramsFromLocation(
          currentLocation.params,
          // only keep params that exist in the resolved location
          // only keep optional params coming from a parent record
          matcher.keys.filter((k2) => !k2.optional).concat(matcher.parent ? matcher.parent.keys.filter((k2) => k2.optional) : []).map((k2) => k2.name)
        ),
        // discard any existing params in the current location that do not exist here
        // #1497 this ensures better active/exact matching
        location2.params && paramsFromLocation(location2.params, matcher.keys.map((k2) => k2.name))
      );
      path = matcher.stringify(params);
    } else if (location2.path != null) {
      path = location2.path;
      if (!path.startsWith("/")) {
        warn(`The Matcher cannot resolve relative paths but received "${path}". Unless you directly called \`matcher.resolve("${path}")\`, this is probably a bug in vue-router. Please open an issue at https://github.com/vuejs/router/issues/new/choose.`);
      }
      matcher = matchers.find((m2) => m2.re.test(path));
      if (matcher) {
        params = matcher.parse(path);
        name = matcher.record.name;
      }
    } else {
      matcher = currentLocation.name ? matcherMap.get(currentLocation.name) : matchers.find((m2) => m2.re.test(currentLocation.path));
      if (!matcher)
        throw createRouterError(1, {
          location: location2,
          currentLocation
        });
      name = matcher.record.name;
      params = assign({}, currentLocation.params, location2.params);
      path = matcher.stringify(params);
    }
    const matched = [];
    let parentMatcher = matcher;
    while (parentMatcher) {
      matched.unshift(parentMatcher.record);
      parentMatcher = parentMatcher.parent;
    }
    return {
      name,
      path,
      params,
      matched,
      meta: mergeMetaFields(matched)
    };
  }
  routes2.forEach((route) => addRoute(route));
  function clearRoutes() {
    matchers.length = 0;
    matcherMap.clear();
  }
  return {
    addRoute,
    resolve: resolve2,
    removeRoute,
    clearRoutes,
    getRoutes: getRoutes2,
    getRecordMatcher
  };
}
function paramsFromLocation(params, keys2) {
  const newParams = {};
  for (const key of keys2) {
    if (key in params)
      newParams[key] = params[key];
  }
  return newParams;
}
function normalizeRouteRecord(record) {
  const normalized = {
    path: record.path,
    redirect: record.redirect,
    name: record.name,
    meta: record.meta || {},
    aliasOf: record.aliasOf,
    beforeEnter: record.beforeEnter,
    props: normalizeRecordProps(record),
    children: record.children || [],
    instances: {},
    leaveGuards: /* @__PURE__ */ new Set(),
    updateGuards: /* @__PURE__ */ new Set(),
    enterCallbacks: {},
    // must be declared afterwards
    // mods: {},
    components: "components" in record ? record.components || null : record.component && { default: record.component }
  };
  Object.defineProperty(normalized, "mods", {
    value: {}
  });
  return normalized;
}
function normalizeRecordProps(record) {
  const propsObject = {};
  const props = record.props || false;
  if ("component" in record) {
    propsObject.default = props;
  } else {
    for (const name in record.components)
      propsObject[name] = typeof props === "object" ? props[name] : props;
  }
  return propsObject;
}
function isAliasRecord(record) {
  while (record) {
    if (record.record.aliasOf)
      return true;
    record = record.parent;
  }
  return false;
}
function mergeMetaFields(matched) {
  return matched.reduce((meta, record) => assign(meta, record.meta), {});
}
function mergeOptions(defaults, partialOptions) {
  const options = {};
  for (const key in defaults) {
    options[key] = key in partialOptions ? partialOptions[key] : defaults[key];
  }
  return options;
}
function isSameParam(a2, b) {
  return a2.name === b.name && a2.optional === b.optional && a2.repeatable === b.repeatable;
}
function checkSameParams(a2, b) {
  for (const key of a2.keys) {
    if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))
      return warn(`Alias "${b.record.path}" and the original record: "${a2.record.path}" must have the exact same param named "${key.name}"`);
  }
  for (const key of b.keys) {
    if (!key.optional && !a2.keys.find(isSameParam.bind(null, key)))
      return warn(`Alias "${b.record.path}" and the original record: "${a2.record.path}" must have the exact same param named "${key.name}"`);
  }
}
function checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent) {
  if (parent && parent.record.name && !mainNormalizedRecord.name && !mainNormalizedRecord.path) {
    warn(`The route named "${String(parent.record.name)}" has a child without a name and an empty path. Using that name won't render the empty path child so you probably want to move the name to the child instead. If this is intentional, add a name to the child route to remove the warning.`);
  }
}
function checkMissingParamsInAbsolutePath(record, parent) {
  for (const key of parent.keys) {
    if (!record.keys.find(isSameParam.bind(null, key)))
      return warn(`Absolute path "${record.record.path}" must have the exact same param named "${key.name}" as its parent "${parent.record.path}".`);
  }
}
function findInsertionIndex(matcher, matchers) {
  let lower = 0;
  let upper = matchers.length;
  while (lower !== upper) {
    const mid = lower + upper >> 1;
    const sortOrder = comparePathParserScore(matcher, matchers[mid]);
    if (sortOrder < 0) {
      upper = mid;
    } else {
      lower = mid + 1;
    }
  }
  const insertionAncestor = getInsertionAncestor(matcher);
  if (insertionAncestor) {
    upper = matchers.lastIndexOf(insertionAncestor, upper - 1);
    if (upper < 0) {
      warn(`Finding ancestor route "${insertionAncestor.record.path}" failed for "${matcher.record.path}"`);
    }
  }
  return upper;
}
function getInsertionAncestor(matcher) {
  let ancestor = matcher;
  while (ancestor = ancestor.parent) {
    if (isMatchable(ancestor) && comparePathParserScore(matcher, ancestor) === 0) {
      return ancestor;
    }
  }
  return;
}
function isMatchable({ record }) {
  return !!(record.name || record.components && Object.keys(record.components).length || record.redirect);
}
function parseQuery(search) {
  const query = {};
  if (search === "" || search === "?")
    return query;
  const hasLeadingIM = search[0] === "?";
  const searchParams = (hasLeadingIM ? search.slice(1) : search).split("&");
  for (let i2 = 0; i2 < searchParams.length; ++i2) {
    const searchParam = searchParams[i2].replace(PLUS_RE, " ");
    const eqPos = searchParam.indexOf("=");
    const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));
    const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));
    if (key in query) {
      let currentValue = query[key];
      if (!isArray$2(currentValue)) {
        currentValue = query[key] = [currentValue];
      }
      currentValue.push(value);
    } else {
      query[key] = value;
    }
  }
  return query;
}
function stringifyQuery(query) {
  let search = "";
  for (let key in query) {
    const value = query[key];
    key = encodeQueryKey(key);
    if (value == null) {
      if (value !== void 0) {
        search += (search.length ? "&" : "") + key;
      }
      continue;
    }
    const values = isArray$2(value) ? value.map((v) => v && encodeQueryValue(v)) : [value && encodeQueryValue(value)];
    values.forEach((value2) => {
      if (value2 !== void 0) {
        search += (search.length ? "&" : "") + key;
        if (value2 != null)
          search += "=" + value2;
      }
    });
  }
  return search;
}
function normalizeQuery(query) {
  const normalizedQuery = {};
  for (const key in query) {
    const value = query[key];
    if (value !== void 0) {
      normalizedQuery[key] = isArray$2(value) ? value.map((v) => v == null ? null : "" + v) : value == null ? value : "" + value;
    }
  }
  return normalizedQuery;
}
const matchedRouteKey = Symbol("router view location matched");
const viewDepthKey = Symbol("router view depth");
const routerKey = Symbol("router");
const routeLocationKey = Symbol("route location");
const routerViewLocationKey = Symbol("router view location");
function useCallbacks() {
  let handlers2 = [];
  function add2(handler) {
    handlers2.push(handler);
    return () => {
      const i2 = handlers2.indexOf(handler);
      if (i2 > -1)
        handlers2.splice(i2, 1);
    };
  }
  function reset() {
    handlers2 = [];
  }
  return {
    add: add2,
    list: () => handlers2.slice(),
    reset
  };
}
function guardToPromiseFn(guard, to, from, record, name, runWithContext = (fn) => fn()) {
  const enterCallbackArray = record && // name is defined if record is because of the function overload
  (record.enterCallbacks[name] = record.enterCallbacks[name] || []);
  return () => new Promise((resolve2, reject) => {
    const next = (valid) => {
      if (valid === false) {
        reject(createRouterError(4, {
          from,
          to
        }));
      } else if (valid instanceof Error) {
        reject(valid);
      } else if (isRouteLocation(valid)) {
        reject(createRouterError(2, {
          from: to,
          to: valid
        }));
      } else {
        if (enterCallbackArray && // since enterCallbackArray is truthy, both record and name also are
        record.enterCallbacks[name] === enterCallbackArray && typeof valid === "function") {
          enterCallbackArray.push(valid);
        }
        resolve2();
      }
    };
    const guardReturn = runWithContext(() => guard.call(record && record.instances[name], to, from, canOnlyBeCalledOnce(next, to, from)));
    let guardCall = Promise.resolve(guardReturn);
    if (guard.length < 3)
      guardCall = guardCall.then(next);
    if (guard.length > 2) {
      const message = `The "next" callback was never called inside of ${guard.name ? '"' + guard.name + '"' : ""}:
${guard.toString()}
. If you are returning a value instead of calling "next", make sure to remove the "next" parameter from your function.`;
      if (typeof guardReturn === "object" && "then" in guardReturn) {
        guardCall = guardCall.then((resolvedValue) => {
          if (!next._called) {
            warn(message);
            return Promise.reject(new Error("Invalid navigation guard"));
          }
          return resolvedValue;
        });
      } else if (guardReturn !== void 0) {
        if (!next._called) {
          warn(message);
          reject(new Error("Invalid navigation guard"));
          return;
        }
      }
    }
    guardCall.catch((err) => reject(err));
  });
}
function canOnlyBeCalledOnce(next, to, from) {
  let called = 0;
  return function() {
    if (called++ === 1)
      warn(`The "next" callback was called more than once in one navigation guard when going from "${from.fullPath}" to "${to.fullPath}". It should be called exactly one time in each navigation guard. This will fail in production.`);
    next._called = true;
    if (called === 1)
      next.apply(null, arguments);
  };
}
function extractComponentsGuards(matched, guardType, to, from, runWithContext = (fn) => fn()) {
  const guards = [];
  for (const record of matched) {
    if (!record.components && !record.children.length) {
      warn(`Record with path "${record.path}" is either missing a "component(s)" or "children" property.`);
    }
    for (const name in record.components) {
      let rawComponent = record.components[name];
      {
        if (!rawComponent || typeof rawComponent !== "object" && typeof rawComponent !== "function") {
          warn(`Component "${name}" in record with path "${record.path}" is not a valid component. Received "${String(rawComponent)}".`);
          throw new Error("Invalid route component");
        } else if ("then" in rawComponent) {
          warn(`Component "${name}" in record with path "${record.path}" is a Promise instead of a function that returns a Promise. Did you write "import('./MyPage.vue')" instead of "() => import('./MyPage.vue')" ? This will break in production if not fixed.`);
          const promise = rawComponent;
          rawComponent = () => promise;
        } else if (rawComponent.__asyncLoader && // warn only once per component
        !rawComponent.__warnedDefineAsync) {
          rawComponent.__warnedDefineAsync = true;
          warn(`Component "${name}" in record with path "${record.path}" is defined using "defineAsyncComponent()". Write "() => import('./MyPage.vue')" instead of "defineAsyncComponent(() => import('./MyPage.vue'))".`);
        }
      }
      if (guardType !== "beforeRouteEnter" && !record.instances[name])
        continue;
      if (isRouteComponent(rawComponent)) {
        const options = rawComponent.__vccOpts || rawComponent;
        const guard = options[guardType];
        guard && guards.push(guardToPromiseFn(guard, to, from, record, name, runWithContext));
      } else {
        let componentPromise = rawComponent();
        if (!("catch" in componentPromise)) {
          warn(`Component "${name}" in record with path "${record.path}" is a function that does not return a Promise. If you were passing a functional component, make sure to add a "displayName" to the component. This will break in production if not fixed.`);
          componentPromise = Promise.resolve(componentPromise);
        }
        guards.push(() => componentPromise.then((resolved) => {
          if (!resolved)
            throw new Error(`Couldn't resolve component "${name}" at "${record.path}"`);
          const resolvedComponent = isESModule(resolved) ? resolved.default : resolved;
          record.mods[name] = resolved;
          record.components[name] = resolvedComponent;
          const options = resolvedComponent.__vccOpts || resolvedComponent;
          const guard = options[guardType];
          return guard && guardToPromiseFn(guard, to, from, record, name, runWithContext)();
        }));
      }
    }
  }
  return guards;
}
function useLink(props) {
  const router = inject(routerKey);
  const currentRoute = inject(routeLocationKey);
  let hasPrevious = false;
  let previousTo = null;
  const route = computed(() => {
    const to = unref(props.to);
    if (!hasPrevious || to !== previousTo) {
      if (!isRouteLocation(to)) {
        if (hasPrevious) {
          warn(`Invalid value for prop "to" in useLink()
- to:`, to, `
- previous to:`, previousTo, `
- props:`, props);
        } else {
          warn(`Invalid value for prop "to" in useLink()
- to:`, to, `
- props:`, props);
        }
      }
      previousTo = to;
      hasPrevious = true;
    }
    return router.resolve(to);
  });
  const activeRecordIndex = computed(() => {
    const { matched } = route.value;
    const { length } = matched;
    const routeMatched = matched[length - 1];
    const currentMatched = currentRoute.matched;
    if (!routeMatched || !currentMatched.length)
      return -1;
    const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));
    if (index > -1)
      return index;
    const parentRecordPath = getOriginalPath(matched[length - 2]);
    return (
      // we are dealing with nested routes
      length > 1 && // if the parent and matched route have the same path, this link is
      // referring to the empty child. Or we currently are on a different
      // child of the same parent
      getOriginalPath(routeMatched) === parentRecordPath && // avoid comparing the child with its parent
      currentMatched[currentMatched.length - 1].path !== parentRecordPath ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2])) : index
    );
  });
  const isActive = computed(() => activeRecordIndex.value > -1 && includesParams(currentRoute.params, route.value.params));
  const isExactActive = computed(() => activeRecordIndex.value > -1 && activeRecordIndex.value === currentRoute.matched.length - 1 && isSameRouteLocationParams(currentRoute.params, route.value.params));
  function navigate(e2 = {}) {
    if (guardEvent$1(e2)) {
      return router[unref(props.replace) ? "replace" : "push"](
        unref(props.to)
        // avoid uncaught errors are they are logged anyway
      ).catch(noop$1);
    }
    return Promise.resolve();
  }
  if (isBrowser$1) {
    const instance = getCurrentInstance();
    if (instance) {
      const linkContextDevtools = {
        route: route.value,
        isActive: isActive.value,
        isExactActive: isExactActive.value,
        error: null
      };
      instance.__vrl_devtools = instance.__vrl_devtools || [];
      instance.__vrl_devtools.push(linkContextDevtools);
      watchEffect(() => {
        linkContextDevtools.route = route.value;
        linkContextDevtools.isActive = isActive.value;
        linkContextDevtools.isExactActive = isExactActive.value;
        linkContextDevtools.error = isRouteLocation(unref(props.to)) ? null : 'Invalid "to" value';
      }, { flush: "post" });
    }
  }
  return {
    route,
    href: computed(() => route.value.href),
    isActive,
    isExactActive,
    navigate
  };
}
const RouterLinkImpl = /* @__PURE__ */ defineComponent({
  name: "RouterLink",
  compatConfig: { MODE: 3 },
  props: {
    to: {
      type: [String, Object],
      required: true
    },
    replace: Boolean,
    activeClass: String,
    // inactiveClass: String,
    exactActiveClass: String,
    custom: Boolean,
    ariaCurrentValue: {
      type: String,
      default: "page"
    }
  },
  useLink,
  setup(props, { slots }) {
    const link = reactive(useLink(props));
    const { options } = inject(routerKey);
    const elClass = computed(() => ({
      [getLinkClass(props.activeClass, options.linkActiveClass, "router-link-active")]: link.isActive,
      // [getLinkClass(
      //   props.inactiveClass,
      //   options.linkInactiveClass,
      //   'router-link-inactive'
      // )]: !link.isExactActive,
      [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, "router-link-exact-active")]: link.isExactActive
    }));
    return () => {
      const children = slots.default && slots.default(link);
      return props.custom ? children : h$1("a", {
        "aria-current": link.isExactActive ? props.ariaCurrentValue : null,
        href: link.href,
        // this would override user added attrs but Vue will still add
        // the listener, so we end up triggering both
        onClick: link.navigate,
        class: elClass.value
      }, children);
    };
  }
});
const RouterLink = RouterLinkImpl;
function guardEvent$1(e2) {
  if (e2.metaKey || e2.altKey || e2.ctrlKey || e2.shiftKey)
    return;
  if (e2.defaultPrevented)
    return;
  if (e2.button !== void 0 && e2.button !== 0)
    return;
  if (e2.currentTarget && e2.currentTarget.getAttribute) {
    const target2 = e2.currentTarget.getAttribute("target");
    if (/\b_blank\b/i.test(target2))
      return;
  }
  if (e2.preventDefault)
    e2.preventDefault();
  return true;
}
function includesParams(outer, inner) {
  for (const key in inner) {
    const innerValue = inner[key];
    const outerValue = outer[key];
    if (typeof innerValue === "string") {
      if (innerValue !== outerValue)
        return false;
    } else {
      if (!isArray$2(outerValue) || outerValue.length !== innerValue.length || innerValue.some((value, i2) => value !== outerValue[i2]))
        return false;
    }
  }
  return true;
}
function getOriginalPath(record) {
  return record ? record.aliasOf ? record.aliasOf.path : record.path : "";
}
const getLinkClass = (propClass, globalClass, defaultClass) => propClass != null ? propClass : globalClass != null ? globalClass : defaultClass;
const RouterViewImpl = /* @__PURE__ */ defineComponent({
  name: "RouterView",
  // #674 we manually inherit them
  inheritAttrs: false,
  props: {
    name: {
      type: String,
      default: "default"
    },
    route: Object
  },
  // Better compat for @vue/compat users
  // https://github.com/vuejs/router/issues/1315
  compatConfig: { MODE: 3 },
  setup(props, { attrs, slots }) {
    warnDeprecatedUsage();
    const injectedRoute = inject(routerViewLocationKey);
    const routeToDisplay = computed(() => props.route || injectedRoute.value);
    const injectedDepth = inject(viewDepthKey, 0);
    const depth = computed(() => {
      let initialDepth = unref(injectedDepth);
      const { matched } = routeToDisplay.value;
      let matchedRoute;
      while ((matchedRoute = matched[initialDepth]) && !matchedRoute.components) {
        initialDepth++;
      }
      return initialDepth;
    });
    const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth.value]);
    provide(viewDepthKey, computed(() => depth.value + 1));
    provide(matchedRouteKey, matchedRouteRef);
    provide(routerViewLocationKey, routeToDisplay);
    const viewRef = ref();
    watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {
      if (to) {
        to.instances[name] = instance;
        if (from && from !== to && instance && instance === oldInstance) {
          if (!to.leaveGuards.size) {
            to.leaveGuards = from.leaveGuards;
          }
          if (!to.updateGuards.size) {
            to.updateGuards = from.updateGuards;
          }
        }
      }
      if (instance && to && // if there is no instance but to and from are the same this might be
      // the first visit
      (!from || !isSameRouteRecord(to, from) || !oldInstance)) {
        (to.enterCallbacks[name] || []).forEach((callback) => callback(instance));
      }
    }, { flush: "post" });
    return () => {
      const route = routeToDisplay.value;
      const currentName = props.name;
      const matchedRoute = matchedRouteRef.value;
      const ViewComponent = matchedRoute && matchedRoute.components[currentName];
      if (!ViewComponent) {
        return normalizeSlot(slots.default, { Component: ViewComponent, route });
      }
      const routePropsOption = matchedRoute.props[currentName];
      const routeProps = routePropsOption ? routePropsOption === true ? route.params : typeof routePropsOption === "function" ? routePropsOption(route) : routePropsOption : null;
      const onVnodeUnmounted = (vnode) => {
        if (vnode.component.isUnmounted) {
          matchedRoute.instances[currentName] = null;
        }
      };
      const component = h$1(ViewComponent, assign({}, routeProps, attrs, {
        onVnodeUnmounted,
        ref: viewRef
      }));
      if (isBrowser$1 && component.ref) {
        const info = {
          depth: depth.value,
          name: matchedRoute.name,
          path: matchedRoute.path,
          meta: matchedRoute.meta
        };
        const internalInstances = isArray$2(component.ref) ? component.ref.map((r2) => r2.i) : [component.ref.i];
        internalInstances.forEach((instance) => {
          instance.__vrv_devtools = info;
        });
      }
      return (
        // pass the vnode to the slot as a prop.
        // h and <component :is="..."> both accept vnodes
        normalizeSlot(slots.default, { Component: component, route }) || component
      );
    };
  }
});
function normalizeSlot(slot, data) {
  if (!slot)
    return null;
  const slotContent = slot(data);
  return slotContent.length === 1 ? slotContent[0] : slotContent;
}
const RouterView = RouterViewImpl;
function warnDeprecatedUsage() {
  const instance = getCurrentInstance();
  const parentName = instance.parent && instance.parent.type.name;
  const parentSubTreeType = instance.parent && instance.parent.subTree && instance.parent.subTree.type;
  if (parentName && (parentName === "KeepAlive" || parentName.includes("Transition")) && typeof parentSubTreeType === "object" && parentSubTreeType.name === "RouterView") {
    const comp = parentName === "KeepAlive" ? "keep-alive" : "transition";
    warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.
Use slot props instead:

<router-view v-slot="{ Component }">
  <${comp}>
    <component :is="Component" />
  </${comp}>
</router-view>`);
  }
}
function formatRouteLocation(routeLocation, tooltip) {
  const copy2 = assign({}, routeLocation, {
    // remove variables that can contain vue instances
    matched: routeLocation.matched.map((matched) => omit(matched, ["instances", "children", "aliasOf"]))
  });
  return {
    _custom: {
      type: null,
      readOnly: true,
      display: routeLocation.fullPath,
      tooltip,
      value: copy2
    }
  };
}
function formatDisplay(display) {
  return {
    _custom: {
      display
    }
  };
}
let routerId = 0;
function addDevtools(app, router, matcher) {
  if (router.__hasDevtools)
    return;
  router.__hasDevtools = true;
  const id = routerId++;
  setupDevtoolsPlugin({
    id: "org.vuejs.router" + (id ? "." + id : ""),
    label: "Vue Router",
    packageName: "vue-router",
    homepage: "https://router.vuejs.org",
    logo: "https://router.vuejs.org/logo.png",
    componentStateTypes: ["Routing"],
    app
  }, (api) => {
    if (typeof api.now !== "function") {
      console.warn("[Vue Router]: You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.");
    }
    api.on.inspectComponent((payload, ctx) => {
      if (payload.instanceData) {
        payload.instanceData.state.push({
          type: "Routing",
          key: "$route",
          editable: false,
          value: formatRouteLocation(router.currentRoute.value, "Current Route")
        });
      }
    });
    api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {
      if (componentInstance.__vrv_devtools) {
        const info = componentInstance.__vrv_devtools;
        node.tags.push({
          label: (info.name ? `${info.name.toString()}: ` : "") + info.path,
          textColor: 0,
          tooltip: "This component is rendered by &lt;router-view&gt;",
          backgroundColor: PINK_500
        });
      }
      if (isArray$2(componentInstance.__vrl_devtools)) {
        componentInstance.__devtoolsApi = api;
        componentInstance.__vrl_devtools.forEach((devtoolsData) => {
          let label = devtoolsData.route.path;
          let backgroundColor = ORANGE_400;
          let tooltip = "";
          let textColor = 0;
          if (devtoolsData.error) {
            label = devtoolsData.error;
            backgroundColor = RED_100;
            textColor = RED_700;
          } else if (devtoolsData.isExactActive) {
            backgroundColor = LIME_500;
            tooltip = "This is exactly active";
          } else if (devtoolsData.isActive) {
            backgroundColor = BLUE_600;
            tooltip = "This link is active";
          }
          node.tags.push({
            label,
            textColor,
            tooltip,
            backgroundColor
          });
        });
      }
    });
    watch(router.currentRoute, () => {
      refreshRoutesView();
      api.notifyComponentUpdate();
      api.sendInspectorTree(routerInspectorId);
      api.sendInspectorState(routerInspectorId);
    });
    const navigationsLayerId = "router:navigations:" + id;
    api.addTimelineLayer({
      id: navigationsLayerId,
      label: `Router${id ? " " + id : ""} Navigations`,
      color: 4237508
    });
    router.onError((error, to) => {
      api.addTimelineEvent({
        layerId: navigationsLayerId,
        event: {
          title: "Error during Navigation",
          subtitle: to.fullPath,
          logType: "error",
          time: api.now(),
          data: { error },
          groupId: to.meta.__navigationId
        }
      });
    });
    let navigationId = 0;
    router.beforeEach((to, from) => {
      const data = {
        guard: formatDisplay("beforeEach"),
        from: formatRouteLocation(from, "Current Location during this navigation"),
        to: formatRouteLocation(to, "Target location")
      };
      Object.defineProperty(to.meta, "__navigationId", {
        value: navigationId++
      });
      api.addTimelineEvent({
        layerId: navigationsLayerId,
        event: {
          time: api.now(),
          title: "Start of navigation",
          subtitle: to.fullPath,
          data,
          groupId: to.meta.__navigationId
        }
      });
    });
    router.afterEach((to, from, failure) => {
      const data = {
        guard: formatDisplay("afterEach")
      };
      if (failure) {
        data.failure = {
          _custom: {
            type: Error,
            readOnly: true,
            display: failure ? failure.message : "",
            tooltip: "Navigation Failure",
            value: failure
          }
        };
        data.status = formatDisplay("❌");
      } else {
        data.status = formatDisplay("✅");
      }
      data.from = formatRouteLocation(from, "Current Location during this navigation");
      data.to = formatRouteLocation(to, "Target location");
      api.addTimelineEvent({
        layerId: navigationsLayerId,
        event: {
          title: "End of navigation",
          subtitle: to.fullPath,
          time: api.now(),
          data,
          logType: failure ? "warning" : "default",
          groupId: to.meta.__navigationId
        }
      });
    });
    const routerInspectorId = "router-inspector:" + id;
    api.addInspector({
      id: routerInspectorId,
      label: "Routes" + (id ? " " + id : ""),
      icon: "book",
      treeFilterPlaceholder: "Search routes"
    });
    function refreshRoutesView() {
      if (!activeRoutesPayload)
        return;
      const payload = activeRoutesPayload;
      let routes2 = matcher.getRoutes().filter((route) => !route.parent || // these routes have a parent with no component which will not appear in the view
      // therefore we still need to include them
      !route.parent.record.components);
      routes2.forEach(resetMatchStateOnRouteRecord);
      if (payload.filter) {
        routes2 = routes2.filter((route) => (
          // save matches state based on the payload
          isRouteMatching(route, payload.filter.toLowerCase())
        ));
      }
      routes2.forEach((route) => markRouteRecordActive(route, router.currentRoute.value));
      payload.rootNodes = routes2.map(formatRouteRecordForInspector);
    }
    let activeRoutesPayload;
    api.on.getInspectorTree((payload) => {
      activeRoutesPayload = payload;
      if (payload.app === app && payload.inspectorId === routerInspectorId) {
        refreshRoutesView();
      }
    });
    api.on.getInspectorState((payload) => {
      if (payload.app === app && payload.inspectorId === routerInspectorId) {
        const routes2 = matcher.getRoutes();
        const route = routes2.find((route2) => route2.record.__vd_id === payload.nodeId);
        if (route) {
          payload.state = {
            options: formatRouteRecordMatcherForStateInspector(route)
          };
        }
      }
    });
    api.sendInspectorTree(routerInspectorId);
    api.sendInspectorState(routerInspectorId);
  });
}
function modifierForKey(key) {
  if (key.optional) {
    return key.repeatable ? "*" : "?";
  } else {
    return key.repeatable ? "+" : "";
  }
}
function formatRouteRecordMatcherForStateInspector(route) {
  const { record } = route;
  const fields = [
    { editable: false, key: "path", value: record.path }
  ];
  if (record.name != null) {
    fields.push({
      editable: false,
      key: "name",
      value: record.name
    });
  }
  fields.push({ editable: false, key: "regexp", value: route.re });
  if (route.keys.length) {
    fields.push({
      editable: false,
      key: "keys",
      value: {
        _custom: {
          type: null,
          readOnly: true,
          display: route.keys.map((key) => `${key.name}${modifierForKey(key)}`).join(" "),
          tooltip: "Param keys",
          value: route.keys
        }
      }
    });
  }
  if (record.redirect != null) {
    fields.push({
      editable: false,
      key: "redirect",
      value: record.redirect
    });
  }
  if (route.alias.length) {
    fields.push({
      editable: false,
      key: "aliases",
      value: route.alias.map((alias) => alias.record.path)
    });
  }
  if (Object.keys(route.record.meta).length) {
    fields.push({
      editable: false,
      key: "meta",
      value: route.record.meta
    });
  }
  fields.push({
    key: "score",
    editable: false,
    value: {
      _custom: {
        type: null,
        readOnly: true,
        display: route.score.map((score) => score.join(", ")).join(" | "),
        tooltip: "Score used to sort routes",
        value: route.score
      }
    }
  });
  return fields;
}
const PINK_500 = 15485081;
const BLUE_600 = 2450411;
const LIME_500 = 8702998;
const CYAN_400 = 2282478;
const ORANGE_400 = 16486972;
const DARK = 6710886;
const RED_100 = 16704226;
const RED_700 = 12131356;
function formatRouteRecordForInspector(route) {
  const tags = [];
  const { record } = route;
  if (record.name != null) {
    tags.push({
      label: String(record.name),
      textColor: 0,
      backgroundColor: CYAN_400
    });
  }
  if (record.aliasOf) {
    tags.push({
      label: "alias",
      textColor: 0,
      backgroundColor: ORANGE_400
    });
  }
  if (route.__vd_match) {
    tags.push({
      label: "matches",
      textColor: 0,
      backgroundColor: PINK_500
    });
  }
  if (route.__vd_exactActive) {
    tags.push({
      label: "exact",
      textColor: 0,
      backgroundColor: LIME_500
    });
  }
  if (route.__vd_active) {
    tags.push({
      label: "active",
      textColor: 0,
      backgroundColor: BLUE_600
    });
  }
  if (record.redirect) {
    tags.push({
      label: typeof record.redirect === "string" ? `redirect: ${record.redirect}` : "redirects",
      textColor: 16777215,
      backgroundColor: DARK
    });
  }
  let id = record.__vd_id;
  if (id == null) {
    id = String(routeRecordId++);
    record.__vd_id = id;
  }
  return {
    id,
    label: record.path,
    tags,
    children: route.children.map(formatRouteRecordForInspector)
  };
}
let routeRecordId = 0;
const EXTRACT_REGEXP_RE = /^\/(.*)\/([a-z]*)$/;
function markRouteRecordActive(route, currentRoute) {
  const isExactActive = currentRoute.matched.length && isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);
  route.__vd_exactActive = route.__vd_active = isExactActive;
  if (!isExactActive) {
    route.__vd_active = currentRoute.matched.some((match) => isSameRouteRecord(match, route.record));
  }
  route.children.forEach((childRoute) => markRouteRecordActive(childRoute, currentRoute));
}
function resetMatchStateOnRouteRecord(route) {
  route.__vd_match = false;
  route.children.forEach(resetMatchStateOnRouteRecord);
}
function isRouteMatching(route, filter) {
  const found = String(route.re).match(EXTRACT_REGEXP_RE);
  route.__vd_match = false;
  if (!found || found.length < 3) {
    return false;
  }
  const nonEndingRE = new RegExp(found[1].replace(/\$$/, ""), found[2]);
  if (nonEndingRE.test(filter)) {
    route.children.forEach((child) => isRouteMatching(child, filter));
    if (route.record.path !== "/" || filter === "/") {
      route.__vd_match = route.re.test(filter);
      return true;
    }
    return false;
  }
  const path = route.record.path.toLowerCase();
  const decodedPath = decode(path);
  if (!filter.startsWith("/") && (decodedPath.includes(filter) || path.includes(filter)))
    return true;
  if (decodedPath.startsWith(filter) || path.startsWith(filter))
    return true;
  if (route.record.name && String(route.record.name).includes(filter))
    return true;
  return route.children.some((child) => isRouteMatching(child, filter));
}
function omit(obj, keys2) {
  const ret = {};
  for (const key in obj) {
    if (!keys2.includes(key)) {
      ret[key] = obj[key];
    }
  }
  return ret;
}
function createRouter(options) {
  const matcher = createRouterMatcher(options.routes, options);
  const parseQuery$1 = options.parseQuery || parseQuery;
  const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;
  const routerHistory = options.history;
  if (!routerHistory)
    throw new Error('Provide the "history" option when calling "createRouter()": https://router.vuejs.org/api/interfaces/RouterOptions.html#history');
  const beforeGuards = useCallbacks();
  const beforeResolveGuards = useCallbacks();
  const afterGuards = useCallbacks();
  const currentRoute = shallowRef(START_LOCATION_NORMALIZED);
  let pendingLocation = START_LOCATION_NORMALIZED;
  if (isBrowser$1 && options.scrollBehavior && "scrollRestoration" in history) {
    history.scrollRestoration = "manual";
  }
  const normalizeParams = applyToParams.bind(null, (paramValue) => "" + paramValue);
  const encodeParams = applyToParams.bind(null, encodeParam);
  const decodeParams = (
    // @ts-expect-error: intentionally avoid the type check
    applyToParams.bind(null, decode)
  );
  function addRoute(parentOrRoute, route) {
    let parent;
    let record;
    if (isRouteName(parentOrRoute)) {
      parent = matcher.getRecordMatcher(parentOrRoute);
      if (!parent) {
        warn(`Parent route "${String(parentOrRoute)}" not found when adding child route`, route);
      }
      record = route;
    } else {
      record = parentOrRoute;
    }
    return matcher.addRoute(record, parent);
  }
  function removeRoute(name) {
    const recordMatcher = matcher.getRecordMatcher(name);
    if (recordMatcher) {
      matcher.removeRoute(recordMatcher);
    } else {
      warn(`Cannot remove non-existent route "${String(name)}"`);
    }
  }
  function getRoutes2() {
    return matcher.getRoutes().map((routeMatcher) => routeMatcher.record);
  }
  function hasRoute(name) {
    return !!matcher.getRecordMatcher(name);
  }
  function resolve2(rawLocation, currentLocation) {
    currentLocation = assign({}, currentLocation || currentRoute.value);
    if (typeof rawLocation === "string") {
      const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);
      const matchedRoute2 = matcher.resolve({ path: locationNormalized.path }, currentLocation);
      const href2 = routerHistory.createHref(locationNormalized.fullPath);
      {
        if (href2.startsWith("//"))
          warn(`Location "${rawLocation}" resolved to "${href2}". A resolved location cannot start with multiple slashes.`);
        else if (!matchedRoute2.matched.length) {
          warn(`No match found for location with path "${rawLocation}"`);
        }
      }
      return assign(locationNormalized, matchedRoute2, {
        params: decodeParams(matchedRoute2.params),
        hash: decode(locationNormalized.hash),
        redirectedFrom: void 0,
        href: href2
      });
    }
    if (!isRouteLocation(rawLocation)) {
      warn(`router.resolve() was passed an invalid location. This will fail in production.
- Location:`, rawLocation);
      return resolve2({});
    }
    let matcherLocation;
    if (rawLocation.path != null) {
      if ("params" in rawLocation && !("name" in rawLocation) && // @ts-expect-error: the type is never
      Object.keys(rawLocation.params).length) {
        warn(`Path "${rawLocation.path}" was passed with params but they will be ignored. Use a named route alongside params instead.`);
      }
      matcherLocation = assign({}, rawLocation, {
        path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path
      });
    } else {
      const targetParams = assign({}, rawLocation.params);
      for (const key in targetParams) {
        if (targetParams[key] == null) {
          delete targetParams[key];
        }
      }
      matcherLocation = assign({}, rawLocation, {
        params: encodeParams(targetParams)
      });
      currentLocation.params = encodeParams(currentLocation.params);
    }
    const matchedRoute = matcher.resolve(matcherLocation, currentLocation);
    const hash = rawLocation.hash || "";
    if (hash && !hash.startsWith("#")) {
      warn(`A \`hash\` should always start with the character "#". Replace "${hash}" with "#${hash}".`);
    }
    matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));
    const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {
      hash: encodeHash(hash),
      path: matchedRoute.path
    }));
    const href = routerHistory.createHref(fullPath);
    {
      if (href.startsWith("//")) {
        warn(`Location "${rawLocation}" resolved to "${href}". A resolved location cannot start with multiple slashes.`);
      } else if (!matchedRoute.matched.length) {
        warn(`No match found for location with path "${rawLocation.path != null ? rawLocation.path : rawLocation}"`);
      }
    }
    return assign({
      fullPath,
      // keep the hash encoded so fullPath is effectively path + encodedQuery +
      // hash
      hash,
      query: (
        // if the user is using a custom query lib like qs, we might have
        // nested objects, so we keep the query as is, meaning it can contain
        // numbers at `$route.query`, but at the point, the user will have to
        // use their own type anyway.
        // https://github.com/vuejs/router/issues/328#issuecomment-649481567
        stringifyQuery$1 === stringifyQuery ? normalizeQuery(rawLocation.query) : rawLocation.query || {}
      )
    }, matchedRoute, {
      redirectedFrom: void 0,
      href
    });
  }
  function locationAsObject(to) {
    return typeof to === "string" ? parseURL(parseQuery$1, to, currentRoute.value.path) : assign({}, to);
  }
  function checkCanceledNavigation(to, from) {
    if (pendingLocation !== to) {
      return createRouterError(8, {
        from,
        to
      });
    }
  }
  function push(to) {
    return pushWithRedirect(to);
  }
  function replace(to) {
    return push(assign(locationAsObject(to), { replace: true }));
  }
  function handleRedirectRecord(to) {
    const lastMatched = to.matched[to.matched.length - 1];
    if (lastMatched && lastMatched.redirect) {
      const { redirect } = lastMatched;
      let newTargetLocation = typeof redirect === "function" ? redirect(to) : redirect;
      if (typeof newTargetLocation === "string") {
        newTargetLocation = newTargetLocation.includes("?") || newTargetLocation.includes("#") ? newTargetLocation = locationAsObject(newTargetLocation) : (
          // force empty params
          { path: newTargetLocation }
        );
        newTargetLocation.params = {};
      }
      if (newTargetLocation.path == null && !("name" in newTargetLocation)) {
        warn(`Invalid redirect found:
${JSON.stringify(newTargetLocation, null, 2)}
 when navigating to "${to.fullPath}". A redirect must contain a name or path. This will break in production.`);
        throw new Error("Invalid redirect");
      }
      return assign({
        query: to.query,
        hash: to.hash,
        // avoid transferring params if the redirect has a path
        params: newTargetLocation.path != null ? {} : to.params
      }, newTargetLocation);
    }
  }
  function pushWithRedirect(to, redirectedFrom) {
    const targetLocation = pendingLocation = resolve2(to);
    const from = currentRoute.value;
    const data = to.state;
    const force = to.force;
    const replace2 = to.replace === true;
    const shouldRedirect = handleRedirectRecord(targetLocation);
    if (shouldRedirect)
      return pushWithRedirect(
        assign(locationAsObject(shouldRedirect), {
          state: typeof shouldRedirect === "object" ? assign({}, data, shouldRedirect.state) : data,
          force,
          replace: replace2
        }),
        // keep original redirectedFrom if it exists
        redirectedFrom || targetLocation
      );
    const toLocation = targetLocation;
    toLocation.redirectedFrom = redirectedFrom;
    let failure;
    if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {
      failure = createRouterError(16, { to: toLocation, from });
      handleScroll(
        from,
        from,
        // this is a push, the only way for it to be triggered from a
        // history.listen is with a redirect, which makes it become a push
        true,
        // This cannot be the first navigation because the initial location
        // cannot be manually navigated to
        false
      );
    }
    return (failure ? Promise.resolve(failure) : navigate(toLocation, from)).catch((error) => isNavigationFailure(error) ? (
      // navigation redirects still mark the router as ready
      isNavigationFailure(
        error,
        2
        /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */
      ) ? error : markAsReady(error)
    ) : (
      // reject any unknown error
      triggerError(error, toLocation, from)
    )).then((failure2) => {
      if (failure2) {
        if (isNavigationFailure(
          failure2,
          2
          /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */
        )) {
          if (
            // we are redirecting to the same location we were already at
            isSameRouteLocation(stringifyQuery$1, resolve2(failure2.to), toLocation) && // and we have done it a couple of times
            redirectedFrom && // @ts-expect-error: added only in dev
            (redirectedFrom._count = redirectedFrom._count ? (
              // @ts-expect-error
              redirectedFrom._count + 1
            ) : 1) > 30
          ) {
            warn(`Detected a possibly infinite redirection in a navigation guard when going from "${from.fullPath}" to "${toLocation.fullPath}". Aborting to avoid a Stack Overflow.
 Are you always returning a new location within a navigation guard? That would lead to this error. Only return when redirecting or aborting, that should fix this. This might break in production if not fixed.`);
            return Promise.reject(new Error("Infinite redirect in navigation guard"));
          }
          return pushWithRedirect(
            // keep options
            assign({
              // preserve an existing replacement but allow the redirect to override it
              replace: replace2
            }, locationAsObject(failure2.to), {
              state: typeof failure2.to === "object" ? assign({}, data, failure2.to.state) : data,
              force
            }),
            // preserve the original redirectedFrom if any
            redirectedFrom || toLocation
          );
        }
      } else {
        failure2 = finalizeNavigation(toLocation, from, true, replace2, data);
      }
      triggerAfterEach(toLocation, from, failure2);
      return failure2;
    });
  }
  function checkCanceledNavigationAndReject(to, from) {
    const error = checkCanceledNavigation(to, from);
    return error ? Promise.reject(error) : Promise.resolve();
  }
  function runWithContext(fn) {
    const app = installedApps.values().next().value;
    return app && typeof app.runWithContext === "function" ? app.runWithContext(fn) : fn();
  }
  function navigate(to, from) {
    let guards;
    const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);
    guards = extractComponentsGuards(leavingRecords.reverse(), "beforeRouteLeave", to, from);
    for (const record of leavingRecords) {
      record.leaveGuards.forEach((guard) => {
        guards.push(guardToPromiseFn(guard, to, from));
      });
    }
    const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);
    guards.push(canceledNavigationCheck);
    return runGuardQueue(guards).then(() => {
      guards = [];
      for (const guard of beforeGuards.list()) {
        guards.push(guardToPromiseFn(guard, to, from));
      }
      guards.push(canceledNavigationCheck);
      return runGuardQueue(guards);
    }).then(() => {
      guards = extractComponentsGuards(updatingRecords, "beforeRouteUpdate", to, from);
      for (const record of updatingRecords) {
        record.updateGuards.forEach((guard) => {
          guards.push(guardToPromiseFn(guard, to, from));
        });
      }
      guards.push(canceledNavigationCheck);
      return runGuardQueue(guards);
    }).then(() => {
      guards = [];
      for (const record of enteringRecords) {
        if (record.beforeEnter) {
          if (isArray$2(record.beforeEnter)) {
            for (const beforeEnter of record.beforeEnter)
              guards.push(guardToPromiseFn(beforeEnter, to, from));
          } else {
            guards.push(guardToPromiseFn(record.beforeEnter, to, from));
          }
        }
      }
      guards.push(canceledNavigationCheck);
      return runGuardQueue(guards);
    }).then(() => {
      to.matched.forEach((record) => record.enterCallbacks = {});
      guards = extractComponentsGuards(enteringRecords, "beforeRouteEnter", to, from, runWithContext);
      guards.push(canceledNavigationCheck);
      return runGuardQueue(guards);
    }).then(() => {
      guards = [];
      for (const guard of beforeResolveGuards.list()) {
        guards.push(guardToPromiseFn(guard, to, from));
      }
      guards.push(canceledNavigationCheck);
      return runGuardQueue(guards);
    }).catch((err) => isNavigationFailure(
      err,
      8
      /* ErrorTypes.NAVIGATION_CANCELLED */
    ) ? err : Promise.reject(err));
  }
  function triggerAfterEach(to, from, failure) {
    afterGuards.list().forEach((guard) => runWithContext(() => guard(to, from, failure)));
  }
  function finalizeNavigation(toLocation, from, isPush, replace2, data) {
    const error = checkCanceledNavigation(toLocation, from);
    if (error)
      return error;
    const isFirstNavigation = from === START_LOCATION_NORMALIZED;
    const state = !isBrowser$1 ? {} : history.state;
    if (isPush) {
      if (replace2 || isFirstNavigation)
        routerHistory.replace(toLocation.fullPath, assign({
          scroll: isFirstNavigation && state && state.scroll
        }, data));
      else
        routerHistory.push(toLocation.fullPath, data);
    }
    currentRoute.value = toLocation;
    handleScroll(toLocation, from, isPush, isFirstNavigation);
    markAsReady();
  }
  let removeHistoryListener;
  function setupListeners() {
    if (removeHistoryListener)
      return;
    removeHistoryListener = routerHistory.listen((to, _from, info) => {
      if (!router.listening)
        return;
      const toLocation = resolve2(to);
      const shouldRedirect = handleRedirectRecord(toLocation);
      if (shouldRedirect) {
        pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop$1);
        return;
      }
      pendingLocation = toLocation;
      const from = currentRoute.value;
      if (isBrowser$1) {
        saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());
      }
      navigate(toLocation, from).catch((error) => {
        if (isNavigationFailure(
          error,
          4 | 8
          /* ErrorTypes.NAVIGATION_CANCELLED */
        )) {
          return error;
        }
        if (isNavigationFailure(
          error,
          2
          /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */
        )) {
          pushWithRedirect(
            error.to,
            toLocation
            // avoid an uncaught rejection, let push call triggerError
          ).then((failure) => {
            if (isNavigationFailure(
              failure,
              4 | 16
              /* ErrorTypes.NAVIGATION_DUPLICATED */
            ) && !info.delta && info.type === NavigationType.pop) {
              routerHistory.go(-1, false);
            }
          }).catch(noop$1);
          return Promise.reject();
        }
        if (info.delta) {
          routerHistory.go(-info.delta, false);
        }
        return triggerError(error, toLocation, from);
      }).then((failure) => {
        failure = failure || finalizeNavigation(
          // after navigation, all matched components are resolved
          toLocation,
          from,
          false
        );
        if (failure) {
          if (info.delta && // a new navigation has been triggered, so we do not want to revert, that will change the current history
          // entry while a different route is displayed
          !isNavigationFailure(
            failure,
            8
            /* ErrorTypes.NAVIGATION_CANCELLED */
          )) {
            routerHistory.go(-info.delta, false);
          } else if (info.type === NavigationType.pop && isNavigationFailure(
            failure,
            4 | 16
            /* ErrorTypes.NAVIGATION_DUPLICATED */
          )) {
            routerHistory.go(-1, false);
          }
        }
        triggerAfterEach(toLocation, from, failure);
      }).catch(noop$1);
    });
  }
  let readyHandlers = useCallbacks();
  let errorListeners = useCallbacks();
  let ready;
  function triggerError(error, to, from) {
    markAsReady(error);
    const list = errorListeners.list();
    if (list.length) {
      list.forEach((handler) => handler(error, to, from));
    } else {
      {
        warn("uncaught error during route navigation:");
      }
      console.error(error);
    }
    return Promise.reject(error);
  }
  function isReady() {
    if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)
      return Promise.resolve();
    return new Promise((resolve22, reject) => {
      readyHandlers.add([resolve22, reject]);
    });
  }
  function markAsReady(err) {
    if (!ready) {
      ready = !err;
      setupListeners();
      readyHandlers.list().forEach(([resolve22, reject]) => err ? reject(err) : resolve22());
      readyHandlers.reset();
    }
    return err;
  }
  function handleScroll(to, from, isPush, isFirstNavigation) {
    const { scrollBehavior } = options;
    if (!isBrowser$1 || !scrollBehavior)
      return Promise.resolve();
    const scrollPosition = !isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0)) || (isFirstNavigation || !isPush) && history.state && history.state.scroll || null;
    return nextTick().then(() => scrollBehavior(to, from, scrollPosition)).then((position) => position && scrollToPosition(position)).catch((err) => triggerError(err, to, from));
  }
  const go = (delta) => routerHistory.go(delta);
  let started;
  const installedApps = /* @__PURE__ */ new Set();
  const router = {
    currentRoute,
    listening: true,
    addRoute,
    removeRoute,
    clearRoutes: matcher.clearRoutes,
    hasRoute,
    getRoutes: getRoutes2,
    resolve: resolve2,
    options,
    push,
    replace,
    go,
    back: () => go(-1),
    forward: () => go(1),
    beforeEach: beforeGuards.add,
    beforeResolve: beforeResolveGuards.add,
    afterEach: afterGuards.add,
    onError: errorListeners.add,
    isReady,
    install(app) {
      const router2 = this;
      app.component("RouterLink", RouterLink);
      app.component("RouterView", RouterView);
      app.config.globalProperties.$router = router2;
      Object.defineProperty(app.config.globalProperties, "$route", {
        enumerable: true,
        get: () => unref(currentRoute)
      });
      if (isBrowser$1 && // used for the initial navigation client side to avoid pushing
      // multiple times when the router is used in multiple apps
      !started && currentRoute.value === START_LOCATION_NORMALIZED) {
        started = true;
        push(routerHistory.location).catch((err) => {
          warn("Unexpected error when starting the router:", err);
        });
      }
      const reactiveRoute = {};
      for (const key in START_LOCATION_NORMALIZED) {
        Object.defineProperty(reactiveRoute, key, {
          get: () => currentRoute.value[key],
          enumerable: true
        });
      }
      app.provide(routerKey, router2);
      app.provide(routeLocationKey, shallowReactive(reactiveRoute));
      app.provide(routerViewLocationKey, currentRoute);
      const unmountApp = app.unmount;
      installedApps.add(app);
      app.unmount = function() {
        installedApps.delete(app);
        if (installedApps.size < 1) {
          pendingLocation = START_LOCATION_NORMALIZED;
          removeHistoryListener && removeHistoryListener();
          removeHistoryListener = null;
          currentRoute.value = START_LOCATION_NORMALIZED;
          started = false;
          ready = false;
        }
        unmountApp();
      };
      if (isBrowser$1) {
        addDevtools(app, router2, matcher);
      }
    }
  };
  function runGuardQueue(guards) {
    return guards.reduce((promise, guard) => promise.then(() => runWithContext(guard)), Promise.resolve());
  }
  return router;
}
function extractChangingRecords(to, from) {
  const leavingRecords = [];
  const updatingRecords = [];
  const enteringRecords = [];
  const len = Math.max(from.matched.length, to.matched.length);
  for (let i2 = 0; i2 < len; i2++) {
    const recordFrom = from.matched[i2];
    if (recordFrom) {
      if (to.matched.find((record) => isSameRouteRecord(record, recordFrom)))
        updatingRecords.push(recordFrom);
      else
        leavingRecords.push(recordFrom);
    }
    const recordTo = to.matched[i2];
    if (recordTo) {
      if (!from.matched.find((record) => isSameRouteRecord(record, recordTo))) {
        enteringRecords.push(recordTo);
      }
    }
  }
  return [leavingRecords, updatingRecords, enteringRecords];
}
function useRouter() {
  return inject(routerKey);
}
function useRoute(_name) {
  return inject(routeLocationKey);
}
var clientDataSymbol = Symbol(
  ""
);
var useClientData = () => {
  const clientData = inject(clientDataSymbol);
  if (!clientData) {
    throw new Error("useClientData() is called without provider.");
  }
  return clientData;
};
var usePageComponent = () => useClientData().pageComponent;
var usePageData = () => useClientData().pageData;
var usePageFrontmatter = () => useClientData().pageFrontmatter;
var usePageHead = () => useClientData().pageHead;
var usePageLang = () => useClientData().pageLang;
var usePageLayout = () => useClientData().pageLayout;
var useRouteLocale = () => useClientData().routeLocale;
var useRoutePath = () => useClientData().routePath;
var useRoutes = () => useClientData().routes;
var useSiteData = () => useClientData().siteData;
var useSiteLocaleData = () => useClientData().siteLocaleData;
var updateHeadSymbol = Symbol(
  ""
);
var redirects = shallowRef(redirects$1);
var routes = shallowRef(routes$1);
var resolveRoutePath = (pathname, currentPath) => {
  const normalizedRoutePath = normalizeRoutePath(pathname, currentPath);
  if (routes.value[normalizedRoutePath]) return normalizedRoutePath;
  const encodedRoutePath = encodeURI(normalizedRoutePath);
  if (routes.value[encodedRoutePath]) {
    return encodedRoutePath;
  }
  const redirectedRoutePath = redirects.value[normalizedRoutePath] || redirects.value[encodedRoutePath];
  if (redirectedRoutePath) {
    return redirectedRoutePath;
  }
  return normalizedRoutePath;
};
var resolveRoute = (path, currentPath) => {
  const { pathname, hashAndQueries } = splitPath(path);
  const routePath = resolveRoutePath(pathname, currentPath);
  const routeFullPath = routePath + hashAndQueries;
  if (!routes.value[routePath]) {
    return {
      ...routes.value["/404.html"],
      path: routeFullPath,
      notFound: true
    };
  }
  return {
    ...routes.value[routePath],
    path: routeFullPath,
    notFound: false
  };
};
var resolveRouteFullPath = (path, currentPath) => {
  const { pathname, hashAndQueries } = splitPath(path);
  return resolveRoutePath(pathname, currentPath) + hashAndQueries;
};
var guardEvent = (event) => {
  if (event.metaKey || event.altKey || event.ctrlKey || event.shiftKey) return;
  if (event.defaultPrevented) return;
  if (event.button !== void 0 && event.button !== 0) return;
  if (event.currentTarget) {
    const target2 = event.currentTarget.getAttribute("target");
    if (target2 == null ? void 0 : target2.match(/\b_blank\b/i)) return;
  }
  event.preventDefault();
  return true;
};
var RouteLink = /* @__PURE__ */ defineComponent({
  name: "RouteLink",
  props: {
    /**
     * The route path to link to
     */
    to: {
      type: String,
      required: true
    },
    /**
     * Whether the link is active to have an active class
     *
     * Notice that the active status is not automatically determined according to the current route.
     */
    active: Boolean,
    /**
     * The class to add when the link is active
     */
    activeClass: {
      type: String,
      default: "route-link-active"
    }
  },
  slots: Object,
  setup(props, { slots }) {
    const router = useRouter();
    const route = useRoute();
    const path = computed(
      () => props.to.startsWith("#") || props.to.startsWith("?") ? props.to : `${"/"}${resolveRouteFullPath(props.to, route.path).substring(1)}`
    );
    return () => h$1(
      "a",
      {
        class: ["route-link", { [props.activeClass]: props.active }],
        href: path.value,
        onClick: (event = {}) => {
          if (guardEvent(event)) {
            void router.push(props.to).catch();
          }
        }
      },
      slots.default()
    );
  }
});
var AutoLink = /* @__PURE__ */ defineComponent({
  name: "AutoLink",
  props: {
    config: {
      type: Object,
      required: true
    }
  },
  slots: Object,
  setup(props, { slots }) {
    const config2 = toRef$1(props, "config");
    const route = useRoute();
    const siteData2 = useSiteData();
    const withProtocol = computed(() => isLinkWithProtocol(config2.value.link));
    const linkTarget = computed(
      () => config2.value.target || (withProtocol.value ? "_blank" : void 0)
    );
    const isBlankTarget = computed(() => linkTarget.value === "_blank");
    const isInternal = computed(
      () => !withProtocol.value && !isBlankTarget.value
    );
    const linkRel = computed(
      () => config2.value.rel || (isBlankTarget.value ? "noopener noreferrer" : null)
    );
    const linkAriaLabel = computed(
      () => config2.value.ariaLabel ?? config2.value.text
    );
    const shouldBeActiveInSubpath = computed(() => {
      if (config2.value.exact) return false;
      const localePaths = Object.keys(siteData2.value.locales);
      return localePaths.length ? (
        // Check all the locales
        localePaths.every((key) => key !== config2.value.link)
      ) : (
        // Check root
        config2.value.link !== "/"
      );
    });
    const isActive = computed(() => {
      if (!isInternal.value) return false;
      if (config2.value.activeMatch) {
        return (config2.value.activeMatch instanceof RegExp ? config2.value.activeMatch : new RegExp(config2.value.activeMatch, "u")).test(route.path);
      }
      if (shouldBeActiveInSubpath.value) {
        return route.path.startsWith(config2.value.link);
      }
      return route.path === config2.value.link;
    });
    return () => {
      const { before, after, default: defaultSlot } = slots;
      const content = (defaultSlot == null ? void 0 : defaultSlot(config2.value)) ?? [
        before == null ? void 0 : before(config2.value),
        config2.value.text,
        after == null ? void 0 : after(config2.value)
      ];
      return isInternal.value ? h$1(
        RouteLink,
        {
          "class": "auto-link",
          "to": config2.value.link,
          "active": isActive.value,
          "aria-label": linkAriaLabel.value
        },
        () => content
      ) : h$1(
        "a",
        {
          "class": "auto-link external-link",
          "href": config2.value.link,
          "aria-label": linkAriaLabel.value,
          "rel": linkRel.value,
          "target": linkTarget.value
        },
        content
      );
    };
  }
});
var ClientOnly = /* @__PURE__ */ defineComponent({
  name: "ClientOnly",
  setup(_2, ctx) {
    const isMounted = ref(false);
    onMounted(() => {
      isMounted.value = true;
    });
    return () => {
      var _a25, _b25;
      return isMounted.value ? (_b25 = (_a25 = ctx.slots).default) == null ? void 0 : _b25.call(_a25) : null;
    };
  }
});
var Content = /* @__PURE__ */ defineComponent({
  name: "Content",
  props: {
    path: {
      type: String,
      required: false,
      default: ""
    }
  },
  setup(props) {
    const pageComponent = usePageComponent();
    const ContentComponent = computed(() => {
      if (!props.path) return pageComponent.value;
      const route = resolveRoute(props.path);
      return /* @__PURE__ */ defineAsyncComponent(
        async () => route.loader().then(({ comp }) => comp)
      );
    });
    return () => h$1(ContentComponent.value);
  }
});
var LAYOUT_NAME_DEFAULT = "Layout";
var LANG_DEFAULT = "en-US";
var resolvers = reactive({
  /**
   * Resolve layouts component map
   */
  resolveLayouts: (clientConfigs2) => clientConfigs2.reduce(
    (prev, item) => ({
      ...prev,
      ...item.layouts
    }),
    {}
  ),
  /**
   * Merge the head config in frontmatter and site locale
   *
   * Frontmatter should take priority over site locale
   */
  resolvePageHead: (pageHeadTitle, pageFrontmatter, siteLocaleDate) => {
    const description = isString$2(pageFrontmatter.description) ? pageFrontmatter.description : siteLocaleDate.description;
    const head = [
      ...Array.isArray(pageFrontmatter.head) ? pageFrontmatter.head : [],
      ...siteLocaleDate.head,
      ["title", {}, pageHeadTitle],
      ["meta", { name: "description", content: description }]
    ];
    return dedupeHead(head);
  },
  /**
   * Resolve the content of page head title
   *
   * It would be used as the content of the `<title>` tag
   */
  resolvePageHeadTitle: (pageData, siteLocaleDate) => [pageData.title, siteLocaleDate.title].filter((item) => !!item).join(" | "),
  /**
   * Resolve page language from page data
   *
   * It would be used as the `lang` attribute of `<html>` tag
   */
  resolvePageLang: (pageData, siteLocaleData) => pageData.lang || siteLocaleData.lang || LANG_DEFAULT,
  /**
   * Resolve layout component of current page
   */
  resolvePageLayout: (pageData, layouts) => {
    const layoutName = isString$2(pageData.frontmatter.layout) ? pageData.frontmatter.layout : LAYOUT_NAME_DEFAULT;
    if (!layouts[layoutName]) {
      throw new Error(`[vuepress] Cannot resolve layout: ${layoutName}`);
    }
    return layouts[layoutName];
  },
  /**
   * Resolve locale path according to route path and locales config
   */
  resolveRouteLocale: (locales2, routePath) => resolveLocalePath(locales2, decodeURI(routePath)),
  /**
   * Resolve site data for specific locale
   *
   * It would merge the locales fields to the root fields
   */
  resolveSiteLocaleData: ({ base, locales: locales2, ...siteData2 }, routeLocale) => {
    var _a25;
    return {
      ...siteData2,
      ...locales2[routeLocale],
      head: [
        // when merging head, the locales head should be placed before root head
        // to get higher priority
        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- unsafe indexed access
        ...((_a25 = locales2[routeLocale]) == null ? void 0 : _a25.head) ?? [],
        ...siteData2.head
      ]
    };
  }
});
var defineClientConfig = (clientConfig = {}) => clientConfig;
var withBase = (url) => {
  if (isLinkHttp(url)) return url;
  return `${"/"}${removeLeadingSlash(url)}`;
};
const clientConfig0 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null
}, Symbol.toStringTag, { value: "Module" }));
const clientConfig1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null
}, Symbol.toStringTag, { value: "Module" }));
function tryOnScopeDispose(fn) {
  if (getCurrentScope()) {
    onScopeDispose(fn);
    return true;
  }
  return false;
}
function toValue(r2) {
  return typeof r2 === "function" ? r2() : unref(r2);
}
const isClient = typeof window !== "undefined" && typeof document !== "undefined";
typeof WorkerGlobalScope !== "undefined" && globalThis instanceof WorkerGlobalScope;
const toString = Object.prototype.toString;
const isObject = (val) => toString.call(val) === "[object Object]";
const noop = () => {
};
const isIOS = /* @__PURE__ */ getIsIOS();
function getIsIOS() {
  var _a25, _b25;
  return isClient && ((_a25 = window == null ? void 0 : window.navigator) == null ? void 0 : _a25.userAgent) && (/iP(?:ad|hone|od)/.test(window.navigator.userAgent) || ((_b25 = window == null ? void 0 : window.navigator) == null ? void 0 : _b25.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window == null ? void 0 : window.navigator.userAgent));
}
function createFilterWrapper(filter, fn) {
  function wrapper(...args) {
    return new Promise((resolve2, reject) => {
      Promise.resolve(filter(() => fn.apply(this, args), { fn, thisArg: this, args })).then(resolve2).catch(reject);
    });
  }
  return wrapper;
}
const bypassFilter = (invoke2) => {
  return invoke2();
};
function debounceFilter(ms, options = {}) {
  let timer;
  let maxTimer;
  let lastRejector = noop;
  const _clearTimeout = (timer2) => {
    clearTimeout(timer2);
    lastRejector();
    lastRejector = noop;
  };
  const filter = (invoke2) => {
    const duration = toValue(ms);
    const maxDuration = toValue(options.maxWait);
    if (timer)
      _clearTimeout(timer);
    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {
      if (maxTimer) {
        _clearTimeout(maxTimer);
        maxTimer = null;
      }
      return Promise.resolve(invoke2());
    }
    return new Promise((resolve2, reject) => {
      lastRejector = options.rejectOnCancel ? reject : resolve2;
      if (maxDuration && !maxTimer) {
        maxTimer = setTimeout(() => {
          if (timer)
            _clearTimeout(timer);
          maxTimer = null;
          resolve2(invoke2());
        }, maxDuration);
      }
      timer = setTimeout(() => {
        if (maxTimer)
          _clearTimeout(maxTimer);
        maxTimer = null;
        resolve2(invoke2());
      }, duration);
    });
  };
  return filter;
}
function throttleFilter(...args) {
  let lastExec = 0;
  let timer;
  let isLeading = true;
  let lastRejector = noop;
  let lastValue;
  let ms;
  let trailing;
  let leading;
  let rejectOnCancel;
  if (!isRef$1(args[0]) && typeof args[0] === "object")
    ({ delay: ms, trailing = true, leading = true, rejectOnCancel = false } = args[0]);
  else
    [ms, trailing = true, leading = true, rejectOnCancel = false] = args;
  const clear2 = () => {
    if (timer) {
      clearTimeout(timer);
      timer = void 0;
      lastRejector();
      lastRejector = noop;
    }
  };
  const filter = (_invoke) => {
    const duration = toValue(ms);
    const elapsed = Date.now() - lastExec;
    const invoke2 = () => {
      return lastValue = _invoke();
    };
    clear2();
    if (duration <= 0) {
      lastExec = Date.now();
      return invoke2();
    }
    if (elapsed > duration && (leading || !isLeading)) {
      lastExec = Date.now();
      invoke2();
    } else if (trailing) {
      lastValue = new Promise((resolve2, reject) => {
        lastRejector = rejectOnCancel ? reject : resolve2;
        timer = setTimeout(() => {
          lastExec = Date.now();
          isLeading = true;
          resolve2(invoke2());
          clear2();
        }, Math.max(0, duration - elapsed));
      });
    }
    if (!leading && !timer)
      timer = setTimeout(() => isLeading = true, duration);
    isLeading = false;
    return lastValue;
  };
  return filter;
}
function pausableFilter(extendFilter = bypassFilter) {
  const isActive = ref(true);
  function pause() {
    isActive.value = false;
  }
  function resume() {
    isActive.value = true;
  }
  const eventFilter = (...args) => {
    if (isActive.value)
      extendFilter(...args);
  };
  return { isActive: readonly(isActive), pause, resume, eventFilter };
}
function createSingletonPromise(fn) {
  let _promise;
  function wrapper() {
    if (!_promise)
      _promise = fn();
    return _promise;
  }
  wrapper.reset = async () => {
    const _prev = _promise;
    _promise = void 0;
    if (_prev)
      await _prev;
  };
  return wrapper;
}
function getLifeCycleTarget(target2) {
  return getCurrentInstance();
}
function toRef(...args) {
  if (args.length !== 1)
    return toRef$1(...args);
  const r2 = args[0];
  return typeof r2 === "function" ? readonly(customRef(() => ({ get: r2, set: noop }))) : ref(r2);
}
function useDebounceFn(fn, ms = 200, options = {}) {
  return createFilterWrapper(
    debounceFilter(ms, options),
    fn
  );
}
function useThrottleFn(fn, ms = 200, trailing = false, leading = true, rejectOnCancel = false) {
  return createFilterWrapper(
    throttleFilter(ms, trailing, leading, rejectOnCancel),
    fn
  );
}
function watchWithFilter(source, cb, options = {}) {
  const {
    eventFilter = bypassFilter,
    ...watchOptions
  } = options;
  return watch(
    source,
    createFilterWrapper(
      eventFilter,
      cb
    ),
    watchOptions
  );
}
function watchPausable(source, cb, options = {}) {
  const {
    eventFilter: filter,
    ...watchOptions
  } = options;
  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);
  const stop = watchWithFilter(
    source,
    cb,
    {
      ...watchOptions,
      eventFilter
    }
  );
  return { stop, pause, resume, isActive };
}
function tryOnMounted(fn, sync = true, target2) {
  const instance = getLifeCycleTarget();
  if (instance)
    onMounted(fn, target2);
  else if (sync)
    fn();
  else
    nextTick(fn);
}
function useTimeoutFn(cb, interval, options = {}) {
  const {
    immediate = true
  } = options;
  const isPending = ref(false);
  let timer = null;
  function clear2() {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }
  function stop() {
    isPending.value = false;
    clear2();
  }
  function start(...args) {
    clear2();
    isPending.value = true;
    timer = setTimeout(() => {
      isPending.value = false;
      timer = null;
      cb(...args);
    }, toValue(interval));
  }
  if (immediate) {
    isPending.value = true;
    if (isClient)
      start();
  }
  tryOnScopeDispose(stop);
  return {
    isPending: readonly(isPending),
    start,
    stop
  };
}
function useToggle(initialValue = false, options = {}) {
  const {
    truthyValue = true,
    falsyValue = false
  } = options;
  const valueIsRef = isRef$1(initialValue);
  const _value = ref(initialValue);
  function toggle(value) {
    if (arguments.length) {
      _value.value = value;
      return _value.value;
    } else {
      const truthy = toValue(truthyValue);
      _value.value = _value.value === truthy ? toValue(falsyValue) : truthy;
      return _value.value;
    }
  }
  if (valueIsRef)
    return toggle;
  else
    return [_value, toggle];
}
const defaultWindow = isClient ? window : void 0;
const defaultDocument = isClient ? window.document : void 0;
const defaultNavigator = isClient ? window.navigator : void 0;
function unrefElement(elRef) {
  var _a25;
  const plain = toValue(elRef);
  return (_a25 = plain == null ? void 0 : plain.$el) != null ? _a25 : plain;
}
function useEventListener(...args) {
  let target2;
  let events2;
  let listeners;
  let options;
  if (typeof args[0] === "string" || Array.isArray(args[0])) {
    [events2, listeners, options] = args;
    target2 = defaultWindow;
  } else {
    [target2, events2, listeners, options] = args;
  }
  if (!target2)
    return noop;
  if (!Array.isArray(events2))
    events2 = [events2];
  if (!Array.isArray(listeners))
    listeners = [listeners];
  const cleanups = [];
  const cleanup = () => {
    cleanups.forEach((fn) => fn());
    cleanups.length = 0;
  };
  const register = (el, event, listener, options2) => {
    el.addEventListener(event, listener, options2);
    return () => el.removeEventListener(event, listener, options2);
  };
  const stopWatch = watch(
    () => [unrefElement(target2), toValue(options)],
    ([el, options2]) => {
      cleanup();
      if (!el)
        return;
      const optionsClone = isObject(options2) ? { ...options2 } : options2;
      cleanups.push(
        ...events2.flatMap((event) => {
          return listeners.map((listener) => register(el, event, listener, optionsClone));
        })
      );
    },
    { immediate: true, flush: "post" }
  );
  const stop = () => {
    stopWatch();
    cleanup();
  };
  tryOnScopeDispose(stop);
  return stop;
}
function useMounted() {
  const isMounted = ref(false);
  const instance = getCurrentInstance();
  if (instance) {
    onMounted(() => {
      isMounted.value = true;
    }, instance);
  }
  return isMounted;
}
function useSupported(callback) {
  const isMounted = useMounted();
  return computed(() => {
    isMounted.value;
    return Boolean(callback());
  });
}
function useMediaQuery(query, options = {}) {
  const { window: window2 = defaultWindow } = options;
  const isSupported2 = useSupported(() => window2 && "matchMedia" in window2 && typeof window2.matchMedia === "function");
  let mediaQuery;
  const matches = ref(false);
  const handler = (event) => {
    matches.value = event.matches;
  };
  const cleanup = () => {
    if (!mediaQuery)
      return;
    if ("removeEventListener" in mediaQuery)
      mediaQuery.removeEventListener("change", handler);
    else
      mediaQuery.removeListener(handler);
  };
  const stopWatch = watchEffect(() => {
    if (!isSupported2.value)
      return;
    cleanup();
    mediaQuery = window2.matchMedia(toValue(query));
    if ("addEventListener" in mediaQuery)
      mediaQuery.addEventListener("change", handler);
    else
      mediaQuery.addListener(handler);
    matches.value = mediaQuery.matches;
  });
  tryOnScopeDispose(() => {
    stopWatch();
    cleanup();
    mediaQuery = void 0;
  });
  return matches;
}
function usePermission(permissionDesc, options = {}) {
  const {
    controls = false,
    navigator: navigator2 = defaultNavigator
  } = options;
  const isSupported2 = useSupported(() => navigator2 && "permissions" in navigator2);
  const permissionStatus = shallowRef();
  const desc = typeof permissionDesc === "string" ? { name: permissionDesc } : permissionDesc;
  const state = shallowRef();
  const update2 = () => {
    var _a25, _b25;
    state.value = (_b25 = (_a25 = permissionStatus.value) == null ? void 0 : _a25.state) != null ? _b25 : "prompt";
  };
  useEventListener(permissionStatus, "change", update2);
  const query = createSingletonPromise(async () => {
    if (!isSupported2.value)
      return;
    if (!permissionStatus.value) {
      try {
        permissionStatus.value = await navigator2.permissions.query(desc);
      } catch (e2) {
        permissionStatus.value = void 0;
      } finally {
        update2();
      }
    }
    if (controls)
      return toRaw$1(permissionStatus.value);
  });
  query();
  if (controls) {
    return {
      state,
      isSupported: isSupported2,
      query
    };
  } else {
    return state;
  }
}
function useClipboard(options = {}) {
  const {
    navigator: navigator2 = defaultNavigator,
    read = false,
    source,
    copiedDuring = 1500,
    legacy = false
  } = options;
  const isClipboardApiSupported = useSupported(() => navigator2 && "clipboard" in navigator2);
  const permissionRead = usePermission("clipboard-read");
  const permissionWrite = usePermission("clipboard-write");
  const isSupported2 = computed(() => isClipboardApiSupported.value || legacy);
  const text = ref("");
  const copied = ref(false);
  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);
  function updateText() {
    if (isClipboardApiSupported.value && isAllowed(permissionRead.value)) {
      navigator2.clipboard.readText().then((value) => {
        text.value = value;
      });
    } else {
      text.value = legacyRead();
    }
  }
  if (isSupported2.value && read)
    useEventListener(["copy", "cut"], updateText);
  async function copy2(value = toValue(source)) {
    if (isSupported2.value && value != null) {
      if (isClipboardApiSupported.value && isAllowed(permissionWrite.value))
        await navigator2.clipboard.writeText(value);
      else
        legacyCopy(value);
      text.value = value;
      copied.value = true;
      timeout.start();
    }
  }
  function legacyCopy(value) {
    const ta = document.createElement("textarea");
    ta.value = value != null ? value : "";
    ta.style.position = "absolute";
    ta.style.opacity = "0";
    document.body.appendChild(ta);
    ta.select();
    document.execCommand("copy");
    ta.remove();
  }
  function legacyRead() {
    var _a25, _b25, _c;
    return (_c = (_b25 = (_a25 = document == null ? void 0 : document.getSelection) == null ? void 0 : _a25.call(document)) == null ? void 0 : _b25.toString()) != null ? _c : "";
  }
  function isAllowed(status) {
    return status === "granted" || status === "prompt";
  }
  return {
    isSupported: isSupported2,
    text,
    copied,
    copy: copy2
  };
}
const _global = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
const globalKey = "__vueuse_ssr_handlers__";
const handlers = /* @__PURE__ */ getHandlers();
function getHandlers() {
  if (!(globalKey in _global))
    _global[globalKey] = _global[globalKey] || {};
  return _global[globalKey];
}
function getSSRHandler(key, fallback) {
  return handlers[key] || fallback;
}
function usePreferredDark(options) {
  return useMediaQuery("(prefers-color-scheme: dark)", options);
}
function guessSerializerType(rawInit) {
  return rawInit == null ? "any" : rawInit instanceof Set ? "set" : rawInit instanceof Map ? "map" : rawInit instanceof Date ? "date" : typeof rawInit === "boolean" ? "boolean" : typeof rawInit === "string" ? "string" : typeof rawInit === "object" ? "object" : !Number.isNaN(rawInit) ? "number" : "any";
}
const StorageSerializers = {
  boolean: {
    read: (v) => v === "true",
    write: (v) => String(v)
  },
  object: {
    read: (v) => JSON.parse(v),
    write: (v) => JSON.stringify(v)
  },
  number: {
    read: (v) => Number.parseFloat(v),
    write: (v) => String(v)
  },
  any: {
    read: (v) => v,
    write: (v) => String(v)
  },
  string: {
    read: (v) => v,
    write: (v) => String(v)
  },
  map: {
    read: (v) => new Map(JSON.parse(v)),
    write: (v) => JSON.stringify(Array.from(v.entries()))
  },
  set: {
    read: (v) => new Set(JSON.parse(v)),
    write: (v) => JSON.stringify(Array.from(v))
  },
  date: {
    read: (v) => new Date(v),
    write: (v) => v.toISOString()
  }
};
const customStorageEventName = "vueuse-storage";
function useStorage(key, defaults2, storage, options = {}) {
  var _a25;
  const {
    flush = "pre",
    deep = true,
    listenToStorageChanges = true,
    writeDefaults = true,
    mergeDefaults = false,
    shallow,
    window: window2 = defaultWindow,
    eventFilter,
    onError = (e2) => {
      console.error(e2);
    },
    initOnMounted
  } = options;
  const data = (shallow ? shallowRef : ref)(typeof defaults2 === "function" ? defaults2() : defaults2);
  if (!storage) {
    try {
      storage = getSSRHandler("getDefaultStorage", () => {
        var _a26;
        return (_a26 = defaultWindow) == null ? void 0 : _a26.localStorage;
      })();
    } catch (e2) {
      onError(e2);
    }
  }
  if (!storage)
    return data;
  const rawInit = toValue(defaults2);
  const type = guessSerializerType(rawInit);
  const serializer = (_a25 = options.serializer) != null ? _a25 : StorageSerializers[type];
  const { pause: pauseWatch, resume: resumeWatch } = watchPausable(
    data,
    () => write(data.value),
    { flush, deep, eventFilter }
  );
  if (window2 && listenToStorageChanges) {
    tryOnMounted(() => {
      if (storage instanceof Storage)
        useEventListener(window2, "storage", update2);
      else
        useEventListener(window2, customStorageEventName, updateFromCustomEvent);
      if (initOnMounted)
        update2();
    });
  }
  if (!initOnMounted)
    update2();
  function dispatchWriteEvent(oldValue, newValue) {
    if (window2) {
      const payload = {
        key,
        oldValue,
        newValue,
        storageArea: storage
      };
      window2.dispatchEvent(storage instanceof Storage ? new StorageEvent("storage", payload) : new CustomEvent(customStorageEventName, {
        detail: payload
      }));
    }
  }
  function write(v) {
    try {
      const oldValue = storage.getItem(key);
      if (v == null) {
        dispatchWriteEvent(oldValue, null);
        storage.removeItem(key);
      } else {
        const serialized = serializer.write(v);
        if (oldValue !== serialized) {
          storage.setItem(key, serialized);
          dispatchWriteEvent(oldValue, serialized);
        }
      }
    } catch (e2) {
      onError(e2);
    }
  }
  function read(event) {
    const rawValue = event ? event.newValue : storage.getItem(key);
    if (rawValue == null) {
      if (writeDefaults && rawInit != null)
        storage.setItem(key, serializer.write(rawInit));
      return rawInit;
    } else if (!event && mergeDefaults) {
      const value = serializer.read(rawValue);
      if (typeof mergeDefaults === "function")
        return mergeDefaults(value, rawInit);
      else if (type === "object" && !Array.isArray(value))
        return { ...rawInit, ...value };
      return value;
    } else if (typeof rawValue !== "string") {
      return rawValue;
    } else {
      return serializer.read(rawValue);
    }
  }
  function update2(event) {
    if (event && event.storageArea !== storage)
      return;
    if (event && event.key == null) {
      data.value = rawInit;
      return;
    }
    if (event && event.key !== key)
      return;
    pauseWatch();
    try {
      if ((event == null ? void 0 : event.newValue) !== serializer.write(data.value))
        data.value = read(event);
    } catch (e2) {
      onError(e2);
    } finally {
      if (event)
        nextTick(resumeWatch);
      else
        resumeWatch();
    }
  }
  function updateFromCustomEvent(event) {
    update2(event.detail);
  }
  return data;
}
function useResizeObserver(target2, callback, options = {}) {
  const { window: window2 = defaultWindow, ...observerOptions } = options;
  let observer;
  const isSupported2 = useSupported(() => window2 && "ResizeObserver" in window2);
  const cleanup = () => {
    if (observer) {
      observer.disconnect();
      observer = void 0;
    }
  };
  const targets = computed(() => {
    const _targets = toValue(target2);
    return Array.isArray(_targets) ? _targets.map((el) => unrefElement(el)) : [unrefElement(_targets)];
  });
  const stopWatch = watch(
    targets,
    (els) => {
      cleanup();
      if (isSupported2.value && window2) {
        observer = new ResizeObserver(callback);
        for (const _el of els) {
          if (_el)
            observer.observe(_el, observerOptions);
        }
      }
    },
    { immediate: true, flush: "post" }
  );
  const stop = () => {
    cleanup();
    stopWatch();
  };
  tryOnScopeDispose(stop);
  return {
    isSupported: isSupported2,
    stop
  };
}
function useElementSize(target2, initialSize = { width: 0, height: 0 }, options = {}) {
  const { window: window2 = defaultWindow, box = "content-box" } = options;
  const isSVG = computed(() => {
    var _a25, _b25;
    return (_b25 = (_a25 = unrefElement(target2)) == null ? void 0 : _a25.namespaceURI) == null ? void 0 : _b25.includes("svg");
  });
  const width = ref(initialSize.width);
  const height = ref(initialSize.height);
  const { stop: stop1 } = useResizeObserver(
    target2,
    ([entry]) => {
      const boxSize = box === "border-box" ? entry.borderBoxSize : box === "content-box" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;
      if (window2 && isSVG.value) {
        const $elem = unrefElement(target2);
        if ($elem) {
          const rect = $elem.getBoundingClientRect();
          width.value = rect.width;
          height.value = rect.height;
        }
      } else {
        if (boxSize) {
          const formatBoxSize = Array.isArray(boxSize) ? boxSize : [boxSize];
          width.value = formatBoxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);
          height.value = formatBoxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);
        } else {
          width.value = entry.contentRect.width;
          height.value = entry.contentRect.height;
        }
      }
    },
    options
  );
  tryOnMounted(() => {
    const ele = unrefElement(target2);
    if (ele) {
      width.value = "offsetWidth" in ele ? ele.offsetWidth : initialSize.width;
      height.value = "offsetHeight" in ele ? ele.offsetHeight : initialSize.height;
    }
  });
  const stop2 = watch(
    () => unrefElement(target2),
    (ele) => {
      width.value = ele ? initialSize.width : 0;
      height.value = ele ? initialSize.height : 0;
    }
  );
  function stop() {
    stop1();
    stop2();
  }
  return {
    width,
    height,
    stop
  };
}
const eventHandlers = [
  "fullscreenchange",
  "webkitfullscreenchange",
  "webkitendfullscreen",
  "mozfullscreenchange",
  "MSFullscreenChange"
];
function useFullscreen(target2, options = {}) {
  const {
    document: document2 = defaultDocument,
    autoExit = false
  } = options;
  const targetRef = computed(() => {
    var _a25;
    return (_a25 = unrefElement(target2)) != null ? _a25 : document2 == null ? void 0 : document2.querySelector("html");
  });
  const isFullscreen = ref(false);
  const requestMethod = computed(() => {
    return [
      "requestFullscreen",
      "webkitRequestFullscreen",
      "webkitEnterFullscreen",
      "webkitEnterFullScreen",
      "webkitRequestFullScreen",
      "mozRequestFullScreen",
      "msRequestFullscreen"
    ].find((m2) => document2 && m2 in document2 || targetRef.value && m2 in targetRef.value);
  });
  const exitMethod = computed(() => {
    return [
      "exitFullscreen",
      "webkitExitFullscreen",
      "webkitExitFullScreen",
      "webkitCancelFullScreen",
      "mozCancelFullScreen",
      "msExitFullscreen"
    ].find((m2) => document2 && m2 in document2 || targetRef.value && m2 in targetRef.value);
  });
  const fullscreenEnabled = computed(() => {
    return [
      "fullScreen",
      "webkitIsFullScreen",
      "webkitDisplayingFullscreen",
      "mozFullScreen",
      "msFullscreenElement"
    ].find((m2) => document2 && m2 in document2 || targetRef.value && m2 in targetRef.value);
  });
  const fullscreenElementMethod = [
    "fullscreenElement",
    "webkitFullscreenElement",
    "mozFullScreenElement",
    "msFullscreenElement"
  ].find((m2) => document2 && m2 in document2);
  const isSupported2 = useSupported(() => targetRef.value && document2 && requestMethod.value !== void 0 && exitMethod.value !== void 0 && fullscreenEnabled.value !== void 0);
  const isCurrentElementFullScreen = () => {
    if (fullscreenElementMethod)
      return (document2 == null ? void 0 : document2[fullscreenElementMethod]) === targetRef.value;
    return false;
  };
  const isElementFullScreen = () => {
    if (fullscreenEnabled.value) {
      if (document2 && document2[fullscreenEnabled.value] != null) {
        return document2[fullscreenEnabled.value];
      } else {
        const target22 = targetRef.value;
        if ((target22 == null ? void 0 : target22[fullscreenEnabled.value]) != null) {
          return Boolean(target22[fullscreenEnabled.value]);
        }
      }
    }
    return false;
  };
  async function exit() {
    if (!isSupported2.value || !isFullscreen.value)
      return;
    if (exitMethod.value) {
      if ((document2 == null ? void 0 : document2[exitMethod.value]) != null) {
        await document2[exitMethod.value]();
      } else {
        const target22 = targetRef.value;
        if ((target22 == null ? void 0 : target22[exitMethod.value]) != null)
          await target22[exitMethod.value]();
      }
    }
    isFullscreen.value = false;
  }
  async function enter() {
    if (!isSupported2.value || isFullscreen.value)
      return;
    if (isElementFullScreen())
      await exit();
    const target22 = targetRef.value;
    if (requestMethod.value && (target22 == null ? void 0 : target22[requestMethod.value]) != null) {
      await target22[requestMethod.value]();
      isFullscreen.value = true;
    }
  }
  async function toggle() {
    await (isFullscreen.value ? exit() : enter());
  }
  const handlerCallback = () => {
    const isElementFullScreenValue = isElementFullScreen();
    if (!isElementFullScreenValue || isElementFullScreenValue && isCurrentElementFullScreen())
      isFullscreen.value = isElementFullScreenValue;
  };
  useEventListener(document2, eventHandlers, handlerCallback, false);
  useEventListener(() => unrefElement(targetRef), eventHandlers, handlerCallback, false);
  if (autoExit)
    tryOnScopeDispose(exit);
  return {
    isSupported: isSupported2,
    isFullscreen,
    enter,
    exit,
    toggle
  };
}
function resolveElement(el) {
  if (typeof Window !== "undefined" && el instanceof Window)
    return el.document.documentElement;
  if (typeof Document !== "undefined" && el instanceof Document)
    return el.documentElement;
  return el;
}
function useLocalStorage(key, initialValue, options = {}) {
  const { window: window2 = defaultWindow } = options;
  return useStorage(key, initialValue, window2 == null ? void 0 : window2.localStorage, options);
}
function usePreferredLanguages(options = {}) {
  const { window: window2 = defaultWindow } = options;
  if (!window2)
    return ref(["en"]);
  const navigator2 = window2.navigator;
  const value = ref(navigator2.languages);
  useEventListener(window2, "languagechange", () => {
    value.value = navigator2.languages;
  });
  return value;
}
function checkOverflowScroll(ele) {
  const style = window.getComputedStyle(ele);
  if (style.overflowX === "scroll" || style.overflowY === "scroll" || style.overflowX === "auto" && ele.clientWidth < ele.scrollWidth || style.overflowY === "auto" && ele.clientHeight < ele.scrollHeight) {
    return true;
  } else {
    const parent = ele.parentNode;
    if (!parent || parent.tagName === "BODY")
      return false;
    return checkOverflowScroll(parent);
  }
}
function preventDefault(rawEvent) {
  const e2 = rawEvent || window.event;
  const _target = e2.target;
  if (checkOverflowScroll(_target))
    return false;
  if (e2.touches.length > 1)
    return true;
  if (e2.preventDefault)
    e2.preventDefault();
  return false;
}
const elInitialOverflow = /* @__PURE__ */ new WeakMap();
function useScrollLock(element, initialState = false) {
  const isLocked = ref(initialState);
  let stopTouchMoveListener = null;
  let initialOverflow = "";
  watch(toRef(element), (el) => {
    const target2 = resolveElement(toValue(el));
    if (target2) {
      const ele = target2;
      if (!elInitialOverflow.get(ele))
        elInitialOverflow.set(ele, ele.style.overflow);
      if (ele.style.overflow !== "hidden")
        initialOverflow = ele.style.overflow;
      if (ele.style.overflow === "hidden")
        return isLocked.value = true;
      if (isLocked.value)
        return ele.style.overflow = "hidden";
    }
  }, {
    immediate: true
  });
  const lock = () => {
    const el = resolveElement(toValue(element));
    if (!el || isLocked.value)
      return;
    if (isIOS) {
      stopTouchMoveListener = useEventListener(
        el,
        "touchmove",
        (e2) => {
          preventDefault(e2);
        },
        { passive: false }
      );
    }
    el.style.overflow = "hidden";
    isLocked.value = true;
  };
  const unlock = () => {
    const el = resolveElement(toValue(element));
    if (!el || !isLocked.value)
      return;
    if (isIOS)
      stopTouchMoveListener == null ? void 0 : stopTouchMoveListener();
    el.style.overflow = initialOverflow;
    elInitialOverflow.delete(el);
    isLocked.value = false;
  };
  tryOnScopeDispose(unlock);
  return computed({
    get() {
      return isLocked.value;
    },
    set(v) {
      if (v)
        lock();
      else unlock();
    }
  });
}
function useSessionStorage(key, initialValue, options = {}) {
  const { window: window2 = defaultWindow } = options;
  return useStorage(key, initialValue, window2 == null ? void 0 : window2.sessionStorage, options);
}
function useWindowScroll(options = {}) {
  const { window: window2 = defaultWindow, behavior = "auto" } = options;
  if (!window2) {
    return {
      x: ref(0),
      y: ref(0)
    };
  }
  const internalX = ref(window2.scrollX);
  const internalY = ref(window2.scrollY);
  const x2 = computed({
    get() {
      return internalX.value;
    },
    set(x22) {
      scrollTo({ left: x22, behavior });
    }
  });
  const y = computed({
    get() {
      return internalY.value;
    },
    set(y2) {
      scrollTo({ top: y2, behavior });
    }
  });
  useEventListener(
    window2,
    "scroll",
    () => {
      internalX.value = window2.scrollX;
      internalY.value = window2.scrollY;
    },
    {
      capture: false,
      passive: true
    }
  );
  return { x: x2, y };
}
function useWindowSize(options = {}) {
  const {
    window: window2 = defaultWindow,
    initialWidth = Number.POSITIVE_INFINITY,
    initialHeight = Number.POSITIVE_INFINITY,
    listenOrientation = true,
    includeScrollbar = true,
    type = "inner"
  } = options;
  const width = ref(initialWidth);
  const height = ref(initialHeight);
  const update2 = () => {
    if (window2) {
      if (type === "outer") {
        width.value = window2.outerWidth;
        height.value = window2.outerHeight;
      } else if (includeScrollbar) {
        width.value = window2.innerWidth;
        height.value = window2.innerHeight;
      } else {
        width.value = window2.document.documentElement.clientWidth;
        height.value = window2.document.documentElement.clientHeight;
      }
    }
  };
  update2();
  tryOnMounted(update2);
  useEventListener("resize", update2, { passive: true });
  if (listenOrientation) {
    const matches = useMediaQuery("(orientation: portrait)");
    watch(matches, () => update2());
  }
  return { width, height };
}
const hasGlobalComponent = (name, app) => {
  var _a25;
  const globalComponents = (_a25 = (app == null ? void 0 : app._instance) ?? getCurrentInstance()) == null ? void 0 : _a25.appContext.components;
  if (!globalComponents)
    return false;
  return name in globalComponents || camelize(name) in globalComponents || capitalize(camelize(name)) in globalComponents;
};
const useLocaleConfig$1 = (localesConfig) => {
  const routeLocale = useRouteLocale();
  return computed(() => localesConfig[routeLocale.value] ?? {});
};
const isDef = (val) => typeof val !== "undefined";
const isNumber$1 = (val) => typeof val === "number";
const { isArray: isArray$1 } = Array;
const startsWith = (str, prefix) => isString$2(str) && str.startsWith(prefix);
const endsWith = (str, suffix) => isString$2(str) && str.endsWith(suffix);
const { entries } = Object;
const { keys } = Object;
const getDate = (input) => {
  if (input) {
    if (typeof input === "number")
      return new Date(input);
    const date = Date.parse(input.toString());
    if (!Number.isNaN(date))
      return new Date(date);
  }
  return null;
};
const isLinkAbsolute = (test) => startsWith(test, "/");
const l$2 = ({ type: a2 = "info", text: r2 = "", vertical: e2, color: o2, bgColor: t }, { slots: s2 }) => {
  var _a25;
  return h$1("span", { class: ["vp-badge", a2, { diy: o2 || t }], style: { verticalAlign: e2 ?? false, backgroundColor: t ?? false, color: o2 ?? false } }, ((_a25 = s2.default) == null ? void 0 : _a25.call(s2)) ?? r2);
};
l$2.displayName = "Badge";
var m$3 = /* @__PURE__ */ defineComponent({ name: "FontIcon", props: { icon: { type: String, default: "" }, color: { type: String, default: "" }, size: { type: [String, Number], default: "" } }, setup(o2) {
  const s2 = computed(() => {
    const n2 = ["font-icon icon"], t = `${""}${o2.icon}`;
    return n2.push(t), n2;
  }), r2 = computed(() => {
    const n2 = {};
    return o2.color && (n2.color = o2.color), o2.size && (n2["font-size"] = Number.isNaN(Number(o2.size)) ? o2.size : `${o2.size}px`), keys(n2).length ? n2 : null;
  });
  return () => o2.icon ? h$1("span", { key: o2.icon, class: s2.value, style: r2.value, ...{} }) : null;
} });
const config$c = {
  enhance: ({ app }) => {
    if (!hasGlobalComponent("Badge")) app.component("Badge", l$2);
    if (!hasGlobalComponent("FontIcon")) app.component("FontIcon", m$3);
  },
  setup: () => {
  },
  rootComponents: []
};
const clientConfig2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$c
}, Symbol.toStringTag, { value: "Module" }));
const updateHash = async (router, hash) => {
  const { path, query } = router.currentRoute.value;
  const { scrollBehavior } = router.options;
  router.options.scrollBehavior = void 0;
  await router.replace({ path, query, hash });
  router.options.scrollBehavior = scrollBehavior;
};
const useActiveHeaderLinks = ({ headerLinkSelector: headerLinkSelector2, headerAnchorSelector: headerAnchorSelector2, delay: delay2, offset: offset2 = 5 }) => {
  const router = useRouter();
  const setActiveRouteHash = () => {
    var _a25, _b25;
    const scrollTop = Math.max(window.scrollY, document.documentElement.scrollTop, document.body.scrollTop);
    const isAtPageTop = Math.abs(scrollTop - 0) < offset2;
    if (isAtPageTop) {
      void updateHash(router, "");
      return;
    }
    const scrollBottom = window.innerHeight + scrollTop;
    const scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
    const isAtPageBottom = Math.abs(scrollHeight - scrollBottom) < offset2;
    const headerLinks = Array.from(document.querySelectorAll(headerLinkSelector2));
    const headerAnchors = Array.from(document.querySelectorAll(headerAnchorSelector2));
    const existedHeaderAnchors = headerAnchors.filter((anchor) => headerLinks.some((link) => link.hash === anchor.hash));
    for (let i2 = 0; i2 < existedHeaderAnchors.length; i2++) {
      const anchor = existedHeaderAnchors[i2];
      const nextAnchor = existedHeaderAnchors[i2 + 1];
      const hasPassedCurrentAnchor = scrollTop >= (((_a25 = anchor.parentElement) == null ? void 0 : _a25.offsetTop) ?? 0) - offset2;
      const hasNotPassedNextAnchor = !nextAnchor || scrollTop < (((_b25 = nextAnchor.parentElement) == null ? void 0 : _b25.offsetTop) ?? 0) - offset2;
      const isActive = hasPassedCurrentAnchor && hasNotPassedNextAnchor;
      if (!isActive)
        continue;
      const routeHash = decodeURIComponent(router.currentRoute.value.hash);
      const anchorHash = decodeURIComponent(anchor.hash);
      if (routeHash === anchorHash)
        return;
      if (isAtPageBottom) {
        for (let j = i2 + 1; j < existedHeaderAnchors.length; j++) {
          if (routeHash === decodeURIComponent(existedHeaderAnchors[j].hash)) {
            return;
          }
        }
      }
      void updateHash(router, anchorHash);
      return;
    }
  };
  useEventListener("scroll", useDebounceFn(setActiveRouteHash, delay2));
};
const headerLinkSelector = ".vp-sidebar-link, .vp-toc-link";
const headerAnchorSelector = ".header-anchor";
const delay$1 = 200;
const offset = 5;
const config$b = defineClientConfig({
  setup() {
    useActiveHeaderLinks({
      headerLinkSelector,
      headerAnchorSelector,
      delay: delay$1,
      offset
    });
  }
});
const clientConfig3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$b
}, Symbol.toStringTag, { value: "Module" }));
let e$2 = (t) => isString$2(t.title) ? { title: t.title } : null;
const o$1 = Symbol(""), n$2 = (t) => {
  e$2 = t;
}, r$1 = () => inject(o$1), a$2 = (t) => {
  t.provide(o$1, e$2);
};
var define_CATALOG_LOCALES_default = { "/": { title: "Catalog", empty: "No catalog" } };
var z = /* @__PURE__ */ defineComponent({ name: "Catalog", props: { base: { type: String, default: "" }, level: { type: Number, default: 3 }, index: Boolean, hideHeading: Boolean }, setup(l2) {
  const x2 = r$1(), m2 = useLocaleConfig$1(define_CATALOG_LOCALES_default), L2 = usePageData(), y = useRoutes(), S = useSiteData(), _2 = shallowRef(entries(y.value).map(([t, { meta: p2 }]) => {
    const o2 = x2(p2);
    if (!o2) return null;
    const n2 = t.split("/").length;
    return { level: endsWith(t, "/") ? n2 - 2 : n2 - 1, base: t.replace(/\/[^/]+\/?$/, "/"), path: t, ...o2 };
  }).filter((t) => isPlainObject(t) && isString$2(t.title))), u2 = computed(() => {
    const t = l2.base ? ensureLeadingSlash(ensureEndingSlash(l2.base)) : L2.value.path.replace(/\/[^/]+$/, "/"), p2 = t.split("/").length - 2, o2 = [];
    return _2.value.filter(({ level: n2, path: s2 }) => {
      if (!startsWith(s2, t) || s2 === t) return false;
      if (t === "/") {
        const i2 = keys(S.value.locales).filter((a2) => a2 !== "/");
        if (s2 === "/404.html" || i2.some((a2) => startsWith(s2, a2))) return false;
      }
      return n2 - p2 <= l2.level;
    }).sort(({ title: n2, level: s2, order: i2 }, { title: a2, level: c, order: r2 }) => s2 - c || (isNumber$1(i2) ? isNumber$1(r2) ? i2 > 0 ? r2 > 0 ? i2 - r2 : -1 : r2 < 0 ? i2 - r2 : 1 : i2 : isNumber$1(r2) ? r2 : n2.localeCompare(a2))).forEach((n2) => {
      var _a25;
      const { base: s2, level: i2 } = n2;
      switch (i2 - p2) {
        case 1: {
          o2.push(n2);
          break;
        }
        case 2: {
          const a2 = o2.find((c) => c.path === s2);
          a2 && (a2.children ?? (a2.children = [])).push(n2);
          break;
        }
        default: {
          const a2 = o2.find((c) => c.path === s2.replace(/\/[^/]+\/$/, "/"));
          if (a2) {
            const c = (_a25 = a2.children) == null ? void 0 : _a25.find((r2) => r2.path === s2);
            c && (c.children ?? (c.children = [])).push(n2);
          }
        }
      }
    }), o2;
  });
  return () => {
    const t = u2.value.some((p2) => p2.children);
    return h$1("div", { class: ["vp-catalog", { index: l2.index }] }, [l2.hideHeading ? null : h$1("h2", { class: "vp-catalog-main-title" }, m2.value.title), u2.value.length ? h$1(l2.index ? "ol" : "ul", { class: ["vp-catalog-list", { deep: t }] }, u2.value.map(({ children: p2 = [], title: o2, path: n2, content: s2 }) => {
      const i2 = h$1(RouteLink, { class: "vp-catalog-title", to: n2 }, () => s2 ? h$1(s2) : o2);
      return h$1("li", { class: "vp-catalog-item" }, t ? [h$1("h3", { id: o2, class: ["vp-catalog-child-title", { "has-children": p2.length }] }, [h$1("a", { href: `#${o2}`, class: "vp-catalog-header-anchor", "aria-hidden": true }, "#"), i2]), p2.length ? h$1(l2.index ? "ol" : "ul", { class: "vp-child-catalogs" }, p2.map(({ children: a2 = [], content: c, path: r2, title: g2 }) => h$1("li", { class: "vp-child-catalog" }, [h$1("div", { class: ["vp-catalog-sub-title", { "has-children": a2.length }] }, [h$1("a", { href: `#${g2}`, class: "vp-catalog-header-anchor" }, "#"), h$1(RouteLink, { class: "vp-catalog-title", to: r2 }, () => c ? h$1(c) : g2)]), a2.length ? h$1(l2.index ? "ol" : "div", { class: l2.index ? "vp-sub-catalogs" : "vp-sub-catalogs-wrapper" }, a2.map(({ content: h2, path: f, title: b }) => l2.index ? h$1("li", { class: "vp-sub-catalog" }, h$1(RouteLink, { to: f }, () => h2 ? h$1(h2) : b)) : h$1(RouteLink, { class: "vp-sub-catalog-link", to: f }, () => h2 ? h$1(h2) : b))) : null]))) : null] : h$1("div", { class: "vp-catalog-child-title" }, i2));
    })) : h$1("p", { class: "vp-empty-catalog" }, m2.value.empty)]);
  };
} }), F$1 = defineClientConfig({ enhance: ({ app: l2 }) => {
  a$2(l2), hasGlobalComponent("Catalog", l2) || l2.component("Catalog", z);
} });
const clientConfig4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: F$1
}, Symbol.toStringTag, { value: "Module" }));
var define_BACK_TO_TOP_LOCALES_default = { "/": { backToTop: "Back to top" } };
const BackToTop = /* @__PURE__ */ defineComponent({
  name: "BackToTop",
  setup() {
    const pageFrontmatter = usePageFrontmatter();
    const locale = useLocaleConfig$1(define_BACK_TO_TOP_LOCALES_default);
    const body = shallowRef();
    const { height: bodyHeight } = useElementSize(body);
    const { height: windowHeight } = useWindowSize();
    const { y } = useWindowScroll();
    const show = computed(() => pageFrontmatter.value.backToTop !== false && y.value > 100);
    const progress = computed(() => y.value / (bodyHeight.value - windowHeight.value) * 100);
    onMounted(() => {
      body.value = document.body;
    });
    return () => h$1(Transition, { name: "back-to-top" }, () => show.value ? h$1("button", {
      "type": "button",
      "class": "vp-back-to-top-button",
      "aria-label": locale.value.backToTop,
      "onClick": () => {
        window.scrollTo({ top: 0, behavior: "smooth" });
      }
    }, [
      h$1("span", {
        "class": "vp-scroll-progress",
        "role": "progressbar",
        "aria-labelledby": "loadinglabel",
        "aria-valuenow": progress.value
      }, h$1("svg", h$1("circle", {
        "cx": "26",
        "cy": "26",
        "r": "24",
        "fill": "none",
        "stroke": "currentColor",
        "stroke-width": "4",
        "stroke-dasharray": `${Math.PI * progress.value * 0.48} ${Math.PI * (100 - progress.value) * 0.48}`
      }))),
      h$1("div", { class: "back-to-top-icon" })
    ]) : null);
  }
});
const config$a = defineClientConfig({
  rootComponents: [BackToTop]
});
const clientConfig5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$a
}, Symbol.toStringTag, { value: "Module" }));
/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */
const addClass = (element, name) => {
  element.classList.add(name);
};
const removeClass = (element, name) => {
  element.classList.remove(name);
};
const removeElement = (element) => {
  var _a25;
  (_a25 = element == null ? void 0 : element.parentNode) == null ? void 0 : _a25.removeChild(element);
};
const clamp = (n2, min, max) => {
  if (n2 < min)
    return min;
  if (n2 > max)
    return max;
  return n2;
};
const toBarPercent = (n2) => (-1 + n2) * 100;
const queue = /* @__PURE__ */ (() => {
  const pending = [];
  const nextStep = () => {
    const fn = pending.shift();
    if (fn) {
      fn(nextStep);
    }
  };
  return (fn) => {
    pending.push(fn);
    if (pending.length === 1)
      nextStep();
  };
})();
const camelCase = (content) => content.replace(/^-ms-/, "ms-").replace(/-([\da-z])/gi, (_2, letter) => letter.toUpperCase());
const addStyle = /* @__PURE__ */ (() => {
  const cssPrefixes = ["Webkit", "O", "Moz", "ms"];
  const cssProps = {};
  const getVendorProp = (name) => {
    const { style } = document.body;
    if (name in style)
      return name;
    const capName = name.charAt(0).toUpperCase() + name.slice(1);
    let index = cssPrefixes.length;
    while (index--) {
      const vendorName = `${cssPrefixes[index]}${capName}`;
      if (vendorName in style)
        return vendorName;
    }
    return name;
  };
  const getStyleProp = (name) => {
    const finalizedName = camelCase(name);
    return cssProps[finalizedName] ?? (cssProps[finalizedName] = getVendorProp(finalizedName));
  };
  const applyCss = (element, prop, value) => {
    element.style[getStyleProp(prop)] = value;
  };
  return (element, properties) => {
    for (const prop in properties) {
      const value = properties[prop];
      if (Object.hasOwn(properties, prop) && isDef(value))
        applyCss(element, prop, value);
    }
  };
})();
const SETTINGS = {
  minimum: 0.08,
  easing: "ease",
  speed: 200,
  trickle: true,
  trickleRate: 0.02,
  trickleSpeed: 800,
  barSelector: '[role="bar"]',
  parent: "body",
  template: '<div class="bar" role="bar"></div>'
};
const nprogress = {
  percent: null,
  isRendered: () => Boolean(document.getElementById("nprogress")),
  set: (progress) => {
    const { speed, easing } = SETTINGS;
    const inProgress = nprogress.isStarted();
    const newPercent = clamp(progress, SETTINGS.minimum, 1);
    nprogress.percent = newPercent === 1 ? null : newPercent;
    const nprogressElement = nprogress.render(!inProgress);
    const barElement = nprogressElement.querySelector(SETTINGS.barSelector);
    nprogressElement.offsetWidth;
    queue((next) => {
      addStyle(barElement, {
        transform: `translate3d(${toBarPercent(newPercent)}%,0,0)`,
        transition: `all ${speed}ms ${easing}`
      });
      if (newPercent === 1) {
        addStyle(nprogressElement, {
          transition: "none",
          opacity: "1"
        });
        nprogressElement.offsetWidth;
        setTimeout(() => {
          addStyle(nprogressElement, {
            transition: `all ${speed}ms linear`,
            opacity: "0"
          });
          setTimeout(() => {
            nprogress.remove();
            next();
          }, speed);
        }, speed);
      } else {
        setTimeout(() => {
          next();
        }, speed);
      }
    });
    return nprogress;
  },
  isStarted: () => typeof nprogress.percent === "number",
  start: () => {
    if (!nprogress.percent)
      nprogress.set(0);
    const work = () => {
      setTimeout(() => {
        if (!nprogress.percent)
          return;
        nprogress.trickle();
        work();
      }, SETTINGS.trickleSpeed);
    };
    work();
    return nprogress;
  },
  done: (force) => {
    if (!force && !nprogress.percent)
      return nprogress;
    return nprogress.increase(0.3 + 0.5 * Math.random()).set(1);
  },
  increase: (amount) => {
    let { percent } = nprogress;
    if (!percent) {
      return nprogress.start();
    }
    percent = clamp(percent + (typeof amount === "number" ? amount : (1 - percent) * clamp(Math.random() * percent, 0.1, 0.95)), 0, 0.994);
    return nprogress.set(percent);
  },
  trickle: () => nprogress.increase(Math.random() * SETTINGS.trickleRate),
  render: (fromStart) => {
    if (nprogress.isRendered()) {
      return document.getElementById("nprogress");
    }
    addClass(document.documentElement, "nprogress-busy");
    const nprogressElement = document.createElement("div");
    nprogressElement.id = "nprogress";
    nprogressElement.innerHTML = SETTINGS.template;
    const barElement = nprogressElement.querySelector(SETTINGS.barSelector);
    const parentElement = document.querySelector(SETTINGS.parent);
    const percent = fromStart ? "-100" : toBarPercent(nprogress.percent ?? 0);
    addStyle(barElement, {
      transition: "all 0 linear",
      transform: `translate3d(${percent}%,0,0)`
    });
    if (parentElement) {
      if (parentElement !== document.body) {
        addClass(parentElement, "nprogress-custom-parent");
      }
      parentElement.appendChild(nprogressElement);
    }
    return nprogressElement;
  },
  remove: () => {
    removeClass(document.documentElement, "nprogress-busy");
    removeClass(document.querySelector(SETTINGS.parent), "nprogress-custom-parent");
    removeElement(document.getElementById("nprogress"));
  }
};
const useNprogress = () => {
  onMounted(() => {
    const router = useRouter();
    const loadedPages = /* @__PURE__ */ new Set();
    loadedPages.add(router.currentRoute.value.path);
    router.beforeEach((to) => {
      if (!loadedPages.has(to.path)) {
        nprogress.start();
      }
    });
    router.afterEach((to) => {
      loadedPages.add(to.path);
      nprogress.done();
    });
  });
};
const config$9 = defineClientConfig({
  setup() {
    useNprogress();
  }
});
const clientConfig6 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$9
}, Symbol.toStringTag, { value: "Module" }));
var __create$1 = Object.create;
var __defProp$1 = Object.defineProperty;
var __getOwnPropDesc$1 = Object.getOwnPropertyDescriptor;
var __getOwnPropNames$1 = Object.getOwnPropertyNames;
var __getProtoOf$1 = Object.getPrototypeOf;
var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
var __esm$1 = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames$1(fn)[0]])(fn = 0)), res;
};
var __commonJS$1 = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames$1(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps$1 = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames$1(from))
      if (!__hasOwnProp$1.call(to, key) && key !== except)
        __defProp$1(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc$1(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM$1 = (mod, isNodeMode, target2) => (target2 = mod != null ? __create$1(__getProtoOf$1(mod)) : {}, __copyProps$1(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  __defProp$1(target2, "default", { value: mod, enumerable: true }),
  mod
));
var init_esm_shims$1 = __esm$1({
  "../../node_modules/.pnpm/tsup@8.3.0_@microsoft+api-extractor@7.43.0_@types+node@20.16.5__@swc+core@1.5.29_jiti@1.21.6__ldnw4a7r4ccknnz6q542psuydy/node_modules/tsup/assets/esm_shims.js"() {
  }
});
var require_rfdc = __commonJS$1({
  "../../node_modules/.pnpm/rfdc@1.4.1/node_modules/rfdc/index.js"(exports, module) {
    init_esm_shims$1();
    module.exports = rfdc2;
    function copyBuffer(cur) {
      if (cur instanceof Buffer) {
        return Buffer.from(cur);
      }
      return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length);
    }
    function rfdc2(opts) {
      opts = opts || {};
      if (opts.circles) return rfdcCircles(opts);
      const constructorHandlers = /* @__PURE__ */ new Map();
      constructorHandlers.set(Date, (o2) => new Date(o2));
      constructorHandlers.set(Map, (o2, fn) => new Map(cloneArray(Array.from(o2), fn)));
      constructorHandlers.set(Set, (o2, fn) => new Set(cloneArray(Array.from(o2), fn)));
      if (opts.constructorHandlers) {
        for (const handler2 of opts.constructorHandlers) {
          constructorHandlers.set(handler2[0], handler2[1]);
        }
      }
      let handler = null;
      return opts.proto ? cloneProto : clone;
      function cloneArray(a2, fn) {
        const keys2 = Object.keys(a2);
        const a22 = new Array(keys2.length);
        for (let i2 = 0; i2 < keys2.length; i2++) {
          const k2 = keys2[i2];
          const cur = a2[k2];
          if (typeof cur !== "object" || cur === null) {
            a22[k2] = cur;
          } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {
            a22[k2] = handler(cur, fn);
          } else if (ArrayBuffer.isView(cur)) {
            a22[k2] = copyBuffer(cur);
          } else {
            a22[k2] = fn(cur);
          }
        }
        return a22;
      }
      function clone(o2) {
        if (typeof o2 !== "object" || o2 === null) return o2;
        if (Array.isArray(o2)) return cloneArray(o2, clone);
        if (o2.constructor !== Object && (handler = constructorHandlers.get(o2.constructor))) {
          return handler(o2, clone);
        }
        const o22 = {};
        for (const k2 in o2) {
          if (Object.hasOwnProperty.call(o2, k2) === false) continue;
          const cur = o2[k2];
          if (typeof cur !== "object" || cur === null) {
            o22[k2] = cur;
          } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {
            o22[k2] = handler(cur, clone);
          } else if (ArrayBuffer.isView(cur)) {
            o22[k2] = copyBuffer(cur);
          } else {
            o22[k2] = clone(cur);
          }
        }
        return o22;
      }
      function cloneProto(o2) {
        if (typeof o2 !== "object" || o2 === null) return o2;
        if (Array.isArray(o2)) return cloneArray(o2, cloneProto);
        if (o2.constructor !== Object && (handler = constructorHandlers.get(o2.constructor))) {
          return handler(o2, cloneProto);
        }
        const o22 = {};
        for (const k2 in o2) {
          const cur = o2[k2];
          if (typeof cur !== "object" || cur === null) {
            o22[k2] = cur;
          } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {
            o22[k2] = handler(cur, cloneProto);
          } else if (ArrayBuffer.isView(cur)) {
            o22[k2] = copyBuffer(cur);
          } else {
            o22[k2] = cloneProto(cur);
          }
        }
        return o22;
      }
    }
    function rfdcCircles(opts) {
      const refs = [];
      const refsNew = [];
      const constructorHandlers = /* @__PURE__ */ new Map();
      constructorHandlers.set(Date, (o2) => new Date(o2));
      constructorHandlers.set(Map, (o2, fn) => new Map(cloneArray(Array.from(o2), fn)));
      constructorHandlers.set(Set, (o2, fn) => new Set(cloneArray(Array.from(o2), fn)));
      if (opts.constructorHandlers) {
        for (const handler2 of opts.constructorHandlers) {
          constructorHandlers.set(handler2[0], handler2[1]);
        }
      }
      let handler = null;
      return opts.proto ? cloneProto : clone;
      function cloneArray(a2, fn) {
        const keys2 = Object.keys(a2);
        const a22 = new Array(keys2.length);
        for (let i2 = 0; i2 < keys2.length; i2++) {
          const k2 = keys2[i2];
          const cur = a2[k2];
          if (typeof cur !== "object" || cur === null) {
            a22[k2] = cur;
          } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {
            a22[k2] = handler(cur, fn);
          } else if (ArrayBuffer.isView(cur)) {
            a22[k2] = copyBuffer(cur);
          } else {
            const index = refs.indexOf(cur);
            if (index !== -1) {
              a22[k2] = refsNew[index];
            } else {
              a22[k2] = fn(cur);
            }
          }
        }
        return a22;
      }
      function clone(o2) {
        if (typeof o2 !== "object" || o2 === null) return o2;
        if (Array.isArray(o2)) return cloneArray(o2, clone);
        if (o2.constructor !== Object && (handler = constructorHandlers.get(o2.constructor))) {
          return handler(o2, clone);
        }
        const o22 = {};
        refs.push(o2);
        refsNew.push(o22);
        for (const k2 in o2) {
          if (Object.hasOwnProperty.call(o2, k2) === false) continue;
          const cur = o2[k2];
          if (typeof cur !== "object" || cur === null) {
            o22[k2] = cur;
          } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {
            o22[k2] = handler(cur, clone);
          } else if (ArrayBuffer.isView(cur)) {
            o22[k2] = copyBuffer(cur);
          } else {
            const i2 = refs.indexOf(cur);
            if (i2 !== -1) {
              o22[k2] = refsNew[i2];
            } else {
              o22[k2] = clone(cur);
            }
          }
        }
        refs.pop();
        refsNew.pop();
        return o22;
      }
      function cloneProto(o2) {
        if (typeof o2 !== "object" || o2 === null) return o2;
        if (Array.isArray(o2)) return cloneArray(o2, cloneProto);
        if (o2.constructor !== Object && (handler = constructorHandlers.get(o2.constructor))) {
          return handler(o2, cloneProto);
        }
        const o22 = {};
        refs.push(o2);
        refsNew.push(o22);
        for (const k2 in o2) {
          const cur = o2[k2];
          if (typeof cur !== "object" || cur === null) {
            o22[k2] = cur;
          } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {
            o22[k2] = handler(cur, cloneProto);
          } else if (ArrayBuffer.isView(cur)) {
            o22[k2] = copyBuffer(cur);
          } else {
            const i2 = refs.indexOf(cur);
            if (i2 !== -1) {
              o22[k2] = refsNew[i2];
            } else {
              o22[k2] = cloneProto(cur);
            }
          }
        }
        refs.pop();
        refsNew.pop();
        return o22;
      }
    }
  }
});
init_esm_shims$1();
init_esm_shims$1();
init_esm_shims$1();
var isBrowser = typeof navigator !== "undefined";
var target = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : typeof global !== "undefined" ? global : {};
typeof target.chrome !== "undefined" && !!target.chrome.devtools;
isBrowser && target.self !== target.top;
typeof navigator !== "undefined" && navigator.userAgent.toLowerCase().includes("electron");
init_esm_shims$1();
var import_rfdc = __toESM$1(require_rfdc());
var classifyRE = /(?:^|[-_/])(\w)/g;
function toUpper(_2, c) {
  return c ? c.toUpperCase() : "";
}
function classify(str) {
  return str && `${str}`.replace(classifyRE, toUpper);
}
function basename(filename, ext) {
  const normalizedFilename = filename.replace(/^[a-z]:/i, "").replace(/\\/g, "/");
  const lastSlashIndex = normalizedFilename.lastIndexOf("/");
  const baseNameWithExt = normalizedFilename.substring(lastSlashIndex + 1);
  {
    const extIndex = baseNameWithExt.lastIndexOf(ext);
    return baseNameWithExt.substring(0, extIndex);
  }
}
var deepClone = (0, import_rfdc.default)({ circles: true });
const DEBOUNCE_DEFAULTS = {
  trailing: true
};
function debounce(fn, wait2 = 25, options = {}) {
  options = { ...DEBOUNCE_DEFAULTS, ...options };
  if (!Number.isFinite(wait2)) {
    throw new TypeError("Expected `wait` to be a finite number");
  }
  let leadingValue;
  let timeout;
  let resolveList = [];
  let currentPromise;
  let trailingArgs;
  const applyFn = (_this, args) => {
    currentPromise = _applyPromised(fn, _this, args);
    currentPromise.finally(() => {
      currentPromise = null;
      if (options.trailing && trailingArgs && !timeout) {
        const promise = applyFn(_this, trailingArgs);
        trailingArgs = null;
        return promise;
      }
    });
    return currentPromise;
  };
  return function(...args) {
    if (currentPromise) {
      if (options.trailing) {
        trailingArgs = args;
      }
      return currentPromise;
    }
    return new Promise((resolve2) => {
      const shouldCallNow = !timeout && options.leading;
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        timeout = null;
        const promise = options.leading ? leadingValue : applyFn(this, args);
        for (const _resolve of resolveList) {
          _resolve(promise);
        }
        resolveList = [];
      }, wait2);
      if (shouldCallNow) {
        leadingValue = applyFn(this, args);
        resolve2(leadingValue);
      } else {
        resolveList.push(resolve2);
      }
    });
  };
}
async function _applyPromised(fn, _this, args) {
  return await fn.apply(_this, args);
}
function flatHooks(configHooks, hooks2 = {}, parentName) {
  for (const key in configHooks) {
    const subHook = configHooks[key];
    const name = parentName ? `${parentName}:${key}` : key;
    if (typeof subHook === "object" && subHook !== null) {
      flatHooks(subHook, hooks2, name);
    } else if (typeof subHook === "function") {
      hooks2[name] = subHook;
    }
  }
  return hooks2;
}
const defaultTask = { run: (function_) => function_() };
const _createTask = () => defaultTask;
const createTask = typeof console.createTask !== "undefined" ? console.createTask : _createTask;
function serialTaskCaller(hooks2, args) {
  const name = args.shift();
  const task = createTask(name);
  return hooks2.reduce(
    (promise, hookFunction) => promise.then(() => task.run(() => hookFunction(...args))),
    Promise.resolve()
  );
}
function parallelTaskCaller(hooks2, args) {
  const name = args.shift();
  const task = createTask(name);
  return Promise.all(hooks2.map((hook2) => task.run(() => hook2(...args))));
}
function callEachWith(callbacks, arg0) {
  for (const callback of [...callbacks]) {
    callback(arg0);
  }
}
class Hookable {
  constructor() {
    this._hooks = {};
    this._before = void 0;
    this._after = void 0;
    this._deprecatedMessages = void 0;
    this._deprecatedHooks = {};
    this.hook = this.hook.bind(this);
    this.callHook = this.callHook.bind(this);
    this.callHookWith = this.callHookWith.bind(this);
  }
  hook(name, function_, options = {}) {
    if (!name || typeof function_ !== "function") {
      return () => {
      };
    }
    const originalName = name;
    let dep;
    while (this._deprecatedHooks[name]) {
      dep = this._deprecatedHooks[name];
      name = dep.to;
    }
    if (dep && !options.allowDeprecated) {
      let message = dep.message;
      if (!message) {
        message = `${originalName} hook has been deprecated` + (dep.to ? `, please use ${dep.to}` : "");
      }
      if (!this._deprecatedMessages) {
        this._deprecatedMessages = /* @__PURE__ */ new Set();
      }
      if (!this._deprecatedMessages.has(message)) {
        console.warn(message);
        this._deprecatedMessages.add(message);
      }
    }
    if (!function_.name) {
      try {
        Object.defineProperty(function_, "name", {
          get: () => "_" + name.replace(/\W+/g, "_") + "_hook_cb",
          configurable: true
        });
      } catch {
      }
    }
    this._hooks[name] = this._hooks[name] || [];
    this._hooks[name].push(function_);
    return () => {
      if (function_) {
        this.removeHook(name, function_);
        function_ = void 0;
      }
    };
  }
  hookOnce(name, function_) {
    let _unreg;
    let _function = (...arguments_) => {
      if (typeof _unreg === "function") {
        _unreg();
      }
      _unreg = void 0;
      _function = void 0;
      return function_(...arguments_);
    };
    _unreg = this.hook(name, _function);
    return _unreg;
  }
  removeHook(name, function_) {
    if (this._hooks[name]) {
      const index = this._hooks[name].indexOf(function_);
      if (index !== -1) {
        this._hooks[name].splice(index, 1);
      }
      if (this._hooks[name].length === 0) {
        delete this._hooks[name];
      }
    }
  }
  deprecateHook(name, deprecated) {
    this._deprecatedHooks[name] = typeof deprecated === "string" ? { to: deprecated } : deprecated;
    const _hooks = this._hooks[name] || [];
    delete this._hooks[name];
    for (const hook2 of _hooks) {
      this.hook(name, hook2);
    }
  }
  deprecateHooks(deprecatedHooks) {
    Object.assign(this._deprecatedHooks, deprecatedHooks);
    for (const name in deprecatedHooks) {
      this.deprecateHook(name, deprecatedHooks[name]);
    }
  }
  addHooks(configHooks) {
    const hooks2 = flatHooks(configHooks);
    const removeFns = Object.keys(hooks2).map(
      (key) => this.hook(key, hooks2[key])
    );
    return () => {
      for (const unreg of removeFns.splice(0, removeFns.length)) {
        unreg();
      }
    };
  }
  removeHooks(configHooks) {
    const hooks2 = flatHooks(configHooks);
    for (const key in hooks2) {
      this.removeHook(key, hooks2[key]);
    }
  }
  removeAllHooks() {
    for (const key in this._hooks) {
      delete this._hooks[key];
    }
  }
  callHook(name, ...arguments_) {
    arguments_.unshift(name);
    return this.callHookWith(serialTaskCaller, name, ...arguments_);
  }
  callHookParallel(name, ...arguments_) {
    arguments_.unshift(name);
    return this.callHookWith(parallelTaskCaller, name, ...arguments_);
  }
  callHookWith(caller, name, ...arguments_) {
    const event = this._before || this._after ? { name, args: arguments_, context: {} } : void 0;
    if (this._before) {
      callEachWith(this._before, event);
    }
    const result = caller(
      name in this._hooks ? [...this._hooks[name]] : [],
      arguments_
    );
    if (result instanceof Promise) {
      return result.finally(() => {
        if (this._after && event) {
          callEachWith(this._after, event);
        }
      });
    }
    if (this._after && event) {
      callEachWith(this._after, event);
    }
    return result;
  }
  beforeEach(function_) {
    this._before = this._before || [];
    this._before.push(function_);
    return () => {
      if (this._before !== void 0) {
        const index = this._before.indexOf(function_);
        if (index !== -1) {
          this._before.splice(index, 1);
        }
      }
    };
  }
  afterEach(function_) {
    this._after = this._after || [];
    this._after.push(function_);
    return () => {
      if (this._after !== void 0) {
        const index = this._after.indexOf(function_);
        if (index !== -1) {
          this._after.splice(index, 1);
        }
      }
    };
  }
}
function createHooks() {
  return new Hookable();
}
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target22) => (target22 = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  __defProp(target22, "default", { value: mod, enumerable: true }),
  mod
));
var init_esm_shims = __esm({
  "../../node_modules/.pnpm/tsup@8.3.0_@microsoft+api-extractor@7.43.0_@types+node@20.16.5__@swc+core@1.5.29_jiti@1.21.6__ldnw4a7r4ccknnz6q542psuydy/node_modules/tsup/assets/esm_shims.js"() {
  }
});
var require_speakingurl = __commonJS({
  "../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/lib/speakingurl.js"(exports, module) {
    init_esm_shims();
    (function(root) {
      var charMap = {
        // latin
        "À": "A",
        "Á": "A",
        "Â": "A",
        "Ã": "A",
        "Ä": "Ae",
        "Å": "A",
        "Æ": "AE",
        "Ç": "C",
        "È": "E",
        "É": "E",
        "Ê": "E",
        "Ë": "E",
        "Ì": "I",
        "Í": "I",
        "Î": "I",
        "Ï": "I",
        "Ð": "D",
        "Ñ": "N",
        "Ò": "O",
        "Ó": "O",
        "Ô": "O",
        "Õ": "O",
        "Ö": "Oe",
        "Ő": "O",
        "Ø": "O",
        "Ù": "U",
        "Ú": "U",
        "Û": "U",
        "Ü": "Ue",
        "Ű": "U",
        "Ý": "Y",
        "Þ": "TH",
        "ß": "ss",
        "à": "a",
        "á": "a",
        "â": "a",
        "ã": "a",
        "ä": "ae",
        "å": "a",
        "æ": "ae",
        "ç": "c",
        "è": "e",
        "é": "e",
        "ê": "e",
        "ë": "e",
        "ì": "i",
        "í": "i",
        "î": "i",
        "ï": "i",
        "ð": "d",
        "ñ": "n",
        "ò": "o",
        "ó": "o",
        "ô": "o",
        "õ": "o",
        "ö": "oe",
        "ő": "o",
        "ø": "o",
        "ù": "u",
        "ú": "u",
        "û": "u",
        "ü": "ue",
        "ű": "u",
        "ý": "y",
        "þ": "th",
        "ÿ": "y",
        "ẞ": "SS",
        // language specific
        // Arabic
        "ا": "a",
        "أ": "a",
        "إ": "i",
        "آ": "aa",
        "ؤ": "u",
        "ئ": "e",
        "ء": "a",
        "ب": "b",
        "ت": "t",
        "ث": "th",
        "ج": "j",
        "ح": "h",
        "خ": "kh",
        "د": "d",
        "ذ": "th",
        "ر": "r",
        "ز": "z",
        "س": "s",
        "ش": "sh",
        "ص": "s",
        "ض": "dh",
        "ط": "t",
        "ظ": "z",
        "ع": "a",
        "غ": "gh",
        "ف": "f",
        "ق": "q",
        "ك": "k",
        "ل": "l",
        "م": "m",
        "ن": "n",
        "ه": "h",
        "و": "w",
        "ي": "y",
        "ى": "a",
        "ة": "h",
        "ﻻ": "la",
        "ﻷ": "laa",
        "ﻹ": "lai",
        "ﻵ": "laa",
        // Persian additional characters than Arabic
        "گ": "g",
        "چ": "ch",
        "پ": "p",
        "ژ": "zh",
        "ک": "k",
        "ی": "y",
        // Arabic diactrics
        "َ": "a",
        "ً": "an",
        "ِ": "e",
        "ٍ": "en",
        "ُ": "u",
        "ٌ": "on",
        "ْ": "",
        // Arabic numbers
        "٠": "0",
        "١": "1",
        "٢": "2",
        "٣": "3",
        "٤": "4",
        "٥": "5",
        "٦": "6",
        "٧": "7",
        "٨": "8",
        "٩": "9",
        // Persian numbers
        "۰": "0",
        "۱": "1",
        "۲": "2",
        "۳": "3",
        "۴": "4",
        "۵": "5",
        "۶": "6",
        "۷": "7",
        "۸": "8",
        "۹": "9",
        // Burmese consonants
        "က": "k",
        "ခ": "kh",
        "ဂ": "g",
        "ဃ": "ga",
        "င": "ng",
        "စ": "s",
        "ဆ": "sa",
        "ဇ": "z",
        "စျ": "za",
        "ည": "ny",
        "ဋ": "t",
        "ဌ": "ta",
        "ဍ": "d",
        "ဎ": "da",
        "ဏ": "na",
        "တ": "t",
        "ထ": "ta",
        "ဒ": "d",
        "ဓ": "da",
        "န": "n",
        "ပ": "p",
        "ဖ": "pa",
        "ဗ": "b",
        "ဘ": "ba",
        "မ": "m",
        "ယ": "y",
        "ရ": "ya",
        "လ": "l",
        "ဝ": "w",
        "သ": "th",
        "ဟ": "h",
        "ဠ": "la",
        "အ": "a",
        // consonant character combos
        "ြ": "y",
        "ျ": "ya",
        "ွ": "w",
        "ြွ": "yw",
        "ျွ": "ywa",
        "ှ": "h",
        // independent vowels
        "ဧ": "e",
        "၏": "-e",
        "ဣ": "i",
        "ဤ": "-i",
        "ဉ": "u",
        "ဦ": "-u",
        "ဩ": "aw",
        "သြော": "aw",
        "ဪ": "aw",
        // numbers
        "၀": "0",
        "၁": "1",
        "၂": "2",
        "၃": "3",
        "၄": "4",
        "၅": "5",
        "၆": "6",
        "၇": "7",
        "၈": "8",
        "၉": "9",
        // virama and tone marks which are silent in transliteration
        "္": "",
        "့": "",
        "း": "",
        // Czech
        "č": "c",
        "ď": "d",
        "ě": "e",
        "ň": "n",
        "ř": "r",
        "š": "s",
        "ť": "t",
        "ů": "u",
        "ž": "z",
        "Č": "C",
        "Ď": "D",
        "Ě": "E",
        "Ň": "N",
        "Ř": "R",
        "Š": "S",
        "Ť": "T",
        "Ů": "U",
        "Ž": "Z",
        // Dhivehi
        "ހ": "h",
        "ށ": "sh",
        "ނ": "n",
        "ރ": "r",
        "ބ": "b",
        "ޅ": "lh",
        "ކ": "k",
        "އ": "a",
        "ވ": "v",
        "މ": "m",
        "ފ": "f",
        "ދ": "dh",
        "ތ": "th",
        "ލ": "l",
        "ގ": "g",
        "ޏ": "gn",
        "ސ": "s",
        "ޑ": "d",
        "ޒ": "z",
        "ޓ": "t",
        "ޔ": "y",
        "ޕ": "p",
        "ޖ": "j",
        "ޗ": "ch",
        "ޘ": "tt",
        "ޙ": "hh",
        "ޚ": "kh",
        "ޛ": "th",
        "ޜ": "z",
        "ޝ": "sh",
        "ޞ": "s",
        "ޟ": "d",
        "ޠ": "t",
        "ޡ": "z",
        "ޢ": "a",
        "ޣ": "gh",
        "ޤ": "q",
        "ޥ": "w",
        "ަ": "a",
        "ާ": "aa",
        "ި": "i",
        "ީ": "ee",
        "ު": "u",
        "ޫ": "oo",
        "ެ": "e",
        "ޭ": "ey",
        "ޮ": "o",
        "ޯ": "oa",
        "ް": "",
        // Georgian https://en.wikipedia.org/wiki/Romanization_of_Georgian
        // National system (2002)
        "ა": "a",
        "ბ": "b",
        "გ": "g",
        "დ": "d",
        "ე": "e",
        "ვ": "v",
        "ზ": "z",
        "თ": "t",
        "ი": "i",
        "კ": "k",
        "ლ": "l",
        "მ": "m",
        "ნ": "n",
        "ო": "o",
        "პ": "p",
        "ჟ": "zh",
        "რ": "r",
        "ს": "s",
        "ტ": "t",
        "უ": "u",
        "ფ": "p",
        "ქ": "k",
        "ღ": "gh",
        "ყ": "q",
        "შ": "sh",
        "ჩ": "ch",
        "ც": "ts",
        "ძ": "dz",
        "წ": "ts",
        "ჭ": "ch",
        "ხ": "kh",
        "ჯ": "j",
        "ჰ": "h",
        // Greek
        "α": "a",
        "β": "v",
        "γ": "g",
        "δ": "d",
        "ε": "e",
        "ζ": "z",
        "η": "i",
        "θ": "th",
        "ι": "i",
        "κ": "k",
        "λ": "l",
        "μ": "m",
        "ν": "n",
        "ξ": "ks",
        "ο": "o",
        "π": "p",
        "ρ": "r",
        "σ": "s",
        "τ": "t",
        "υ": "y",
        "φ": "f",
        "χ": "x",
        "ψ": "ps",
        "ω": "o",
        "ά": "a",
        "έ": "e",
        "ί": "i",
        "ό": "o",
        "ύ": "y",
        "ή": "i",
        "ώ": "o",
        "ς": "s",
        "ϊ": "i",
        "ΰ": "y",
        "ϋ": "y",
        "ΐ": "i",
        "Α": "A",
        "Β": "B",
        "Γ": "G",
        "Δ": "D",
        "Ε": "E",
        "Ζ": "Z",
        "Η": "I",
        "Θ": "TH",
        "Ι": "I",
        "Κ": "K",
        "Λ": "L",
        "Μ": "M",
        "Ν": "N",
        "Ξ": "KS",
        "Ο": "O",
        "Π": "P",
        "Ρ": "R",
        "Σ": "S",
        "Τ": "T",
        "Υ": "Y",
        "Φ": "F",
        "Χ": "X",
        "Ψ": "PS",
        "Ω": "O",
        "Ά": "A",
        "Έ": "E",
        "Ί": "I",
        "Ό": "O",
        "Ύ": "Y",
        "Ή": "I",
        "Ώ": "O",
        "Ϊ": "I",
        "Ϋ": "Y",
        // Latvian
        "ā": "a",
        // 'č': 'c', // duplicate
        "ē": "e",
        "ģ": "g",
        "ī": "i",
        "ķ": "k",
        "ļ": "l",
        "ņ": "n",
        // 'š': 's', // duplicate
        "ū": "u",
        // 'ž': 'z', // duplicate
        "Ā": "A",
        // 'Č': 'C', // duplicate
        "Ē": "E",
        "Ģ": "G",
        "Ī": "I",
        "Ķ": "k",
        "Ļ": "L",
        "Ņ": "N",
        // 'Š': 'S', // duplicate
        "Ū": "U",
        // 'Ž': 'Z', // duplicate
        // Macedonian
        "Ќ": "Kj",
        "ќ": "kj",
        "Љ": "Lj",
        "љ": "lj",
        "Њ": "Nj",
        "њ": "nj",
        "Тс": "Ts",
        "тс": "ts",
        // Polish
        "ą": "a",
        "ć": "c",
        "ę": "e",
        "ł": "l",
        "ń": "n",
        // 'ó': 'o', // duplicate
        "ś": "s",
        "ź": "z",
        "ż": "z",
        "Ą": "A",
        "Ć": "C",
        "Ę": "E",
        "Ł": "L",
        "Ń": "N",
        "Ś": "S",
        "Ź": "Z",
        "Ż": "Z",
        // Ukranian
        "Є": "Ye",
        "І": "I",
        "Ї": "Yi",
        "Ґ": "G",
        "є": "ye",
        "і": "i",
        "ї": "yi",
        "ґ": "g",
        // Romanian
        "ă": "a",
        "Ă": "A",
        "ș": "s",
        "Ș": "S",
        // 'ş': 's', // duplicate
        // 'Ş': 'S', // duplicate
        "ț": "t",
        "Ț": "T",
        "ţ": "t",
        "Ţ": "T",
        // Russian https://en.wikipedia.org/wiki/Romanization_of_Russian
        // ICAO
        "а": "a",
        "б": "b",
        "в": "v",
        "г": "g",
        "д": "d",
        "е": "e",
        "ё": "yo",
        "ж": "zh",
        "з": "z",
        "и": "i",
        "й": "i",
        "к": "k",
        "л": "l",
        "м": "m",
        "н": "n",
        "о": "o",
        "п": "p",
        "р": "r",
        "с": "s",
        "т": "t",
        "у": "u",
        "ф": "f",
        "х": "kh",
        "ц": "c",
        "ч": "ch",
        "ш": "sh",
        "щ": "sh",
        "ъ": "",
        "ы": "y",
        "ь": "",
        "э": "e",
        "ю": "yu",
        "я": "ya",
        "А": "A",
        "Б": "B",
        "В": "V",
        "Г": "G",
        "Д": "D",
        "Е": "E",
        "Ё": "Yo",
        "Ж": "Zh",
        "З": "Z",
        "И": "I",
        "Й": "I",
        "К": "K",
        "Л": "L",
        "М": "M",
        "Н": "N",
        "О": "O",
        "П": "P",
        "Р": "R",
        "С": "S",
        "Т": "T",
        "У": "U",
        "Ф": "F",
        "Х": "Kh",
        "Ц": "C",
        "Ч": "Ch",
        "Ш": "Sh",
        "Щ": "Sh",
        "Ъ": "",
        "Ы": "Y",
        "Ь": "",
        "Э": "E",
        "Ю": "Yu",
        "Я": "Ya",
        // Serbian
        "ђ": "dj",
        "ј": "j",
        // 'љ': 'lj',  // duplicate
        // 'њ': 'nj', // duplicate
        "ћ": "c",
        "џ": "dz",
        "Ђ": "Dj",
        "Ј": "j",
        // 'Љ': 'Lj', // duplicate
        // 'Њ': 'Nj', // duplicate
        "Ћ": "C",
        "Џ": "Dz",
        // Slovak
        "ľ": "l",
        "ĺ": "l",
        "ŕ": "r",
        "Ľ": "L",
        "Ĺ": "L",
        "Ŕ": "R",
        // Turkish
        "ş": "s",
        "Ş": "S",
        "ı": "i",
        "İ": "I",
        // 'ç': 'c', // duplicate
        // 'Ç': 'C', // duplicate
        // 'ü': 'u', // duplicate, see langCharMap
        // 'Ü': 'U', // duplicate, see langCharMap
        // 'ö': 'o', // duplicate, see langCharMap
        // 'Ö': 'O', // duplicate, see langCharMap
        "ğ": "g",
        "Ğ": "G",
        // Vietnamese
        "ả": "a",
        "Ả": "A",
        "ẳ": "a",
        "Ẳ": "A",
        "ẩ": "a",
        "Ẩ": "A",
        "đ": "d",
        "Đ": "D",
        "ẹ": "e",
        "Ẹ": "E",
        "ẽ": "e",
        "Ẽ": "E",
        "ẻ": "e",
        "Ẻ": "E",
        "ế": "e",
        "Ế": "E",
        "ề": "e",
        "Ề": "E",
        "ệ": "e",
        "Ệ": "E",
        "ễ": "e",
        "Ễ": "E",
        "ể": "e",
        "Ể": "E",
        "ỏ": "o",
        "ọ": "o",
        "Ọ": "o",
        "ố": "o",
        "Ố": "O",
        "ồ": "o",
        "Ồ": "O",
        "ổ": "o",
        "Ổ": "O",
        "ộ": "o",
        "Ộ": "O",
        "ỗ": "o",
        "Ỗ": "O",
        "ơ": "o",
        "Ơ": "O",
        "ớ": "o",
        "Ớ": "O",
        "ờ": "o",
        "Ờ": "O",
        "ợ": "o",
        "Ợ": "O",
        "ỡ": "o",
        "Ỡ": "O",
        "Ở": "o",
        "ở": "o",
        "ị": "i",
        "Ị": "I",
        "ĩ": "i",
        "Ĩ": "I",
        "ỉ": "i",
        "Ỉ": "i",
        "ủ": "u",
        "Ủ": "U",
        "ụ": "u",
        "Ụ": "U",
        "ũ": "u",
        "Ũ": "U",
        "ư": "u",
        "Ư": "U",
        "ứ": "u",
        "Ứ": "U",
        "ừ": "u",
        "Ừ": "U",
        "ự": "u",
        "Ự": "U",
        "ữ": "u",
        "Ữ": "U",
        "ử": "u",
        "Ử": "ư",
        "ỷ": "y",
        "Ỷ": "y",
        "ỳ": "y",
        "Ỳ": "Y",
        "ỵ": "y",
        "Ỵ": "Y",
        "ỹ": "y",
        "Ỹ": "Y",
        "ạ": "a",
        "Ạ": "A",
        "ấ": "a",
        "Ấ": "A",
        "ầ": "a",
        "Ầ": "A",
        "ậ": "a",
        "Ậ": "A",
        "ẫ": "a",
        "Ẫ": "A",
        // 'ă': 'a', // duplicate
        // 'Ă': 'A', // duplicate
        "ắ": "a",
        "Ắ": "A",
        "ằ": "a",
        "Ằ": "A",
        "ặ": "a",
        "Ặ": "A",
        "ẵ": "a",
        "Ẵ": "A",
        "⓪": "0",
        "①": "1",
        "②": "2",
        "③": "3",
        "④": "4",
        "⑤": "5",
        "⑥": "6",
        "⑦": "7",
        "⑧": "8",
        "⑨": "9",
        "⑩": "10",
        "⑪": "11",
        "⑫": "12",
        "⑬": "13",
        "⑭": "14",
        "⑮": "15",
        "⑯": "16",
        "⑰": "17",
        "⑱": "18",
        "⑲": "18",
        "⑳": "18",
        "⓵": "1",
        "⓶": "2",
        "⓷": "3",
        "⓸": "4",
        "⓹": "5",
        "⓺": "6",
        "⓻": "7",
        "⓼": "8",
        "⓽": "9",
        "⓾": "10",
        "⓿": "0",
        "⓫": "11",
        "⓬": "12",
        "⓭": "13",
        "⓮": "14",
        "⓯": "15",
        "⓰": "16",
        "⓱": "17",
        "⓲": "18",
        "⓳": "19",
        "⓴": "20",
        "Ⓐ": "A",
        "Ⓑ": "B",
        "Ⓒ": "C",
        "Ⓓ": "D",
        "Ⓔ": "E",
        "Ⓕ": "F",
        "Ⓖ": "G",
        "Ⓗ": "H",
        "Ⓘ": "I",
        "Ⓙ": "J",
        "Ⓚ": "K",
        "Ⓛ": "L",
        "Ⓜ": "M",
        "Ⓝ": "N",
        "Ⓞ": "O",
        "Ⓟ": "P",
        "Ⓠ": "Q",
        "Ⓡ": "R",
        "Ⓢ": "S",
        "Ⓣ": "T",
        "Ⓤ": "U",
        "Ⓥ": "V",
        "Ⓦ": "W",
        "Ⓧ": "X",
        "Ⓨ": "Y",
        "Ⓩ": "Z",
        "ⓐ": "a",
        "ⓑ": "b",
        "ⓒ": "c",
        "ⓓ": "d",
        "ⓔ": "e",
        "ⓕ": "f",
        "ⓖ": "g",
        "ⓗ": "h",
        "ⓘ": "i",
        "ⓙ": "j",
        "ⓚ": "k",
        "ⓛ": "l",
        "ⓜ": "m",
        "ⓝ": "n",
        "ⓞ": "o",
        "ⓟ": "p",
        "ⓠ": "q",
        "ⓡ": "r",
        "ⓢ": "s",
        "ⓣ": "t",
        "ⓤ": "u",
        "ⓦ": "v",
        "ⓥ": "w",
        "ⓧ": "x",
        "ⓨ": "y",
        "ⓩ": "z",
        // symbols
        "“": '"',
        "”": '"',
        "‘": "'",
        "’": "'",
        "∂": "d",
        "ƒ": "f",
        "™": "(TM)",
        "©": "(C)",
        "œ": "oe",
        "Œ": "OE",
        "®": "(R)",
        "†": "+",
        "℠": "(SM)",
        "…": "...",
        "˚": "o",
        "º": "o",
        "ª": "a",
        "•": "*",
        "၊": ",",
        "။": ".",
        // currency
        "$": "USD",
        "€": "EUR",
        "₢": "BRN",
        "₣": "FRF",
        "£": "GBP",
        "₤": "ITL",
        "₦": "NGN",
        "₧": "ESP",
        "₩": "KRW",
        "₪": "ILS",
        "₫": "VND",
        "₭": "LAK",
        "₮": "MNT",
        "₯": "GRD",
        "₱": "ARS",
        "₲": "PYG",
        "₳": "ARA",
        "₴": "UAH",
        "₵": "GHS",
        "¢": "cent",
        "¥": "CNY",
        "元": "CNY",
        "円": "YEN",
        "﷼": "IRR",
        "₠": "EWE",
        "฿": "THB",
        "₨": "INR",
        "₹": "INR",
        "₰": "PF",
        "₺": "TRY",
        "؋": "AFN",
        "₼": "AZN",
        "лв": "BGN",
        "៛": "KHR",
        "₡": "CRC",
        "₸": "KZT",
        "ден": "MKD",
        "zł": "PLN",
        "₽": "RUB",
        "₾": "GEL"
      };
      var lookAheadCharArray = [
        // burmese
        "်",
        // Dhivehi
        "ް"
      ];
      var diatricMap = {
        // Burmese
        // dependent vowels
        "ာ": "a",
        "ါ": "a",
        "ေ": "e",
        "ဲ": "e",
        "ိ": "i",
        "ီ": "i",
        "ို": "o",
        "ု": "u",
        "ူ": "u",
        "ေါင်": "aung",
        "ော": "aw",
        "ော်": "aw",
        "ေါ": "aw",
        "ေါ်": "aw",
        "်": "်",
        // this is special case but the character will be converted to latin in the code
        "က်": "et",
        "ိုက်": "aik",
        "ောက်": "auk",
        "င်": "in",
        "ိုင်": "aing",
        "ောင်": "aung",
        "စ်": "it",
        "ည်": "i",
        "တ်": "at",
        "ိတ်": "eik",
        "ုတ်": "ok",
        "ွတ်": "ut",
        "ေတ်": "it",
        "ဒ်": "d",
        "ိုဒ်": "ok",
        "ုဒ်": "ait",
        "န်": "an",
        "ာန်": "an",
        "ိန်": "ein",
        "ုန်": "on",
        "ွန်": "un",
        "ပ်": "at",
        "ိပ်": "eik",
        "ုပ်": "ok",
        "ွပ်": "ut",
        "န်ုပ်": "nub",
        "မ်": "an",
        "ိမ်": "ein",
        "ုမ်": "on",
        "ွမ်": "un",
        "ယ်": "e",
        "ိုလ်": "ol",
        "ဉ်": "in",
        "ံ": "an",
        "ိံ": "ein",
        "ုံ": "on",
        // Dhivehi
        "ައް": "ah",
        "ަށް": "ah"
      };
      var langCharMap = {
        "en": {},
        // default language
        "az": {
          // Azerbaijani
          "ç": "c",
          "ə": "e",
          "ğ": "g",
          "ı": "i",
          "ö": "o",
          "ş": "s",
          "ü": "u",
          "Ç": "C",
          "Ə": "E",
          "Ğ": "G",
          "İ": "I",
          "Ö": "O",
          "Ş": "S",
          "Ü": "U"
        },
        "cs": {
          // Czech
          "č": "c",
          "ď": "d",
          "ě": "e",
          "ň": "n",
          "ř": "r",
          "š": "s",
          "ť": "t",
          "ů": "u",
          "ž": "z",
          "Č": "C",
          "Ď": "D",
          "Ě": "E",
          "Ň": "N",
          "Ř": "R",
          "Š": "S",
          "Ť": "T",
          "Ů": "U",
          "Ž": "Z"
        },
        "fi": {
          // Finnish
          // 'å': 'a', duplicate see charMap/latin
          // 'Å': 'A', duplicate see charMap/latin
          "ä": "a",
          // ok
          "Ä": "A",
          // ok
          "ö": "o",
          // ok
          "Ö": "O"
          // ok
        },
        "hu": {
          // Hungarian
          "ä": "a",
          // ok
          "Ä": "A",
          // ok
          // 'á': 'a', duplicate see charMap/latin
          // 'Á': 'A', duplicate see charMap/latin
          "ö": "o",
          // ok
          "Ö": "O",
          // ok
          // 'ő': 'o', duplicate see charMap/latin
          // 'Ő': 'O', duplicate see charMap/latin
          "ü": "u",
          "Ü": "U",
          "ű": "u",
          "Ű": "U"
        },
        "lt": {
          // Lithuanian
          "ą": "a",
          "č": "c",
          "ę": "e",
          "ė": "e",
          "į": "i",
          "š": "s",
          "ų": "u",
          "ū": "u",
          "ž": "z",
          "Ą": "A",
          "Č": "C",
          "Ę": "E",
          "Ė": "E",
          "Į": "I",
          "Š": "S",
          "Ų": "U",
          "Ū": "U"
        },
        "lv": {
          // Latvian
          "ā": "a",
          "č": "c",
          "ē": "e",
          "ģ": "g",
          "ī": "i",
          "ķ": "k",
          "ļ": "l",
          "ņ": "n",
          "š": "s",
          "ū": "u",
          "ž": "z",
          "Ā": "A",
          "Č": "C",
          "Ē": "E",
          "Ģ": "G",
          "Ī": "i",
          "Ķ": "k",
          "Ļ": "L",
          "Ņ": "N",
          "Š": "S",
          "Ū": "u",
          "Ž": "Z"
        },
        "pl": {
          // Polish
          "ą": "a",
          "ć": "c",
          "ę": "e",
          "ł": "l",
          "ń": "n",
          "ó": "o",
          "ś": "s",
          "ź": "z",
          "ż": "z",
          "Ą": "A",
          "Ć": "C",
          "Ę": "e",
          "Ł": "L",
          "Ń": "N",
          "Ó": "O",
          "Ś": "S",
          "Ź": "Z",
          "Ż": "Z"
        },
        "sv": {
          // Swedish
          // 'å': 'a', duplicate see charMap/latin
          // 'Å': 'A', duplicate see charMap/latin
          "ä": "a",
          // ok
          "Ä": "A",
          // ok
          "ö": "o",
          // ok
          "Ö": "O"
          // ok
        },
        "sk": {
          // Slovak
          "ä": "a",
          "Ä": "A"
        },
        "sr": {
          // Serbian
          "љ": "lj",
          "њ": "nj",
          "Љ": "Lj",
          "Њ": "Nj",
          "đ": "dj",
          "Đ": "Dj"
        },
        "tr": {
          // Turkish
          "Ü": "U",
          "Ö": "O",
          "ü": "u",
          "ö": "o"
        }
      };
      var symbolMap = {
        "ar": {
          "∆": "delta",
          "∞": "la-nihaya",
          "♥": "hob",
          "&": "wa",
          "|": "aw",
          "<": "aqal-men",
          ">": "akbar-men",
          "∑": "majmou",
          "¤": "omla"
        },
        "az": {},
        "ca": {
          "∆": "delta",
          "∞": "infinit",
          "♥": "amor",
          "&": "i",
          "|": "o",
          "<": "menys que",
          ">": "mes que",
          "∑": "suma dels",
          "¤": "moneda"
        },
        "cs": {
          "∆": "delta",
          "∞": "nekonecno",
          "♥": "laska",
          "&": "a",
          "|": "nebo",
          "<": "mensi nez",
          ">": "vetsi nez",
          "∑": "soucet",
          "¤": "mena"
        },
        "de": {
          "∆": "delta",
          "∞": "unendlich",
          "♥": "Liebe",
          "&": "und",
          "|": "oder",
          "<": "kleiner als",
          ">": "groesser als",
          "∑": "Summe von",
          "¤": "Waehrung"
        },
        "dv": {
          "∆": "delta",
          "∞": "kolunulaa",
          "♥": "loabi",
          "&": "aai",
          "|": "noonee",
          "<": "ah vure kuda",
          ">": "ah vure bodu",
          "∑": "jumula",
          "¤": "faisaa"
        },
        "en": {
          "∆": "delta",
          "∞": "infinity",
          "♥": "love",
          "&": "and",
          "|": "or",
          "<": "less than",
          ">": "greater than",
          "∑": "sum",
          "¤": "currency"
        },
        "es": {
          "∆": "delta",
          "∞": "infinito",
          "♥": "amor",
          "&": "y",
          "|": "u",
          "<": "menos que",
          ">": "mas que",
          "∑": "suma de los",
          "¤": "moneda"
        },
        "fa": {
          "∆": "delta",
          "∞": "bi-nahayat",
          "♥": "eshgh",
          "&": "va",
          "|": "ya",
          "<": "kamtar-az",
          ">": "bishtar-az",
          "∑": "majmooe",
          "¤": "vahed"
        },
        "fi": {
          "∆": "delta",
          "∞": "aarettomyys",
          "♥": "rakkaus",
          "&": "ja",
          "|": "tai",
          "<": "pienempi kuin",
          ">": "suurempi kuin",
          "∑": "summa",
          "¤": "valuutta"
        },
        "fr": {
          "∆": "delta",
          "∞": "infiniment",
          "♥": "Amour",
          "&": "et",
          "|": "ou",
          "<": "moins que",
          ">": "superieure a",
          "∑": "somme des",
          "¤": "monnaie"
        },
        "ge": {
          "∆": "delta",
          "∞": "usasruloba",
          "♥": "siqvaruli",
          "&": "da",
          "|": "an",
          "<": "naklebi",
          ">": "meti",
          "∑": "jami",
          "¤": "valuta"
        },
        "gr": {},
        "hu": {
          "∆": "delta",
          "∞": "vegtelen",
          "♥": "szerelem",
          "&": "es",
          "|": "vagy",
          "<": "kisebb mint",
          ">": "nagyobb mint",
          "∑": "szumma",
          "¤": "penznem"
        },
        "it": {
          "∆": "delta",
          "∞": "infinito",
          "♥": "amore",
          "&": "e",
          "|": "o",
          "<": "minore di",
          ">": "maggiore di",
          "∑": "somma",
          "¤": "moneta"
        },
        "lt": {
          "∆": "delta",
          "∞": "begalybe",
          "♥": "meile",
          "&": "ir",
          "|": "ar",
          "<": "maziau nei",
          ">": "daugiau nei",
          "∑": "suma",
          "¤": "valiuta"
        },
        "lv": {
          "∆": "delta",
          "∞": "bezgaliba",
          "♥": "milestiba",
          "&": "un",
          "|": "vai",
          "<": "mazak neka",
          ">": "lielaks neka",
          "∑": "summa",
          "¤": "valuta"
        },
        "my": {
          "∆": "kwahkhyaet",
          "∞": "asaonasme",
          "♥": "akhyait",
          "&": "nhin",
          "|": "tho",
          "<": "ngethaw",
          ">": "kyithaw",
          "∑": "paungld",
          "¤": "ngwekye"
        },
        "mk": {},
        "nl": {
          "∆": "delta",
          "∞": "oneindig",
          "♥": "liefde",
          "&": "en",
          "|": "of",
          "<": "kleiner dan",
          ">": "groter dan",
          "∑": "som",
          "¤": "valuta"
        },
        "pl": {
          "∆": "delta",
          "∞": "nieskonczonosc",
          "♥": "milosc",
          "&": "i",
          "|": "lub",
          "<": "mniejsze niz",
          ">": "wieksze niz",
          "∑": "suma",
          "¤": "waluta"
        },
        "pt": {
          "∆": "delta",
          "∞": "infinito",
          "♥": "amor",
          "&": "e",
          "|": "ou",
          "<": "menor que",
          ">": "maior que",
          "∑": "soma",
          "¤": "moeda"
        },
        "ro": {
          "∆": "delta",
          "∞": "infinit",
          "♥": "dragoste",
          "&": "si",
          "|": "sau",
          "<": "mai mic ca",
          ">": "mai mare ca",
          "∑": "suma",
          "¤": "valuta"
        },
        "ru": {
          "∆": "delta",
          "∞": "beskonechno",
          "♥": "lubov",
          "&": "i",
          "|": "ili",
          "<": "menshe",
          ">": "bolshe",
          "∑": "summa",
          "¤": "valjuta"
        },
        "sk": {
          "∆": "delta",
          "∞": "nekonecno",
          "♥": "laska",
          "&": "a",
          "|": "alebo",
          "<": "menej ako",
          ">": "viac ako",
          "∑": "sucet",
          "¤": "mena"
        },
        "sr": {},
        "tr": {
          "∆": "delta",
          "∞": "sonsuzluk",
          "♥": "ask",
          "&": "ve",
          "|": "veya",
          "<": "kucuktur",
          ">": "buyuktur",
          "∑": "toplam",
          "¤": "para birimi"
        },
        "uk": {
          "∆": "delta",
          "∞": "bezkinechnist",
          "♥": "lubov",
          "&": "i",
          "|": "abo",
          "<": "menshe",
          ">": "bilshe",
          "∑": "suma",
          "¤": "valjuta"
        },
        "vn": {
          "∆": "delta",
          "∞": "vo cuc",
          "♥": "yeu",
          "&": "va",
          "|": "hoac",
          "<": "nho hon",
          ">": "lon hon",
          "∑": "tong",
          "¤": "tien te"
        }
      };
      var uricChars = [";", "?", ":", "@", "&", "=", "+", "$", ",", "/"].join("");
      var uricNoSlashChars = [";", "?", ":", "@", "&", "=", "+", "$", ","].join("");
      var markChars = [".", "!", "~", "*", "'", "(", ")"].join("");
      var getSlug = function getSlug2(input, opts) {
        var separator = "-";
        var result = "";
        var diatricString = "";
        var convertSymbols = true;
        var customReplacements = {};
        var maintainCase;
        var titleCase;
        var truncate;
        var uricFlag;
        var uricNoSlashFlag;
        var markFlag;
        var symbol;
        var langChar;
        var lucky;
        var i2;
        var ch;
        var l2;
        var lastCharWasSymbol;
        var lastCharWasDiatric;
        var allowedChars = "";
        if (typeof input !== "string") {
          return "";
        }
        if (typeof opts === "string") {
          separator = opts;
        }
        symbol = symbolMap.en;
        langChar = langCharMap.en;
        if (typeof opts === "object") {
          maintainCase = opts.maintainCase || false;
          customReplacements = opts.custom && typeof opts.custom === "object" ? opts.custom : customReplacements;
          truncate = +opts.truncate > 1 && opts.truncate || false;
          uricFlag = opts.uric || false;
          uricNoSlashFlag = opts.uricNoSlash || false;
          markFlag = opts.mark || false;
          convertSymbols = opts.symbols === false || opts.lang === false ? false : true;
          separator = opts.separator || separator;
          if (uricFlag) {
            allowedChars += uricChars;
          }
          if (uricNoSlashFlag) {
            allowedChars += uricNoSlashChars;
          }
          if (markFlag) {
            allowedChars += markChars;
          }
          symbol = opts.lang && symbolMap[opts.lang] && convertSymbols ? symbolMap[opts.lang] : convertSymbols ? symbolMap.en : {};
          langChar = opts.lang && langCharMap[opts.lang] ? langCharMap[opts.lang] : opts.lang === false || opts.lang === true ? {} : langCharMap.en;
          if (opts.titleCase && typeof opts.titleCase.length === "number" && Array.prototype.toString.call(opts.titleCase)) {
            opts.titleCase.forEach(function(v) {
              customReplacements[v + ""] = v + "";
            });
            titleCase = true;
          } else {
            titleCase = !!opts.titleCase;
          }
          if (opts.custom && typeof opts.custom.length === "number" && Array.prototype.toString.call(opts.custom)) {
            opts.custom.forEach(function(v) {
              customReplacements[v + ""] = v + "";
            });
          }
          Object.keys(customReplacements).forEach(function(v) {
            var r2;
            if (v.length > 1) {
              r2 = new RegExp("\\b" + escapeChars(v) + "\\b", "gi");
            } else {
              r2 = new RegExp(escapeChars(v), "gi");
            }
            input = input.replace(r2, customReplacements[v]);
          });
          for (ch in customReplacements) {
            allowedChars += ch;
          }
        }
        allowedChars += separator;
        allowedChars = escapeChars(allowedChars);
        input = input.replace(/(^\s+|\s+$)/g, "");
        lastCharWasSymbol = false;
        lastCharWasDiatric = false;
        for (i2 = 0, l2 = input.length; i2 < l2; i2++) {
          ch = input[i2];
          if (isReplacedCustomChar(ch, customReplacements)) {
            lastCharWasSymbol = false;
          } else if (langChar[ch]) {
            ch = lastCharWasSymbol && langChar[ch].match(/[A-Za-z0-9]/) ? " " + langChar[ch] : langChar[ch];
            lastCharWasSymbol = false;
          } else if (ch in charMap) {
            if (i2 + 1 < l2 && lookAheadCharArray.indexOf(input[i2 + 1]) >= 0) {
              diatricString += ch;
              ch = "";
            } else if (lastCharWasDiatric === true) {
              ch = diatricMap[diatricString] + charMap[ch];
              diatricString = "";
            } else {
              ch = lastCharWasSymbol && charMap[ch].match(/[A-Za-z0-9]/) ? " " + charMap[ch] : charMap[ch];
            }
            lastCharWasSymbol = false;
            lastCharWasDiatric = false;
          } else if (ch in diatricMap) {
            diatricString += ch;
            ch = "";
            if (i2 === l2 - 1) {
              ch = diatricMap[diatricString];
            }
            lastCharWasDiatric = true;
          } else if (
            // process symbol chars
            symbol[ch] && !(uricFlag && uricChars.indexOf(ch) !== -1) && !(uricNoSlashFlag && uricNoSlashChars.indexOf(ch) !== -1)
          ) {
            ch = lastCharWasSymbol || result.substr(-1).match(/[A-Za-z0-9]/) ? separator + symbol[ch] : symbol[ch];
            ch += input[i2 + 1] !== void 0 && input[i2 + 1].match(/[A-Za-z0-9]/) ? separator : "";
            lastCharWasSymbol = true;
          } else {
            if (lastCharWasDiatric === true) {
              ch = diatricMap[diatricString] + ch;
              diatricString = "";
              lastCharWasDiatric = false;
            } else if (lastCharWasSymbol && (/[A-Za-z0-9]/.test(ch) || result.substr(-1).match(/A-Za-z0-9]/))) {
              ch = " " + ch;
            }
            lastCharWasSymbol = false;
          }
          result += ch.replace(new RegExp("[^\\w\\s" + allowedChars + "_-]", "g"), separator);
        }
        if (titleCase) {
          result = result.replace(/(\w)(\S*)/g, function(_2, i22, r2) {
            var j = i22.toUpperCase() + (r2 !== null ? r2 : "");
            return Object.keys(customReplacements).indexOf(j.toLowerCase()) < 0 ? j : j.toLowerCase();
          });
        }
        result = result.replace(/\s+/g, separator).replace(new RegExp("\\" + separator + "+", "g"), separator).replace(new RegExp("(^\\" + separator + "+|\\" + separator + "+$)", "g"), "");
        if (truncate && result.length > truncate) {
          lucky = result.charAt(truncate) === separator;
          result = result.slice(0, truncate);
          if (!lucky) {
            result = result.slice(0, result.lastIndexOf(separator));
          }
        }
        if (!maintainCase && !titleCase) {
          result = result.toLowerCase();
        }
        return result;
      };
      var createSlug = function createSlug2(opts) {
        return function getSlugWithConfig(input) {
          return getSlug(input, opts);
        };
      };
      var escapeChars = function escapeChars2(input) {
        return input.replace(/[-\\^$*+?.()|[\]{}\/]/g, "\\$&");
      };
      var isReplacedCustomChar = function(ch, customReplacements) {
        for (var c in customReplacements) {
          if (customReplacements[c] === ch) {
            return true;
          }
        }
      };
      if (typeof module !== "undefined" && module.exports) {
        module.exports = getSlug;
        module.exports.createSlug = createSlug;
      } else if (typeof define !== "undefined" && define.amd) {
        define([], function() {
          return getSlug;
        });
      } else {
        try {
          if (root.getSlug || root.createSlug) {
            throw "speakingurl: globals exists /(getSlug|createSlug)/";
          } else {
            root.getSlug = getSlug;
            root.createSlug = createSlug;
          }
        } catch (e2) {
        }
      }
    })(exports);
  }
});
var require_speakingurl2 = __commonJS({
  "../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/index.js"(exports, module) {
    init_esm_shims();
    module.exports = require_speakingurl();
  }
});
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
function isReadonly(value) {
  return !!(value && value[
    "__v_isReadonly"
    /* IS_READONLY */
  ]);
}
function isReactive(value) {
  if (isReadonly(value)) {
    return isReactive(value[
      "__v_raw"
      /* RAW */
    ]);
  }
  return !!(value && value[
    "__v_isReactive"
    /* IS_REACTIVE */
  ]);
}
function isRef(r2) {
  return !!(r2 && r2.__v_isRef === true);
}
function toRaw(observed) {
  const raw = observed && observed[
    "__v_raw"
    /* RAW */
  ];
  return raw ? toRaw(raw) : observed;
}
var Fragment = Symbol.for("v-fgt");
init_esm_shims();
function getComponentTypeName(options) {
  return options.name || options._componentTag || options.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__ || options.__name;
}
function getComponentFileName(options) {
  const file = options.__file;
  if (file)
    return classify(basename(file, ".vue"));
}
function saveComponentGussedName(instance, name) {
  instance.type.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__ = name;
  return name;
}
function getAppRecord(instance) {
  if (instance.__VUE_DEVTOOLS_NEXT_APP_RECORD__)
    return instance.__VUE_DEVTOOLS_NEXT_APP_RECORD__;
  else if (instance.root)
    return instance.appContext.app.__VUE_DEVTOOLS_NEXT_APP_RECORD__;
}
async function getComponentId(options) {
  const { app, uid: uid2, instance } = options;
  try {
    if (instance.__VUE_DEVTOOLS_NEXT_UID__)
      return instance.__VUE_DEVTOOLS_NEXT_UID__;
    const appRecord = await getAppRecord(app);
    if (!appRecord)
      return null;
    const isRoot = appRecord.rootInstance === instance;
    return `${appRecord.id}:${isRoot ? "root" : uid2}`;
  } catch (e2) {
  }
}
function isFragment(instance) {
  var _a25;
  const subTreeType = (_a25 = instance.subTree) == null ? void 0 : _a25.type;
  return subTreeType === Fragment;
}
function getInstanceName(instance) {
  var _a25, _b25, _c;
  const name = getComponentTypeName((instance == null ? void 0 : instance.type) || {});
  if (name)
    return name;
  if ((instance == null ? void 0 : instance.root) === instance)
    return "Root";
  for (const key in (_b25 = (_a25 = instance.parent) == null ? void 0 : _a25.type) == null ? void 0 : _b25.components) {
    if (instance.parent.type.components[key] === (instance == null ? void 0 : instance.type))
      return saveComponentGussedName(instance, key);
  }
  for (const key in (_c = instance.appContext) == null ? void 0 : _c.components) {
    if (instance.appContext.components[key] === (instance == null ? void 0 : instance.type))
      return saveComponentGussedName(instance, key);
  }
  const fileName = getComponentFileName((instance == null ? void 0 : instance.type) || {});
  if (fileName)
    return fileName;
  return "Anonymous Component";
}
function getComponentInstance(appRecord, instanceId) {
  instanceId = instanceId || `${appRecord.id}:root`;
  const instance = appRecord.instanceMap.get(instanceId);
  return instance || appRecord.instanceMap.get(":root");
}
var StateEditor = class {
  constructor() {
    this.refEditor = new RefStateEditor();
  }
  set(object, path, value, cb) {
    const sections = Array.isArray(path) ? path : path.split(".");
    while (sections.length > 1) {
      const section = sections.shift();
      if (object instanceof Map)
        object = object.get(section);
      if (object instanceof Set)
        object = Array.from(object.values())[section];
      else object = object[section];
      if (this.refEditor.isRef(object))
        object = this.refEditor.get(object);
    }
    const field = sections[0];
    const item = this.refEditor.get(object)[field];
    if (cb) {
      cb(object, field, value);
    } else {
      if (this.refEditor.isRef(item))
        this.refEditor.set(item, value);
      else object[field] = value;
    }
  }
  get(object, path) {
    const sections = Array.isArray(path) ? path : path.split(".");
    for (let i2 = 0; i2 < sections.length; i2++) {
      if (object instanceof Map)
        object = object.get(sections[i2]);
      else
        object = object[sections[i2]];
      if (this.refEditor.isRef(object))
        object = this.refEditor.get(object);
      if (!object)
        return void 0;
    }
    return object;
  }
  has(object, path, parent = false) {
    if (typeof object === "undefined")
      return false;
    const sections = Array.isArray(path) ? path.slice() : path.split(".");
    const size2 = !parent ? 1 : 2;
    while (object && sections.length > size2) {
      const section = sections.shift();
      object = object[section];
      if (this.refEditor.isRef(object))
        object = this.refEditor.get(object);
    }
    return object != null && Object.prototype.hasOwnProperty.call(object, sections[0]);
  }
  createDefaultSetCallback(state) {
    return (object, field, value) => {
      if (state.remove || state.newKey) {
        if (Array.isArray(object))
          object.splice(field, 1);
        else if (toRaw(object) instanceof Map)
          object.delete(field);
        else if (toRaw(object) instanceof Set)
          object.delete(Array.from(object.values())[field]);
        else Reflect.deleteProperty(object, field);
      }
      if (!state.remove) {
        const target22 = object[state.newKey || field];
        if (this.refEditor.isRef(target22))
          this.refEditor.set(target22, value);
        else if (toRaw(object) instanceof Map)
          object.set(state.newKey || field, value);
        else if (toRaw(object) instanceof Set)
          object.add(value);
        else
          object[state.newKey || field] = value;
      }
    };
  }
};
var RefStateEditor = class {
  set(ref2, value) {
    if (isRef(ref2)) {
      ref2.value = value;
    } else {
      if (ref2 instanceof Set && Array.isArray(value)) {
        ref2.clear();
        value.forEach((v) => ref2.add(v));
        return;
      }
      const currentKeys = Object.keys(value);
      if (ref2 instanceof Map) {
        const previousKeysSet2 = new Set(ref2.keys());
        currentKeys.forEach((key) => {
          ref2.set(key, Reflect.get(value, key));
          previousKeysSet2.delete(key);
        });
        previousKeysSet2.forEach((key) => ref2.delete(key));
        return;
      }
      const previousKeysSet = new Set(Object.keys(ref2));
      currentKeys.forEach((key) => {
        Reflect.set(ref2, key, Reflect.get(value, key));
        previousKeysSet.delete(key);
      });
      previousKeysSet.forEach((key) => Reflect.deleteProperty(ref2, key));
    }
  }
  get(ref2) {
    return isRef(ref2) ? ref2.value : ref2;
  }
  isRef(ref2) {
    return isRef(ref2) || isReactive(ref2);
  }
};
init_esm_shims();
function getRootElementsFromComponentInstance(instance) {
  if (isFragment(instance))
    return getFragmentRootElements(instance.subTree);
  if (!instance.subTree)
    return [];
  return [instance.subTree.el];
}
function getFragmentRootElements(vnode) {
  if (!vnode.children)
    return [];
  const list = [];
  vnode.children.forEach((childVnode) => {
    if (childVnode.component)
      list.push(...getRootElementsFromComponentInstance(childVnode.component));
    else if (childVnode == null ? void 0 : childVnode.el)
      list.push(childVnode.el);
  });
  return list;
}
init_esm_shims();
init_esm_shims();
function createRect() {
  const rect = {
    top: 0,
    bottom: 0,
    left: 0,
    right: 0,
    get width() {
      return rect.right - rect.left;
    },
    get height() {
      return rect.bottom - rect.top;
    }
  };
  return rect;
}
var range;
function getTextRect(node) {
  if (!range)
    range = document.createRange();
  range.selectNode(node);
  return range.getBoundingClientRect();
}
function getFragmentRect(vnode) {
  const rect = createRect();
  if (!vnode.children)
    return rect;
  for (let i2 = 0, l2 = vnode.children.length; i2 < l2; i2++) {
    const childVnode = vnode.children[i2];
    let childRect;
    if (childVnode.component) {
      childRect = getComponentBoundingRect(childVnode.component);
    } else if (childVnode.el) {
      const el = childVnode.el;
      if (el.nodeType === 1 || el.getBoundingClientRect)
        childRect = el.getBoundingClientRect();
      else if (el.nodeType === 3 && el.data.trim())
        childRect = getTextRect(el);
    }
    if (childRect)
      mergeRects(rect, childRect);
  }
  return rect;
}
function mergeRects(a2, b) {
  if (!a2.top || b.top < a2.top)
    a2.top = b.top;
  if (!a2.bottom || b.bottom > a2.bottom)
    a2.bottom = b.bottom;
  if (!a2.left || b.left < a2.left)
    a2.left = b.left;
  if (!a2.right || b.right > a2.right)
    a2.right = b.right;
  return a2;
}
var DEFAULT_RECT = {
  top: 0,
  left: 0,
  right: 0,
  bottom: 0,
  width: 0,
  height: 0
};
function getComponentBoundingRect(instance) {
  const el = instance.subTree.el;
  if (typeof window === "undefined") {
    return DEFAULT_RECT;
  }
  if (isFragment(instance))
    return getFragmentRect(instance.subTree);
  else if ((el == null ? void 0 : el.nodeType) === 1)
    return el == null ? void 0 : el.getBoundingClientRect();
  else if (instance.subTree.component)
    return getComponentBoundingRect(instance.subTree.component);
  else
    return DEFAULT_RECT;
}
var CONTAINER_ELEMENT_ID = "__vue-devtools-component-inspector__";
var CARD_ELEMENT_ID = "__vue-devtools-component-inspector__card__";
var COMPONENT_NAME_ELEMENT_ID = "__vue-devtools-component-inspector__name__";
var INDICATOR_ELEMENT_ID = "__vue-devtools-component-inspector__indicator__";
var containerStyles = {
  display: "block",
  zIndex: 2147483640,
  position: "fixed",
  backgroundColor: "#42b88325",
  border: "1px solid #42b88350",
  borderRadius: "5px",
  transition: "all 0.1s ease-in",
  pointerEvents: "none"
};
var cardStyles = {
  fontFamily: "Arial, Helvetica, sans-serif",
  padding: "5px 8px",
  borderRadius: "4px",
  textAlign: "left",
  position: "absolute",
  left: 0,
  color: "#e9e9e9",
  fontSize: "14px",
  fontWeight: 600,
  lineHeight: "24px",
  backgroundColor: "#42b883",
  boxShadow: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)"
};
var indicatorStyles = {
  display: "inline-block",
  fontWeight: 400,
  fontStyle: "normal",
  fontSize: "12px",
  opacity: 0.7
};
function getContainerElement() {
  return document.getElementById(CONTAINER_ELEMENT_ID);
}
function getCardElement() {
  return document.getElementById(CARD_ELEMENT_ID);
}
function getIndicatorElement() {
  return document.getElementById(INDICATOR_ELEMENT_ID);
}
function getNameElement() {
  return document.getElementById(COMPONENT_NAME_ELEMENT_ID);
}
function getStyles(bounds) {
  return {
    left: `${Math.round(bounds.left * 100) / 100}px`,
    top: `${Math.round(bounds.top * 100) / 100}px`,
    width: `${Math.round(bounds.width * 100) / 100}px`,
    height: `${Math.round(bounds.height * 100) / 100}px`
  };
}
function create(options) {
  var _a25;
  const containerEl = document.createElement("div");
  containerEl.id = (_a25 = options.elementId) != null ? _a25 : CONTAINER_ELEMENT_ID;
  Object.assign(containerEl.style, {
    ...containerStyles,
    ...getStyles(options.bounds),
    ...options.style
  });
  const cardEl = document.createElement("span");
  cardEl.id = CARD_ELEMENT_ID;
  Object.assign(cardEl.style, {
    ...cardStyles,
    top: options.bounds.top < 35 ? 0 : "-35px"
  });
  const nameEl = document.createElement("span");
  nameEl.id = COMPONENT_NAME_ELEMENT_ID;
  nameEl.innerHTML = `&lt;${options.name}&gt;&nbsp;&nbsp;`;
  const indicatorEl = document.createElement("i");
  indicatorEl.id = INDICATOR_ELEMENT_ID;
  indicatorEl.innerHTML = `${Math.round(options.bounds.width * 100) / 100} x ${Math.round(options.bounds.height * 100) / 100}`;
  Object.assign(indicatorEl.style, indicatorStyles);
  cardEl.appendChild(nameEl);
  cardEl.appendChild(indicatorEl);
  containerEl.appendChild(cardEl);
  document.body.appendChild(containerEl);
  return containerEl;
}
function update(options) {
  const containerEl = getContainerElement();
  const cardEl = getCardElement();
  const nameEl = getNameElement();
  const indicatorEl = getIndicatorElement();
  if (containerEl) {
    Object.assign(containerEl.style, {
      ...containerStyles,
      ...getStyles(options.bounds)
    });
    Object.assign(cardEl.style, {
      top: options.bounds.top < 35 ? 0 : "-35px"
    });
    nameEl.innerHTML = `&lt;${options.name}&gt;&nbsp;&nbsp;`;
    indicatorEl.innerHTML = `${Math.round(options.bounds.width * 100) / 100} x ${Math.round(options.bounds.height * 100) / 100}`;
  }
}
function highlight(instance) {
  const bounds = getComponentBoundingRect(instance);
  const name = getInstanceName(instance);
  const container = getContainerElement();
  container ? update({ bounds, name }) : create({ bounds, name });
}
function unhighlight() {
  const el = getContainerElement();
  if (el)
    el.style.display = "none";
}
var inspectInstance = null;
function inspectFn(e2) {
  const target22 = e2.target;
  if (target22) {
    const instance = target22.__vueParentComponent;
    if (instance) {
      inspectInstance = instance;
      const el = instance.vnode.el;
      if (el) {
        const bounds = getComponentBoundingRect(instance);
        const name = getInstanceName(instance);
        const container = getContainerElement();
        container ? update({ bounds, name }) : create({ bounds, name });
      }
    }
  }
}
function selectComponentFn(e2, cb) {
  var _a25;
  e2.preventDefault();
  e2.stopPropagation();
  if (inspectInstance) {
    const app = (_a25 = activeAppRecord.value) == null ? void 0 : _a25.app;
    getComponentId({
      app,
      uid: app.uid,
      instance: inspectInstance
    }).then((id) => {
      cb(id);
    });
  }
}
var inspectComponentHighLighterSelectFn = null;
function cancelInspectComponentHighLighter() {
  unhighlight();
  window.removeEventListener("mouseover", inspectFn);
  window.removeEventListener("click", inspectComponentHighLighterSelectFn, true);
  inspectComponentHighLighterSelectFn = null;
}
function inspectComponentHighLighter() {
  window.addEventListener("mouseover", inspectFn);
  return new Promise((resolve2) => {
    function onSelect(e2) {
      e2.preventDefault();
      e2.stopPropagation();
      selectComponentFn(e2, (id) => {
        window.removeEventListener("click", onSelect, true);
        inspectComponentHighLighterSelectFn = null;
        window.removeEventListener("mouseover", inspectFn);
        const el = getContainerElement();
        if (el)
          el.style.display = "none";
        resolve2(JSON.stringify({ id }));
      });
    }
    inspectComponentHighLighterSelectFn = onSelect;
    window.addEventListener("click", onSelect, true);
  });
}
function scrollToComponent(options) {
  const instance = getComponentInstance(activeAppRecord.value, options.id);
  if (instance) {
    const [el] = getRootElementsFromComponentInstance(instance);
    if (typeof el.scrollIntoView === "function") {
      el.scrollIntoView({
        behavior: "smooth"
      });
    } else {
      const bounds = getComponentBoundingRect(instance);
      const scrollTarget = document.createElement("div");
      const styles = {
        ...getStyles(bounds),
        position: "absolute"
      };
      Object.assign(scrollTarget.style, styles);
      document.body.appendChild(scrollTarget);
      scrollTarget.scrollIntoView({
        behavior: "smooth"
      });
      setTimeout(() => {
        document.body.removeChild(scrollTarget);
      }, 2e3);
    }
    setTimeout(() => {
      const bounds = getComponentBoundingRect(instance);
      if (bounds.width || bounds.height) {
        const name = getInstanceName(instance);
        const el2 = getContainerElement();
        el2 ? update({ ...options, name, bounds }) : create({ ...options, name, bounds });
        setTimeout(() => {
          if (el2)
            el2.style.display = "none";
        }, 1500);
      }
    }, 1200);
  }
}
init_esm_shims();
var _a, _b;
(_b = (_a = target).__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__) != null ? _b : _a.__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__ = true;
function waitForInspectorInit(cb) {
  let total = 0;
  const timer = setInterval(() => {
    if (target.__VUE_INSPECTOR__) {
      clearInterval(timer);
      total += 30;
      cb();
    }
    if (total >= /* 5s */
    5e3)
      clearInterval(timer);
  }, 30);
}
function setupInspector() {
  const inspector = target.__VUE_INSPECTOR__;
  const _openInEditor = inspector.openInEditor;
  inspector.openInEditor = async (...params) => {
    inspector.disable();
    _openInEditor(...params);
  };
}
function getComponentInspector() {
  return new Promise((resolve2) => {
    function setup() {
      setupInspector();
      resolve2(target.__VUE_INSPECTOR__);
    }
    if (!target.__VUE_INSPECTOR__) {
      waitForInspectorInit(() => {
        setup();
      });
    } else {
      setup();
    }
  });
}
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
var _a2, _b2;
(_b2 = (_a2 = target).__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS) != null ? _b2 : _a2.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS = [];
var devtoolsTimelineLayers = new Proxy(target.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS, {
  get(target22, prop, receiver) {
    return Reflect.get(target22, prop, receiver);
  }
});
function addTimelineLayer(options, descriptor) {
  devtoolsTimelineLayers.push({
    ...options,
    descriptorId: descriptor.id,
    appRecord: getAppRecord(descriptor.app)
  });
}
var _a3, _b3;
(_b3 = (_a3 = target).__VUE_DEVTOOLS_KIT_INSPECTOR__) != null ? _b3 : _a3.__VUE_DEVTOOLS_KIT_INSPECTOR__ = [];
var devtoolsInspector = new Proxy(target.__VUE_DEVTOOLS_KIT_INSPECTOR__, {
  get(target22, prop, receiver) {
    return Reflect.get(target22, prop, receiver);
  }
});
var callInspectorUpdatedHook = debounce(() => {
  devtoolsContext.hooks.callHook("sendInspectorToClient", getActiveInspectors());
});
function addInspector(inspector, descriptor) {
  devtoolsInspector.push({
    options: inspector,
    descriptor,
    treeFilter: "",
    selectedNodeId: "",
    appRecord: getAppRecord(descriptor.app)
  });
  callInspectorUpdatedHook();
}
function getActiveInspectors() {
  return devtoolsInspector.filter((inspector) => inspector.descriptor.app === activeAppRecord.value.app).filter((inspector) => inspector.descriptor.id !== "components").map((inspector) => {
    var _a25;
    const descriptor = inspector.descriptor;
    const options = inspector.options;
    return {
      id: options.id,
      label: options.label,
      logo: descriptor.logo,
      icon: `custom-ic-baseline-${(_a25 = options == null ? void 0 : options.icon) == null ? void 0 : _a25.replace(/_/g, "-")}`,
      packageName: descriptor.packageName,
      homepage: descriptor.homepage,
      pluginId: descriptor.id
    };
  });
}
function getInspector(id, app) {
  return devtoolsInspector.find((inspector) => inspector.options.id === id && (app ? inspector.descriptor.app === app : true));
}
function createDevToolsCtxHooks() {
  const hooks2 = createHooks();
  hooks2.hook("addInspector", ({ inspector, plugin }) => {
    addInspector(inspector, plugin.descriptor);
  });
  hooks2.hook("sendInspectorTree", async ({ inspectorId, plugin }) => {
    var _a25;
    if (!inspectorId || !((_a25 = plugin == null ? void 0 : plugin.descriptor) == null ? void 0 : _a25.app))
      return;
    const inspector = getInspector(inspectorId, plugin.descriptor.app);
    const _payload = {
      app: plugin.descriptor.app,
      inspectorId,
      filter: (inspector == null ? void 0 : inspector.treeFilter) || "",
      rootNodes: []
    };
    await new Promise((resolve2) => {
      hooks2.callHookWith(
        async (callbacks) => {
          await Promise.all(callbacks.map((cb) => cb(_payload)));
          resolve2();
        },
        "getInspectorTree"
        /* GET_INSPECTOR_TREE */
      );
    });
    hooks2.callHookWith(
      async (callbacks) => {
        await Promise.all(callbacks.map((cb) => cb({
          inspectorId,
          rootNodes: _payload.rootNodes
        })));
      },
      "sendInspectorTreeToClient"
      /* SEND_INSPECTOR_TREE_TO_CLIENT */
    );
  });
  hooks2.hook("sendInspectorState", async ({ inspectorId, plugin }) => {
    var _a25;
    if (!inspectorId || !((_a25 = plugin == null ? void 0 : plugin.descriptor) == null ? void 0 : _a25.app))
      return;
    const inspector = getInspector(inspectorId, plugin.descriptor.app);
    const _payload = {
      app: plugin.descriptor.app,
      inspectorId,
      nodeId: (inspector == null ? void 0 : inspector.selectedNodeId) || "",
      state: null
    };
    const ctx = {
      currentTab: `custom-inspector:${inspectorId}`
    };
    if (_payload.nodeId) {
      await new Promise((resolve2) => {
        hooks2.callHookWith(
          async (callbacks) => {
            await Promise.all(callbacks.map((cb) => cb(_payload, ctx)));
            resolve2();
          },
          "getInspectorState"
          /* GET_INSPECTOR_STATE */
        );
      });
    }
    hooks2.callHookWith(
      async (callbacks) => {
        await Promise.all(callbacks.map((cb) => cb({
          inspectorId,
          nodeId: _payload.nodeId,
          state: _payload.state
        })));
      },
      "sendInspectorStateToClient"
      /* SEND_INSPECTOR_STATE_TO_CLIENT */
    );
  });
  hooks2.hook("customInspectorSelectNode", ({ inspectorId, nodeId, plugin }) => {
    const inspector = getInspector(inspectorId, plugin.descriptor.app);
    if (!inspector)
      return;
    inspector.selectedNodeId = nodeId;
  });
  hooks2.hook("timelineLayerAdded", ({ options, plugin }) => {
    addTimelineLayer(options, plugin.descriptor);
  });
  hooks2.hook("timelineEventAdded", ({ options, plugin }) => {
    hooks2.callHookWith(
      async (callbacks) => {
        await Promise.all(callbacks.map((cb) => cb(options)));
      },
      "sendTimelineEventToClient"
      /* SEND_TIMELINE_EVENT_TO_CLIENT */
    );
  });
  hooks2.hook("getComponentInstances", async ({ app }) => {
    const appRecord = app.__VUE_DEVTOOLS_NEXT_APP_RECORD__;
    if (!appRecord)
      return null;
    const appId = appRecord.id.toString();
    const instances = [...appRecord.instanceMap].filter(([key]) => key.split(":")[0] === appId).map(([, instance]) => instance);
    return instances;
  });
  hooks2.hook("getComponentBounds", async ({ instance }) => {
    const bounds = getComponentBoundingRect(instance);
    return bounds;
  });
  hooks2.hook("getComponentName", ({ instance }) => {
    const name = getInstanceName(instance);
    return name;
  });
  hooks2.hook("componentHighlight", ({ uid: uid2 }) => {
    const instance = activeAppRecord.value.instanceMap.get(uid2);
    if (instance) {
      highlight(instance);
    }
  });
  hooks2.hook("componentUnhighlight", () => {
    unhighlight();
  });
  return hooks2;
}
var _a4, _b4;
(_b4 = (_a4 = target).__VUE_DEVTOOLS_KIT_APP_RECORDS__) != null ? _b4 : _a4.__VUE_DEVTOOLS_KIT_APP_RECORDS__ = [];
var _a5, _b5;
(_b5 = (_a5 = target).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__) != null ? _b5 : _a5.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__ = {};
var _a6, _b6;
(_b6 = (_a6 = target).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__) != null ? _b6 : _a6.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__ = "";
var _a7, _b7;
(_b7 = (_a7 = target).__VUE_DEVTOOLS_KIT_CUSTOM_TABS__) != null ? _b7 : _a7.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__ = [];
var _a8, _b8;
(_b8 = (_a8 = target).__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__) != null ? _b8 : _a8.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__ = [];
var STATE_KEY = "__VUE_DEVTOOLS_KIT_GLOBAL_STATE__";
function initStateFactory() {
  return {
    connected: false,
    clientConnected: false,
    vitePluginDetected: true,
    appRecords: [],
    activeAppRecordId: "",
    tabs: [],
    commands: [],
    highPerfModeEnabled: true,
    devtoolsClientDetected: {}
  };
}
var _a9, _b9;
(_b9 = (_a9 = target)[STATE_KEY]) != null ? _b9 : _a9[STATE_KEY] = initStateFactory();
var callStateUpdatedHook = debounce((state) => {
  devtoolsContext.hooks.callHook("devtoolsStateUpdated", { state });
});
debounce((state, oldState) => {
  devtoolsContext.hooks.callHook("devtoolsConnectedUpdated", { state, oldState });
});
var devtoolsAppRecords = new Proxy(target.__VUE_DEVTOOLS_KIT_APP_RECORDS__, {
  get(_target, prop, receiver) {
    if (prop === "value")
      return target.__VUE_DEVTOOLS_KIT_APP_RECORDS__;
    return target.__VUE_DEVTOOLS_KIT_APP_RECORDS__[prop];
  }
});
var activeAppRecord = new Proxy(target.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__, {
  get(_target, prop, receiver) {
    if (prop === "value")
      return target.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__;
    else if (prop === "id")
      return target.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__;
    return target.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__[prop];
  }
});
function updateAllStates() {
  callStateUpdatedHook({
    ...target[STATE_KEY],
    appRecords: devtoolsAppRecords.value,
    activeAppRecordId: activeAppRecord.id,
    tabs: target.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__,
    commands: target.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__
  });
}
function setActiveAppRecord(app) {
  target.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__ = app;
  updateAllStates();
}
function setActiveAppRecordId(id) {
  target.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__ = id;
  updateAllStates();
}
var devtoolsState = new Proxy(target[STATE_KEY], {
  get(target22, property) {
    if (property === "appRecords") {
      return devtoolsAppRecords;
    } else if (property === "activeAppRecordId") {
      return activeAppRecord.id;
    } else if (property === "tabs") {
      return target.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__;
    } else if (property === "commands") {
      return target.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__;
    }
    return target[STATE_KEY][property];
  },
  deleteProperty(target22, property) {
    delete target22[property];
    return true;
  },
  set(target22, property, value) {
    ({ ...target[STATE_KEY] });
    target22[property] = value;
    target[STATE_KEY][property] = value;
    return true;
  }
});
function openInEditor(options = {}) {
  var _a25, _b25, _c;
  const { file, host, baseUrl = window.location.origin, line = 0, column = 0 } = options;
  if (file) {
    if (host === "chrome-extension") {
      const fileName = file.replace(/\\/g, "\\\\");
      const _baseUrl = (_b25 = (_a25 = window.VUE_DEVTOOLS_CONFIG) == null ? void 0 : _a25.openInEditorHost) != null ? _b25 : "/";
      fetch(`${_baseUrl}__open-in-editor?file=${encodeURI(file)}`).then((response) => {
        if (!response.ok) {
          const msg = `Opening component ${fileName} failed`;
          console.log(`%c${msg}`, "color:red");
        }
      });
    } else if (devtoolsState.vitePluginDetected) {
      const _baseUrl = (_c = target.__VUE_DEVTOOLS_OPEN_IN_EDITOR_BASE_URL__) != null ? _c : baseUrl;
      target.__VUE_INSPECTOR__.openInEditor(_baseUrl, file, line, column);
    }
  }
}
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
var _a10, _b10;
(_b10 = (_a10 = target).__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__) != null ? _b10 : _a10.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__ = [];
var devtoolsPluginBuffer = new Proxy(target.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__, {
  get(target22, prop, receiver) {
    return Reflect.get(target22, prop, receiver);
  }
});
function _getSettings(settings) {
  const _settings = {};
  Object.keys(settings).forEach((key) => {
    _settings[key] = settings[key].defaultValue;
  });
  return _settings;
}
function getPluginLocalKey(pluginId) {
  return `__VUE_DEVTOOLS_NEXT_PLUGIN_SETTINGS__${pluginId}__`;
}
function getPluginSettingsOptions(pluginId) {
  var _a25, _b25, _c;
  const item = (_b25 = (_a25 = devtoolsPluginBuffer.find((item2) => {
    var _a26;
    return item2[0].id === pluginId && !!((_a26 = item2[0]) == null ? void 0 : _a26.settings);
  })) == null ? void 0 : _a25[0]) != null ? _b25 : null;
  return (_c = item == null ? void 0 : item.settings) != null ? _c : null;
}
function getPluginSettings(pluginId, fallbackValue) {
  var _a25, _b25, _c;
  const localKey = getPluginLocalKey(pluginId);
  if (localKey) {
    const localSettings = localStorage.getItem(localKey);
    if (localSettings) {
      return JSON.parse(localSettings);
    }
  }
  if (pluginId) {
    const item = (_b25 = (_a25 = devtoolsPluginBuffer.find((item2) => item2[0].id === pluginId)) == null ? void 0 : _a25[0]) != null ? _b25 : null;
    return _getSettings((_c = item == null ? void 0 : item.settings) != null ? _c : {});
  }
  return _getSettings(fallbackValue);
}
function initPluginSettings(pluginId, settings) {
  const localKey = getPluginLocalKey(pluginId);
  const localSettings = localStorage.getItem(localKey);
  if (!localSettings) {
    localStorage.setItem(localKey, JSON.stringify(_getSettings(settings)));
  }
}
function setPluginSettings(pluginId, key, value) {
  const localKey = getPluginLocalKey(pluginId);
  const localSettings = localStorage.getItem(localKey);
  const parsedLocalSettings = JSON.parse(localSettings || "{}");
  const updated = {
    ...parsedLocalSettings,
    [key]: value
  };
  localStorage.setItem(localKey, JSON.stringify(updated));
  devtoolsContext.hooks.callHookWith(
    (callbacks) => {
      callbacks.forEach((cb) => cb({
        pluginId,
        key,
        oldValue: parsedLocalSettings[key],
        newValue: value,
        settings: updated
      }));
    },
    "setPluginSettings"
    /* SET_PLUGIN_SETTINGS */
  );
}
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
var _a11, _b11;
var devtoolsHooks = (_b11 = (_a11 = target).__VUE_DEVTOOLS_HOOK) != null ? _b11 : _a11.__VUE_DEVTOOLS_HOOK = createHooks();
var on = {
  vueAppInit(fn) {
    devtoolsHooks.hook("app:init", fn);
  },
  vueAppUnmount(fn) {
    devtoolsHooks.hook("app:unmount", fn);
  },
  vueAppConnected(fn) {
    devtoolsHooks.hook("app:connected", fn);
  },
  componentAdded(fn) {
    return devtoolsHooks.hook("component:added", fn);
  },
  componentUpdated(fn) {
    return devtoolsHooks.hook("component:updated", fn);
  },
  componentRemoved(fn) {
    return devtoolsHooks.hook("component:removed", fn);
  },
  setupDevtoolsPlugin(fn) {
    devtoolsHooks.hook("devtools-plugin:setup", fn);
  }
};
var hook = {
  on,
  setupDevToolsPlugin(pluginDescriptor, setupFn) {
    return devtoolsHooks.callHook("devtools-plugin:setup", pluginDescriptor, setupFn);
  }
};
var DevToolsV6PluginAPI = class {
  constructor({ plugin, ctx }) {
    this.hooks = ctx.hooks;
    this.plugin = plugin;
  }
  get on() {
    return {
      // component inspector
      visitComponentTree: (handler) => {
        this.hooks.hook("visitComponentTree", handler);
      },
      inspectComponent: (handler) => {
        this.hooks.hook("inspectComponent", handler);
      },
      editComponentState: (handler) => {
        this.hooks.hook("editComponentState", handler);
      },
      // custom inspector
      getInspectorTree: (handler) => {
        this.hooks.hook("getInspectorTree", handler);
      },
      getInspectorState: (handler) => {
        this.hooks.hook("getInspectorState", handler);
      },
      editInspectorState: (handler) => {
        this.hooks.hook("editInspectorState", handler);
      },
      // timeline
      inspectTimelineEvent: (handler) => {
        this.hooks.hook("inspectTimelineEvent", handler);
      },
      timelineCleared: (handler) => {
        this.hooks.hook("timelineCleared", handler);
      },
      // settings
      setPluginSettings: (handler) => {
        this.hooks.hook("setPluginSettings", handler);
      }
    };
  }
  // component inspector
  notifyComponentUpdate(instance) {
    var _a25;
    const inspector = getActiveInspectors().find((i2) => i2.packageName === this.plugin.descriptor.packageName);
    if (inspector == null ? void 0 : inspector.id) {
      if (instance) {
        const args = [
          instance.appContext.app,
          instance.uid,
          (_a25 = instance.parent) == null ? void 0 : _a25.uid,
          instance
        ];
        devtoolsHooks.callHook("component:updated", ...args);
      } else {
        devtoolsHooks.callHook(
          "component:updated"
          /* COMPONENT_UPDATED */
        );
      }
      this.hooks.callHook("sendInspectorState", { inspectorId: inspector.id, plugin: this.plugin });
    }
  }
  // custom inspector
  addInspector(options) {
    this.hooks.callHook("addInspector", { inspector: options, plugin: this.plugin });
    if (this.plugin.descriptor.settings) {
      initPluginSettings(options.id, this.plugin.descriptor.settings);
    }
  }
  sendInspectorTree(inspectorId) {
    this.hooks.callHook("sendInspectorTree", { inspectorId, plugin: this.plugin });
  }
  sendInspectorState(inspectorId) {
    this.hooks.callHook("sendInspectorState", { inspectorId, plugin: this.plugin });
  }
  selectInspectorNode(inspectorId, nodeId) {
    this.hooks.callHook("customInspectorSelectNode", { inspectorId, nodeId, plugin: this.plugin });
  }
  // timeline
  now() {
    return Date.now();
  }
  addTimelineLayer(options) {
    this.hooks.callHook("timelineLayerAdded", { options, plugin: this.plugin });
  }
  addTimelineEvent(options) {
    this.hooks.callHook("timelineEventAdded", { options, plugin: this.plugin });
  }
  // settings
  getSettings(pluginId) {
    return getPluginSettings(pluginId != null ? pluginId : this.plugin.descriptor.id, this.plugin.descriptor.settings);
  }
  // utilities
  getComponentInstances(app) {
    return this.hooks.callHook("getComponentInstances", { app });
  }
  getComponentBounds(instance) {
    return this.hooks.callHook("getComponentBounds", { instance });
  }
  getComponentName(instance) {
    return this.hooks.callHook("getComponentName", { instance });
  }
  highlightElement(instance) {
    const uid2 = instance.__VUE_DEVTOOLS_NEXT_UID__;
    return this.hooks.callHook("componentHighlight", { uid: uid2 });
  }
  unhighlightElement() {
    return this.hooks.callHook(
      "componentUnhighlight"
      /* COMPONENT_UNHIGHLIGHT */
    );
  }
};
var DevToolsPluginAPI = DevToolsV6PluginAPI;
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
var UNDEFINED = "__vue_devtool_undefined__";
var INFINITY = "__vue_devtool_infinity__";
var NEGATIVE_INFINITY = "__vue_devtool_negative_infinity__";
var NAN = "__vue_devtool_nan__";
init_esm_shims();
init_esm_shims();
var tokenMap = {
  [UNDEFINED]: "undefined",
  [NAN]: "NaN",
  [INFINITY]: "Infinity",
  [NEGATIVE_INFINITY]: "-Infinity"
};
Object.entries(tokenMap).reduce((acc, [key, value]) => {
  acc[value] = key;
  return acc;
}, {});
init_esm_shims();
init_esm_shims();
init_esm_shims();
var _a12, _b12;
(_b12 = (_a12 = target).__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__) != null ? _b12 : _a12.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__ = /* @__PURE__ */ new Set();
function setupDevToolsPlugin(pluginDescriptor, setupFn) {
  return hook.setupDevToolsPlugin(pluginDescriptor, setupFn);
}
function callDevToolsPluginSetupFn(plugin, app) {
  const [pluginDescriptor, setupFn] = plugin;
  if (pluginDescriptor.app !== app)
    return;
  const api = new DevToolsPluginAPI({
    plugin: {
      setupFn,
      descriptor: pluginDescriptor
    },
    ctx: devtoolsContext
  });
  if (pluginDescriptor.packageName === "vuex") {
    api.on.editInspectorState((payload) => {
      api.sendInspectorState(payload.inspectorId);
    });
  }
  setupFn(api);
}
function registerDevToolsPlugin(app) {
  if (target.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.has(app))
    return;
  target.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.add(app);
  devtoolsPluginBuffer.forEach((plugin) => {
    callDevToolsPluginSetupFn(plugin, app);
  });
}
init_esm_shims();
init_esm_shims();
var ROUTER_KEY = "__VUE_DEVTOOLS_ROUTER__";
var ROUTER_INFO_KEY = "__VUE_DEVTOOLS_ROUTER_INFO__";
var _a13, _b13;
(_b13 = (_a13 = target)[ROUTER_INFO_KEY]) != null ? _b13 : _a13[ROUTER_INFO_KEY] = {
  currentRoute: null,
  routes: []
};
var _a14, _b14;
(_b14 = (_a14 = target)[ROUTER_KEY]) != null ? _b14 : _a14[ROUTER_KEY] = {};
new Proxy(target[ROUTER_INFO_KEY], {
  get(target22, property) {
    return target[ROUTER_INFO_KEY][property];
  }
});
new Proxy(target[ROUTER_KEY], {
  get(target22, property) {
    if (property === "value") {
      return target[ROUTER_KEY];
    }
  }
});
function getRoutes(router) {
  const routesMap = /* @__PURE__ */ new Map();
  return ((router == null ? void 0 : router.getRoutes()) || []).filter((i2) => !routesMap.has(i2.path) && routesMap.set(i2.path, 1));
}
function filterRoutes(routes2) {
  return routes2.map((item) => {
    let { path, name, children, meta } = item;
    if (children == null ? void 0 : children.length)
      children = filterRoutes(children);
    return {
      path,
      name,
      children,
      meta
    };
  });
}
function filterCurrentRoute(route) {
  if (route) {
    const { fullPath, hash, href, path, name, matched, params, query } = route;
    return {
      fullPath,
      hash,
      href,
      path,
      name,
      params,
      query,
      matched: filterRoutes(matched)
    };
  }
  return route;
}
function normalizeRouterInfo(appRecord, activeAppRecord2) {
  function init() {
    var _a25;
    const router = (_a25 = appRecord.app) == null ? void 0 : _a25.config.globalProperties.$router;
    const currentRoute = filterCurrentRoute(router == null ? void 0 : router.currentRoute.value);
    const routes2 = filterRoutes(getRoutes(router));
    const c = console.warn;
    console.warn = () => {
    };
    target[ROUTER_INFO_KEY] = {
      currentRoute: currentRoute ? deepClone(currentRoute) : {},
      routes: deepClone(routes2)
    };
    target[ROUTER_KEY] = router;
    console.warn = c;
  }
  init();
  hook.on.componentUpdated(debounce(() => {
    var _a25;
    if (((_a25 = activeAppRecord2.value) == null ? void 0 : _a25.app) !== appRecord.app)
      return;
    init();
    devtoolsContext.hooks.callHook("routerInfoUpdated", { state: target[ROUTER_INFO_KEY] });
  }, 200));
}
function createDevToolsApi(hooks2) {
  return {
    // get inspector tree
    async getInspectorTree(payload) {
      const _payload = {
        ...payload,
        app: activeAppRecord.value.app,
        rootNodes: []
      };
      await new Promise((resolve2) => {
        hooks2.callHookWith(
          async (callbacks) => {
            await Promise.all(callbacks.map((cb) => cb(_payload)));
            resolve2();
          },
          "getInspectorTree"
          /* GET_INSPECTOR_TREE */
        );
      });
      return _payload.rootNodes;
    },
    // get inspector state
    async getInspectorState(payload) {
      const _payload = {
        ...payload,
        app: activeAppRecord.value.app,
        state: null
      };
      const ctx = {
        currentTab: `custom-inspector:${payload.inspectorId}`
      };
      await new Promise((resolve2) => {
        hooks2.callHookWith(
          async (callbacks) => {
            await Promise.all(callbacks.map((cb) => cb(_payload, ctx)));
            resolve2();
          },
          "getInspectorState"
          /* GET_INSPECTOR_STATE */
        );
      });
      return _payload.state;
    },
    // edit inspector state
    editInspectorState(payload) {
      const stateEditor2 = new StateEditor();
      const _payload = {
        ...payload,
        app: activeAppRecord.value.app,
        set: (obj, path = payload.path, value = payload.state.value, cb) => {
          stateEditor2.set(obj, path, value, cb || stateEditor2.createDefaultSetCallback(payload.state));
        }
      };
      hooks2.callHookWith(
        (callbacks) => {
          callbacks.forEach((cb) => cb(_payload));
        },
        "editInspectorState"
        /* EDIT_INSPECTOR_STATE */
      );
    },
    // send inspector state
    sendInspectorState(inspectorId) {
      const inspector = getInspector(inspectorId);
      hooks2.callHook("sendInspectorState", { inspectorId, plugin: {
        descriptor: inspector.descriptor,
        setupFn: () => ({})
      } });
    },
    // inspect component inspector
    inspectComponentInspector() {
      return inspectComponentHighLighter();
    },
    // cancel inspect component inspector
    cancelInspectComponentInspector() {
      return cancelInspectComponentHighLighter();
    },
    // get component render code
    getComponentRenderCode(id) {
      const instance = getComponentInstance(activeAppRecord.value, id);
      if (instance)
        return !((instance == null ? void 0 : instance.type) instanceof Function) ? instance.render.toString() : instance.type.toString();
    },
    // scroll to component
    scrollToComponent(id) {
      return scrollToComponent({ id });
    },
    // open in editor
    openInEditor,
    // get vue inspector
    getVueInspector: getComponentInspector,
    // toggle app
    toggleApp(id) {
      const appRecord = devtoolsAppRecords.value.find((record) => record.id === id);
      if (appRecord) {
        setActiveAppRecordId(id);
        setActiveAppRecord(appRecord);
        normalizeRouterInfo(appRecord, activeAppRecord);
        callInspectorUpdatedHook();
        registerDevToolsPlugin(appRecord.app);
      }
    },
    // inspect dom
    inspectDOM(instanceId) {
      const instance = getComponentInstance(activeAppRecord.value, instanceId);
      if (instance) {
        const [el] = getRootElementsFromComponentInstance(instance);
        if (el) {
          target.__VUE_DEVTOOLS_INSPECT_DOM_TARGET__ = el;
        }
      }
    },
    updatePluginSettings(pluginId, key, value) {
      setPluginSettings(pluginId, key, value);
    },
    getPluginSettings(pluginId) {
      return {
        options: getPluginSettingsOptions(pluginId),
        values: getPluginSettings(pluginId)
      };
    }
  };
}
init_esm_shims();
var _a15, _b15;
(_b15 = (_a15 = target).__VUE_DEVTOOLS_ENV__) != null ? _b15 : _a15.__VUE_DEVTOOLS_ENV__ = {
  vitePluginDetected: false
};
var hooks = createDevToolsCtxHooks();
var _a16, _b16;
(_b16 = (_a16 = target).__VUE_DEVTOOLS_KIT_CONTEXT__) != null ? _b16 : _a16.__VUE_DEVTOOLS_KIT_CONTEXT__ = {
  hooks,
  get state() {
    return {
      ...devtoolsState,
      activeAppRecordId: activeAppRecord.id,
      activeAppRecord: activeAppRecord.value,
      appRecords: devtoolsAppRecords.value
    };
  },
  api: createDevToolsApi(hooks)
};
var devtoolsContext = target.__VUE_DEVTOOLS_KIT_CONTEXT__;
init_esm_shims();
__toESM(require_speakingurl2());
var _a17, _b17;
(_b17 = (_a17 = target).__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__) != null ? _b17 : _a17.__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__ = {
  id: 0,
  appIds: /* @__PURE__ */ new Set()
};
init_esm_shims();
function toggleHighPerfMode(state) {
  devtoolsState.highPerfModeEnabled = state != null ? state : !devtoolsState.highPerfModeEnabled;
}
init_esm_shims();
init_esm_shims();
init_esm_shims();
function updateDevToolsClientDetected(params) {
  devtoolsState.devtoolsClientDetected = {
    ...devtoolsState.devtoolsClientDetected,
    ...params
  };
  const devtoolsClientVisible = Object.values(devtoolsState.devtoolsClientDetected).some(Boolean);
  toggleHighPerfMode(!devtoolsClientVisible);
}
var _a18, _b18;
(_b18 = (_a18 = target).__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__) != null ? _b18 : _a18.__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__ = updateDevToolsClientDetected;
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
var DoubleIndexedKV = class {
  constructor() {
    this.keyToValue = /* @__PURE__ */ new Map();
    this.valueToKey = /* @__PURE__ */ new Map();
  }
  set(key, value) {
    this.keyToValue.set(key, value);
    this.valueToKey.set(value, key);
  }
  getByKey(key) {
    return this.keyToValue.get(key);
  }
  getByValue(value) {
    return this.valueToKey.get(value);
  }
  clear() {
    this.keyToValue.clear();
    this.valueToKey.clear();
  }
};
var Registry = class {
  constructor(generateIdentifier) {
    this.generateIdentifier = generateIdentifier;
    this.kv = new DoubleIndexedKV();
  }
  register(value, identifier) {
    if (this.kv.getByValue(value)) {
      return;
    }
    if (!identifier) {
      identifier = this.generateIdentifier(value);
    }
    this.kv.set(identifier, value);
  }
  clear() {
    this.kv.clear();
  }
  getIdentifier(value) {
    return this.kv.getByValue(value);
  }
  getValue(identifier) {
    return this.kv.getByKey(identifier);
  }
};
var ClassRegistry = class extends Registry {
  constructor() {
    super((c) => c.name);
    this.classToAllowedProps = /* @__PURE__ */ new Map();
  }
  register(value, options) {
    if (typeof options === "object") {
      if (options.allowProps) {
        this.classToAllowedProps.set(value, options.allowProps);
      }
      super.register(value, options.identifier);
    } else {
      super.register(value, options);
    }
  }
  getAllowedProps(value) {
    return this.classToAllowedProps.get(value);
  }
};
init_esm_shims();
init_esm_shims();
function valuesOfObj(record) {
  if ("values" in Object) {
    return Object.values(record);
  }
  const values = [];
  for (const key in record) {
    if (record.hasOwnProperty(key)) {
      values.push(record[key]);
    }
  }
  return values;
}
function find(record, predicate) {
  const values = valuesOfObj(record);
  if ("find" in values) {
    return values.find(predicate);
  }
  const valuesNotNever = values;
  for (let i2 = 0; i2 < valuesNotNever.length; i2++) {
    const value = valuesNotNever[i2];
    if (predicate(value)) {
      return value;
    }
  }
  return void 0;
}
function forEach(record, run) {
  Object.entries(record).forEach(([key, value]) => run(value, key));
}
function includes(arr, value) {
  return arr.indexOf(value) !== -1;
}
function findArr(record, predicate) {
  for (let i2 = 0; i2 < record.length; i2++) {
    const value = record[i2];
    if (predicate(value)) {
      return value;
    }
  }
  return void 0;
}
var CustomTransformerRegistry = class {
  constructor() {
    this.transfomers = {};
  }
  register(transformer) {
    this.transfomers[transformer.name] = transformer;
  }
  findApplicable(v) {
    return find(this.transfomers, (transformer) => transformer.isApplicable(v));
  }
  findByName(name) {
    return this.transfomers[name];
  }
};
init_esm_shims();
init_esm_shims();
var getType = (payload) => Object.prototype.toString.call(payload).slice(8, -1);
var isUndefined$1 = (payload) => typeof payload === "undefined";
var isNull = (payload) => payload === null;
var isPlainObject2 = (payload) => {
  if (typeof payload !== "object" || payload === null)
    return false;
  if (payload === Object.prototype)
    return false;
  if (Object.getPrototypeOf(payload) === null)
    return true;
  return Object.getPrototypeOf(payload) === Object.prototype;
};
var isEmptyObject = (payload) => isPlainObject2(payload) && Object.keys(payload).length === 0;
var isArray = (payload) => Array.isArray(payload);
var isString$1 = (payload) => typeof payload === "string";
var isNumber = (payload) => typeof payload === "number" && !isNaN(payload);
var isBoolean = (payload) => typeof payload === "boolean";
var isRegExp = (payload) => payload instanceof RegExp;
var isMap = (payload) => payload instanceof Map;
var isSet = (payload) => payload instanceof Set;
var isSymbol = (payload) => getType(payload) === "Symbol";
var isDate = (payload) => payload instanceof Date && !isNaN(payload.valueOf());
var isError = (payload) => payload instanceof Error;
var isNaNValue = (payload) => typeof payload === "number" && isNaN(payload);
var isPrimitive2 = (payload) => isBoolean(payload) || isNull(payload) || isUndefined$1(payload) || isNumber(payload) || isString$1(payload) || isSymbol(payload);
var isBigint = (payload) => typeof payload === "bigint";
var isInfinite = (payload) => payload === Infinity || payload === -Infinity;
var isTypedArray = (payload) => ArrayBuffer.isView(payload) && !(payload instanceof DataView);
var isURL = (payload) => payload instanceof URL;
init_esm_shims();
var escapeKey = (key) => key.replace(/\./g, "\\.");
var stringifyPath = (path) => path.map(String).map(escapeKey).join(".");
var parsePath = (string) => {
  const result = [];
  let segment = "";
  for (let i2 = 0; i2 < string.length; i2++) {
    let char = string.charAt(i2);
    const isEscapedDot = char === "\\" && string.charAt(i2 + 1) === ".";
    if (isEscapedDot) {
      segment += ".";
      i2++;
      continue;
    }
    const isEndOfSegment = char === ".";
    if (isEndOfSegment) {
      result.push(segment);
      segment = "";
      continue;
    }
    segment += char;
  }
  const lastSegment = segment;
  result.push(lastSegment);
  return result;
};
init_esm_shims();
function simpleTransformation(isApplicable, annotation, transform, untransform) {
  return {
    isApplicable,
    annotation,
    transform,
    untransform
  };
}
var simpleRules = [
  simpleTransformation(isUndefined$1, "undefined", () => null, () => void 0),
  simpleTransformation(isBigint, "bigint", (v) => v.toString(), (v) => {
    if (typeof BigInt !== "undefined") {
      return BigInt(v);
    }
    console.error("Please add a BigInt polyfill.");
    return v;
  }),
  simpleTransformation(isDate, "Date", (v) => v.toISOString(), (v) => new Date(v)),
  simpleTransformation(isError, "Error", (v, superJson) => {
    const baseError = {
      name: v.name,
      message: v.message
    };
    superJson.allowedErrorProps.forEach((prop) => {
      baseError[prop] = v[prop];
    });
    return baseError;
  }, (v, superJson) => {
    const e2 = new Error(v.message);
    e2.name = v.name;
    e2.stack = v.stack;
    superJson.allowedErrorProps.forEach((prop) => {
      e2[prop] = v[prop];
    });
    return e2;
  }),
  simpleTransformation(isRegExp, "regexp", (v) => "" + v, (regex) => {
    const body = regex.slice(1, regex.lastIndexOf("/"));
    const flags = regex.slice(regex.lastIndexOf("/") + 1);
    return new RegExp(body, flags);
  }),
  simpleTransformation(
    isSet,
    "set",
    // (sets only exist in es6+)
    // eslint-disable-next-line es5/no-es6-methods
    (v) => [...v.values()],
    (v) => new Set(v)
  ),
  simpleTransformation(isMap, "map", (v) => [...v.entries()], (v) => new Map(v)),
  simpleTransformation((v) => isNaNValue(v) || isInfinite(v), "number", (v) => {
    if (isNaNValue(v)) {
      return "NaN";
    }
    if (v > 0) {
      return "Infinity";
    } else {
      return "-Infinity";
    }
  }, Number),
  simpleTransformation((v) => v === 0 && 1 / v === -Infinity, "number", () => {
    return "-0";
  }, Number),
  simpleTransformation(isURL, "URL", (v) => v.toString(), (v) => new URL(v))
];
function compositeTransformation(isApplicable, annotation, transform, untransform) {
  return {
    isApplicable,
    annotation,
    transform,
    untransform
  };
}
var symbolRule = compositeTransformation((s2, superJson) => {
  if (isSymbol(s2)) {
    const isRegistered = !!superJson.symbolRegistry.getIdentifier(s2);
    return isRegistered;
  }
  return false;
}, (s2, superJson) => {
  const identifier = superJson.symbolRegistry.getIdentifier(s2);
  return ["symbol", identifier];
}, (v) => v.description, (_2, a2, superJson) => {
  const value = superJson.symbolRegistry.getValue(a2[1]);
  if (!value) {
    throw new Error("Trying to deserialize unknown symbol");
  }
  return value;
});
var constructorToName = [
  Int8Array,
  Uint8Array,
  Int16Array,
  Uint16Array,
  Int32Array,
  Uint32Array,
  Float32Array,
  Float64Array,
  Uint8ClampedArray
].reduce((obj, ctor) => {
  obj[ctor.name] = ctor;
  return obj;
}, {});
var typedArrayRule = compositeTransformation(isTypedArray, (v) => ["typed-array", v.constructor.name], (v) => [...v], (v, a2) => {
  const ctor = constructorToName[a2[1]];
  if (!ctor) {
    throw new Error("Trying to deserialize unknown typed array");
  }
  return new ctor(v);
});
function isInstanceOfRegisteredClass(potentialClass, superJson) {
  if (potentialClass == null ? void 0 : potentialClass.constructor) {
    const isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);
    return isRegistered;
  }
  return false;
}
var classRule = compositeTransformation(isInstanceOfRegisteredClass, (clazz, superJson) => {
  const identifier = superJson.classRegistry.getIdentifier(clazz.constructor);
  return ["class", identifier];
}, (clazz, superJson) => {
  const allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);
  if (!allowedProps) {
    return { ...clazz };
  }
  const result = {};
  allowedProps.forEach((prop) => {
    result[prop] = clazz[prop];
  });
  return result;
}, (v, a2, superJson) => {
  const clazz = superJson.classRegistry.getValue(a2[1]);
  if (!clazz) {
    throw new Error("Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564");
  }
  return Object.assign(Object.create(clazz.prototype), v);
});
var customRule = compositeTransformation((value, superJson) => {
  return !!superJson.customTransformerRegistry.findApplicable(value);
}, (value, superJson) => {
  const transformer = superJson.customTransformerRegistry.findApplicable(value);
  return ["custom", transformer.name];
}, (value, superJson) => {
  const transformer = superJson.customTransformerRegistry.findApplicable(value);
  return transformer.serialize(value);
}, (v, a2, superJson) => {
  const transformer = superJson.customTransformerRegistry.findByName(a2[1]);
  if (!transformer) {
    throw new Error("Trying to deserialize unknown custom value");
  }
  return transformer.deserialize(v);
});
var compositeRules = [classRule, symbolRule, customRule, typedArrayRule];
var transformValue = (value, superJson) => {
  const applicableCompositeRule = findArr(compositeRules, (rule) => rule.isApplicable(value, superJson));
  if (applicableCompositeRule) {
    return {
      value: applicableCompositeRule.transform(value, superJson),
      type: applicableCompositeRule.annotation(value, superJson)
    };
  }
  const applicableSimpleRule = findArr(simpleRules, (rule) => rule.isApplicable(value, superJson));
  if (applicableSimpleRule) {
    return {
      value: applicableSimpleRule.transform(value, superJson),
      type: applicableSimpleRule.annotation
    };
  }
  return void 0;
};
var simpleRulesByAnnotation = {};
simpleRules.forEach((rule) => {
  simpleRulesByAnnotation[rule.annotation] = rule;
});
var untransformValue = (json, type, superJson) => {
  if (isArray(type)) {
    switch (type[0]) {
      case "symbol":
        return symbolRule.untransform(json, type, superJson);
      case "class":
        return classRule.untransform(json, type, superJson);
      case "custom":
        return customRule.untransform(json, type, superJson);
      case "typed-array":
        return typedArrayRule.untransform(json, type, superJson);
      default:
        throw new Error("Unknown transformation: " + type);
    }
  } else {
    const transformation = simpleRulesByAnnotation[type];
    if (!transformation) {
      throw new Error("Unknown transformation: " + type);
    }
    return transformation.untransform(json, superJson);
  }
};
init_esm_shims();
var getNthKey = (value, n2) => {
  const keys2 = value.keys();
  while (n2 > 0) {
    keys2.next();
    n2--;
  }
  return keys2.next().value;
};
function validatePath(path) {
  if (includes(path, "__proto__")) {
    throw new Error("__proto__ is not allowed as a property");
  }
  if (includes(path, "prototype")) {
    throw new Error("prototype is not allowed as a property");
  }
  if (includes(path, "constructor")) {
    throw new Error("constructor is not allowed as a property");
  }
}
var getDeep = (object, path) => {
  validatePath(path);
  for (let i2 = 0; i2 < path.length; i2++) {
    const key = path[i2];
    if (isSet(object)) {
      object = getNthKey(object, +key);
    } else if (isMap(object)) {
      const row = +key;
      const type = +path[++i2] === 0 ? "key" : "value";
      const keyOfRow = getNthKey(object, row);
      switch (type) {
        case "key":
          object = keyOfRow;
          break;
        case "value":
          object = object.get(keyOfRow);
          break;
      }
    } else {
      object = object[key];
    }
  }
  return object;
};
var setDeep = (object, path, mapper) => {
  validatePath(path);
  if (path.length === 0) {
    return mapper(object);
  }
  let parent = object;
  for (let i2 = 0; i2 < path.length - 1; i2++) {
    const key = path[i2];
    if (isArray(parent)) {
      const index = +key;
      parent = parent[index];
    } else if (isPlainObject2(parent)) {
      parent = parent[key];
    } else if (isSet(parent)) {
      const row = +key;
      parent = getNthKey(parent, row);
    } else if (isMap(parent)) {
      const isEnd = i2 === path.length - 2;
      if (isEnd) {
        break;
      }
      const row = +key;
      const type = +path[++i2] === 0 ? "key" : "value";
      const keyOfRow = getNthKey(parent, row);
      switch (type) {
        case "key":
          parent = keyOfRow;
          break;
        case "value":
          parent = parent.get(keyOfRow);
          break;
      }
    }
  }
  const lastKey = path[path.length - 1];
  if (isArray(parent)) {
    parent[+lastKey] = mapper(parent[+lastKey]);
  } else if (isPlainObject2(parent)) {
    parent[lastKey] = mapper(parent[lastKey]);
  }
  if (isSet(parent)) {
    const oldValue = getNthKey(parent, +lastKey);
    const newValue = mapper(oldValue);
    if (oldValue !== newValue) {
      parent.delete(oldValue);
      parent.add(newValue);
    }
  }
  if (isMap(parent)) {
    const row = +path[path.length - 2];
    const keyToRow = getNthKey(parent, row);
    const type = +lastKey === 0 ? "key" : "value";
    switch (type) {
      case "key": {
        const newKey = mapper(keyToRow);
        parent.set(newKey, parent.get(keyToRow));
        if (newKey !== keyToRow) {
          parent.delete(keyToRow);
        }
        break;
      }
      case "value": {
        parent.set(keyToRow, mapper(parent.get(keyToRow)));
        break;
      }
    }
  }
  return object;
};
function traverse(tree, walker2, origin = []) {
  if (!tree) {
    return;
  }
  if (!isArray(tree)) {
    forEach(tree, (subtree, key) => traverse(subtree, walker2, [...origin, ...parsePath(key)]));
    return;
  }
  const [nodeValue, children] = tree;
  if (children) {
    forEach(children, (child, key) => {
      traverse(child, walker2, [...origin, ...parsePath(key)]);
    });
  }
  walker2(nodeValue, origin);
}
function applyValueAnnotations(plain, annotations, superJson) {
  traverse(annotations, (type, path) => {
    plain = setDeep(plain, path, (v) => untransformValue(v, type, superJson));
  });
  return plain;
}
function applyReferentialEqualityAnnotations(plain, annotations) {
  function apply2(identicalPaths, path) {
    const object = getDeep(plain, parsePath(path));
    identicalPaths.map(parsePath).forEach((identicalObjectPath) => {
      plain = setDeep(plain, identicalObjectPath, () => object);
    });
  }
  if (isArray(annotations)) {
    const [root, other] = annotations;
    root.forEach((identicalPath) => {
      plain = setDeep(plain, parsePath(identicalPath), () => plain);
    });
    if (other) {
      forEach(other, apply2);
    }
  } else {
    forEach(annotations, apply2);
  }
  return plain;
}
var isDeep = (object, superJson) => isPlainObject2(object) || isArray(object) || isMap(object) || isSet(object) || isInstanceOfRegisteredClass(object, superJson);
function addIdentity(object, path, identities) {
  const existingSet = identities.get(object);
  if (existingSet) {
    existingSet.push(path);
  } else {
    identities.set(object, [path]);
  }
}
function generateReferentialEqualityAnnotations(identitites, dedupe) {
  const result = {};
  let rootEqualityPaths = void 0;
  identitites.forEach((paths) => {
    if (paths.length <= 1) {
      return;
    }
    if (!dedupe) {
      paths = paths.map((path) => path.map(String)).sort((a2, b) => a2.length - b.length);
    }
    const [representativePath, ...identicalPaths] = paths;
    if (representativePath.length === 0) {
      rootEqualityPaths = identicalPaths.map(stringifyPath);
    } else {
      result[stringifyPath(representativePath)] = identicalPaths.map(stringifyPath);
    }
  });
  if (rootEqualityPaths) {
    if (isEmptyObject(result)) {
      return [rootEqualityPaths];
    } else {
      return [rootEqualityPaths, result];
    }
  } else {
    return isEmptyObject(result) ? void 0 : result;
  }
}
var walker = (object, identities, superJson, dedupe, path = [], objectsInThisPath = [], seenObjects = /* @__PURE__ */ new Map()) => {
  var _a25;
  const primitive = isPrimitive2(object);
  if (!primitive) {
    addIdentity(object, path, identities);
    const seen2 = seenObjects.get(object);
    if (seen2) {
      return dedupe ? {
        transformedValue: null
      } : seen2;
    }
  }
  if (!isDeep(object, superJson)) {
    const transformed2 = transformValue(object, superJson);
    const result2 = transformed2 ? {
      transformedValue: transformed2.value,
      annotations: [transformed2.type]
    } : {
      transformedValue: object
    };
    if (!primitive) {
      seenObjects.set(object, result2);
    }
    return result2;
  }
  if (includes(objectsInThisPath, object)) {
    return {
      transformedValue: null
    };
  }
  const transformationResult = transformValue(object, superJson);
  const transformed = (_a25 = transformationResult == null ? void 0 : transformationResult.value) != null ? _a25 : object;
  const transformedValue = isArray(transformed) ? [] : {};
  const innerAnnotations = {};
  forEach(transformed, (value, index) => {
    if (index === "__proto__" || index === "constructor" || index === "prototype") {
      throw new Error(`Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`);
    }
    const recursiveResult = walker(value, identities, superJson, dedupe, [...path, index], [...objectsInThisPath, object], seenObjects);
    transformedValue[index] = recursiveResult.transformedValue;
    if (isArray(recursiveResult.annotations)) {
      innerAnnotations[index] = recursiveResult.annotations;
    } else if (isPlainObject2(recursiveResult.annotations)) {
      forEach(recursiveResult.annotations, (tree, key) => {
        innerAnnotations[escapeKey(index) + "." + key] = tree;
      });
    }
  });
  const result = isEmptyObject(innerAnnotations) ? {
    transformedValue,
    annotations: !!transformationResult ? [transformationResult.type] : void 0
  } : {
    transformedValue,
    annotations: !!transformationResult ? [transformationResult.type, innerAnnotations] : innerAnnotations
  };
  if (!primitive) {
    seenObjects.set(object, result);
  }
  return result;
};
init_esm_shims();
init_esm_shims();
function getType2(payload) {
  return Object.prototype.toString.call(payload).slice(8, -1);
}
function isArray2(payload) {
  return getType2(payload) === "Array";
}
function isPlainObject3(payload) {
  if (getType2(payload) !== "Object")
    return false;
  const prototype = Object.getPrototypeOf(payload);
  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;
}
function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {
  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? "enumerable" : "nonenumerable";
  if (propType === "enumerable")
    carry[key] = newVal;
  if (includeNonenumerable && propType === "nonenumerable") {
    Object.defineProperty(carry, key, {
      value: newVal,
      enumerable: false,
      writable: true,
      configurable: true
    });
  }
}
function copy(target22, options = {}) {
  if (isArray2(target22)) {
    return target22.map((item) => copy(item, options));
  }
  if (!isPlainObject3(target22)) {
    return target22;
  }
  const props = Object.getOwnPropertyNames(target22);
  const symbols = Object.getOwnPropertySymbols(target22);
  return [...props, ...symbols].reduce((carry, key) => {
    if (isArray2(options.props) && !options.props.includes(key)) {
      return carry;
    }
    const val = target22[key];
    const newVal = copy(val, options);
    assignProp(carry, key, newVal, target22, options.nonenumerable);
    return carry;
  }, {});
}
var SuperJSON = class {
  /**
   * @param dedupeReferentialEqualities  If true, SuperJSON will make sure only one instance of referentially equal objects are serialized and the rest are replaced with `null`.
   */
  constructor({ dedupe = false } = {}) {
    this.classRegistry = new ClassRegistry();
    this.symbolRegistry = new Registry((s2) => {
      var _a25;
      return (_a25 = s2.description) != null ? _a25 : "";
    });
    this.customTransformerRegistry = new CustomTransformerRegistry();
    this.allowedErrorProps = [];
    this.dedupe = dedupe;
  }
  serialize(object) {
    const identities = /* @__PURE__ */ new Map();
    const output = walker(object, identities, this, this.dedupe);
    const res = {
      json: output.transformedValue
    };
    if (output.annotations) {
      res.meta = {
        ...res.meta,
        values: output.annotations
      };
    }
    const equalityAnnotations = generateReferentialEqualityAnnotations(identities, this.dedupe);
    if (equalityAnnotations) {
      res.meta = {
        ...res.meta,
        referentialEqualities: equalityAnnotations
      };
    }
    return res;
  }
  deserialize(payload) {
    const { json, meta } = payload;
    let result = copy(json);
    if (meta == null ? void 0 : meta.values) {
      result = applyValueAnnotations(result, meta.values, this);
    }
    if (meta == null ? void 0 : meta.referentialEqualities) {
      result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);
    }
    return result;
  }
  stringify(object) {
    return JSON.stringify(this.serialize(object));
  }
  parse(string) {
    return this.deserialize(JSON.parse(string));
  }
  registerClass(v, options) {
    this.classRegistry.register(v, options);
  }
  registerSymbol(v, identifier) {
    this.symbolRegistry.register(v, identifier);
  }
  registerCustom(transformer, name) {
    this.customTransformerRegistry.register({
      name,
      ...transformer
    });
  }
  allowErrorProps(...props) {
    this.allowedErrorProps.push(...props);
  }
};
SuperJSON.defaultInstance = new SuperJSON();
SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);
SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);
SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);
SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);
SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);
SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);
SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);
SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
var _a19, _b19;
(_b19 = (_a19 = target).__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__) != null ? _b19 : _a19.__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__ = [];
var _a20, _b20;
(_b20 = (_a20 = target).__VUE_DEVTOOLS_KIT_RPC_CLIENT__) != null ? _b20 : _a20.__VUE_DEVTOOLS_KIT_RPC_CLIENT__ = null;
var _a21, _b21;
(_b21 = (_a21 = target).__VUE_DEVTOOLS_KIT_RPC_SERVER__) != null ? _b21 : _a21.__VUE_DEVTOOLS_KIT_RPC_SERVER__ = null;
var _a22, _b22;
(_b22 = (_a22 = target).__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__) != null ? _b22 : _a22.__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__ = null;
var _a23, _b23;
(_b23 = (_a23 = target).__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__) != null ? _b23 : _a23.__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__ = null;
var _a24, _b24;
(_b24 = (_a24 = target).__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__) != null ? _b24 : _a24.__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__ = null;
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
init_esm_shims();
const themeData$1 = JSON.parse(`{"encrypt":{},"logo":"/images/logo.png","lastUpdated":false,"contributors":false,"locales":{"/":{"lang":"en-US","navbarLocales":{"langName":"English","selectLangAriaLabel":"Select language"},"metaLocales":{"author":"Author","date":"Writing Date","origin":"Original","views":"Page views","category":"Category","tag":"Tag","readingTime":"Reading Time","words":"Words","toc":"On This Page","prev":"Prev","next":"Next","lastUpdated":"Last update","contributors":"Contributors","editLink":"Edit this page","print":"Print"},"outlookLocales":{"themeColor":"Theme Color","darkmode":"Theme Mode","fullscreen":"Full Screen"},"routeLocales":{"skipToContent":"Skip to main content","notFoundTitle":"Page not found","notFoundMsg":["There’s nothing here.","How did we get here?","That’s a Four-Oh-Four.","Looks like we've got some broken links."],"back":"Go back","home":"Take me home"},"navbar":[{"text":"Vue 2.x 源码学习","link":"/vue/source-study/"},{"text":"JavaScript","children":[{"text":"JavaScript","link":"/js/data-types/","activeMatch":"^/js"},{"text":"ES6+","link":"/es6/","activeMatch":"^/es6"},{"text":"TypeScript","link":"/typescript/","activeMatch":"^/typescript"},{"text":"React","link":"/react/hooks/","activeMatch":"^/react"}]},{"text":"HTML/CSS/浏览器","children":[{"text":"CSS","link":"/css/selectors/","activeMatch":"^/css"},{"text":"CSS/JS 动画效果","link":"/animation-effects/","activeMatch":"^/animation-effects/"},{"text":"浏览器","link":"/browser-env/browser/how-browsers-work","activeMatch":"^/browser-env"},{"text":"小程序","link":"/mini-program/weixin/","activeMatch":"^/mini-program"}]},{"text":"前端工程化","children":[{"text":"开发环境","link":"/front-end-engineering/environment/ide/vscode","activeMatch":"^/front-end-engineering/environment"},{"text":"开发流程工具","link":"/front-end-engineering/tools/build/source-map","activeMatch":"^/front-end-engineering/tools"},{"text":"开发技能","link":"/front-end-engineering/development-skills/h5/","activeMatch":"^/front-end-engineering/development-skills"},{"text":"前端稳定性建设","link":"/front-end-engineering/frontend-stability-construction/","activeMatch":"^/front-end-engineering/frontend-stability-construction"}]},{"text":"全栈技能","children":[{"text":"设计模式","link":"/full-stack/design-patterns/singleton-pattern"},{"text":"操作系统与命令行","link":"/full-stack/operating-system/linux/"},{"text":"数据管理","link":"/full-stack/data-management/kafka/"},{"text":"后端开发","link":"/full-stack/backend/nestjs/"},{"text":"全栈开发的软件使用","link":"/full-stack/software/nginx/"},{"text":"其他","link":"/full-stack/others/google-cloud"}]},{"text":"代码片段/技术文章","children":[{"text":"代码片段","link":"/code-snippet/","activeMatch":"^/code-snippet"},{"text":"技术文章","link":"/articles/string-literal/","activeMatch":"^/articles"},{"text":"面试题库","link":"/interview/","activeMatch":"^/interview"}]},{"text":"GitHub","link":"https://github.com/wind-stone"},{"text":"随记","link":"/wander/house/"}],"sidebar":{"/articles/":[{"text":"文章列表","prefix":"/articles","children":["string-literal/","line-terminator/","wechat-mini-program-sourcemap/"],"collapsible":false},{"text":"日常阅读文章","prefix":"/articles","children":["good-articles/","good-articles/javascript"],"collapsible":false}],"/browser-env/":[{"text":"浏览器","prefix":"/browser-env/browser","children":["how-browsers-work","first-paint","process-thread","event-loop","cache","performance/","browser-api","browser-requests","faq","dev-tools/","fingerprint"]},{"text":"HTML/DOM","prefix":"/browser-env/html-dom","children":["elements/","attributes-properties/attributes","attributes-properties/properties","attributes-properties/differences-between-properties-and-attributes","image/","image/image-lazy-load","svg/"]},{"text":"事件","prefix":"/browser-env/events","children":["","blur"]},{"text":"网络","prefix":"/browser-env/network","children":["http/","https/","http2/","cors/","dns"]},{"text":"安全","prefix":"/browser-env/security","children":["","chrome-security-policy","cross-domain","same-site"]},{"text":"Hybrid","prefix":"/browser-env/hybrid","children":["h52app","jsbridge","universal-links"]},{"text":"浏览器厂商及应用环境","prefix":"/browser-env/vendor-app","children":["wechat/","wechat/android-weixin-auto-open-browser"]},{"text":"浏览器兼容性","prefix":"/browser-env/compatibility","children":["","video","audio","input-delay/","ios/","ios/safari-script-block-render"]},{"text":"滚动专题","prefix":"/browser-env/scroll","children":["","touch-event","click-delay","fastclick","no-bg-scroll"]},{"text":"未分类","prefix":"/browser-env/unclassified","children":["web-components","pwa","file-system","keyboard"]}],"/code-snippet":[{"text":"JS 代码片段","children":[{"text":"工具函数","prefix":"/code-snippet/js/utils","children":["data-type","env","version","event-emitter","queen-next","format"]},{"text":"浏览器环境","prefix":"/code-snippet/js/browser","children":["class","cookie","url","load-script","storage","clipboard"]},"/code-snippet/js/server/","/code-snippet/js/validate/"]},{"text":"浏览器代码片段","children":["/code-snippet/browser-env/rem/"]},{"text":"Vue 2.x 组件","prefix":"/code-snippet/vue-components","children":["base-marquee","common-popup"]}],"/css/":[{"text":"CSS 技能","children":[{"text":"布局","prefix":"/css/skills","children":["line-boxes-truncation-style","dog-ear"]}]},{"text":"专题","prefix":"/css/topics","children":[{"text":"Flex 布局","prefix":"flex/","children":["","flex-image/"]},{"text":"文本","children":["text/text-wrap-and-ellipsis/"]},{"text":"边框","children":["border/border-image"]},"position-fixed"]},{"text":"选择器","children":["/css/selectors/"]},{"text":"属性","prefix":"/css/properties","children":["","properties-order"]},{"text":"屏幕","children":["/css/screen/"]},{"text":"视口","prefix":"/css/viewport","children":["a-tale-of-viewports-one","a-tale-of-viewports-two"]},{"text":"布局","prefix":"/css/layouts","children":["","ifc/"]},{"text":"字体","prefix":"/css/font","children":["","css-font-metrics-line-height-and-vertical-align"]},{"text":"实践","prefix":"/css/practices","children":[""]},{"text":"预处理器","prefix":"/css/preprocessor","children":["less","stylus"]},{"text":"工具集合","prefix":"/css/tools","children":["safe-area","text-ellipsis"]},{"text":"CSS 2.2 规范","prefix":"/css/css-spec","children":["css2.2/8-box-model/","css2.2/9-visual-formatting-model/"]},{"text":"未分类","prefix":"/css/unclassified","children":["user-experience","compatibility","skill-pitfall"]}],"/es6/":[{"text":"ES6+","prefix":"/es6","children":["","let-const/","destructuring-assignment/","function/","array/","class/","module/","iterator/","generator/","async-await/","proxy-reflect/","proxy-reflect/proxy-practice"]},{"text":"Promise","prefix":"/es6/promise","children":["","promise-skills"]},{"text":"Babel","prefix":"/es6/babel","children":["","babel-v7","@babel/preset-env","@babel/plugin-transform-runtime","@babel/runtime","@babel/runtime-corejs2"]},{"text":"Polyfill","prefix":"/es6/polyfill","children":[{"text":"String","children":["string/padStart"]},{"text":"Array","prefix":"array","children":["array-prototype-forEach","array-prototype-reduce"]},{"text":"Object","prefix":"object","children":["new","object-create","object-assign"]},{"text":"Promise","prefix":"promise","children":["promise-allSettled","promise-race"]}]}],"/front-end-engineering/environment":[{"text":"IDE","prefix":"ide","children":["vscode","code-sandbox"]},{"text":"代码仓库","prefix":"repository","children":["monorepo"]},{"text":"包管理工具","prefix":"package-manager","children":["semantic-version",{"text":"npm","prefix":"npm","children":["","npm-command","npmrc","npm-config","npm-scripts","package.json","package-lock.json"]},{"text":"pnpm","prefix":"pnpm","children":[""]},{"text":"第三方包","prefix":"third-party-packages","children":["",{"text":"包环境管理","prefix":"package-env-management","children":["nvm","nrm","npx","cross-env"]},"koa"]}]}],"/front-end-engineering/tools":[{"text":"构建工具","prefix":"build","children":["source-map","rollup",{"text":"Webpack","prefix":"webpack","children":["","webpack-runtime",{"text":"Webpack 配置","prefix":"config","children":["whole-config","practical-config","config-tools","dead-code"]},"webpack4-import",{"text":"Tapable","prefix":"tapable","children":["","tapable-readme"]}]}]},{"text":"运行时工具","prefix":"runtime","children":["axios"]},{"text":"发布相关工具","children":["publish/changelog"]},{"text":"风格指南","prefix":"style-guide","children":[{"text":"命名规范","prefix":"naming-conventions","children":["naming-references.md","js.md"]},{"text":"ESLint","prefix":"code-formatter/eslint","children":["","eslint-vscode","eslint-vue","eslint-prettier","how-to-write-a-custom-eslint-rule"]}]}],"/front-end-engineering/development-skills":[{"text":"H5 开发","prefix":"h5","children":["","css-style","local-mock"]},{"text":"Node 开发","prefix":"nodejs","children":["","commonjs","koa/","server","api","pm2"]}],"/front-end-engineering/frontend-stability-construction":["/front-end-engineering/frontend-stability-construction/",{"text":"","prefix":"/front-end-engineering/frontend-stability-construction","children":["observable-system/","full-link-monitoring/","high-availability-architecture/","performance/","risk-management/","processs-mechanism/","engineering-construction/",{"text":"","prefix":"engineering-construction","children":["automated-testing"]},"summary"]}],"/full-stack/design-patterns/":[{"text":"设计模式","children":["/full-stack/design-patterns/singleton-pattern"]}],"/full-stack/data-management":[{"text":"数据生产和消费","children":["/full-stack/data-management/kafka/"]},{"text":"数据查询与展示","prefix":"/full-stack/data-management/data-observability","children":["sql","clickhouse"]},{"text":"数据存储","children":["/full-stack/data-management/mongodb"]}],"/full-stack/operating-system":[{"text":"Linux","prefix":"/full-stack/operating-system/linux","children":["","shell","linux-command","environment-variables.md","glob"]},{"text":"Git","prefix":"/full-stack/operating-system/git","children":["","git-command","git-commit-guidelines","gitlab"]},{"text":"Docker","children":["/full-stack/operating-system/docker/"]}],"/full-stack/software":[{"text":"Nginx","prefix":"/full-stack/software/nginx","children":["","practices","nginx-conf","ngx_http_proxy_module","ngx_http_upstream_module"]}],"/full-stack/backend":[{"text":"后端","children":["/full-stack/backend/nestjs/"]}],"/full-stack/others":[{"text":"其他","children":["/full-stack/others/google-cloud"]}],"/interview":[{"text":"面试题目","prefix":"/interview","children":["browser/","css/","algorithm/interview/","nodejs/"]},{"text":"JS 面试题","prefix":"/interview/javascript","children":[{"text":"前端基础","prefix":"foundation","children":["data-type/","execution-context/","execution-mechanism/"]},{"text":"前端编码","prefix":"coding","children":["basic-api-usage/","program-design/"]},{"text":"性能优化","prefix":"performance-optimization","children":["debounce-throttle/"]}]},{"text":"专题","prefix":"/interview/topic","children":["large-file-upload"]},{"text":"数据结构","prefix":"/interview/data-structure","children":["binary-tree","heap/","stack-queue/"]},{"text":"算法","prefix":"/interview/algorithm","children":[{"text":"排序","prefix":"sorting-algorithm","children":["","bubble-sort/","selection-sort/","insertion-sort/","merge-sort/","quick-sort/"]},{"text":"其他","prefix":"others","children":["binary-search/","fibonacci-sequence"]}]}],"/js/":[{"text":"数据类型","prefix":"/js/data-types","children":["","number/","number/floating","string/","object/","array/","function/","date/","reg-exp/","type-conversion"]},{"text":"执行机制","prefix":"/js/execution-mechanism","children":["","execution-context","prototype","this","event-loop"]},{"text":"错误处理/日志/调试","prefix":"/js/error-handling","children":["debug/","log",{"text":"错误处理","children":["","try-catch","browser-error-handling"]},{"text":"控制台方法","prefix":"debug/console","children":["","console-log-event"]}]},{"text":"运算符","prefix":"/js/operators","children":[""]},{"text":"WebAssemply","prefix":"/js/web-assembly","children":[""]},{"text":"未分类内容","prefix":"/js/unclassified","children":["","functional-programming","pitfall"]}],"/mini-program/":[{"text":"微信小程序","prefix":"/mini-program/weixin","children":[""]},{"text":"uni-app","prefix":"/mini-program/uni-app","children":["","v-for-key"]}],"/typescript/":[{"text":"TypeScript","prefix":"/typescript","children":["","type-manipulation/type-challenges"]},{"text":"数据类型","prefix":"/typescript/data-types","children":["","primitive-types","object-type","class","enum","function","array"]},{"text":"类型系统","prefix":"/typescript/type-system","children":["","generics","property-modifiers","utility-types"]},{"text":"类型操作","prefix":"/typescript/type-manipulation","children":["","type-operators"]},{"text":"模块系统","prefix":"/typescript/module-system","children":[""]},{"text":"TypeScript 编译","prefix":"/typescript/typescript-compilation","children":[""]},{"text":"TypeScript 使用","prefix":"/typescript/usage","children":["declaration-files","tsconfig-json","publish"]}],"/vue/":[{"text":"Vue 2.x 源码分析","prefix":"","children":["/vue/source-study/"]},{"text":"实例化","prefix":"/vue/source-study","children":["vue-constructor","instance/create","instance/state/","instance/state/props","instance/state/methods","instance/state/data","instance/state/computed","instance/state/watch","instance/directives","instance/events"]},{"text":"组件化","prefix":"/vue/source-study/component","children":["register","options","async-component","functional-component","extend"]},{"text":"响应式原理","prefix":"/vue/source-study/observer","children":["","dep-collection","notify-update","dep","watcher","scheduler","array-observe-limit"]},{"text":"Virtual Dom","prefix":"/vue/source-study/vdom","children":["","vnode-tree-create","patch","patch-vnode","child-component-create","patch-modules/","patch-fn","topics/dom-binding"]},{"text":"编译","prefix":"/vue/source-study/compile","children":["","compile-process","base-compile","parse","parse-html","optimize","codegen"]},{"text":"编译专题","prefix":"/vue/source-study/compile/topics","children":["event","v-model","slot"]},{"text":"全局 API","prefix":"/vue/source-study/global-api","children":["use"]},{"text":"Util","prefix":"/vue/source-study/util","children":["next-tick","lifecycle-hook-event"]},{"text":"SSR","prefix":"/vue/source-study/ssr","children":["","vue-server-renderer","hydrate"]},{"text":"Vuex","prefix":"/vue/vue-series/vuex","children":["","reset-child-module-state","register-module"]},{"text":"vue-router","prefix":"/vue/vue-series/vue-router/","children":[""]},{"text":"其他","prefix":"/vue/vue-series/vuejs","children":["scoped-css"]},{"text":"Vue 3.x","prefix":"/vue3","children":["","composition-api","reactivity/use-difference"]}],"/wander/":[{"text":"House 相关","prefix":"/wander/house","children":["","tianya-post","beijing/","zhonghailichunhushu/","wanxiangyuefu/","xishanjinxiufu/","comparison"]},{"text":"投资理财","prefix":"/wander/investment","children":["stocks"]},{"text":"户外","children":["/wander/outdoor/"]},{"text":"工具","children":["/wander/tools"]},{"text":"其他","prefix":"/wander/others","children":["mac-shortcut-keys","word-pronunciation","theories","ssr/"]}],"/react/":[{"text":"React Hooks","prefix":"/react/hooks","children":["","useState","useReducer","useEffect","useMemo","useRef","useSyncExternalStore","custom-hooks"]}],"/animation-effects/":["","scroll-elements-fade-up","complicated-animations-with-animation-delay","gradient-shadows",{"text":"文字效果","prefix":"text-effects","children":["overlap-text","title-animations"],"collapsible":false}]}}}}`);
const themeData = ref(themeData$1);
const useThemeData = () => themeData;
const themeLocaleDataSymbol = Symbol("");
const useThemeLocaleData = () => {
  const themeLocaleData = inject(themeLocaleDataSymbol);
  if (!themeLocaleData) {
    throw new Error("useThemeLocaleData() is called without provider.");
  }
  return themeLocaleData;
};
const resolveThemeLocaleData = (theme, routeLocale) => {
  const { locales: locales2, ...baseOptions } = theme;
  return {
    ...baseOptions,
    ...locales2 == null ? void 0 : locales2[routeLocale]
  };
};
const config$8 = defineClientConfig({
  enhance({ app }) {
    const themeData2 = useThemeData();
    const clientData = app._context.provides[clientDataSymbol];
    const themeLocaleData = computed(() => resolveThemeLocaleData(themeData2.value, clientData.routeLocale.value));
    app.provide(themeLocaleDataSymbol, themeLocaleData);
    Object.defineProperties(app.config.globalProperties, {
      $theme: {
        get() {
          return themeData2.value;
        }
      },
      $themeLocale: {
        get() {
          return themeLocaleData.value;
        }
      }
    });
    {
      setupDevToolsPlugin({
        // fix recursive reference
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any
        app,
        id: "org.vuejs.vuepress.plugin-theme-data",
        label: "VuePress Theme Data Plugin",
        packageName: "@vuepress/plugin-theme-data",
        homepage: "https://v2.vuepress.vuejs.org",
        logo: "https://v2.vuepress.vuejs.org/images/hero.png",
        componentStateTypes: ["VuePress"]
      }, (api) => {
        api.on.inspectComponent((payload) => {
          payload.instanceData.state.push({
            type: "VuePress",
            key: "themeData",
            editable: false,
            value: themeData2.value
          }, {
            type: "VuePress",
            key: "themeLocaleData",
            editable: false,
            value: themeLocaleData.value
          });
        });
      });
    }
  }
});
const clientConfig7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$8
}, Symbol.toStringTag, { value: "Module" }));
const config$7 = defineClientConfig({
  setup() {
    useEventListener("beforeprint", () => {
      document.querySelectorAll("details").forEach((detail) => {
        detail.open = true;
      });
    });
  }
});
const clientConfig8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$7
}, Symbol.toStringTag, { value: "Module" }));
const config$6 = {
  enhance: ({ app }) => {
  }
};
const clientConfig9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$6
}, Symbol.toStringTag, { value: "Module" }));
const s$1 = "VUEPRESS_REDIRECT_STATUS", g$1 = useLocalStorage(s$1, {}), p$2 = useSessionStorage(s$1, {}), R$2 = (a2) => {
  const u2 = usePreferredLanguages(), e2 = useRouteLocale(), t = entries(a2.config);
  return computed(() => {
    if (t.some(([o2]) => e2.value === o2)) {
      for (const o2 of u2.value) for (const [r2, n2] of t) if (n2.includes(o2)) return r2 === e2.value ? null : { lang: o2, localePath: r2 };
    }
    return null;
  });
};
var $$1 = /* @__PURE__ */ defineComponent({ name: "RedirectModal", props: { config: { type: Object, required: true }, locales: { type: Object, required: true } }, setup(n2) {
  const b = useRouter(), s2 = useRoutePath(), l2 = useRouteLocale(), r2 = R$2(n2.config), m2 = ref(), t = useScrollLock(m2), o2 = ref(false), u2 = computed(() => {
    if (!r2.value) return null;
    const { lang: c, localePath: f } = r2.value, i2 = [n2.locales[f], n2.locales[l2.value]];
    return { hint: i2.map(({ hint: a2 }) => a2.replace("$1", c)), switch: i2.map(({ switch: a2 }) => a2.replace("$1", c)).join(" / "), cancel: i2.map(({ cancel: a2 }) => a2).join(" / "), remember: i2.map(({ remember: a2 }) => a2).join(" / ") };
  }), d2 = () => {
    p$2.value[l2.value] = true, o2.value && (g$1.value[l2.value] = true), t.value = false;
  };
  return watch(s2, () => {
    t.value = false;
  }), onMounted(async () => {
    m2.value = document.body, await nextTick(), r2.value && !p$2.value[l2.value] && !g$1.value[l2.value] && (t.value = true);
  }), onBeforeUnmount(() => {
    t.value = false;
  }), () => h$1(TransitionGroup, { name: "redirect-modal-fade" }, () => {
    var _a25, _b25, _c, _d;
    return t.value ? h$1("div", { key: "mask", class: "redirect-modal-mask" }, h$1("div", { key: "popup", class: "redirect-modal-wrapper" }, [h$1("div", { class: "redirect-modal-content" }, (_a25 = u2.value) == null ? void 0 : _a25.hint.map((c) => h$1("p", c))), h$1("div", { class: "redirect-modal-hint" }, [h$1("input", { id: "remember-redirect", type: "checkbox", value: o2.value, onChange: () => {
      o2.value = !o2.value;
    } }), h$1("label", { for: "remember-redirect" }, (_b25 = u2.value) == null ? void 0 : _b25.remember)]), h$1("button", { type: "button", class: "redirect-modal-action primary", onClick: () => {
      d2(), b.replace(s2.value.replace(l2.value, r2.value.localePath));
    } }, (_c = u2.value) == null ? void 0 : _c.switch), h$1("button", { type: "button", class: "redirect-modal-action", onClick: () => {
      d2();
    } }, (_d = u2.value) == null ? void 0 : _d.cancel)])) : null;
  });
} });
var define_REDIRECT_CONFIG_default = { config: {}, autoLocale: false, localeFallback: true, defaultBehavior: "defaultLocale" };
var define_REDIRECT_LOCALES_default = { "/": { name: "English", hint: "Your primary language is $1, do you want to switch to it?", switch: "Switch to $1", cancel: "Cancel", remember: "Remember my choice" } };
const _ = define_REDIRECT_CONFIG_default;
var m$2 = defineClientConfig({ setup() {
}, ...{ rootComponents: [() => h$1($$1, { config: _, locales: define_REDIRECT_LOCALES_default })] } });
const clientConfig10 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  config: _,
  default: m$2
}, Symbol.toStringTag, { value: "Module" }));
const a$1 = ({ name: e2 = "", color: t = "currentColor", ariaLabel: n2 }, { attrs: o2, slots: i2 }) => {
  var _a25;
  return h$1("svg", { xmlns: "http://www.w3.org/2000/svg", class: ["icon", `${e2}-icon`], viewBox: "0 0 1024 1024", fill: t, "aria-label": n2 ?? `${e2} icon`, ...o2 }, (_a25 = i2.default) == null ? void 0 : _a25.call(i2));
};
a$1.displayName = "IconBase";
const G = (e2, { slots: t }) => {
  var _a25;
  return (_a25 = t.default) == null ? void 0 : _a25.call(t);
};
const B = (e2) => isLinkHttp(e2) ? e2 : `https://github.com/${e2}`, M = (e2 = "") => !isLinkHttp(e2) || e2.includes("github.com") ? "GitHub" : e2.includes("bitbucket.org") ? "Bitbucket" : e2.includes("gitlab.com") ? "GitLab" : e2.includes("gitee.com") ? "Gitee" : null, m$1 = () => h$1(a$1, { name: "github" }, () => h$1("path", { d: "M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z" }));
m$1.displayName = "GitHubIcon";
const d = () => h$1(a$1, { name: "gitee" }, () => h$1("path", { d: "M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z" }));
d.displayName = "GiteeIcon";
const h = () => h$1(a$1, { name: "bitbucket" }, () => h$1("path", { d: "M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z" }));
h.displayName = "BitbucketIcon";
const u$1 = () => h$1(a$1, { name: "source" }, () => h$1("path", { d: "M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z" }));
u$1.displayName = "SourceIcon";
const P$1 = ({ link: e2, type: t = M(e2 ?? "") }) => {
  if (!t) return null;
  const n2 = t.toLowerCase();
  return h$1(n2 === "bitbucket" ? h : n2 === "github" ? m$1 : n2 === "gitlab" ? "GitLab" : n2 === "gitee" ? d : u$1);
};
const k = (e2, t = 0) => {
  let n2 = 3735928559 ^ t, o2 = 1103547991 ^ t;
  for (let i2 = 0, s2; i2 < e2.length; i2++) s2 = e2.charCodeAt(i2), n2 = Math.imul(n2 ^ s2, 2654435761), o2 = Math.imul(o2 ^ s2, 1597334677);
  return n2 = Math.imul(n2 ^ n2 >>> 16, 2246822507), n2 ^= Math.imul(o2 ^ o2 >>> 13, 3266489909), o2 = Math.imul(o2 ^ o2 >>> 16, 2246822507), o2 ^= Math.imul(n2 ^ n2 >>> 13, 3266489909), 4294967296 * (2097151 & o2) + (n2 >>> 0);
}, Q = (e2, t) => k(e2) % t;
const L = /#.*$/u, C$1 = (e2) => {
  const t = L.exec(e2);
  return t ? t[0] : "";
}, p$1 = (e2) => decodeURI(e2).replace(L, "").replace(/\/index\.html$/iu, "/").replace(/\/(README|index)\.md$/iu, "/").replace(/\.(?:html|md)$/iu, ""), Y$1 = (e2, t) => {
  if (!isDef(t)) return false;
  const n2 = p$1(e2.path), o2 = p$1(t), i2 = C$1(t);
  return i2 ? i2 === e2.hash && (!o2 || n2 === o2) : n2 === o2;
};
var t1 = (e2) => Object.prototype.toString.call(e2) === "[object Object]", r = (e2) => typeof e2 == "string";
const { isArray: H } = Array, x = (e2) => t1(e2) && r(e2.name), n1 = (e2, t = false) => e2 ? H(e2) ? e2.map((n2) => r(n2) ? { name: n2 } : x(n2) ? n2 : null).filter((n2) => n2 !== null) : r(e2) ? [{ name: e2 }] : x(e2) ? [e2] : (console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${t ? "" : "| false"} | undefined\`, but got`, e2), []) : [], g = (e2, t) => {
  if (e2) {
    if (H(e2) && e2.every(r)) return e2;
    if (r(e2)) return [e2];
    console.error(`Expect ${t} to be \`string[] | string | undefined\`, but got`, e2);
  }
  return [];
}, o1 = (e2) => g(e2, "category"), i1 = (e2) => g(e2, "tag");
var define_READING_TIME_LOCALES_default = { "/": { word: "About $word words", less1Minute: "Less than 1 minute", time: "About $time min" } };
const i = () => {
  const e2 = usePageData();
  return computed(() => e2.value.readingTime ?? null);
}, a = (e2, o2) => {
  const { minutes: r2, words: s2 } = e2, { less1Minute: m2, word: c, time: d2 } = o2;
  return { time: r2 < 1 ? m2 : d2.replace("$time", Math.round(r2).toString()), words: c.replace("$word", s2.toString()) };
}, u = { words: "", time: "" }, n$1 = typeof define_READING_TIME_LOCALES_default > "u" ? null : define_READING_TIME_LOCALES_default, l$1 = () => n$1 ? useLocaleConfig$1(n$1) : computed(() => null), p = () => {
  if (typeof n$1 > "u") return computed(() => u);
  const e2 = i(), o2 = l$1();
  return computed(() => e2.value && o2.value ? a(e2.value, o2.value) : u);
};
const e$1 = () => useThemeData(), o = () => useThemeLocaleData(), m = () => {
  const a2 = e$1();
  return computed(() => !!a2.value.pure);
};
const noopComponent = () => null;
const mobileBreakPoint = "719px";
const pcBreakPoint = "1440px";
const enableThemeColor = "false";
const colorNumber = "9";
const q$1 = {
  mobileBreakPoint,
  pcBreakPoint,
  enableThemeColor,
  colorNumber
};
const sidebarData = {};
const P = (e2) => {
  const { icon: t = "", color: n2, size: l2 } = e2, o2 = n2 || l2 ? {} : null;
  return n2 && (o2.color = n2), l2 && (o2.height = Number.isNaN(Number(l2)) ? l2 : `${l2}px`), isLinkHttp(t) ? h$1("img", { class: "icon", src: t, alt: "", "no-view": "", style: o2 }) : isLinkAbsolute(t) ? h$1("img", { class: "icon", src: withBase(t), alt: "", "aria-hidden": "", "no-view": "", style: o2 }) : h$1(resolveComponent("FontIcon"), e2);
};
P.displayName = "HopeIcon";
const Me$1 = () => {
  const e2 = o();
  return computed(() => e2.value.author);
}, Ha = "http://.", ue = () => {
  const e2 = useRouter(), t = useRoute();
  return (n2) => {
    if (n2) if (isLinkAbsolute(n2)) t.path !== n2 && e2.push(n2);
    else if (isLinkWithProtocol(n2)) window && window.open(n2);
    else {
      const l2 = t.path.slice(0, t.path.lastIndexOf("/"));
      e2.push(new URL(`${l2}/${encodeURI(n2)}`, Ha).pathname);
    }
  };
}, Ae$1 = () => {
  const e2 = usePageFrontmatter(), t = Me$1();
  return computed(() => {
    const { author: n2 } = e2.value;
    return n2 ? n1(n2) : n2 === false ? [] : n1(t.value, false);
  });
}, ja = () => {
  const e2 = usePageFrontmatter();
  return computed(() => o1(e2.value.category ?? e2.value.categories).map((n2) => ({ name: n2, path: "" })));
}, Fa = () => {
  const e2 = usePageFrontmatter();
  return computed(() => i1(e2.value.tag ?? e2.value.tags).map((n2) => ({ name: n2, path: "" })));
}, qa = () => {
  const e2 = usePageFrontmatter(), t = usePageData();
  return computed(() => {
    const n2 = getDate(e2.value.date);
    if (n2) return n2;
    const { createdTime: l2 } = t.value.git ?? {};
    return l2 ? new Date(l2) : null;
  });
}, Wa = () => {
  const e2 = o(), t = usePageData(), n2 = usePageFrontmatter(), l2 = Ae$1(), o$12 = ja(), r2 = Fa(), i$1 = qa(), s2 = i(), d2 = p(), u2 = computed(() => ({ author: l2.value, category: o$12.value, date: i$1.value, localizedDate: t.value.localizedDate, tag: r2.value, isOriginal: n2.value.isOriginal ?? false, readingTime: s2.value, readingTimeLocale: d2.value, pageview: n2.value.pageview ?? true })), v = computed(() => n2.value.pageInfo ?? e2.value.pageInfo ?? null);
  return { info: u2, items: v };
}, ve = (e2, t) => "activeMatch" in t ? new RegExp(t.activeMatch, "u").test(e2.path) : Y$1(e2, t.link), pe = (e2, t) => "children" in t ? !!t.prefix && Y$1(e2, t.prefix) || t.children.some((n2) => pe(e2, n2)) : ve(e2, t), de = (e2) => !isLinkExternal(e2) && !isLinkWithProtocol(e2);
var V = ((e2) => (e2.title = "t", e2.shortTitle = "s", e2.icon = "i", e2.index = "I", e2.order = "O", e2.breadcrumbExclude = "b", e2))(V || {}), ze = ((e2) => (e2.type = "y", e2.author = "a", e2.date = "d", e2.localizedDate = "l", e2.category = "c", e2.tag = "g", e2.isEncrypted = "n", e2.isOriginal = "o", e2.readingTime = "r", e2.excerpt = "e", e2.sticky = "u", e2.cover = "v", e2))(ze || {}), Be$1 = ((e2) => (e2.article = "a", e2.home = "h", e2.slide = "s", e2.page = "p", e2))(Be$1 || {});
const me = (e2, t = false, n2) => {
  const { meta: l2, path: o2, notFound: r2 } = resolveRoute(e2, n2);
  return r2 ? { text: o2, link: o2 } : { text: !t && l2[V.shortTitle] ? l2[V.shortTitle] : l2[V.title] || o2, link: o2, ...l2[V.icon] ? { icon: l2[V.icon] } : {} };
}, E = (e2 = "", t = "") => isLinkAbsolute(t) || isLinkWithProtocol(t) ? t : `${ensureEndingSlash(e2)}${t}`, Ne = (e2, t) => {
  const n2 = isString$2(e2) ? me(E(t, e2)) : e2.link ? { ...e2, link: de(e2.link) ? resolveRoute(E(t, e2.link)).path : e2.link } : e2;
  if ("children" in n2) {
    const l2 = E(t, n2.prefix), o2 = n2.children === "structure" ? sidebarData[l2] : n2.children;
    return { ...n2, prefix: l2, children: o2.map((r2) => Ne(r2, l2)) };
  }
  return { ...n2 };
}, he = ({ config: e2, prefix: t = "" }) => e2.map((n2) => Ne(n2, t)), Ga = ({ config: e2, routePath: t, headerDepth: n2 }) => {
  const l2 = keys(e2).sort((o2, r2) => r2.length - o2.length);
  for (const o2 of l2) if (startsWith(decodeURI(t), o2)) {
    const r2 = e2[o2];
    return he({ config: r2 === "structure" ? sidebarData[o2] : r2 || [], headerDepth: n2, prefix: o2 });
  }
  return console.warn(`${decodeURI(t)} is missing sidebar config.`), [];
}, Ua = ({ config: e2, headerDepth: t, routeLocale: n2, routePath: l2 }) => e2 === "structure" ? he({ config: sidebarData[n2], headerDepth: t, prefix: n2 }) : isArray$1(e2) ? he({ config: e2, headerDepth: t }) : isPlainObject(e2) ? Ga({ config: e2, routePath: l2, headerDepth: t }) : [], De$1 = Symbol(""), Ya = () => {
  const e2 = usePageFrontmatter(), t = o(), n2 = useRouteLocale(), l2 = useRoutePath(), o$12 = computed(() => e2.value.home ? false : e2.value.sidebar ?? t.value.sidebar ?? "structure"), r2 = computed(() => e2.value.headerDepth ?? t.value.headerDepth ?? 2), i2 = computed(() => Ua({ config: o$12.value, headerDepth: r2.value, routeLocale: n2.value, routePath: l2.value }));
  provide(De$1, i2);
}, ge = () => {
  const e2 = inject(De$1);
  if (!e2) throw new Error("useSidebarItems() is called without provider.");
  return e2;
}, { mobileBreakPoint: Xa, pcBreakPoint: Ja } = q$1, Pe$1 = (e2) => e2.endsWith("px") ? Number(e2.slice(0, -2)) : null, J$1 = () => {
  const e2 = ref(false), t = ref(false), n2 = () => {
    e2.value = window.innerWidth <= (Pe$1(Xa) ?? 719), t.value = window.innerWidth >= (Pe$1(Ja) ?? 1440);
  };
  return useEventListener("resize", n2, false), useEventListener("orientationchange", n2, false), onMounted(() => {
    n2();
  }), { isMobile: e2, isPC: t };
}, Ve = Symbol(""), W = () => {
  const e2 = inject(Ve);
  if (!e2) throw new Error("useDarkmode() is called without provider.");
  return e2;
}, Ka = (e2) => {
  const t = e$1(), n2 = usePreferredDark(), l2 = computed(() => t.value.darkmode ?? "switch"), o2 = useStorage("vuepress-theme-hope-scheme", "auto"), r2 = computed(() => {
    const s2 = l2.value;
    return s2 === "disable" ? false : s2 === "enable" ? true : s2 === "auto" ? n2.value : s2 === "toggle" ? o2.value === "dark" : o2.value === "dark" || o2.value === "auto" && n2.value;
  }), i2 = computed(() => {
    const s2 = l2.value;
    return s2 === "switch" || s2 === "toggle";
  });
  e2.provide(Ve, { canToggle: i2, config: l2, isDarkmode: r2, status: o2 }), Object.defineProperties(e2.config.globalProperties, { $isDarkmode: { get: () => r2.value } });
}, Qa = () => {
  const { config: e2, isDarkmode: t, status: n2 } = W();
  watchEffect(() => {
    e2.value === "disable" ? n2.value = "light" : e2.value === "enable" ? n2.value = "dark" : e2.value === "toggle" && n2.value === "auto" && (n2.value = "light");
  }), onMounted(() => {
    watch(t, (l2) => document.documentElement.setAttribute("data-theme", l2 ? "dark" : "light"), { immediate: true });
  });
};
var Za = /* @__PURE__ */ defineComponent({ name: "PageFooter", setup() {
  const e2 = e$1(), t = o(), n2 = usePageFrontmatter(), l2 = Ae$1(), o$12 = computed(() => {
    const { copyright: u2, footer: v } = n2.value;
    return v !== false && !!(u2 || v || t.value.displayFooter);
  }), r2 = computed(() => {
    const { footer: u2 } = n2.value;
    return u2 === false ? false : isString$2(u2) ? u2 : t.value.footer ?? "";
  }), i2 = computed(() => l2.value.map(({ name: u2 }) => u2).join(", ")), s2 = (u2) => `Copyright © ${(/* @__PURE__ */ new Date()).getFullYear()} ${i2.value} ${u2 ? `${u2} Licensed` : ""}`, d2 = computed(() => {
    const { copyright: u2, license: v = "" } = n2.value, { license: m2 } = e2.value, { copyright: h2 } = t.value;
    return u2 ?? (v ? s2(v) : h2 ?? (i2.value || m2 ? s2(m2) : false));
  });
  return () => o$12.value ? h$1("footer", { class: "vp-footer-wrapper", "vp-footer": "" }, [r2.value ? h$1("div", { class: "vp-footer", innerHTML: r2.value }) : null, d2.value ? h$1("div", { class: "vp-copyright", innerHTML: d2.value }) : null]) : null;
} }), C = /* @__PURE__ */ defineComponent({ name: "AutoLink", props: { config: { type: Object, required: true } }, emits: ["focusout"], slots: Object, setup(e2, { emit: t, slots: n2 }) {
  return () => {
    const { icon: l2 } = e2.config;
    return h$1(AutoLink, { ...e2, onFocusout: () => t("focusout") }, { default: n2.default ? () => n2.default() : null, before: n2.before ? () => n2.before() : l2 ? () => h$1(P, { icon: l2 }) : null, after: n2.after ? () => n2.after() : null });
  };
} }), Ee$1 = /* @__PURE__ */ defineComponent({ name: "NavbarDropdown", props: { config: { type: Object, required: true } }, slots: Object, setup(e2, { slots: t }) {
  const n2 = usePageData(), l2 = toRef$1(e2, "config"), o2 = computed(() => l2.value.ariaLabel ?? l2.value.text), r2 = ref(false);
  watch(() => n2.value.path, () => {
    r2.value = false;
  });
  const i2 = (s2) => {
    s2.detail === 0 && (r2.value = !r2.value);
  };
  return () => {
    var _a25;
    return h$1("div", { class: ["vp-dropdown-wrapper", { open: r2.value }] }, [h$1("button", { type: "button", class: "vp-dropdown-title", "aria-label": o2.value, onClick: i2 }, [((_a25 = t.title) == null ? void 0 : _a25.call(t)) || [h$1(P, { icon: l2.value.icon }), e2.config.text], h$1("span", { class: "arrow" }), h$1("ul", { class: "vp-dropdown" }, l2.value.children.map((s2, d2) => {
      const u2 = d2 === l2.value.children.length - 1;
      return h$1("li", { class: "vp-dropdown-item" }, "children" in s2 ? [h$1("h4", { class: "vp-dropdown-subtitle" }, s2.link ? h$1(C, { config: s2, onFocusout: () => {
        s2.children.length === 0 && u2 && (r2.value = false);
      } }) : s2.text), h$1("ul", { class: "vp-dropdown-subitems" }, s2.children.map((v, m2) => h$1("li", { class: "vp-dropdown-subitem" }, h$1(C, { config: v, onFocusout: () => {
        m2 === s2.children.length - 1 && u2 && (r2.value = false);
      } }))))] : h$1(C, { config: s2, onFocusout: () => {
        u2 && (r2.value = false);
      } }));
    }))])]);
  };
} });
const _e = (e2, t = "") => isString$2(e2) ? me(E(t, e2)) : "children" in e2 ? { ...e2, ...e2.link && de(e2.link) ? { link: resolveRoute(E(t, e2.link)).path } : {}, children: e2.children.map((n2) => _e(n2, E(t, e2.prefix))) } : { ...e2, link: de(e2.link) ? resolveRoute(E(t, e2.link)).path : e2.link }, Re$1 = () => {
  const e2 = o();
  return computed(() => (e2.value.navbar || []).map((t) => _e(t)));
}, at = () => {
  const e2 = o(), t = computed(() => e2.value.repo), n2 = computed(() => t.value ? B(t.value) : null), l2 = computed(() => t.value ? M(t.value) : null), o$12 = computed(() => n2.value ? e2.value.repoLabel ?? l2.value ?? "Source" : null);
  return computed(() => !n2.value || !o$12.value || e2.value.repoDisplay === false ? null : { type: l2.value ?? "Source", label: o$12.value, link: n2.value });
};
var nt = /* @__PURE__ */ defineComponent({ name: "NavScreenMenu", props: { config: { type: Object, required: true } }, setup(e2) {
  const t = usePageData(), n2 = toRef$1(e2, "config"), l2 = computed(() => n2.value.ariaLabel ?? n2.value.text), o2 = ref(false);
  watch(() => t.value.path, () => {
    o2.value = false;
  });
  const r2 = (i2, s2) => s2[s2.length - 1] === i2;
  return () => [h$1("button", { type: "button", class: ["vp-nav-screen-menu-title", { active: o2.value }], "aria-label": l2.value, onClick: () => {
    o2.value = !o2.value;
  } }, [h$1("span", { class: "text" }, [h$1(P, { icon: n2.value.icon }), e2.config.text]), h$1("span", { class: ["arrow", o2.value ? "down" : "end"] })]), h$1("ul", { class: ["vp-nav-screen-menu", { hide: !o2.value }] }, n2.value.children.map((i2) => h$1("li", { class: "vp-nav-screen-menu-item" }, "children" in i2 ? [h$1("h4", { class: "vp-nav-screen-menu-subtitle" }, i2.link ? h$1(C, { config: i2, onFocusout: () => {
    r2(i2, n2.value.children) && i2.children.length === 0 && (o2.value = false);
  } }) : i2.text), h$1("ul", { class: "vp-nav-screen-menu-subitems" }, i2.children.map((s2) => h$1("li", { class: "vp-nav-screen-menu-subitem" }, h$1(C, { config: s2, onFocusout: () => {
    r2(s2, i2.children) && r2(i2, n2.value.children) && (o2.value = false);
  } }))))] : h$1(C, { config: i2, onFocusout: () => {
    r2(i2, n2.value.children) && (o2.value = false);
  } }))))];
} }), lt = /* @__PURE__ */ defineComponent({ name: "NavScreenLinks", setup() {
  const e2 = Re$1();
  return () => e2.value.length ? h$1("nav", { class: "nav-screen-links" }, e2.value.map((t) => h$1("div", { class: "navbar-links-item" }, "children" in t ? h$1(nt, { config: t }) : h$1(C, { config: t })))) : null;
} });
const He$1 = () => h$1(a$1, { name: "dark" }, () => h$1("path", { d: "M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z" }));
He$1.displayName = "DarkIcon";
const je = () => h$1(a$1, { name: "light" }, () => h$1("path", { d: "M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z" }));
je.displayName = "LightIcon";
const Fe$1 = () => h$1(a$1, { name: "auto" }, () => h$1("path", { d: "M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z" }));
Fe$1.displayName = "AutoIcon";
const qe = () => h$1(a$1, { name: "enter-fullscreen" }, () => h$1("path", { d: "M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z" }));
qe.displayName = "EnterFullScreenIcon";
const We = () => h$1(a$1, { name: "cancel-fullscreen" }, () => h$1("path", { d: "M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z" }));
We.displayName = "CancelFullScreenIcon";
const Ge = () => h$1(a$1, { name: "outlook" }, () => [h$1("path", { d: "M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z" })]);
Ge.displayName = "OutlookIcon";
var Ue = /* @__PURE__ */ defineComponent({ name: "ColorModeSwitch", setup() {
  const { config: e2, isDarkmode: t, status: n2 } = W(), l2 = m(), o2 = () => {
    e2.value === "switch" ? n2.value = { light: "dark", dark: "auto", auto: "light" }[n2.value] : n2.value = n2.value === "light" ? "dark" : "light";
  }, r2 = async (i2) => {
    if (!(document.startViewTransition && !window.matchMedia("(prefers-reduced-motion: reduce)").matches && !l2.value) || !i2) {
      o2();
      return;
    }
    const s2 = i2.clientX, d2 = i2.clientY, u2 = Math.hypot(Math.max(s2, innerWidth - s2), Math.max(d2, innerHeight - d2)), v = t.value;
    await document.startViewTransition(async () => {
      o2(), await nextTick();
    }).ready, t.value !== v && document.documentElement.animate({ clipPath: t.value ? [`circle(${u2}px at ${s2}px ${d2}px)`, `circle(0px at ${s2}px ${d2}px)`] : [`circle(0px at ${s2}px ${d2}px)`, `circle(${u2}px at ${s2}px ${d2}px)`] }, { duration: 400, pseudoElement: t.value ? "::view-transition-old(root)" : "::view-transition-new(root)" });
  };
  return () => h$1("button", { type: "button", class: "vp-color-mode-switch", id: "color-mode-switch", onClick: r2 }, [h$1(Fe$1, { style: { display: n2.value === "auto" ? "block" : "none" } }), h$1(He$1, { style: { display: n2.value === "dark" ? "block" : "none" } }), h$1(je, { style: { display: n2.value === "light" ? "block" : "none" } })]);
} }), ot = /* @__PURE__ */ defineComponent({ name: "ColorMode", setup() {
  const e2 = o(), { canToggle: t } = W(), n2 = computed(() => e2.value.outlookLocales.darkmode);
  return () => t.value ? h$1("div", { class: "vp-color-mode" }, [h$1("label", { class: "vp-color-mode-title", for: "color-mode-switch" }, n2.value), h$1(Ue)]) : null;
} });
const R$1 = q$1.enableThemeColor === "true";
var ct = /* @__PURE__ */ defineComponent({ name: "ToggleFullScreenButton", setup() {
  const { isSupported: e2, isFullscreen: t, toggle: n2 } = useFullscreen();
  return () => e2 ? h$1("button", { type: "button", id: "full-screen-switch", class: "full-screen", ariaPressed: t.value, onClick: () => n2() }, t.value ? h$1(We) : h$1(qe)) : null;
} }), Ye = /* @__PURE__ */ defineComponent({ name: "ToggleFullScreenButton", setup() {
  const e2 = o(), { isSupported: t } = useFullscreen(), n2 = computed(() => e2.value.outlookLocales.fullscreen);
  return () => t ? h$1("div", { class: "full-screen-wrapper" }, [h$1("label", { class: "full-screen-title", for: "full-screen-switch" }, n2.value), h$1(ct)]) : null;
} }), Xe = /* @__PURE__ */ defineComponent({ name: "OutlookSettings", setup() {
  const e2 = e$1(), t = m(), n2 = computed(() => !t.value && e2.value.fullscreen);
  return () => h$1(ClientOnly, () => [null, h$1(ot), n2.value ? h$1(Ye) : null]);
} }), ut = /* @__PURE__ */ defineComponent({ name: "NavScreen", props: { show: Boolean }, emits: ["close"], slots: Object, setup(e2, { emit: t, slots: n2 }) {
  const l2 = usePageData(), { isMobile: o2 } = J$1(), r2 = shallowRef(), i2 = useScrollLock(r2);
  return onMounted(() => {
    r2.value = document.body, watch(o2, (s2) => {
      !s2 && e2.show && (i2.value = false, t("close"));
    }), watch(() => l2.value.path, () => {
      i2.value = false, t("close");
    });
  }), onUnmounted(() => {
    i2.value = false;
  }), () => h$1(Transition, { name: "fade", onEnter: () => {
    i2.value = true;
  }, onAfterLeave: () => {
    i2.value = false;
  } }, () => {
    var _a25, _b25;
    return e2.show ? h$1("div", { id: "nav-screen", class: "vp-nav-screen" }, h$1("div", { class: "vp-nav-screen-container" }, [(_a25 = n2.before) == null ? void 0 : _a25.call(n2), h$1(lt), h$1("div", { class: "vp-outlook-wrapper" }, h$1(Xe)), (_b25 = n2.after) == null ? void 0 : _b25.call(n2)])) : null;
  });
} }), vt = /* @__PURE__ */ defineComponent({ name: "NavbarBrand", setup() {
  const e2 = useRouteLocale(), t = useSiteLocaleData(), n2 = o(), l2 = computed(() => n2.value.home ?? e2.value), o$12 = computed(() => t.value.title), r2 = computed(() => n2.value.navbarTitle ?? o$12.value), i2 = computed(() => n2.value.logo ? withBase(n2.value.logo) : null), s2 = computed(() => n2.value.logoDark ? withBase(n2.value.logoDark) : null);
  return () => h$1(RouteLink, { to: l2.value, class: "vp-brand", "aria-label": n2.value.routeLocales.home }, () => [i2.value ? h$1("img", { class: ["vp-nav-logo", { light: !!s2.value }], src: i2.value, alt: "" }) : null, s2.value ? h$1("img", { class: ["vp-nav-logo dark"], src: s2.value, alt: "" }) : null, r2.value ? h$1("span", { class: ["vp-site-name", { "hide-in-pad": i2.value && (n2.value.hideSiteNameOnMobile ?? true) }] }, r2.value) : null]);
} }), pt = /* @__PURE__ */ defineComponent({ name: "NavbarLinks", setup() {
  const e2 = Re$1();
  return () => e2.value.length ? h$1("nav", { class: "vp-nav-links" }, e2.value.map((t) => h$1("div", { class: "vp-nav-item hide-in-mobile" }, "children" in t ? h$1(Ee$1, { config: t }) : h$1(C, { config: t })))) : null;
} }), dt = /* @__PURE__ */ defineComponent({ name: "RepoLink", setup() {
  const e2 = at();
  return () => e2.value ? h$1("div", { class: "vp-nav-item vp-action" }, h$1("a", { class: "vp-action-link", href: e2.value.link, target: "_blank", rel: "noopener noreferrer", "aria-label": e2.value.label }, h$1(P$1, { type: e2.value.type, style: { width: "1.25rem", height: "1.25rem", verticalAlign: "middle" } }))) : null;
} });
const Je = ({ active: e2 = false }, { emit: t }) => h$1("button", { type: "button", class: ["vp-toggle-navbar-button", { "is-active": e2 }], "aria-label": "Toggle Navbar", "aria-expanded": e2, "aria-controls": "nav-screen", onClick: () => t("toggle") }, h$1("span", [h$1("span", { class: "vp-top" }), h$1("span", { class: "vp-middle" }), h$1("span", { class: "vp-bottom" })]));
Je.displayName = "ToggleNavbarButton";
const be$1 = (e2, { emit: t }) => h$1("button", { type: "button", class: "vp-toggle-sidebar-button", title: "Toggle Sidebar", onClick: () => t("toggle") }, h$1("span", { class: "icon" }));
be$1.displayName = "ToggleSidebarButton", be$1.emits = ["toggle"];
var mt = /* @__PURE__ */ defineComponent({ name: "OutlookButton", setup() {
  const e2 = e$1(), t = usePageData(), { canToggle: n2 } = W(), { isSupported: l2 } = useFullscreen(), o2 = m(), r2 = ref(false), i2 = computed(() => !o2.value && e2.value.fullscreen && l2), s2 = computed(() => n2.value || i2.value);
  return watch(() => t.value.path, () => {
    r2.value = false;
  }), () => s2.value ? h$1("div", { class: "vp-nav-item hide-in-mobile" }, n2.value && !i2.value && !R$1 ? h$1(Ue) : i2.value && !n2.value && !R$1 ? h$1(Ye) : h$1("button", { type: "button", class: ["vp-outlook-button", { open: r2.value }], tabindex: "-1", "aria-hidden": true }, [h$1(Ge), h$1("div", { class: "vp-outlook-dropdown" }, h$1(Xe))])) : null;
} }), ht = /* @__PURE__ */ defineComponent({ name: "NavBar", emits: ["toggleSidebar"], slots: Object, setup(e2, { emit: t, slots: n2 }) {
  const l2 = o(), { isMobile: o$12 } = J$1(), r2 = ref(false), i2 = computed(() => {
    const { navbarAutoHide: v = "mobile" } = l2.value;
    return v !== "none" && (v === "always" || o$12.value);
  }), s2 = computed(() => l2.value.navbarLayout ?? { start: ["Brand"], center: ["Links"], end: ["Language", "Repo", "Outlook", "Search"] }), d2 = { Brand: vt, Language: noopComponent, Links: pt, Repo: dt, Outlook: mt, Search: hasGlobalComponent("SearchBox") ? resolveComponent("SearchBox") : noopComponent }, u2 = (v) => d2[v] ?? (hasGlobalComponent(v) ? resolveComponent(v) : noopComponent);
  return () => {
    var _a25, _b25, _c, _d, _e2, _f, _g, _h, _i;
    return [h$1("header", { key: "navbar", id: "navbar", class: ["vp-navbar", { "auto-hide": i2.value }], "vp-navbar": "" }, [h$1("div", { class: "vp-navbar-start" }, [h$1(be$1, { onToggle: () => {
      r2.value && (r2.value = false), t("toggleSidebar");
    } }), (_a25 = n2.startBefore) == null ? void 0 : _a25.call(n2), (_b25 = s2.value.start) == null ? void 0 : _b25.map((v) => h$1(u2(v))), (_c = n2.startAfter) == null ? void 0 : _c.call(n2)]), h$1("div", { class: "vp-navbar-center" }, [(_d = n2.centerBefore) == null ? void 0 : _d.call(n2), (_e2 = s2.value.center) == null ? void 0 : _e2.map((v) => h$1(u2(v))), (_f = n2.centerAfter) == null ? void 0 : _f.call(n2)]), h$1("div", { class: "vp-navbar-end" }, [(_g = n2.endBefore) == null ? void 0 : _g.call(n2), (_h = s2.value.end) == null ? void 0 : _h.map((v) => h$1(u2(v))), (_i = n2.endAfter) == null ? void 0 : _i.call(n2), h$1(Je, { active: r2.value, onToggle: () => {
      r2.value = !r2.value;
    } })])]), h$1(ut, { show: r2.value, onClose: () => {
      r2.value = false;
    } }, { before: n2.screenTop ? () => n2.screenTop() : null, after: n2.screenBottom ? () => n2.screenBottom() : null })];
  };
} }), gt = /* @__PURE__ */ defineComponent({ name: "SidebarChild", props: { config: { type: Object, required: true } }, setup(e2) {
  const t = useRoute();
  return () => isString$2(e2.config.link) ? h$1(C, { class: ["vp-sidebar-link", { active: ve(t, e2.config) }], config: { ...e2.config, exact: true } }) : h$1("p", e2, [h$1(P, { icon: e2.config.icon }), e2.config.text]);
} }), ft = /* @__PURE__ */ defineComponent({ name: "SidebarGroup", props: { config: { type: Object, required: true }, open: { type: Boolean, required: true } }, emits: ["toggle"], setup(e2, { emit: t }) {
  const n2 = useRoute(), l2 = ref(false), o2 = computed(() => pe(n2, e2.config)), r2 = computed(() => ve(n2, e2.config)), i2 = computed(() => e2.open || e2.config.expanded && !l2.value);
  return () => {
    const { collapsible: s2, children: d2 = [], icon: u2, prefix: v, link: m2, text: h2 } = e2.config;
    return h$1("section", { class: "vp-sidebar-group" }, [h$1(s2 ? "button" : "p", { class: ["vp-sidebar-header", { clickable: s2 || m2, exact: r2.value, active: o2.value }], ...s2 ? { type: "button", onClick: () => {
      l2.value = true, t("toggle");
    } } : {} }, [h$1(P, { icon: u2 }), m2 ? h$1(C, { class: "vp-sidebar-title no-external-link-icon", config: { text: h2, link: m2 } }) : h$1("span", { class: "vp-sidebar-title" }, h2), s2 ? h$1("span", { class: ["vp-arrow", i2.value ? "down" : "end"] }) : null]), i2.value || !s2 ? h$1(Ke, { key: v, config: d2 }) : null]);
  };
} }), Ke = /* @__PURE__ */ defineComponent({ name: "SidebarLinks", props: { config: { type: Array, required: true } }, setup(e2) {
  const t = useRoute(), n2 = ref(-1), l2 = (o2) => {
    n2.value = o2 === n2.value ? -1 : o2;
  };
  return watch(() => t.path, () => {
    const o2 = e2.config.findIndex((r2) => pe(t, r2));
    n2.value = o2;
  }, { immediate: true, flush: "post" }), () => h$1("ul", { class: "vp-sidebar-links" }, e2.config.map((o2, r2) => h$1("li", "children" in o2 ? h$1(ft, { config: o2, open: r2 === n2.value, onToggle: () => l2(r2) }) : h$1(gt, { config: o2 }))));
} }), bt = /* @__PURE__ */ defineComponent({ name: "SideBar", slots: Object, setup(e2, { slots: t }) {
  const n2 = useRoute(), l2 = ge(), o2 = shallowRef();
  return onMounted(() => {
    watch(() => n2.hash, (r2) => {
      const i2 = document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${n2.path}${r2}"]`);
      if (!i2) return;
      const { top: s2, height: d2 } = o2.value.getBoundingClientRect(), { top: u2, height: v } = i2.getBoundingClientRect();
      u2 < s2 ? i2.scrollIntoView(true) : u2 + v > s2 + d2 && i2.scrollIntoView(false);
    }, { immediate: true });
  }), () => {
    var _a25, _b25, _c;
    return h$1("aside", { ref: o2, key: "sidebar", id: "sidebar", class: "vp-sidebar", "vp-sidebar": "" }, [(_a25 = t.top) == null ? void 0 : _a25.call(t), ((_b25 = t.default) == null ? void 0 : _b25.call(t)) ?? h$1(Ke, { config: l2.value }), (_c = t.bottom) == null ? void 0 : _c.call(t)]);
  };
} }), yt = /* @__PURE__ */ defineComponent({ name: "CommonWrapper", props: { containerClass: { type: String, default: "" }, noNavbar: Boolean, noSidebar: Boolean, noToc: Boolean }, slots: Object, setup(e2, { slots: t }) {
  const n2 = useRouter(), l2 = usePageFrontmatter(), o$12 = e$1(), r2 = o(), { isMobile: i2, isPC: s2 } = J$1(), d2 = m(), [u2, v] = useToggle(false), [m$12, h2] = useToggle(false), w = ge(), k2 = ref(false), b = computed(() => e2.noNavbar || l2.value.navbar === false || r2.value.navbar === false ? false : !!(r2.value.logo ?? r2.value.repo ?? r2.value.navbar)), I = computed(() => e2.noSidebar ? false : l2.value.sidebar !== false && w.value.length !== 0 && !l2.value.home), x2 = computed(() => l2.value.externalLinkIcon ?? o$12.value.externalLinkIcon ?? true), G$1 = computed(() => !e2.noToc && !l2.value.home && (l2.value.toc ?? r2.value.toc ?? true)), N = { x: 0, y: 0 }, sa = (y) => {
    N.x = y.changedTouches[0].clientX, N.y = y.changedTouches[0].clientY;
  }, ia = (y) => {
    const H2 = y.changedTouches[0].clientX - N.x, Q2 = y.changedTouches[0].clientY - N.y;
    Math.abs(H2) > Math.abs(Q2) * 1.5 && Math.abs(H2) > 40 && (H2 > 0 && N.x <= 80 ? v(true) : v(false));
  };
  let K = 0;
  return useEventListener("scroll", useThrottleFn(() => {
    const y = window.scrollY;
    y <= 58 || y < K ? k2.value = false : K + 200 < y && !u2.value && (k2.value = true), K = y;
  }, 300, true)), watch(i2, (y) => {
    y || v(false);
  }), onMounted(() => {
    const y = useScrollLock(document.body);
    watch(u2, (Q2) => {
      y.value = Q2;
    });
    const H2 = n2.afterEach(() => {
      v(false);
    });
    onUnmounted(() => {
      y.value = false, H2();
    });
  }), () => h$1(hasGlobalComponent("GlobalEncrypt") ? resolveComponent("GlobalEncrypt") : G, () => h$1("div", { class: ["theme-container", { "hide-navbar": k2.value, "no-navbar": !b.value, "sidebar-collapsed": !i2.value && !s2.value && m$12.value, "sidebar-open": i2.value && u2.value, "no-sidebar": !I.value && !t.sidebar && !t.sidebarTop && !t.sidebarBottom, "external-link-icon": x2.value, pure: d2.value, "has-toc": G$1.value }, e2.containerClass, l2.value.containerClass ?? ""], "vp-container": "", onTouchStart: sa, onTouchEnd: ia }, [b.value ? h$1(ht, { onToggleSidebar: () => v() }, { startBefore: t.navbarStartBefore ? () => t.navbarStartBefore() : null, startAfter: t.navbarStartAfter ? () => t.navbarStartAfter() : null, centerBefore: t.navbarCenterBefore ? () => t.navbarCenterBefore() : null, centerAfter: t.navbarCenterAfter ? () => t.navbarCenterAfter() : null, endBefore: t.navbarEndBefore ? () => t.navbarEndBefore() : null, endAfter: t.navbarEndAfter ? () => t.navbarEndAfter() : null, screenTop: t.navScreenTop ? () => t.navScreenTop() : null, screenBottom: t.navScreenBottom ? () => t.navScreenBottom() : null }) : null, h$1(Transition, { name: "fade" }, () => u2.value ? h$1("div", { class: "vp-sidebar-mask", onClick: () => v(false) }) : null), h$1(Transition, { name: "fade" }, () => i2.value ? null : h$1("div", { class: "toggle-sidebar-wrapper", onClick: () => h2() }, h$1("span", { class: ["arrow", m$12.value ? "end" : "start"] }))), h$1(bt, {}, { default: t.sidebar ? () => t.sidebar() : null, top: t.sidebarTop ? () => t.sidebarTop() : null, bottom: t.sidebarBottom ? () => t.sidebarBottom() : null }), t.default(), h$1(Za)]));
} });
const kt = /* @__PURE__ */ defineComponent({ name: "DropTransition", props: { type: { type: String, default: "single" }, delay: { type: Number, default: 0 }, duration: { type: Number, default: 0.25 }, appear: Boolean }, slots: Object, setup(e2, { slots: t }) {
  const n2 = (o2) => {
    o2.style.transition = `transform ${e2.duration}s ease-in-out ${e2.delay}s, opacity ${e2.duration}s ease-in-out ${e2.delay}s`, o2.style.transform = "translateY(-20px)", o2.style.opacity = "0";
  }, l2 = (o2) => {
    o2.style.transform = "translateY(0)", o2.style.opacity = "1";
  };
  return () => {
    const o2 = { name: "drop", appear: e2.appear, onAppear: n2, onAfterAppear: l2, onEnter: n2, onAfterEnter: l2, onBeforeLeave: n2 }, r2 = () => t.default();
    return e2.type === "group" ? h$1(TransitionGroup, o2, r2) : h$1(Transition, o2, r2);
  };
} }), ye$1 = ({ custom: e2 }) => h$1(Content, { class: ["theme-hope-content", { custom: e2 }], "vp-content": "" });
ye$1.displayName = "MarkdownContent", ye$1.props = { custom: Boolean };
const Qe = () => h$1(a$1, { name: "author" }, () => h$1("path", { d: "M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z" }));
Qe.displayName = "AuthorIcon";
const Ze = () => h$1(a$1, { name: "calendar" }, () => h$1("path", { d: "M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z" }));
Ze.displayName = "CalendarIcon";
const ea = () => h$1(a$1, { name: "category" }, () => h$1("path", { d: "M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z" }));
ea.displayName = "CategoryIcon";
const na = () => h$1(a$1, { name: "print" }, () => h$1("path", { d: "M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z" }));
na.displayName = "PrintIcon";
const la = () => h$1(a$1, { name: "tag" }, () => h$1("path", { d: "M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z" }));
la.displayName = "TagIcon";
const oa = () => h$1(a$1, { name: "timer" }, () => h$1("path", { d: "M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z" }));
oa.displayName = "TimerIcon";
const ra = () => h$1(a$1, { name: "word" }, () => [h$1("path", { d: "M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z" }), h$1("path", { d: "M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z" })]);
ra.displayName = "WordIcon";
const $ = () => {
  const e2 = o();
  return computed(() => e2.value.metaLocales);
};
var wt = /* @__PURE__ */ defineComponent({ name: "AuthorInfo", inheritAttrs: false, props: { author: { type: Array, required: true } }, setup(e2) {
  const t = $(), n2 = m();
  return () => e2.author.length ? h$1("span", { class: "page-author-info", "aria-label": `${t.value.author}${n2.value ? "" : "🖊"}`, ...n2.value ? {} : { "data-balloon-pos": "up" } }, [h$1(Qe), h$1("span", e2.author.map((l2) => l2.url ? h$1("a", { class: "page-author-item", href: l2.url, target: "_blank", rel: "noopener noreferrer" }, l2.name) : h$1("span", { class: "page-author-item" }, l2.name))), h$1("span", { property: "author", content: e2.author.map((l2) => l2.name).join(", ") })]) : null;
} }), Tt = /* @__PURE__ */ defineComponent({ name: "CategoryInfo", inheritAttrs: false, props: { category: { type: Array, required: true } }, setup(e2) {
  const t = $(), n2 = ue(), l2 = m();
  return () => e2.category.length ? h$1("span", { class: "page-category-info", "aria-label": `${t.value.category}${l2.value ? "" : "🌈"}`, ...l2.value ? {} : { "data-balloon-pos": "up" } }, [h$1(ea), e2.category.map(({ name: o2, path: r2 }) => h$1("span", { class: ["page-category-item", { [`color${Q(o2, Number(q$1.colorNumber))}`]: !l2.value, clickable: r2 }], role: r2 ? "navigation" : "", onClick: () => {
    r2 && n2(r2);
  } }, o2)), h$1("meta", { property: "articleSection", content: e2.category.map(({ name: o2 }) => o2).join(",") })]) : null;
} }), It = /* @__PURE__ */ defineComponent({ name: "DateInfo", inheritAttrs: false, props: { date: { type: Object, default: null }, localizedDate: { type: String, default: "" } }, setup(e2) {
  const t = usePageLang(), n2 = $(), l2 = m();
  return () => e2.date ? h$1("span", { class: "page-date-info", "aria-label": `${n2.value.date}${l2.value ? "" : "📅"}`, ...l2.value ? {} : { "data-balloon-pos": "up" } }, [h$1(Ze), h$1("span", { "data-allow-mismatch": "text" }, e2.localizedDate || e2.date.toLocaleDateString(t.value)), h$1("meta", { property: "datePublished", content: e2.date.toISOString() || "" })]) : null;
} }), St = /* @__PURE__ */ defineComponent({ name: "OriginalInfo", inheritAttrs: false, props: { isOriginal: Boolean }, setup(e2) {
  const t = $();
  return () => e2.isOriginal ? h$1("span", { class: "page-original-info" }, t.value.origin) : null;
} }), Ct = /* @__PURE__ */ defineComponent({ name: "ReadingTimeInfo", inheritAttrs: false, props: { readingTime: { type: Object, default: () => null }, readingTimeLocale: { type: Object, default: () => null } }, setup(e2) {
  const t = $(), n2 = m(), l2 = computed(() => {
    if (!e2.readingTime) return null;
    const { minutes: o2 } = e2.readingTime;
    return o2 < 1 ? "PT1M" : `PT${Math.round(o2)}M`;
  });
  return () => {
    var _a25, _b25;
    return ((_a25 = e2.readingTimeLocale) == null ? void 0 : _a25.time) ? h$1("span", { class: "page-reading-time-info", "aria-label": `${t.value.readingTime}${n2.value ? "" : "⌛"}`, ...n2.value ? {} : { "data-balloon-pos": "up" } }, [h$1(oa), h$1("span", (_b25 = e2.readingTimeLocale) == null ? void 0 : _b25.time), h$1("meta", { property: "timeRequired", content: l2.value })]) : null;
  };
} }), $t = /* @__PURE__ */ defineComponent({ name: "TagInfo", inheritAttrs: false, props: { tag: { type: Array, default: () => [] } }, setup(e2) {
  const t = $(), n2 = ue(), l2 = m();
  return () => e2.tag.length ? h$1("span", { class: "page-tag-info", "aria-label": `${t.value.tag}${l2.value ? "" : "🏷"}`, ...l2.value ? {} : { "data-balloon-pos": "up" } }, [h$1(la), e2.tag.map(({ name: o2, path: r2 }) => h$1("span", { class: ["page-tag-item", { [`color${Q(o2, Number(q$1.colorNumber))}`]: !l2.value, clickable: r2 }], role: r2 ? "navigation" : "", onClick: () => {
    r2 && n2(r2);
  } }, o2)), h$1("meta", { property: "keywords", content: e2.tag.map(({ name: o2 }) => o2).join(",") })]) : null;
} }), xt = /* @__PURE__ */ defineComponent({ name: "ReadTimeInfo", inheritAttrs: false, props: { readingTime: { type: Object, default: () => null }, readingTimeLocale: { type: Object, default: () => null } }, setup(e2) {
  const t = $(), n2 = m();
  return () => {
    var _a25, _b25, _c;
    return ((_a25 = e2.readingTimeLocale) == null ? void 0 : _a25.words) ? h$1("span", { class: "page-word-info", "aria-label": `${t.value.words}${n2.value ? "" : "🔠"}`, ...n2.value ? {} : { "data-balloon-pos": "up" } }, [h$1(ra), h$1("span", (_b25 = e2.readingTimeLocale) == null ? void 0 : _b25.words), h$1("meta", { property: "wordCount", content: (_c = e2.readingTime) == null ? void 0 : _c.words })]) : null;
  };
} }), Mt = /* @__PURE__ */ defineComponent({ name: "PageInfo", components: { AuthorInfo: wt, CategoryInfo: Tt, DateInfo: It, OriginalInfo: St, PageViewInfo: noopComponent, ReadingTimeInfo: Ct, TagInfo: $t, WordInfo: xt }, props: { items: { type: [Array, Boolean], default: () => ["Author", "Original", "Date", "PageView", "ReadingTime", "Category", "Tag"] }, info: { type: Object, required: true } }, setup(e2) {
  const t = m();
  return () => e2.items ? h$1("div", { class: "page-info" }, e2.items.map((n2) => h$1(resolveComponent(`${n2}Info`), { ...e2.info, isPure: t.value }))) : null;
} }), At = /* @__PURE__ */ defineComponent({ name: "PrintButton", setup() {
  const e2 = e$1(), t = o();
  return () => e2.value.print === false ? null : h$1("button", { type: "button", class: "print-button", title: t.value.metaLocales.print, onClick: () => {
    window.print();
  } }, h$1(na));
} }), zt = /* @__PURE__ */ defineComponent({ name: "TOC", props: { items: { type: Array, default: () => [] }, headerDepth: { type: Number, default: 2 } }, slots: Object, setup(e2, { slots: t }) {
  const n2 = useRoute(), l2 = usePageData(), o2 = $(), [r2, i2] = useToggle(), s2 = shallowRef(), d2 = ref("-1.7rem"), u2 = (m2) => {
    var _a25;
    (_a25 = s2.value) == null ? void 0 : _a25.scrollTo({ top: m2, behavior: "smooth" });
  }, v = () => {
    if (s2.value) {
      const m2 = document.querySelector(".vp-toc-item.active");
      m2 ? d2.value = `${m2.getBoundingClientRect().top - s2.value.getBoundingClientRect().top + s2.value.scrollTop}px` : d2.value = "-1.7rem";
    } else d2.value = "-1.7rem";
  };
  return onMounted(() => {
    watch(() => n2.hash, (m2) => {
      if (s2.value) {
        const h2 = document.querySelector(`#toc a.vp-toc-link[href$="${m2}"]`);
        if (!h2) return;
        const { top: w, height: k2 } = s2.value.getBoundingClientRect(), { top: b, height: I } = h2.getBoundingClientRect();
        b < w ? u2(s2.value.scrollTop + b - w) : b + I > w + k2 && u2(s2.value.scrollTop + b + I - w - k2);
      }
    }), watch(() => n2.fullPath, v, { flush: "post", immediate: true });
  }), () => {
    var _a25, _b25;
    const m2 = ({ title: k2, level: b, slug: I }) => h$1(RouteLink, { to: `#${I}`, class: ["vp-toc-link", `level${b}`], onClick: () => {
      i2();
    } }, () => k2), h2 = (k2, b) => k2.length && b > 0 ? h$1("ul", { class: "vp-toc-list" }, k2.map((I) => {
      const x2 = h2(I.children, b - 1);
      return [h$1("li", { class: ["vp-toc-item", { active: n2.hash === `#${I.slug}` }] }, m2(I)), x2 ? h$1("li", x2) : null];
    })) : null, w = e2.items.length ? h2(e2.items, e2.headerDepth) : l2.value.headers ? h2(l2.value.headers, e2.headerDepth) : null;
    return w ? h$1("div", { class: "vp-toc-placeholder" }, [h$1("aside", { id: "toc" }, [(_a25 = t.before) == null ? void 0 : _a25.call(t), h$1("div", { class: "vp-toc-header", onClick: () => {
      i2();
    } }, [o2.value.toc, h$1(At), h$1("div", { class: ["arrow", r2.value ? "down" : "end"] })]), h$1("div", { class: ["vp-toc-wrapper", r2.value ? "open" : ""], ref: s2 }, [w, h$1("div", { class: "vp-toc-marker", style: { top: d2.value } })]), (_b25 = t.after) == null ? void 0 : _b25.call(t)])]) : null;
  };
} }), Bt = /* @__PURE__ */ defineComponent({ name: "SkipLink", props: { content: { type: String, default: "main-content" } }, setup(e2) {
  const t = usePageData(), n2 = o(), l2 = shallowRef(), o$12 = ({ target: r2 }) => {
    const i2 = document.querySelector(r2.hash);
    if (i2) {
      const s2 = () => {
        i2.removeAttribute("tabindex"), i2.removeEventListener("blur", s2);
      };
      i2.setAttribute("tabindex", "-1"), i2.addEventListener("blur", s2), i2.focus(), window.scrollTo(0, 0);
    }
  };
  return onMounted(() => {
    watch(() => t.value.path, () => l2.value.focus());
  }), () => [h$1("span", { ref: l2, tabindex: "-1" }), h$1("a", { href: `#${e2.content}`, class: "vp-skip-link sr-only", onClick: o$12 }, n2.value.routeLocales.skipToContent)];
} });
let e = null, l = null;
const n = { wait: () => e, pending: () => {
  e = new Promise((o2) => {
    l = o2;
  });
}, resolve: () => {
  l == null ? void 0 : l(), e = null, l = null;
} }, s = (o2, { slots: i2 }) => h$1(Transition, { name: "fade-slide-y", mode: "out-in", onBeforeEnter: n.resolve, onBeforeLeave: n.pending }, () => i2.default());
s.displayName = "FadeSlideY";
const be = (r2, a2) => {
  const t = r2.replace(a2, "/").split("/"), n2 = [];
  let i2 = removeEndingSlash(a2);
  return t.forEach((l2, o2) => {
    o2 !== t.length - 1 ? (i2 += `${l2}/`, n2.push({ link: i2, name: l2 || "Home" })) : l2 !== "" && (i2 += l2, n2.push({ link: i2, name: l2 }));
  }), n2;
}, Y = (r2, a2) => r2 === false ? r2 : isPlainObject(r2) ? { ...r2, link: me(r2.link, true, a2).link } : isString$2(r2) ? me(r2, true, a2) : null, F = (r2, a2, t) => {
  const n2 = r2.findIndex((l2) => l2.link === a2);
  if (n2 !== -1) {
    const l2 = r2[n2 + t];
    return l2 ? l2.link ? l2 : "prefix" in l2 && !resolveRoute(l2.prefix).notFound ? { ...l2, link: l2.prefix } : null : null;
  }
  for (const l2 of r2) if ("children" in l2) {
    const o2 = F(l2.children, a2, t);
    if (o2) return o2;
  }
  const i2 = r2.findIndex((l2) => "prefix" in l2 && l2.prefix === a2);
  if (i2 !== -1) {
    const l2 = r2[i2 + t];
    return l2 ? l2.link ? l2 : "prefix" in l2 && !resolveRoute(l2.prefix).notFound ? { ...l2, link: l2.prefix } : null : null;
  }
  return null;
}, ke = () => {
  const r2 = usePageFrontmatter(), a2 = o(), t = ge(), n2 = useRoute(), i2 = computed(() => {
    const o2 = Y(r2.value.prev, n2.path);
    return o2 === false ? null : o2 ?? (a2.value.prevLink === false ? null : F(t.value, n2.path, -1));
  }), l2 = computed(() => {
    const o2 = Y(r2.value.next, n2.path);
    return o2 === false ? null : o2 ?? (a2.value.nextLink === false ? null : F(t.value, n2.path, 1));
  });
  return { prevLink: i2, nextLink: l2 };
}, R = (r2, { slots: a2 }) => {
  var _a25, _b25;
  const { bgImage: t, bgImageDark: n2, bgImageStyle: i2, color: l2, description: o2, image: v, imageDark: c, header: s2, features: g2 = [] } = r2;
  return h$1("div", { class: "vp-feature-wrapper" }, [t ? h$1("div", { class: ["vp-feature-bg", { light: n2 }], style: [{ "background-image": `url(${t})` }, i2] }) : null, n2 ? h$1("div", { class: "vp-feature-bg dark", style: [{ "background-image": `url(${n2})` }, i2] }) : null, h$1("div", { class: "vp-feature", style: l2 ? { color: l2 } : {} }, [((_a25 = a2.image) == null ? void 0 : _a25.call(a2, r2)) ?? [v ? h$1("img", { class: ["vp-feature-image", { light: c }], src: withBase(v), alt: "" }) : null, c ? h$1("img", { class: "vp-feature-image dark", src: withBase(c), alt: "" }) : null], ((_b25 = a2.info) == null ? void 0 : _b25.call(a2, r2)) ?? [s2 ? h$1("h2", { class: "vp-feature-header" }, s2) : null, o2 ? h$1("p", { class: "vp-feature-description", innerHTML: o2 }) : null], g2.length ? h$1("div", { class: "vp-features" }, g2.map(({ icon: h2, title: u2, details: p2, link: m2 }) => {
    const f = [h$1("h3", { class: "vp-feature-title" }, [h$1(P, { icon: h2 }), h$1("span", { innerHTML: u2 })]), h$1("p", { class: "vp-feature-details", innerHTML: p2 })];
    return m2 ? isLinkExternal(m2) ? h$1("a", { class: "vp-feature-item link", href: m2, "aria-label": u2, target: "_blank" }, f) : h$1(RouteLink, { class: "vp-feature-item link", to: m2, "aria-label": u2 }, () => f) : h$1("div", { class: "vp-feature-item" }, f);
  })) : null])]);
};
R.displayName = "FeaturePanel";
var ye = /* @__PURE__ */ defineComponent({ name: "HeroInfo", slots: Object, setup(r2, { slots: a2 }) {
  const t = usePageFrontmatter(), n2 = useSiteLocaleData(), i2 = computed(() => t.value.heroFullScreen ?? false), l2 = computed(() => {
    const { heroText: s2, tagline: g2 } = t.value;
    return { text: s2 ?? n2.value.title ?? "Hello", tagline: g2 ?? n2.value.description ?? "", isFullScreen: i2.value };
  }), o2 = computed(() => {
    const { heroText: s2, heroImage: g2, heroImageDark: h2, heroAlt: u2, heroImageStyle: p2 } = t.value;
    return { image: g2 ? withBase(g2) : null, imageDark: h2 ? withBase(h2) : null, imageStyle: p2, alt: u2 ?? s2 ?? "", isFullScreen: i2.value };
  }), v = computed(() => {
    const { bgImage: s2, bgImageDark: g2, bgImageStyle: h2 } = t.value;
    return { image: isString$2(s2) ? withBase(s2) : null, imageDark: isString$2(g2) ? withBase(g2) : null, bgStyle: h2, isFullScreen: i2.value };
  }), c = computed(() => t.value.actions ?? []);
  return () => {
    var _a25, _b25, _c;
    return h$1("header", { class: ["vp-hero-info-wrapper", { fullscreen: i2.value }] }, [((_a25 = a2.bg) == null ? void 0 : _a25.call(a2, v.value)) ?? [v.value.image ? h$1("div", { class: ["vp-hero-mask", { light: v.value.imageDark }], style: [{ "background-image": `url(${v.value.image})` }, v.value.bgStyle] }) : null, v.value.imageDark ? h$1("div", { class: "vp-hero-mask dark", style: [{ "background-image": `url(${v.value.imageDark})` }, v.value.bgStyle] }) : null], h$1("div", { class: "vp-hero-info" }, [((_b25 = a2.logo) == null ? void 0 : _b25.call(a2, o2.value)) ?? h$1(kt, { appear: true, type: "group" }, () => {
      const { image: s2, imageDark: g2, imageStyle: h2, alt: u2 } = o2.value;
      return [s2 ? h$1("img", { key: "light", class: ["vp-hero-image", { light: g2 }], style: h2, src: s2, alt: u2 }) : null, g2 ? h$1("img", { key: "dark", class: "vp-hero-image dark", style: h2, src: g2, alt: u2 }) : null];
    }), ((_c = a2.info) == null ? void 0 : _c.call(a2, l2.value)) ?? h$1("div", { class: "vp-hero-infos" }, [l2.value.text ? h$1(kt, { appear: true, delay: 0.04 }, () => h$1("h1", { id: "main-title", class: "vp-hero-title" }, l2.value.text)) : null, l2.value.tagline ? h$1(kt, { appear: true, delay: 0.08 }, () => h$1("p", { id: "main-description", innerHTML: l2.value.tagline })) : null, c.value.length ? h$1(kt, { appear: true, delay: 0.12 }, () => h$1("p", { class: "vp-hero-actions" }, c.value.map((s2) => h$1(C, { class: ["vp-hero-action", s2.type ?? "default", "no-external-link-icon"], config: s2 }, s2.icon ? { before: () => h$1(P, { icon: s2.icon }) } : {})))) : null])])]);
  };
} });
const q = (r2, { slots: a2 }) => {
  var _a25, _b25, _c;
  const { bgImage: t, bgImageDark: n2, bgImageStyle: i2, color: l2, description: o2, image: v, imageDark: c, header: s2, highlights: g2 = [], type: h2 = "un-order" } = r2;
  return h$1("div", { class: "vp-highlight-wrapper", style: l2 ? { color: l2 } : {} }, [t ? h$1("div", { class: ["vp-highlight-bg", { light: n2 }], style: [{ "background-image": `url(${t})` }, i2] }) : null, n2 ? h$1("div", { class: "vp-highlight-bg dark", style: [{ "background-image": `url(${n2})` }, i2] }) : null, h$1("div", { class: "vp-highlight" }, [((_a25 = a2.image) == null ? void 0 : _a25.call(a2, r2)) ?? [v ? h$1("img", { class: ["vp-highlight-image", { light: c }], src: withBase(v), alt: "" }) : null, c ? h$1("img", { class: "vp-highlight-image dark", src: withBase(c), alt: "" }) : null], ((_b25 = a2.info) == null ? void 0 : _b25.call(a2, r2)) ?? [h$1("div", { class: "vp-highlight-info-wrapper" }, h$1("div", { class: "vp-highlight-info" }, [s2 ? h$1("h2", { class: "vp-highlight-header", innerHTML: s2 }) : null, o2 ? h$1("p", { class: "vp-highlight-description", innerHTML: o2 }) : null, ((_c = a2.highlights) == null ? void 0 : _c.call(a2, g2)) ?? h$1(h2 === "order" ? "ol" : h2 === "no-order" ? "dl" : "ul", { class: "vp-highlights" }, g2.map(({ icon: u2, title: p2, details: m2, link: f }) => {
    const x2 = [h$1(h2 === "no-order" ? "dt" : "h3", { class: "vp-highlight-title" }, [u2 ? h$1(P, { class: "vp-highlight-icon", icon: u2 }) : null, h$1("span", { innerHTML: p2 })]), m2 ? h$1(h2 === "no-order" ? "dd" : "p", { class: "vp-highlight-details", innerHTML: m2 }) : null];
    return h$1(h2 === "no-order" ? "div" : "li", { class: ["vp-highlight-item-wrapper", { link: f }] }, f ? isLinkExternal(f) ? h$1("a", { class: "vp-highlight-item link", href: f, "aria-label": p2, target: "_blank" }, x2) : h$1(RouteLink, { class: "vp-highlight-item link", to: f, "aria-label": p2 }, () => x2) : h$1("div", { class: "vp-highlight-item" }, x2));
  }))]))]])]);
};
q.displayName = "HighlightPanel";
var Le = /* @__PURE__ */ defineComponent({ name: "HomePage", slots: Object, setup(r2, { slots: a2 }) {
  const t = usePageFrontmatter(), n2 = computed(() => {
    const { features: l2 } = t.value;
    return isArray$1(l2) ? l2 : null;
  }), i2 = computed(() => {
    const { highlights: l2 } = t.value;
    return isArray$1(l2) ? l2 : null;
  });
  return () => {
    var _a25, _b25, _c, _d;
    return h$1("main", { id: "main-content", class: "vp-page vp-project-home", "aria-labelledby": t.value.heroText === null ? "" : "main-title" }, [(_a25 = a2.top) == null ? void 0 : _a25.call(a2), h$1(ye), ((_b25 = i2.value) == null ? void 0 : _b25.map((l2) => "features" in l2 ? h$1(R, l2) : h$1(q, l2))) ?? (n2.value ? h$1(kt, { appear: true, delay: 0.24 }, () => h$1(R, { features: n2.value })) : null), (_c = a2.center) == null ? void 0 : _c.call(a2), h$1(kt, { appear: true, delay: 0.32 }, () => h$1(ye$1)), (_d = a2.bottom) == null ? void 0 : _d.call(a2)]);
  };
} }), De = /* @__PURE__ */ defineComponent({ name: "BreadCrumb", setup() {
  const r2 = usePageData(), a2 = useRouteLocale(), t = usePageFrontmatter(), n2 = o(), i2 = shallowRef([]), l2 = computed(() => (t.value.breadcrumb ?? n2.value.breadcrumb ?? true) && i2.value.length > 1), o$12 = computed(() => t.value.breadcrumbIcon ?? n2.value.breadcrumbIcon ?? true), v = () => {
    const c = be(r2.value.path, a2.value).map(({ link: s2, name: g2 }) => {
      const { path: h2, meta: u2, notFound: p2 } = resolveRoute(s2);
      return p2 || u2[V.breadcrumbExclude] ? null : { title: u2[V.shortTitle] || u2[V.title] || g2, icon: u2[V.icon], path: h2 };
    }).filter((s2) => s2 !== null);
    c.length > 1 && (i2.value = c);
  };
  return onMounted(() => {
    watch(() => r2.value.path, v, { immediate: true });
  }), () => h$1("nav", { class: ["vp-breadcrumb", { disable: !l2.value }] }, l2.value ? h$1("ol", { vocab: "https://schema.org/", typeof: "BreadcrumbList" }, i2.value.map((c, s2) => h$1("li", { class: { "is-active": i2.value.length - 1 === s2 }, property: "itemListElement", typeof: "ListItem" }, [h$1(RouteLink, { to: c.path, property: "item", typeof: "WebPage" }, () => [o$12.value ? h$1(P, { icon: c.icon }) : null, h$1("span", { property: "name" }, c.title || "Unknown")]), h$1("meta", { property: "position", content: s2 + 1 })]))) : []);
} }), Ie = /* @__PURE__ */ defineComponent({ name: "PageNav", setup() {
  const r2 = o(), a2 = ue(), { prevLink: t, nextLink: n2 } = ke();
  return useEventListener("keydown", (i2) => {
    i2.altKey && (i2.key === "ArrowRight" ? n2.value && (a2(n2.value.link), i2.preventDefault()) : i2.key === "ArrowLeft" && t.value && (a2(t.value.link), i2.preventDefault()));
  }), () => t.value || n2.value ? h$1("nav", { class: "vp-page-nav" }, [t.value ? h$1(C, { class: "prev", config: t.value }, () => {
    var _a25, _b25;
    return [h$1("div", { class: "hint" }, [h$1("span", { class: "arrow start" }), r2.value.metaLocales.prev]), h$1("div", { class: "link" }, [h$1(P, { icon: (_a25 = t.value) == null ? void 0 : _a25.icon }), (_b25 = t.value) == null ? void 0 : _b25.text])];
  }) : null, n2.value ? h$1(C, { class: "next", config: n2.value }, () => {
    var _a25, _b25;
    return [h$1("div", { class: "hint" }, [r2.value.metaLocales.next, h$1("span", { class: "arrow end" })]), h$1("div", { class: "link" }, [(_a25 = n2.value) == null ? void 0 : _a25.text, h$1(P, { icon: (_b25 = n2.value) == null ? void 0 : _b25.icon })])];
  }) : null]) : null;
} });
const Se = () => {
  const r2 = o(), a2 = usePageData(), t = usePageFrontmatter();
  return computed(() => {
    var _a25;
    return t.value.contributors ?? r2.value.contributors ?? true ? ((_a25 = a2.value.git) == null ? void 0 : _a25.contributors) ?? null : null;
  });
}, xe = { GitHub: ":repo/edit/:branch/:path", GitLab: ":repo/-/edit/:branch/:path", Gitee: ":repo/edit/:branch/:path", Bitbucket: ":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default" }, we = ({ docsRepo: r2, docsBranch: a2, docsDir: t, filePathRelative: n2, editLinkPattern: i2 }) => {
  if (!n2) return null;
  const l2 = M(r2);
  let o2;
  return i2 ? o2 = i2 : l2 !== null && (o2 = xe[l2]), o2 ? o2.replace(/:repo/u, isLinkHttp(r2) ? r2 : `https://github.com/${r2}`).replace(/:branch/u, a2).replace(/:path/u, removeLeadingSlash(`${removeEndingSlash(t)}/${n2}`)) : null;
}, Pe = () => {
  const r2 = o(), a2 = usePageData(), t = usePageFrontmatter();
  return computed(() => {
    const { repo: n2, docsRepo: i2 = n2, docsBranch: l2 = "main", docsDir: o2 = "", editLink: v, editLinkPattern: c = "" } = r2.value;
    if (!(t.value.editLink ?? v ?? true) || !i2) return null;
    const s2 = we({ docsRepo: i2, docsBranch: l2, docsDir: o2, editLinkPattern: c, filePathRelative: a2.value.filePathRelative });
    return s2 ? { text: r2.value.metaLocales.editLink, link: s2 } : null;
  });
}, Te = () => {
  const r2 = useSiteLocaleData(), a2 = o(), t = usePageData(), n2 = usePageFrontmatter();
  return computed(() => {
    var _a25, _b25;
    return !(n2.value.lastUpdated ?? a2.value.lastUpdated ?? true) || !((_a25 = t.value.git) == null ? void 0 : _a25.updatedTime) ? null : new Date((_b25 = t.value.git) == null ? void 0 : _b25.updatedTime).toLocaleString(r2.value.lang);
  });
};
var Be = /* @__PURE__ */ defineComponent({ name: "PageTitle", setup() {
  const r2 = usePageData(), a2 = usePageFrontmatter(), t = o(), { info: n2, items: i2 } = Wa();
  return () => h$1("div", { class: "vp-page-title" }, [h$1("h1", [t.value.titleIcon === false ? null : h$1(P, { icon: a2.value.icon }), r2.value.title]), h$1(Mt, { info: n2.value, ...i2.value === null ? {} : { items: i2.value } }), h$1("hr")]);
} });
const J = () => h$1(a$1, { name: "edit" }, () => [h$1("path", { d: "M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z" }), h$1("path", { d: "M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z" })]);
J.displayName = "EditIcon";
var He = /* @__PURE__ */ defineComponent({ name: "PageMeta", setup() {
  const r2 = o(), a2 = Pe(), t = Te(), n2 = Se();
  return () => {
    var _a25;
    const { metaLocales: i2 } = r2.value;
    return h$1("footer", { class: "vp-page-meta" }, [a2.value ? h$1("div", { class: "vp-meta-item edit-link" }, h$1(C, { class: "vp-meta-label", config: a2.value }, { before: () => h$1(J) })) : null, h$1("div", { class: "vp-meta-item git-info" }, [t.value ? h$1("div", { class: "update-time" }, [h$1("span", { class: "vp-meta-label" }, `${i2.lastUpdated}: `), h$1("span", { class: "vp-meta-info", "data-allow-mismatch": "text" }, t.value)]) : null, ((_a25 = n2.value) == null ? void 0 : _a25.length) ? h$1("div", { class: "contributors" }, [h$1("span", { class: "vp-meta-label" }, `${i2.contributors}: `), n2.value.map(({ email: l2, name: o2 }, v) => [h$1("span", { class: "vp-meta-info", title: `email: ${l2}` }, o2), v !== n2.value.length - 1 ? "," : ""])]) : null])]);
  };
} }), Ae = /* @__PURE__ */ defineComponent({ name: "NormalPage", slots: Object, setup(r2, { slots: a2 }) {
  const t = usePageFrontmatter(), { isDarkmode: n2 } = W(), i2 = o(), l2 = computed(() => t.value.toc ?? i2.value.toc ?? true), o$12 = computed(() => t.value.headerDepth ?? i2.value.headerDepth ?? 2);
  return () => h$1("main", { id: "main-content", class: "vp-page" }, h$1(hasGlobalComponent("LocalEncrypt") ? resolveComponent("LocalEncrypt") : G, () => {
    var _a25, _b25, _c, _d;
    return [(_a25 = a2.top) == null ? void 0 : _a25.call(a2), t.value.cover ? h$1("div", { class: "page-cover" }, h$1("img", { src: withBase(t.value.cover), alt: "", "no-view": "" })) : null, h$1(De), h$1(Be), l2.value ? h$1(zt, { headerDepth: o$12.value }, { before: a2.tocBefore ? () => a2.tocBefore() : null, after: a2.tocAfter ? () => a2.tocAfter() : null }) : null, (_b25 = a2.contentBefore) == null ? void 0 : _b25.call(a2), h$1(ye$1), (_c = a2.contentAfter) == null ? void 0 : _c.call(a2), h$1(He), h$1(Ie), hasGlobalComponent("CommentService") ? h$1(resolveComponent("CommentService"), { darkmode: n2.value }) : null, (_d = a2.bottom) == null ? void 0 : _d.call(a2)];
  }));
} }), Me = /* @__PURE__ */ defineComponent({ name: "PortfolioHero", slots: Object, setup(r2, { slots: a2 }) {
  const t = Me$1(), n2 = usePageFrontmatter(), i2 = ref(0), l2 = computed(() => {
    var _a25;
    return ((_a25 = n2.value.titles) == null ? void 0 : _a25[i2.value]) ?? "";
  }), o2 = ref(""), v = computed(() => {
    const { name: u2, avatar: p2, avatarDark: m2, avatarAlt: f, avatarStyle: x2 } = n2.value;
    return { name: u2 ?? t.value.name, avatar: p2 ? withBase(p2) : null, avatarDark: m2 ? withBase(m2) : null, avatarStyle: x2, alt: (f || u2) ?? "" };
  }), c = computed(() => {
    const { bgImage: u2, bgImageDark: p2, bgImageStyle: m2 } = n2.value;
    return { image: isString$2(u2) ? withBase(u2) : null, imageDark: isString$2(p2) ? withBase(p2) : null, bgStyle: m2 };
  }), s2 = computed(() => {
    const { welcome: u2, name: p2, titles: m2, medias: f } = n2.value;
    return { name: p2 ?? t.value.name, welcome: u2 ?? "👋 Hi There, I'm", title: o2.value, titles: m2 ?? [], medias: f ?? [] };
  }), g2 = () => {
    o2.value = "";
    let u2 = 0, p2 = false;
    const m2 = async () => {
      if (!p2) if (o2.value += l2.value[u2], u2 += 1, await nextTick(), u2 < l2.value.length) setTimeout(() => {
        m2();
      }, 150);
      else {
        const f = s2.value.titles.length;
        setTimeout(() => {
          i2.value = f <= 1 || i2.value === s2.value.titles.length - 1 ? 0 : i2.value + 1;
        }, 1e3);
      }
    };
    return m2(), () => {
      p2 = true;
    };
  };
  let h2;
  return onMounted(() => {
    watch(l2, () => {
      h2 == null ? void 0 : h2(), h2 = g2();
    }, { immediate: true });
  }), () => {
    var _a25, _b25, _c;
    return h$1("section", { id: "portfolio", class: ["vp-portfolio", { bg: c.value.image }] }, [((_a25 = a2.bg) == null ? void 0 : _a25.call(a2, c.value)) ?? [c.value.image ? h$1("div", { class: ["vp-portfolio-mask", { light: c.value.imageDark }], style: [{ background: `url(${c.value.image}) center/cover no-repeat` }, c.value.bgStyle] }) : null, c.value.imageDark ? h$1("div", { class: "vp-portfolio-mask dark", style: [{ background: `url(${c.value.imageDark}) center/cover no-repeat` }, c.value.bgStyle] }) : null], ((_b25 = a2.avatar) == null ? void 0 : _b25.call(a2, v.value)) ?? h$1("div", { class: "vp-portfolio-avatar" }, [h$1(kt, { delay: 0.04 }, () => {
      const { avatarDark: u2, name: p2, alt: m2, avatarStyle: f } = v.value;
      return [h$1("img", { key: "light", class: { light: u2 }, src: v.value.avatar, title: p2, alt: m2, style: f }), u2 ? h$1("img", { key: "dark", class: "dark", src: u2, title: p2, alt: m2, style: f }) : null];
    })]), h$1("div", { class: "vp-portfolio-container" }, ((_c = a2.info) == null ? void 0 : _c.call(a2, s2.value)) ?? h$1("div", { class: "vp-portfolio-info" }, [h$1(kt, { appear: true, delay: 0.08 }, () => h$1("h6", { class: "vp-portfolio-welcome" }, s2.value.welcome)), h$1(kt, { appear: true, delay: 0.12 }, () => h$1("h1", { class: "vp-portfolio-name", id: "main-title" }, s2.value.name)), h$1(kt, { appear: true, delay: 0.16 }, () => h$1("h2", { class: "vp-portfolio-title" }, o2.value)), h$1(kt, { appear: true, delay: 0.2 }, () => s2.value.medias.length ? h$1("div", { class: "vp-portfolio-medias" }, s2.value.medias.map(({ name: u2, url: p2, icon: m2 }) => h$1("a", { class: "vp-portfolio-media", href: p2, rel: "noopener noreferrer", target: "_blank", title: u2 }, h$1(P, { icon: m2 })))) : hasGlobalComponent("SocialMedias") ? h$1(resolveComponent("SocialMedias")) : null)]))]);
  };
} }), $e = /* @__PURE__ */ defineComponent({ name: "PortfolioHome", setup() {
  const r2 = usePageFrontmatter(), a2 = computed(() => r2.value.content ?? "portfolio");
  return () => h$1("main", { id: "main-content", class: "vp-page vp-portfolio-home", "aria-labelledby": "main-title" }, [h$1(Me), a2.value === "none" ? null : h$1("div", {}, h$1(kt, { appear: true, delay: 0.24 }, () => h$1(ye$1, { class: { "vp-portfolio-content": a2.value === "portfolio" } })))]);
} }), Fe = /* @__PURE__ */ defineComponent({ name: "Layout", slots: Object, setup(r2, { slots: a2 }) {
  o();
  const i2 = usePageData(), l2 = usePageFrontmatter(), o$12 = m(), { isMobile: v } = J$1(), c = computed(() => "none");
  return () => [h$1(Bt), h$1(yt, {}, { default: () => {
    var _a25;
    return ((_a25 = a2.default) == null ? void 0 : _a25.call(a2)) ?? (l2.value.portfolio ? h$1($e) : l2.value.home ? h$1(Le) : h$1(o$12.value ? G : s, () => h$1(Ae, { key: i2.value.path }, { top: a2.top ? () => a2.top() : null, bottom: a2.bottom ? () => a2.bottom() : null, contentBefore: a2.contentBefore ? () => a2.contentBefore() : null, contentAfter: a2.contentAfter ? () => a2.contentAfter() : null, tocBefore: a2.tocBefore ? () => a2.tocBefore() : null, tocAfter: a2.tocAfter ? () => a2.tocAfter() : null })));
  }, navScreenBottom: c.value === "none" && hasGlobalComponent("BloggerInfo") ? () => h$1(resolveComponent("BloggerInfo")) : null, sidebar: !v.value && c.value === "always" && hasGlobalComponent("BloggerInfo") ? () => h$1(resolveComponent("BloggerInfo")) : null })];
} }), Re = /* @__PURE__ */ defineComponent({ name: "NotFoundHint", setup() {
  const r2 = o(), a2 = () => {
    const t = r2.value.routeLocales.notFoundMsg;
    return t[Math.floor(Math.random() * t.length)];
  };
  return () => h$1("div", { class: "not-found-hint" }, [h$1("p", { class: "error-code" }, "404"), h$1("h1", { class: "error-title" }, r2.value.routeLocales.notFoundTitle), h$1("p", { class: "error-hint" }, a2())]);
} }), Ee = /* @__PURE__ */ defineComponent({ name: "NotFound", slots: Object, setup(r2, { slots: a2 }) {
  const t = useRouter(), n2 = useRouteLocale(), i2 = o();
  return () => [h$1(Bt), h$1(yt, { noSidebar: true }, () => {
    var _a25;
    return h$1("main", { id: "main-content", class: "vp-page not-found" }, ((_a25 = a2.default) == null ? void 0 : _a25.call(a2)) ?? [h$1(Re), h$1("div", { class: "actions" }, [h$1("button", { type: "button", class: "action-button", onClick: () => {
      window.history.go(-1);
    } }, i2.value.routeLocales.back), h$1("button", { type: "button", class: "action-button", onClick: () => {
      t.push(i2.value.home ?? n2.value);
    } }, i2.value.routeLocales.home)])]);
  })];
} });
n$2((meta) => {
  const title = meta.t;
  const shouldIndex = meta.I !== false;
  const icon = meta.i;
  return shouldIndex ? {
    title,
    content: icon ? () => [h$1(P, { icon }), title] : null,
    order: meta.O,
    index: meta.I
  } : null;
});
const config$5 = {
  enhance: ({ app, router }) => {
    const { scrollBehavior } = router.options;
    router.options.scrollBehavior = async (...args) => {
      await n.wait();
      return scrollBehavior(...args);
    };
    Ka(app);
    app.component("HopeIcon", P);
  },
  setup: () => {
    Qa();
    Ya();
  },
  layouts: {
    Layout: Fe,
    NotFound: Ee
  }
};
const clientConfig11 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$5
}, Symbol.toStringTag, { value: "Module" }));
const isFocusingTextControl = (target2) => {
  if (!(target2 instanceof Element)) {
    return false;
  }
  return document.activeElement === target2 && (["TEXTAREA", "SELECT", "INPUT"].includes(target2.tagName) || target2.hasAttribute("contenteditable"));
};
const isKeyMatched = (event, hotKeys2) => hotKeys2.some((item) => {
  if (isString$2(item)) {
    return item === event.key;
  }
  const { key, ctrl = false, shift = false, alt = false } = item;
  return key === event.key && ctrl === event.ctrlKey && shift === event.shiftKey && alt === event.altKey;
});
const nonASCIIRegExp = /[^\x00-\x7F]/;
const splitWords = (content) => content.split(/\s+/g).map((str) => str.trim()).filter((str) => !!str);
const escapeRegExp = (str) => str.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
const isQueryMatched = (query, toMatch) => {
  const toMatchStr = toMatch.join(" ");
  const words = splitWords(query);
  if (nonASCIIRegExp.test(query)) {
    return words.some((word) => toMatchStr.toLowerCase().includes(word));
  }
  const hasTrailingSpace = query.endsWith(" ");
  const searchRegex = new RegExp(`${words.map((word, index) => {
    if (words.length === index + 1 && !hasTrailingSpace) {
      return `(?=.*\\b${escapeRegExp(word)})`;
    }
    return `(?=.*\\b${escapeRegExp(word)}\\b)`;
  }).join("")}.+`, "gi");
  return searchRegex.test(toMatchStr);
};
const useHotKeys = ({ input, hotKeys: hotKeys2 }) => {
  if (hotKeys2.value.length === 0)
    return;
  const onKeydown = (event) => {
    if (!input.value)
      return;
    if (
      // key matches
      isKeyMatched(event, hotKeys2.value) && // event does not come from the search box itself or
      // user isn't focusing (and thus perhaps typing in) a text control
      !isFocusingTextControl(event.target)
    ) {
      event.preventDefault();
      input.value.focus();
    }
  };
  onMounted(() => {
    document.addEventListener("keydown", onKeydown);
  });
  onBeforeUnmount(() => {
    document.removeEventListener("keydown", onKeydown);
  });
};
const SEARCH_INDEX = [
  {
    "title": "",
    "headers": [],
    "path": "/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "学习计划",
    "headers": [
      {
        "level": 2,
        "title": "Vue",
        "slug": "vue",
        "link": "#vue",
        "children": []
      },
      {
        "level": 2,
        "title": "其他",
        "slug": "其他",
        "link": "#其他",
        "children": []
      }
    ],
    "path": "/study-plan.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "TODO",
    "headers": [
      {
        "level": 2,
        "title": "待学习列表",
        "slug": "待学习列表",
        "link": "#待学习列表",
        "children": []
      },
      {
        "level": 2,
        "title": "总结",
        "slug": "总结",
        "link": "#总结",
        "children": []
      },
      {
        "level": 2,
        "title": "周会分享题目",
        "slug": "周会分享题目",
        "link": "#周会分享题目",
        "children": []
      }
    ],
    "path": "/todo.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "利用 animation-delay 实现复杂动画",
    "headers": [
      {
        "level": 2,
        "title": "示例一：控制小球移动",
        "slug": "示例一-控制小球移动",
        "link": "#示例一-控制小球移动",
        "children": [
          {
            "level": 3,
            "title": "实现效果",
            "slug": "实现效果",
            "link": "#实现效果",
            "children": []
          },
          {
            "level": 3,
            "title": "实现说明",
            "slug": "实现说明",
            "link": "#实现说明",
            "children": []
          },
          {
            "level": 3,
            "title": "实验源码",
            "slug": "实验源码",
            "link": "#实验源码",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "示例二：评分动画",
        "slug": "示例二-评分动画",
        "link": "#示例二-评分动画",
        "children": [
          {
            "level": 3,
            "title": "实现效果",
            "slug": "实现效果-1",
            "link": "#实现效果-1",
            "children": []
          },
          {
            "level": 3,
            "title": "实验源码",
            "slug": "实验源码-1",
            "link": "#实验源码-1",
            "children": []
          }
        ]
      }
    ],
    "path": "/animation-effects/complicated-animations-with-animation-delay.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "渐变阴影",
    "headers": [
      {
        "level": 2,
        "title": "实现效果",
        "slug": "实现效果",
        "link": "#实现效果",
        "children": []
      },
      {
        "level": 2,
        "title": "实现说明",
        "slug": "实现说明",
        "link": "#实现说明",
        "children": []
      },
      {
        "level": 2,
        "title": "实现代码",
        "slug": "实现代码",
        "link": "#实现代码",
        "children": []
      }
    ],
    "path": "/animation-effects/gradient-shadows.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "动画效果",
    "headers": [],
    "path": "/animation-effects/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "滚动列表元素时平滑上升",
    "headers": [
      {
        "level": 2,
        "title": "效果说明",
        "slug": "效果说明",
        "link": "#效果说明",
        "children": []
      },
      {
        "level": 2,
        "title": "效果演示",
        "slug": "效果演示",
        "link": "#效果演示",
        "children": []
      },
      {
        "level": 2,
        "title": "实现源码",
        "slug": "实现源码",
        "link": "#实现源码",
        "children": []
      }
    ],
    "path": "/animation-effects/scroll-elements-fade-up.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "代码片段",
    "headers": [],
    "path": "/code-snippet/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "需要经常使用的方法",
    "headers": [
      {
        "level": 2,
        "title": "字符串",
        "slug": "字符串",
        "link": "#字符串",
        "children": []
      },
      {
        "level": 2,
        "title": "数值",
        "slug": "数值",
        "link": "#数值",
        "children": []
      },
      {
        "level": 2,
        "title": "数组",
        "slug": "数组",
        "link": "#数组",
        "children": []
      },
      {
        "level": 2,
        "title": "正则表达式",
        "slug": "正则表达式",
        "link": "#正则表达式",
        "children": []
      },
      {
        "level": 2,
        "title": "函数",
        "slug": "函数",
        "link": "#函数",
        "children": []
      },
      {
        "level": 2,
        "title": "对象",
        "slug": "对象",
        "link": "#对象",
        "children": []
      }
    ],
    "path": "/es6/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "全栈技能",
    "headers": [
      {
        "level": 2,
        "title": "领域内知识",
        "slug": "领域内知识",
        "link": "#领域内知识",
        "children": []
      },
      {
        "level": 2,
        "title": "配置本地 hosts 文件",
        "slug": "配置本地-hosts-文件",
        "link": "#配置本地-hosts-文件",
        "children": [
          {
            "level": 3,
            "title": "MAC 电脑",
            "slug": "mac-电脑",
            "link": "#mac-电脑",
            "children": []
          }
        ]
      }
    ],
    "path": "/full-stack/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "面试基本信息",
    "headers": [
      {
        "level": 2,
        "title": "个人信息",
        "slug": "个人信息",
        "link": "#个人信息",
        "children": []
      }
    ],
    "path": "/interview/basic.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "面试准备",
    "headers": [
      {
        "level": 2,
        "title": "待读文章",
        "slug": "待读文章",
        "link": "#待读文章",
        "children": []
      }
    ],
    "path": "/interview/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "React 渲染机制和原理",
    "headers": [
      {
        "level": 2,
        "title": "渲染期间调用 useState 的 set 函数等导致重新渲染的函数时，会直接重新渲染，DOM 最终统一更新",
        "slug": "渲染期间调用-usestate-的-set-函数等导致重新渲染的函数时-会直接重新渲染-dom-最终统一更新",
        "link": "#渲染期间调用-usestate-的-set-函数等导致重新渲染的函数时-会直接重新渲染-dom-最终统一更新",
        "children": []
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": []
      }
    ],
    "path": "/react/render.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "学习笔记",
    "headers": [
      {
        "level": 2,
        "title": "TypeScript 系列文章",
        "slug": "typescript-系列文章",
        "link": "#typescript-系列文章",
        "children": []
      },
      {
        "level": 2,
        "title": "其他文章",
        "slug": "其他文章",
        "link": "#其他文章",
        "children": []
      },
      {
        "level": 2,
        "title": "核心概念",
        "slug": "核心概念",
        "link": "#核心概念",
        "children": [
          {
            "level": 3,
            "title": "类型",
            "slug": "类型",
            "link": "#类型",
            "children": []
          },
          {
            "level": 3,
            "title": "值",
            "slug": "值",
            "link": "#值",
            "children": []
          },
          {
            "level": 3,
            "title": "命名空间",
            "slug": "命名空间",
            "link": "#命名空间",
            "children": []
          },
          {
            "level": 3,
            "title": "简单的组合：一个名字，多种意义",
            "slug": "简单的组合-一个名字-多种意义",
            "link": "#简单的组合-一个名字-多种意义",
            "children": []
          },
          {
            "level": 3,
            "title": "使用 export= 或 import",
            "slug": "使用-export-或-import",
            "link": "#使用-export-或-import",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "其他语法",
        "slug": "其他语法",
        "link": "#其他语法",
        "children": []
      }
    ],
    "path": "/typescript/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vue 3.x",
    "headers": [
      {
        "level": 2,
        "title": "源码学习进度",
        "slug": "源码学习进度",
        "link": "#源码学习进度",
        "children": [
          {
            "level": 3,
            "title": "响应式原理 reactivity",
            "slug": "响应式原理-reactivity",
            "link": "#响应式原理-reactivity",
            "children": []
          },
          {
            "level": 3,
            "title": "runtime-core",
            "slug": "runtime-core",
            "link": "#runtime-core",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      }
    ],
    "path": "/vue3/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "composition-api",
    "headers": [
      {
        "level": 2,
        "title": "状态管理",
        "slug": "状态管理",
        "link": "#状态管理",
        "children": []
      }
    ],
    "path": "/vue3/composition-api.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vue3 状态管理",
    "headers": [],
    "path": "/vue3/state-management.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "好用的工具推荐",
    "headers": [
      {
        "level": 2,
        "title": "在线笔记",
        "slug": "在线笔记",
        "link": "#在线笔记",
        "children": []
      },
      {
        "level": 2,
        "title": "PPT",
        "slug": "ppt",
        "link": "#ppt",
        "children": []
      }
    ],
    "path": "/wander/tools.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "关于写作",
    "headers": [
      {
        "level": 2,
        "title": "固有观念的转变",
        "slug": "固有观念的转变",
        "link": "#固有观念的转变",
        "children": []
      },
      {
        "level": 2,
        "title": "卡片盒笔记法",
        "slug": "卡片盒笔记法",
        "link": "#卡片盒笔记法",
        "children": []
      }
    ],
    "path": "/writing/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "优秀文章集锦",
    "headers": [
      {
        "level": 2,
        "title": "术语解释",
        "slug": "术语解释",
        "link": "#术语解释",
        "children": []
      },
      {
        "level": 2,
        "title": "技术类",
        "slug": "技术类",
        "link": "#技术类",
        "children": [
          {
            "level": 3,
            "title": "代码风格",
            "slug": "代码风格",
            "link": "#代码风格",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "技术尝鲜",
        "slug": "技术尝鲜",
        "link": "#技术尝鲜",
        "children": [
          {
            "level": 3,
            "title": "WebRTC",
            "slug": "webrtc",
            "link": "#webrtc",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "工程类",
        "slug": "工程类",
        "link": "#工程类",
        "children": [
          {
            "level": 3,
            "title": "微前端",
            "slug": "微前端",
            "link": "#微前端",
            "children": []
          },
          {
            "level": 3,
            "title": "服务端",
            "slug": "服务端",
            "link": "#服务端",
            "children": []
          }
        ]
      }
    ],
    "path": "/articles/good-articles/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "JavaScript 语言相关文章",
    "headers": [
      {
        "level": 2,
        "title": "JavaScript Core",
        "slug": "javascript-core",
        "link": "#javascript-core",
        "children": []
      },
      {
        "level": 2,
        "title": "TypeScript",
        "slug": "typescript",
        "link": "#typescript",
        "children": []
      },
      {
        "level": 2,
        "title": "框架",
        "slug": "框架",
        "link": "#框架",
        "children": [
          {
            "level": 3,
            "title": "Vue",
            "slug": "vue",
            "link": "#vue",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "事件循环",
        "slug": "事件循环",
        "link": "#事件循环",
        "children": []
      },
      {
        "level": 2,
        "title": "错误处理和监控",
        "slug": "错误处理和监控",
        "link": "#错误处理和监控",
        "children": []
      },
      {
        "level": 2,
        "title": "动画",
        "slug": "动画",
        "link": "#动画",
        "children": []
      },
      {
        "level": 2,
        "title": "性能",
        "slug": "性能",
        "link": "#性能",
        "children": []
      },
      {
        "level": 2,
        "title": "GPU 加速",
        "slug": "gpu-加速",
        "link": "#gpu-加速",
        "children": []
      }
    ],
    "path": "/articles/good-articles/javascript.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "微信小程序里一次 JSON.parse 解析错误问题的探究",
    "headers": [
      {
        "level": 2,
        "title": "问题描述",
        "slug": "问题描述",
        "link": "#问题描述",
        "children": []
      },
      {
        "level": 2,
        "title": "进一步探究",
        "slug": "进一步探究",
        "link": "#进一步探究",
        "children": []
      },
      {
        "level": 2,
        "title": "原理解析",
        "slug": "原理解析",
        "link": "#原理解析",
        "children": [
          {
            "level": 3,
            "title": "行分隔符被替换成换行符",
            "slug": "行分隔符被替换成换行符",
            "link": "#行分隔符被替换成换行符",
            "children": []
          },
          {
            "level": 3,
            "title": "含有换行符的字符串 JSON.parse 出错",
            "slug": "含有换行符的字符串-json-parse-出错",
            "link": "#含有换行符的字符串-json-parse-出错",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "解决方案",
        "slug": "解决方案",
        "link": "#解决方案",
        "children": []
      },
      {
        "level": 2,
        "title": "说明",
        "slug": "说明",
        "link": "#说明",
        "children": [
          {
            "level": 3,
            "title": "接口返回数据里为什么会包含行分隔符",
            "slug": "接口返回数据里为什么会包含行分隔符",
            "link": "#接口返回数据里为什么会包含行分隔符",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      }
    ],
    "path": "/articles/line-terminator/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "JavaScript 中字符串字面量的计算",
    "headers": [
      {
        "level": 2,
        "title": "背景",
        "slug": "背景",
        "link": "#背景",
        "children": []
      },
      {
        "level": 2,
        "title": "特殊字符及转义序列",
        "slug": "特殊字符及转义序列",
        "link": "#特殊字符及转义序列",
        "children": []
      },
      {
        "level": 2,
        "title": "JavaScript 是如何计算字符串字面量的",
        "slug": "javascript-是如何计算字符串字面量的",
        "link": "#javascript-是如何计算字符串字面量的",
        "children": []
      },
      {
        "level": 2,
        "title": "哪些场景需要考虑字符串字面量的计算",
        "slug": "哪些场景需要考虑字符串字面量的计算",
        "link": "#哪些场景需要考虑字符串字面量的计算",
        "children": [
          {
            "level": 3,
            "title": "动态创建正则表达式",
            "slug": "动态创建正则表达式",
            "link": "#动态创建正则表达式",
            "children": []
          },
          {
            "level": 3,
            "title": "eval",
            "slug": "eval",
            "link": "#eval",
            "children": []
          },
          {
            "level": 3,
            "title": "JSON.parse",
            "slug": "json-parse",
            "link": "#json-parse",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "哪些场景不需要考虑 JavaScript 计算",
        "slug": "哪些场景不需要考虑-javascript-计算",
        "link": "#哪些场景不需要考虑-javascript-计算",
        "children": [
          {
            "level": 3,
            "title": "表单项输入的字符串",
            "slug": "表单项输入的字符串",
            "link": "#表单项输入的字符串",
            "children": []
          },
          {
            "level": 3,
            "title": "接口返回的字符串",
            "slug": "接口返回的字符串",
            "link": "#接口返回的字符串",
            "children": []
          },
          {
            "level": 3,
            "title": "行继续符",
            "slug": "行继续符",
            "link": "#行继续符",
            "children": []
          },
          {
            "level": 3,
            "title": "参考文档",
            "slug": "参考文档",
            "link": "#参考文档",
            "children": []
          }
        ]
      }
    ],
    "path": "/articles/string-literal/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "微信小程序 Source Map 的使用及一键解析",
    "headers": [
      {
        "level": 2,
        "title": "背景介绍",
        "slug": "背景介绍",
        "link": "#背景介绍",
        "children": []
      },
      {
        "level": 2,
        "title": "Source Map",
        "slug": "source-map",
        "link": "#source-map",
        "children": [
          {
            "level": 3,
            "title": "生成 Source Map",
            "slug": "生成-source-map",
            "link": "#生成-source-map",
            "children": []
          },
          {
            "level": 3,
            "title": "获取 Source Map",
            "slug": "获取-source-map",
            "link": "#获取-source-map",
            "children": []
          },
          {
            "level": 3,
            "title": "解析 Source Map",
            "slug": "解析-source-map",
            "link": "#解析-source-map",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "一键解析",
        "slug": "一键解析",
        "link": "#一键解析",
        "children": [
          {
            "level": 3,
            "title": "常见问题说明",
            "slug": "常见问题说明",
            "link": "#常见问题说明",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "总结",
        "slug": "总结",
        "link": "#总结",
        "children": []
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      }
    ],
    "path": "/articles/wechat-mini-program-sourcemap/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Source Map",
    "headers": [
      {
        "level": 2,
        "title": "sourcesContent",
        "slug": "sourcescontent",
        "link": "#sourcescontent",
        "children": []
      }
    ],
    "path": "/articles/wechat-mini-program-sourcemap/sourcemap.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "文字效果",
    "headers": [],
    "path": "/animation-effects/text-effects/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "交错排列的文字",
    "headers": [
      {
        "level": 2,
        "title": "实现效果",
        "slug": "实现效果",
        "link": "#实现效果",
        "children": []
      },
      {
        "level": 2,
        "title": "实现代码",
        "slug": "实现代码",
        "link": "#实现代码",
        "children": []
      }
    ],
    "path": "/animation-effects/text-effects/overlap-text.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "向上出现的标题动画",
    "headers": [
      {
        "level": 2,
        "title": "实现效果",
        "slug": "实现效果",
        "link": "#实现效果",
        "children": []
      },
      {
        "level": 2,
        "title": "实现代码",
        "slug": "实现代码",
        "link": "#实现代码",
        "children": []
      }
    ],
    "path": "/animation-effects/text-effects/title-animations.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "工具函数",
    "headers": [
      {
        "level": 2,
        "title": "生成随机的字母数字字符串",
        "slug": "生成随机的字母数字字符串",
        "link": "#生成随机的字母数字字符串",
        "children": []
      }
    ],
    "path": "/code-snippet/js/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "简单跑马灯",
    "headers": [
      {
        "level": 2,
        "title": "说明",
        "slug": "说明",
        "link": "#说明",
        "children": []
      },
      {
        "level": 2,
        "title": "示例",
        "slug": "示例",
        "link": "#示例",
        "children": []
      },
      {
        "level": 2,
        "title": "调用",
        "slug": "调用",
        "link": "#调用",
        "children": []
      },
      {
        "level": 2,
        "title": "代码",
        "slug": "代码",
        "link": "#代码",
        "children": [
          {
            "level": 3,
            "title": "组件源码",
            "slug": "组件源码",
            "link": "#组件源码",
            "children": []
          }
        ]
      }
    ],
    "path": "/code-snippet/vue-components/base-marquee.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "通用弹窗",
    "headers": [
      {
        "level": 2,
        "title": "说明",
        "slug": "说明",
        "link": "#说明",
        "children": []
      },
      {
        "level": 2,
        "title": "示例",
        "slug": "示例",
        "link": "#示例",
        "children": [
          {
            "level": 3,
            "title": "示例一：允许蒙层之下的内容滚动",
            "slug": "示例一-允许蒙层之下的内容滚动",
            "link": "#示例一-允许蒙层之下的内容滚动",
            "children": []
          },
          {
            "level": 3,
            "title": "示例二：禁止蒙层之下的内容滚动",
            "slug": "示例二-禁止蒙层之下的内容滚动",
            "link": "#示例二-禁止蒙层之下的内容滚动",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "调用",
        "slug": "调用",
        "link": "#调用",
        "children": [
          {
            "level": 3,
            "title": "参数说明",
            "slug": "参数说明",
            "link": "#参数说明",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "代码",
        "slug": "代码",
        "link": "#代码",
        "children": [
          {
            "level": 3,
            "title": "调用示例",
            "slug": "调用示例",
            "link": "#调用示例",
            "children": []
          },
          {
            "level": 3,
            "title": "组件源码",
            "slug": "组件源码",
            "link": "#组件源码",
            "children": []
          }
        ]
      }
    ],
    "path": "/code-snippet/vue-components/common-popup.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "浏览器 API",
    "headers": [
      {
        "level": 2,
        "title": "URLSearchParams",
        "slug": "urlsearchparams",
        "link": "#urlsearchparams",
        "children": []
      },
      {
        "level": 2,
        "title": "JS Base64 编码/解码",
        "slug": "js-base64-编码-解码",
        "link": "#js-base64-编码-解码",
        "children": [
          {
            "level": 3,
            "title": "Base64 编码",
            "slug": "base64-编码",
            "link": "#base64-编码",
            "children": []
          },
          {
            "level": 3,
            "title": "Base64 解码",
            "slug": "base64-解码",
            "link": "#base64-解码",
            "children": []
          },
          {
            "level": 3,
            "title": "中文报错",
            "slug": "中文报错",
            "link": "#中文报错",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/browser/browser-api.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "浏览器里的资源请求",
    "headers": [
      {
        "level": 2,
        "title": "资源分类",
        "slug": "资源分类",
        "link": "#资源分类",
        "children": []
      },
      {
        "level": 2,
        "title": "资源请求",
        "slug": "资源请求",
        "link": "#资源请求",
        "children": [
          {
            "level": 3,
            "title": "预处理请求",
            "slug": "预处理请求",
            "link": "#预处理请求",
            "children": []
          },
          {
            "level": 3,
            "title": "资源排队的原因",
            "slug": "资源排队的原因",
            "link": "#资源排队的原因",
            "children": []
          },
          {
            "level": 3,
            "title": "资源请求优先级",
            "slug": "资源请求优先级",
            "link": "#资源请求优先级",
            "children": []
          },
          {
            "level": 3,
            "title": "preload、prefetch",
            "slug": "preload、prefetch",
            "link": "#preload、prefetch",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/browser/browser-requests.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "缓存机制",
    "headers": [
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      },
      {
        "level": 2,
        "title": "浏览器默认过期时间（启发式新鲜度检查）",
        "slug": "浏览器默认过期时间-启发式新鲜度检查",
        "link": "#浏览器默认过期时间-启发式新鲜度检查",
        "children": []
      }
    ],
    "path": "/browser-env/browser/cache.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "事件循环",
    "headers": [
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      },
      {
        "level": 2,
        "title": "名词中英文",
        "slug": "名词中英文",
        "link": "#名词中英文",
        "children": []
      },
      {
        "level": 2,
        "title": "任务队列",
        "slug": "任务队列",
        "link": "#任务队列",
        "children": [
          {
            "level": 3,
            "title": "任务队列里可能有哪些宏任务",
            "slug": "任务队列里可能有哪些宏任务",
            "link": "#任务队列里可能有哪些宏任务",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "定时器的实现",
        "slug": "定时器的实现",
        "link": "#定时器的实现",
        "children": [
          {
            "level": 3,
            "title": "setTimeout 的实现",
            "slug": "settimeout-的实现",
            "link": "#settimeout-的实现",
            "children": []
          },
          {
            "level": 3,
            "title": "clearTimeout 的实现",
            "slug": "cleartimeout-的实现",
            "link": "#cleartimeout-的实现",
            "children": []
          },
          {
            "level": 3,
            "title": "使用 setTimeout 的一些注意事项",
            "slug": "使用-settimeout-的一些注意事项",
            "link": "#使用-settimeout-的一些注意事项",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "异步 XMLHttpRequest 请求回调",
        "slug": "异步-xmlhttprequest-请求回调",
        "link": "#异步-xmlhttprequest-请求回调",
        "children": []
      },
      {
        "level": 2,
        "title": "宏任务和微任务",
        "slug": "宏任务和微任务",
        "link": "#宏任务和微任务",
        "children": [
          {
            "level": 3,
            "title": "微任务",
            "slug": "微任务",
            "link": "#微任务",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档-1",
        "link": "#参考文档-1",
        "children": []
      }
    ],
    "path": "/browser-env/browser/event-loop.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "FAQ",
    "headers": [
      {
        "level": 2,
        "title": "为什么 Chrome 浏览器的 UA 里会包含 AppleWebkit？",
        "slug": "为什么-chrome-浏览器的-ua-里会包含-applewebkit",
        "link": "#为什么-chrome-浏览器的-ua-里会包含-applewebkit",
        "children": []
      },
      {
        "level": 2,
        "title": "现代浏览器里打开多个 Tab，每个 Tab 的端口是一样的吗？",
        "slug": "现代浏览器里打开多个-tab-每个-tab-的端口是一样的吗",
        "link": "#现代浏览器里打开多个-tab-每个-tab-的端口是一样的吗",
        "children": []
      },
      {
        "level": 2,
        "title": "为什么有时访问 HTTP 的 URL 会变成访问 HTTPS 的 URL？",
        "slug": "为什么有时访问-http-的-url-会变成访问-https-的-url",
        "link": "#为什么有时访问-http-的-url-会变成访问-https-的-url",
        "children": []
      }
    ],
    "path": "/browser-env/browser/faq.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "浏览器指纹",
    "headers": [
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      },
      {
        "level": 2,
        "title": "各类指纹描述",
        "slug": "各类指纹描述",
        "link": "#各类指纹描述",
        "children": [
          {
            "level": 3,
            "title": "canvas 指纹",
            "slug": "canvas-指纹",
            "link": "#canvas-指纹",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/browser/fingerprint.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "页面首次渲染",
    "headers": [
      {
        "level": 2,
        "title": "JavaScript 阻塞和 CSS 阻塞",
        "slug": "javascript-阻塞和-css-阻塞",
        "link": "#javascript-阻塞和-css-阻塞",
        "children": [
          {
            "level": 3,
            "title": "CSS 阻塞",
            "slug": "css-阻塞",
            "link": "#css-阻塞",
            "children": []
          },
          {
            "level": 3,
            "title": "再问一次：CSS 文件的加载会阻塞 DOM 树的解析吗？",
            "slug": "再问一次-css-文件的加载会阻塞-dom-树的解析吗",
            "link": "#再问一次-css-文件的加载会阻塞-dom-树的解析吗",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "页面解析过程",
        "slug": "页面解析过程",
        "link": "#页面解析过程",
        "children": [
          {
            "level": 3,
            "title": "head 标签",
            "slug": "head-标签",
            "link": "#head-标签",
            "children": []
          },
          {
            "level": 3,
            "title": "body 标签",
            "slug": "body-标签",
            "link": "#body-标签",
            "children": []
          },
          {
            "level": 3,
            "title": "为什么 DOM/CSSOM 树不完整时也会渲染？",
            "slug": "为什么-dom-cssom-树不完整时也会渲染",
            "link": "#为什么-dom-cssom-树不完整时也会渲染",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "资源的放置顺序",
        "slug": "资源的放置顺序",
        "link": "#资源的放置顺序",
        "children": [
          {
            "level": 3,
            "title": "为什么要将外链 JavaScript 文件放在文档底部",
            "slug": "为什么要将外链-javascript-文件放在文档底部",
            "link": "#为什么要将外链-javascript-文件放在文档底部",
            "children": []
          },
          {
            "level": 3,
            "title": "为什么要将 CSS 放在 head 标签里",
            "slug": "为什么要将-css-放在-head-标签里",
            "link": "#为什么要将-css-放在-head-标签里",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "DOMContentLoaded 和 load 事件的触发时机",
        "slug": "domcontentloaded-和-load-事件的触发时机",
        "link": "#domcontentloaded-和-load-事件的触发时机",
        "children": []
      },
      {
        "level": 2,
        "title": "浏览器下载并发数",
        "slug": "浏览器下载并发数",
        "link": "#浏览器下载并发数",
        "children": []
      },
      {
        "level": 2,
        "title": "异步脚本",
        "slug": "异步脚本",
        "link": "#异步脚本",
        "children": [
          {
            "level": 3,
            "title": "defer VS async",
            "slug": "defer-vs-async",
            "link": "#defer-vs-async",
            "children": []
          },
          {
            "level": 3,
            "title": "ES6 模块",
            "slug": "es6-模块",
            "link": "#es6-模块",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "优化技巧",
        "slug": "优化技巧",
        "link": "#优化技巧",
        "children": []
      },
      {
        "level": 2,
        "title": "参考文章",
        "slug": "参考文章",
        "link": "#参考文章",
        "children": []
      }
    ],
    "path": "/browser-env/browser/first-paint.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "页面渲染：浏览器工作原理（打开页面全流程）",
    "headers": [
      {
        "level": 2,
        "title": "1. 处理用户输入",
        "slug": "_1-处理用户输入",
        "link": "#_1-处理用户输入",
        "children": []
      },
      {
        "level": 2,
        "title": "2. URL 请求过程",
        "slug": "_2-url-请求过程",
        "link": "#_2-url-请求过程",
        "children": []
      },
      {
        "level": 2,
        "title": "3. 准备渲染进程",
        "slug": "_3-准备渲染进程",
        "link": "#_3-准备渲染进程",
        "children": []
      },
      {
        "level": 2,
        "title": "4. 提交文档",
        "slug": "_4-提交文档",
        "link": "#_4-提交文档",
        "children": []
      },
      {
        "level": 2,
        "title": "5. 渲染阶段",
        "slug": "_5-渲染阶段",
        "link": "#_5-渲染阶段",
        "children": [
          {
            "level": 3,
            "title": "构建 DOM 树",
            "slug": "构建-dom-树",
            "link": "#构建-dom-树",
            "children": []
          },
          {
            "level": 3,
            "title": "样式计算（构建 CSSOM 树）",
            "slug": "样式计算-构建-cssom-树",
            "link": "#样式计算-构建-cssom-树",
            "children": []
          },
          {
            "level": 3,
            "title": "布局",
            "slug": "布局",
            "link": "#布局",
            "children": []
          },
          {
            "level": 3,
            "title": "分层",
            "slug": "分层",
            "link": "#分层",
            "children": []
          },
          {
            "level": 3,
            "title": "图层绘制",
            "slug": "图层绘制",
            "link": "#图层绘制",
            "children": []
          },
          {
            "level": 3,
            "title": "合成",
            "slug": "合成",
            "link": "#合成",
            "children": []
          },
          {
            "level": 3,
            "title": "显示",
            "slug": "显示",
            "link": "#显示",
            "children": []
          },
          {
            "level": 3,
            "title": "总结",
            "slug": "总结",
            "link": "#总结",
            "children": []
          },
          {
            "level": 3,
            "title": "相关概念：重排、重绘、合成",
            "slug": "相关概念-重排、重绘、合成",
            "link": "#相关概念-重排、重绘、合成",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/browser/how-browsers-work.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "多进程和 JS 单线程",
    "headers": [
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      },
      {
        "level": 2,
        "title": "进程 VS 线程",
        "slug": "进程-vs-线程",
        "link": "#进程-vs-线程",
        "children": []
      },
      {
        "level": 2,
        "title": "早期浏览器是单进程的",
        "slug": "早期浏览器是单进程的",
        "link": "#早期浏览器是单进程的",
        "children": []
      },
      {
        "level": 2,
        "title": "现代浏览器是多进程的",
        "slug": "现代浏览器是多进程的",
        "link": "#现代浏览器是多进程的",
        "children": [
          {
            "level": 3,
            "title": "浏览器包含哪些进程",
            "slug": "浏览器包含哪些进程",
            "link": "#浏览器包含哪些进程",
            "children": []
          },
          {
            "level": 3,
            "title": "浏览器多进程的优势",
            "slug": "浏览器多进程的优势",
            "link": "#浏览器多进程的优势",
            "children": []
          },
          {
            "level": 3,
            "title": "浏览器渲染进程，多线程",
            "slug": "浏览器渲染进程-多线程",
            "link": "#浏览器渲染进程-多线程",
            "children": []
          },
          {
            "level": 3,
            "title": "浏览器内核中各个线程的关系",
            "slug": "浏览器内核中各个线程的关系",
            "link": "#浏览器内核中各个线程的关系",
            "children": []
          },
          {
            "level": 3,
            "title": "定时器线程",
            "slug": "定时器线程",
            "link": "#定时器线程",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "疑问",
        "slug": "疑问",
        "link": "#疑问",
        "children": [
          {
            "level": 3,
            "title": "浏览器里的 V8 引擎是个单独的线程吗？",
            "slug": "浏览器里的-v8-引擎是个单独的线程吗",
            "link": "#浏览器里的-v8-引擎是个单独的线程吗",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/browser/process-thread.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "兼容性",
    "headers": [
      {
        "level": 2,
        "title": "浏览器对 apk 类型文件的兼容性",
        "slug": "浏览器对-apk-类型文件的兼容性",
        "link": "#浏览器对-apk-类型文件的兼容性",
        "children": []
      }
    ],
    "path": "/browser-env/compatibility/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "audio 兼容性",
    "headers": [
      {
        "level": 2,
        "title": "移动端 audio 元素无法自动播放",
        "slug": "移动端-audio-元素无法自动播放",
        "link": "#移动端-audio-元素无法自动播放",
        "children": [
          {
            "level": 3,
            "title": "背景",
            "slug": "背景",
            "link": "#背景",
            "children": []
          },
          {
            "level": 3,
            "title": "解决方案",
            "slug": "解决方案",
            "link": "#解决方案",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/compatibility/audio.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "video 兼容性",
    "headers": [
      {
        "level": 2,
        "title": "属性",
        "slug": "属性",
        "link": "#属性",
        "children": []
      },
      {
        "level": 2,
        "title": "事件",
        "slug": "事件",
        "link": "#事件",
        "children": [
          {
            "level": 3,
            "title": "查询视频的缓冲时间",
            "slug": "查询视频的缓冲时间",
            "link": "#查询视频的缓冲时间",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "兼容性问题汇总",
        "slug": "兼容性问题汇总",
        "link": "#兼容性问题汇总",
        "children": []
      },
      {
        "level": 2,
        "title": "参考链接",
        "slug": "参考链接",
        "link": "#参考链接",
        "children": []
      }
    ],
    "path": "/browser-env/compatibility/video.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "事件",
    "headers": [
      {
        "level": 2,
        "title": "mouseover/mouseout 与 mouseenter/mouseleave 的区别",
        "slug": "mouseover-mouseout-与-mouseenter-mouseleave-的区别",
        "link": "#mouseover-mouseout-与-mouseenter-mouseleave-的区别",
        "children": []
      }
    ],
    "path": "/browser-env/events/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "blur 事件",
    "headers": [
      {
        "level": 2,
        "title": "阻止 blur 事件",
        "slug": "阻止-blur-事件",
        "link": "#阻止-blur-事件",
        "children": []
      }
    ],
    "path": "/browser-env/events/blur.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Virtual DOM",
    "headers": [
      {
        "level": 2,
        "title": "什么是 Virtual DOM",
        "slug": "什么是-virtual-dom",
        "link": "#什么是-virtual-dom",
        "children": []
      },
      {
        "level": 2,
        "title": "为什么要使用 Virtual DOM",
        "slug": "为什么要使用-virtual-dom",
        "link": "#为什么要使用-virtual-dom",
        "children": []
      },
      {
        "level": 2,
        "title": "Virtual DOM 的作用",
        "slug": "virtual-dom-的作用",
        "link": "#virtual-dom-的作用",
        "children": []
      },
      {
        "level": 2,
        "title": "Virtual DOM 的缺点",
        "slug": "virtual-dom-的缺点",
        "link": "#virtual-dom-的缺点",
        "children": []
      },
      {
        "level": 2,
        "title": "错误观念纠正",
        "slug": "错误观念纠正",
        "link": "#错误观念纠正",
        "children": []
      },
      {
        "level": 2,
        "title": "参考",
        "slug": "参考",
        "link": "#参考",
        "children": []
      }
    ],
    "path": "/browser-env/html-dom/virtual-dom.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "h5 唤起 APP",
    "headers": [
      {
        "level": 2,
        "title": "Deep Linking",
        "slug": "deep-linking",
        "link": "#deep-linking",
        "children": [
          {
            "level": 3,
            "title": "URL scheme",
            "slug": "url-scheme",
            "link": "#url-scheme",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "跳转到应用市场/App Store",
        "slug": "跳转到应用市场-app-store",
        "link": "#跳转到应用市场-app-store",
        "children": [
          {
            "level": 3,
            "title": "iOS，跳转到 App Store",
            "slug": "ios-跳转到-app-store",
            "link": "#ios-跳转到-app-store",
            "children": []
          },
          {
            "level": 3,
            "title": "Android，跳转到应用市场",
            "slug": "android-跳转到应用市场",
            "link": "#android-跳转到应用市场",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "兼容性问题",
        "slug": "兼容性问题",
        "link": "#兼容性问题",
        "children": [
          {
            "level": 3,
            "title": "兼容性概括",
            "slug": "兼容性概括",
            "link": "#兼容性概括",
            "children": []
          },
          {
            "level": 3,
            "title": "微信",
            "slug": "微信",
            "link": "#微信",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/browser-env/hybrid/h52app.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "JS Bridge",
    "headers": [
      {
        "level": 2,
        "title": "可能存在的问题",
        "slug": "可能存在的问题",
        "link": "#可能存在的问题",
        "children": [
          {
            "level": 3,
            "title": "window 上绑定的方法消失导致的问题",
            "slug": "window-上绑定的方法消失导致的问题",
            "link": "#window-上绑定的方法消失导致的问题",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "JS Bridge 实现",
        "slug": "js-bridge-实现",
        "link": "#js-bridge-实现",
        "children": []
      }
    ],
    "path": "/browser-env/hybrid/jsbridge.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Universal Links",
    "headers": [
      {
        "level": 2,
        "title": "为什么要使用 Universal Links",
        "slug": "为什么要使用-universal-links",
        "link": "#为什么要使用-universal-links",
        "children": [
          {
            "level": 3,
            "title": "优点",
            "slug": "优点",
            "link": "#优点",
            "children": []
          },
          {
            "level": 3,
            "title": "缺点",
            "slug": "缺点",
            "link": "#缺点",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "如何让 APP 支持 Universal Links",
        "slug": "如何让-app-支持-universal-links",
        "link": "#如何让-app-支持-universal-links",
        "children": [
          {
            "level": 3,
            "title": "apple-app-site-association 格式",
            "slug": "apple-app-site-association-格式",
            "link": "#apple-app-site-association-格式",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Universal Links 配置中的坑",
        "slug": "universal-links-配置中的坑",
        "link": "#universal-links-配置中的坑",
        "children": []
      }
    ],
    "path": "/browser-env/hybrid/universal-links.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "DNS",
    "headers": [
      {
        "level": 2,
        "title": "DNS 记录类型",
        "slug": "dns-记录类型",
        "link": "#dns-记录类型",
        "children": []
      }
    ],
    "path": "/browser-env/network/dns.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "安全",
    "headers": [
      {
        "level": 2,
        "title": "Cookie 安全",
        "slug": "cookie-安全",
        "link": "#cookie-安全",
        "children": []
      },
      {
        "level": 2,
        "title": "XSS",
        "slug": "xss",
        "link": "#xss",
        "children": [
          {
            "level": 3,
            "title": "XSS 分类",
            "slug": "xss-分类",
            "link": "#xss-分类",
            "children": []
          },
          {
            "level": 3,
            "title": "防范措施",
            "slug": "防范措施",
            "link": "#防范措施",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "CSRF",
        "slug": "csrf",
        "link": "#csrf",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例",
            "link": "#示例",
            "children": []
          },
          {
            "level": 3,
            "title": "CSRF 攻击类型",
            "slug": "csrf-攻击类型",
            "link": "#csrf-攻击类型",
            "children": []
          },
          {
            "level": 3,
            "title": "JSON HiJacking 攻击",
            "slug": "json-hijacking-攻击",
            "link": "#json-hijacking-攻击",
            "children": []
          },
          {
            "level": 3,
            "title": "Flash CSRF 攻击",
            "slug": "flash-csrf-攻击",
            "link": "#flash-csrf-攻击",
            "children": []
          },
          {
            "level": 3,
            "title": "危害",
            "slug": "危害",
            "link": "#危害",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "界面操作劫持",
        "slug": "界面操作劫持",
        "link": "#界面操作劫持",
        "children": []
      }
    ],
    "path": "/browser-env/security/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Chrome 安全策略",
    "headers": [
      {
        "level": 2,
        "title": "HSTS",
        "slug": "hsts",
        "link": "#hsts",
        "children": []
      }
    ],
    "path": "/browser-env/security/chrome-security-policy.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "跨域",
    "headers": [
      {
        "level": 2,
        "title": "同源策略",
        "slug": "同源策略",
        "link": "#同源策略",
        "children": []
      },
      {
        "level": 2,
        "title": "造成跨域的两种策略",
        "slug": "造成跨域的两种策略",
        "link": "#造成跨域的两种策略",
        "children": []
      },
      {
        "level": 2,
        "title": "为什么要有跨域限制",
        "slug": "为什么要有跨域限制",
        "link": "#为什么要有跨域限制",
        "children": []
      },
      {
        "level": 2,
        "title": "跨域方法",
        "slug": "跨域方法",
        "link": "#跨域方法",
        "children": [
          {
            "level": 3,
            "title": "CORS（跨域资源共享）",
            "slug": "cors-跨域资源共享",
            "link": "#cors-跨域资源共享",
            "children": []
          },
          {
            "level": 3,
            "title": "JSONP",
            "slug": "jsonp",
            "link": "#jsonp",
            "children": []
          },
          {
            "level": 3,
            "title": "postMessage",
            "slug": "postmessage",
            "link": "#postmessage",
            "children": []
          },
          {
            "level": 3,
            "title": "服务器代理",
            "slug": "服务器代理",
            "link": "#服务器代理",
            "children": []
          },
          {
            "level": 3,
            "title": "表单提交",
            "slug": "表单提交",
            "link": "#表单提交",
            "children": []
          },
          {
            "level": 3,
            "title": "document.domain（主域相同的跨域）",
            "slug": "document-domain-主域相同的跨域",
            "link": "#document-domain-主域相同的跨域",
            "children": []
          },
          {
            "level": 3,
            "title": "window.name",
            "slug": "window-name",
            "link": "#window-name",
            "children": []
          },
          {
            "level": 3,
            "title": "location.hash",
            "slug": "location-hash",
            "link": "#location-hash",
            "children": []
          },
          {
            "level": 3,
            "title": "WebSocket",
            "slug": "websocket",
            "link": "#websocket",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "XMLHttpRequest 之 withCredentials",
        "slug": "xmlhttprequest-之-withcredentials",
        "link": "#xmlhttprequest-之-withcredentials",
        "children": []
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/browser-env/security/cross-domain.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "SameSite",
    "headers": [],
    "path": "/browser-env/security/same-site.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "滚动",
    "headers": [
      {
        "level": 2,
        "title": "JS 相关",
        "slug": "js-相关",
        "link": "#js-相关",
        "children": [
          {
            "level": 3,
            "title": "判断元素在视口内",
            "slug": "判断元素在视口内",
            "link": "#判断元素在视口内",
            "children": []
          },
          {
            "level": 3,
            "title": "文档滚动加载",
            "slug": "文档滚动加载",
            "link": "#文档滚动加载",
            "children": []
          },
          {
            "level": 3,
            "title": "滚动穿透问题、滚动边界问题",
            "slug": "滚动穿透问题、滚动边界问题",
            "link": "#滚动穿透问题、滚动边界问题",
            "children": []
          },
          {
            "level": 3,
            "title": "滚动穿透问题解决",
            "slug": "滚动穿透问题解决",
            "link": "#滚动穿透问题解决",
            "children": []
          },
          {
            "level": 3,
            "title": "passive: true",
            "slug": "passive-true",
            "link": "#passive-true",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "CSS 相关",
        "slug": "css-相关",
        "link": "#css-相关",
        "children": [
          {
            "level": 3,
            "title": "iOS 滚动回弹效果",
            "slug": "ios-滚动回弹效果",
            "link": "#ios-滚动回弹效果",
            "children": []
          },
          {
            "level": 3,
            "title": "position: sticky",
            "slug": "position-sticky",
            "link": "#position-sticky",
            "children": []
          },
          {
            "level": 3,
            "title": "滚动条隐藏但可滚动",
            "slug": "滚动条隐藏但可滚动",
            "link": "#滚动条隐藏但可滚动",
            "children": []
          },
          {
            "level": 3,
            "title": "滚动条样式",
            "slug": "滚动条样式",
            "link": "#滚动条样式",
            "children": []
          },
          {
            "level": 3,
            "title": "锚点切换时，流畅的滚动",
            "slug": "锚点切换时-流畅的滚动",
            "link": "#锚点切换时-流畅的滚动",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/scroll/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "click 延迟",
    "headers": [
      {
        "level": 2,
        "title": "延迟原因",
        "slug": "延迟原因",
        "link": "#延迟原因",
        "children": []
      },
      {
        "level": 2,
        "title": "去除延迟的方法",
        "slug": "去除延迟的方法",
        "link": "#去除延迟的方法",
        "children": []
      },
      {
        "level": 2,
        "title": "tap 事件",
        "slug": "tap-事件",
        "link": "#tap-事件",
        "children": [
          {
            "level": 3,
            "title": "实现原理",
            "slug": "实现原理",
            "link": "#实现原理",
            "children": []
          },
          {
            "level": 3,
            "title": "zepto 的 tap 事件点击穿透问题",
            "slug": "zepto-的-tap-事件点击穿透问题",
            "link": "#zepto-的-tap-事件点击穿透问题",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/scroll/click-delay.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "fastclick",
    "headers": [
      {
        "level": 2,
        "title": "实现原理",
        "slug": "实现原理",
        "link": "#实现原理",
        "children": []
      },
      {
        "level": 2,
        "title": "哪些情况不需要 fastclick",
        "slug": "哪些情况不需要-fastclick",
        "link": "#哪些情况不需要-fastclick",
        "children": []
      },
      {
        "level": 2,
        "title": "存在的问题",
        "slug": "存在的问题",
        "link": "#存在的问题",
        "children": [
          {
            "level": 3,
            "title": "手动触发 element.click() 无效",
            "slug": "手动触发-element-click-无效",
            "link": "#手动触发-element-click-无效",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/scroll/fastclick.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "滚动穿透",
    "headers": [],
    "path": "/browser-env/scroll/no-bg-scroll.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "触摸事件",
    "headers": [
      {
        "level": 2,
        "title": "触摸点",
        "slug": "触摸点",
        "link": "#触摸点",
        "children": [
          {
            "level": 3,
            "title": "触摸点的目标元素",
            "slug": "触摸点的目标元素",
            "link": "#触摸点的目标元素",
            "children": []
          },
          {
            "level": 3,
            "title": "事件的目标元素",
            "slug": "事件的目标元素",
            "link": "#事件的目标元素",
            "children": []
          },
          {
            "level": 3,
            "title": "touches/targetTouches/changedTouches",
            "slug": "touches-targettouches-changedtouches",
            "link": "#touches-targettouches-changedtouches",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/scroll/touch-event.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "文件系统",
    "headers": [
      {
        "level": 2,
        "title": "Blob",
        "slug": "blob",
        "link": "#blob",
        "children": []
      },
      {
        "level": 2,
        "title": "File",
        "slug": "file",
        "link": "#file",
        "children": []
      },
      {
        "level": 2,
        "title": "MIME 类型",
        "slug": "mime-类型",
        "link": "#mime-类型",
        "children": []
      },
      {
        "level": 2,
        "title": "FileReader",
        "slug": "filereader",
        "link": "#filereader",
        "children": []
      },
      {
        "level": 2,
        "title": "FormData",
        "slug": "formdata",
        "link": "#formdata",
        "children": []
      }
    ],
    "path": "/browser-env/unclassified/file-system.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "键盘",
    "headers": [
      {
        "level": 2,
        "title": "Android 键盘 keydown 事件里 keyCode = 229",
        "slug": "android-键盘-keydown-事件里-keycode-229",
        "link": "#android-键盘-keydown-事件里-keycode-229",
        "children": []
      },
      {
        "level": 2,
        "title": "键盘的调起和收起",
        "slug": "键盘的调起和收起",
        "link": "#键盘的调起和收起",
        "children": []
      }
    ],
    "path": "/browser-env/unclassified/keyboard.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "PWA",
    "headers": [
      {
        "level": 2,
        "title": "cache API",
        "slug": "cache-api",
        "link": "#cache-api",
        "children": []
      },
      {
        "level": 2,
        "title": "各个阶段",
        "slug": "各个阶段",
        "link": "#各个阶段",
        "children": [
          {
            "level": 3,
            "title": "register",
            "slug": "register",
            "link": "#register",
            "children": []
          },
          {
            "level": 3,
            "title": "install",
            "slug": "install",
            "link": "#install",
            "children": []
          },
          {
            "level": 3,
            "title": "activate",
            "slug": "activate",
            "link": "#activate",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/unclassified/pwa.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "web components",
    "headers": [
      {
        "level": 2,
        "title": "背景",
        "slug": "背景",
        "link": "#背景",
        "children": []
      },
      {
        "level": 2,
        "title": "详细内容",
        "slug": "详细内容",
        "link": "#详细内容",
        "children": [
          {
            "level": 3,
            "title": "template",
            "slug": "template",
            "link": "#template",
            "children": []
          },
          {
            "level": 3,
            "title": "Custom Element",
            "slug": "custom-element",
            "link": "#custom-element",
            "children": []
          },
          {
            "level": 3,
            "title": "Shadow DOM",
            "slug": "shadow-dom",
            "link": "#shadow-dom",
            "children": []
          },
          {
            "level": 3,
            "title": "HTML Import",
            "slug": "html-import",
            "link": "#html-import",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "总结",
        "slug": "总结",
        "link": "#总结",
        "children": []
      }
    ],
    "path": "/browser-env/unclassified/web-components.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Array",
    "headers": [
      {
        "level": 2,
        "title": "解构赋值",
        "slug": "解构赋值",
        "link": "#解构赋值",
        "children": []
      },
      {
        "level": 2,
        "title": "扩展运算符",
        "slug": "扩展运算符",
        "link": "#扩展运算符",
        "children": []
      },
      {
        "level": 2,
        "title": "Array.from",
        "slug": "array-from",
        "link": "#array-from",
        "children": []
      },
      {
        "level": 2,
        "title": "ES5",
        "slug": "es5",
        "link": "#es5",
        "children": [
          {
            "level": 3,
            "title": "Array.isArray()",
            "slug": "array-isarray",
            "link": "#array-isarray",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "实例",
        "slug": "实例",
        "link": "#实例",
        "children": [
          {
            "level": 3,
            "title": "数组去重",
            "slug": "数组去重",
            "link": "#数组去重",
            "children": []
          },
          {
            "level": 3,
            "title": "如何将二维数组扁平化为一维数组？",
            "slug": "如何将二维数组扁平化为一维数组",
            "link": "#如何将二维数组扁平化为一维数组",
            "children": []
          }
        ]
      }
    ],
    "path": "/es6/array/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "async/await",
    "headers": [
      {
        "level": 2,
        "title": "async 函数的优势",
        "slug": "async-函数的优势",
        "link": "#async-函数的优势",
        "children": [
          {
            "level": 3,
            "title": "内置执行器",
            "slug": "内置执行器",
            "link": "#内置执行器",
            "children": []
          },
          {
            "level": 3,
            "title": "更好的语义",
            "slug": "更好的语义",
            "link": "#更好的语义",
            "children": []
          },
          {
            "level": 3,
            "title": "更广的适用性",
            "slug": "更广的适用性",
            "link": "#更广的适用性",
            "children": []
          },
          {
            "level": 3,
            "title": "返回值是 Promise",
            "slug": "返回值是-promise",
            "link": "#返回值是-promise",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "基本用法",
        "slug": "基本用法",
        "link": "#基本用法",
        "children": [
          {
            "level": 3,
            "title": "async 函数定义",
            "slug": "async-函数定义",
            "link": "#async-函数定义",
            "children": []
          },
          {
            "level": 3,
            "title": "async 函数的返回值",
            "slug": "async-函数的返回值",
            "link": "#async-函数的返回值",
            "children": []
          },
          {
            "level": 3,
            "title": "async 函数的返回时机",
            "slug": "async-函数的返回时机",
            "link": "#async-函数的返回时机",
            "children": []
          },
          {
            "level": 3,
            "title": "await 命令",
            "slug": "await-命令",
            "link": "#await-命令",
            "children": []
          },
          {
            "level": 3,
            "title": "result = await promise 里 result 的值",
            "slug": "result-await-promise-里-result-的值",
            "link": "#result-await-promise-里-result-的值",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "async 函数的常用场景",
        "slug": "async-函数的常用场景",
        "link": "#async-函数的常用场景",
        "children": [
          {
            "level": 3,
            "title": "sleep 休眠",
            "slug": "sleep-休眠",
            "link": "#sleep-休眠",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "使用注意点",
        "slug": "使用注意点",
        "link": "#使用注意点",
        "children": []
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      },
      {
        "level": 2,
        "title": "使用技巧",
        "slug": "使用技巧",
        "link": "#使用技巧",
        "children": []
      }
    ],
    "path": "/es6/async-await/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Class",
    "headers": [
      {
        "level": 2,
        "title": "严格模式",
        "slug": "严格模式",
        "link": "#严格模式",
        "children": []
      },
      {
        "level": 2,
        "title": "name属性",
        "slug": "name属性",
        "link": "#name属性",
        "children": []
      },
      {
        "level": 2,
        "title": "constructor方法",
        "slug": "constructor方法",
        "link": "#constructor方法",
        "children": []
      },
      {
        "level": 2,
        "title": "Class 表达式",
        "slug": "class-表达式",
        "link": "#class-表达式",
        "children": [
          {
            "level": 3,
            "title": "立即执行的 Class",
            "slug": "立即执行的-class",
            "link": "#立即执行的-class",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "方法",
        "slug": "方法",
        "link": "#方法",
        "children": []
      },
      {
        "level": 2,
        "title": "getter/setter",
        "slug": "getter-setter",
        "link": "#getter-setter",
        "children": []
      },
      {
        "level": 2,
        "title": "静态属性",
        "slug": "静态属性",
        "link": "#静态属性",
        "children": []
      },
      {
        "level": 2,
        "title": "静态方法",
        "slug": "静态方法",
        "link": "#静态方法",
        "children": []
      },
      {
        "level": 2,
        "title": "不存在变量提升",
        "slug": "不存在变量提升",
        "link": "#不存在变量提升",
        "children": []
      },
      {
        "level": 2,
        "title": "new.target 属性",
        "slug": "new-target-属性",
        "link": "#new-target-属性",
        "children": []
      },
      {
        "level": 2,
        "title": "Class 的 Generator 方法",
        "slug": "class-的-generator-方法",
        "link": "#class-的-generator-方法",
        "children": []
      },
      {
        "level": 2,
        "title": "私有方法",
        "slug": "私有方法",
        "link": "#私有方法",
        "children": []
      },
      {
        "level": 2,
        "title": "私有属性",
        "slug": "私有属性",
        "link": "#私有属性",
        "children": []
      },
      {
        "level": 2,
        "title": "Class 的继承",
        "slug": "class-的继承",
        "link": "#class-的继承",
        "children": [
          {
            "level": 3,
            "title": "constructor",
            "slug": "constructor",
            "link": "#constructor",
            "children": []
          },
          {
            "level": 3,
            "title": "静态方法的继承",
            "slug": "静态方法的继承",
            "link": "#静态方法的继承",
            "children": []
          },
          {
            "level": 3,
            "title": "Object.getPrototypeOf()",
            "slug": "object-getprototypeof",
            "link": "#object-getprototypeof",
            "children": []
          },
          {
            "level": 3,
            "title": "super关键字",
            "slug": "super关键字",
            "link": "#super关键字",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "当作函数使用",
        "slug": "当作函数使用",
        "link": "#当作函数使用",
        "children": [
          {
            "level": 3,
            "title": "当作对象使用",
            "slug": "当作对象使用",
            "link": "#当作对象使用",
            "children": []
          },
          {
            "level": 3,
            "title": "显式指定super类型",
            "slug": "显式指定super类型",
            "link": "#显式指定super类型",
            "children": []
          },
          {
            "level": 3,
            "title": "任意对象里使用super",
            "slug": "任意对象里使用super",
            "link": "#任意对象里使用super",
            "children": []
          },
          {
            "level": 3,
            "title": "prototype属性和__proto__属性",
            "slug": "prototype属性和-proto-属性",
            "link": "#prototype属性和-proto-属性",
            "children": []
          },
          {
            "level": 3,
            "title": "原生构造函数的继承",
            "slug": "原生构造函数的继承",
            "link": "#原生构造函数的继承",
            "children": []
          }
        ]
      }
    ],
    "path": "/es6/class/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "解构赋值",
    "headers": [
      {
        "level": 2,
        "title": "数值和布尔值的解构赋值",
        "slug": "数值和布尔值的解构赋值",
        "link": "#数值和布尔值的解构赋值",
        "children": []
      },
      {
        "level": 2,
        "title": "数组的解构赋值",
        "slug": "数组的解构赋值",
        "link": "#数组的解构赋值",
        "children": []
      },
      {
        "level": 2,
        "title": "Set 的解构赋值、具有 Iterator 接口的数据结构的解构赋值",
        "slug": "set-的解构赋值、具有-iterator-接口的数据结构的解构赋值",
        "link": "#set-的解构赋值、具有-iterator-接口的数据结构的解构赋值",
        "children": []
      },
      {
        "level": 2,
        "title": "对象的解构赋值",
        "slug": "对象的解构赋值",
        "link": "#对象的解构赋值",
        "children": []
      },
      {
        "level": 2,
        "title": "字符串的解构赋值",
        "slug": "字符串的解构赋值",
        "link": "#字符串的解构赋值",
        "children": []
      },
      {
        "level": 2,
        "title": "函数参数的解构赋值",
        "slug": "函数参数的解构赋值",
        "link": "#函数参数的解构赋值",
        "children": []
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": []
      }
    ],
    "path": "/es6/destructuring-assignment/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Babel",
    "headers": [
      {
        "level": 2,
        "title": "精选文章",
        "slug": "精选文章",
        "link": "#精选文章",
        "children": []
      },
      {
        "level": 2,
        "title": "babel 的三个阶段：解析，转换，生成",
        "slug": "babel-的三个阶段-解析-转换-生成",
        "link": "#babel-的三个阶段-解析-转换-生成",
        "children": []
      },
      {
        "level": 2,
        "title": "构建时",
        "slug": "构建时",
        "link": "#构建时",
        "children": []
      },
      {
        "level": 2,
        "title": "运行时",
        "slug": "运行时",
        "link": "#运行时",
        "children": [
          {
            "level": 3,
            "title": "基础依赖库",
            "slug": "基础依赖库",
            "link": "#基础依赖库",
            "children": []
          },
          {
            "level": 3,
            "title": "babel-runtime + babel-plugin-transform-runtime",
            "slug": "babel-runtime-babel-plugin-transform-runtime",
            "link": "#babel-runtime-babel-plugin-transform-runtime",
            "children": []
          },
          {
            "level": 3,
            "title": "babel-polyfill",
            "slug": "babel-polyfill",
            "link": "#babel-polyfill",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "模块",
        "slug": "模块",
        "link": "#模块",
        "children": [
          {
            "level": 3,
            "title": "__esModule",
            "slug": "esmodule",
            "link": "#esmodule",
            "children": []
          },
          {
            "level": 3,
            "title": "为什么可以用 CommonJS 的require去引用 ES6 的模块",
            "slug": "为什么可以用-commonjs-的require去引用-es6-的模块",
            "link": "#为什么可以用-commonjs-的require去引用-es6-的模块",
            "children": []
          },
          {
            "level": 3,
            "title": "为什么可以使用 ES6 的import去引用 CommonJS 定义的模块",
            "slug": "为什么可以使用-es6-的import去引用-commonjs-定义的模块",
            "link": "#为什么可以使用-es6-的import去引用-commonjs-定义的模块",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "babel 之 webpack",
        "slug": "babel-之-webpack",
        "link": "#babel-之-webpack",
        "children": [
          {
            "level": 3,
            "title": "与 webpack 有关的 Babel 配置详解",
            "slug": "与-webpack-有关的-babel-配置详解",
            "link": "#与-webpack-有关的-babel-配置详解",
            "children": []
          },
          {
            "level": 3,
            "title": "有些 UI 组件库比如 element-ui 和 cube-ui 可以用import或require按需引入单个模块，是如何做到的",
            "slug": "有些-ui-组件库比如-element-ui-和-cube-ui-可以用import或require按需引入单个模块-是如何做到的",
            "link": "#有些-ui-组件库比如-element-ui-和-cube-ui-可以用import或require按需引入单个模块-是如何做到的",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": ".babelrc 配置",
        "slug": "babelrc-配置",
        "link": "#babelrc-配置",
        "children": [
          {
            "level": 3,
            "title": "配置",
            "slug": "配置",
            "link": "#配置",
            "children": []
          },
          {
            "level": 3,
            "title": "通过 package.json 使用 .babelrc",
            "slug": "通过-package-json-使用-babelrc",
            "link": "#通过-package-json-使用-babelrc",
            "children": []
          },
          {
            "level": 3,
            "title": "查找",
            "slug": "查找",
            "link": "#查找",
            "children": []
          }
        ]
      }
    ],
    "path": "/es6/babel/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Babel 7",
    "headers": [
      {
        "level": 2,
        "title": "preset",
        "slug": "preset",
        "link": "#preset",
        "children": []
      },
      {
        "level": 2,
        "title": "plugins",
        "slug": "plugins",
        "link": "#plugins",
        "children": []
      },
      {
        "level": 2,
        "title": "preset 和 plugins 使用顺序",
        "slug": "preset-和-plugins-使用顺序",
        "link": "#preset-和-plugins-使用顺序",
        "children": []
      },
      {
        "level": 2,
        "title": "配置方式",
        "slug": "配置方式",
        "link": "#配置方式",
        "children": [
          {
            "level": 3,
            "title": "配置方式 1",
            "slug": "配置方式-1",
            "link": "#配置方式-1",
            "children": []
          },
          {
            "level": 3,
            "title": "配置方式 2",
            "slug": "配置方式-2",
            "link": "#配置方式-2",
            "children": []
          },
          {
            "level": 3,
            "title": "配置方式 3",
            "slug": "配置方式-3",
            "link": "#配置方式-3",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "常用插件",
        "slug": "常用插件",
        "link": "#常用插件",
        "children": []
      },
      {
        "level": 2,
        "title": "@babel/core",
        "slug": "babel-core",
        "link": "#babel-core",
        "children": []
      },
      {
        "level": 2,
        "title": "@babel/runtime",
        "slug": "babel-runtime",
        "link": "#babel-runtime",
        "children": []
      },
      {
        "level": 2,
        "title": "@babel/plugin-transform-runtime",
        "slug": "babel-plugin-transform-runtime",
        "link": "#babel-plugin-transform-runtime",
        "children": []
      },
      {
        "level": 2,
        "title": "TODO",
        "slug": "todo",
        "link": "#todo",
        "children": []
      },
      {
        "level": 2,
        "title": "常用 preset",
        "slug": "常用-preset",
        "link": "#常用-preset",
        "children": [
          {
            "level": 3,
            "title": "@vue/babel-preset-app",
            "slug": "vue-babel-preset-app",
            "link": "#vue-babel-preset-app",
            "children": []
          }
        ]
      }
    ],
    "path": "/es6/babel/babel-v7.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "函数",
    "headers": [
      {
        "level": 2,
        "title": "函数参数的默认值",
        "slug": "函数参数的默认值",
        "link": "#函数参数的默认值",
        "children": []
      },
      {
        "level": 2,
        "title": "rest参数",
        "slug": "rest参数",
        "link": "#rest参数",
        "children": []
      },
      {
        "level": 2,
        "title": "严格模式",
        "slug": "严格模式",
        "link": "#严格模式",
        "children": []
      },
      {
        "level": 2,
        "title": "name属性",
        "slug": "name属性",
        "link": "#name属性",
        "children": []
      },
      {
        "level": 2,
        "title": "箭头函数",
        "slug": "箭头函数",
        "link": "#箭头函数",
        "children": []
      },
      {
        "level": 2,
        "title": "尾调用优化",
        "slug": "尾调用优化",
        "link": "#尾调用优化",
        "children": []
      }
    ],
    "path": "/es6/function/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Generator",
    "headers": [
      {
        "level": 2,
        "title": "简介",
        "slug": "简介",
        "link": "#简介",
        "children": [
          {
            "level": 3,
            "title": "调用 Generator 函数的返回",
            "slug": "调用-generator-函数的返回",
            "link": "#调用-generator-函数的返回",
            "children": []
          },
          {
            "level": 3,
            "title": "yield表达式",
            "slug": "yield表达式",
            "link": "#yield表达式",
            "children": []
          },
          {
            "level": 3,
            "title": "与 Iterator 接口的关系",
            "slug": "与-iterator-接口的关系",
            "link": "#与-iterator-接口的关系",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "next方法的参数",
        "slug": "next方法的参数",
        "link": "#next方法的参数",
        "children": []
      },
      {
        "level": 2,
        "title": "for...of循环",
        "slug": "for-of循环",
        "link": "#for-of循环",
        "children": []
      },
      {
        "level": 2,
        "title": "Generator.prototype.throw()",
        "slug": "generator-prototype-throw",
        "link": "#generator-prototype-throw",
        "children": []
      },
      {
        "level": 2,
        "title": "Generator.prototype.return()",
        "slug": "generator-prototype-return",
        "link": "#generator-prototype-return",
        "children": []
      },
      {
        "level": 2,
        "title": "yield*表达式",
        "slug": "yield-表达式",
        "link": "#yield-表达式",
        "children": []
      },
      {
        "level": 2,
        "title": "作为对象属性的 Generator 函数",
        "slug": "作为对象属性的-generator-函数",
        "link": "#作为对象属性的-generator-函数",
        "children": []
      },
      {
        "level": 2,
        "title": "Generator 函数的this",
        "slug": "generator-函数的this",
        "link": "#generator-函数的this",
        "children": []
      },
      {
        "level": 2,
        "title": "Generator 与上下文",
        "slug": "generator-与上下文",
        "link": "#generator-与上下文",
        "children": []
      },
      {
        "level": 2,
        "title": "应用",
        "slug": "应用",
        "link": "#应用",
        "children": []
      },
      {
        "level": 2,
        "title": "基于 Thunk 函数的自动执行（异步操作同步化）",
        "slug": "基于-thunk-函数的自动执行-异步操作同步化",
        "link": "#基于-thunk-函数的自动执行-异步操作同步化",
        "children": []
      },
      {
        "level": 2,
        "title": "基于 Promise 对象的自动执行（异步操作同步化）",
        "slug": "基于-promise-对象的自动执行-异步操作同步化",
        "link": "#基于-promise-对象的自动执行-异步操作同步化",
        "children": []
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/es6/generator/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "let 和 const",
    "headers": [
      {
        "level": 2,
        "title": "let 命令",
        "slug": "let-命令",
        "link": "#let-命令",
        "children": []
      },
      {
        "level": 2,
        "title": "块级作用域",
        "slug": "块级作用域",
        "link": "#块级作用域",
        "children": [
          {
            "level": 3,
            "title": "哪些语句会产生块级作用域",
            "slug": "哪些语句会产生块级作用域",
            "link": "#哪些语句会产生块级作用域",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "const 命令",
        "slug": "const-命令",
        "link": "#const-命令",
        "children": []
      },
      {
        "level": 2,
        "title": "ES6 声明变量的六种方法",
        "slug": "es6-声明变量的六种方法",
        "link": "#es6-声明变量的六种方法",
        "children": []
      },
      {
        "level": 2,
        "title": "顶层对象的属性",
        "slug": "顶层对象的属性",
        "link": "#顶层对象的属性",
        "children": []
      },
      {
        "level": 2,
        "title": "global 对象",
        "slug": "global-对象",
        "link": "#global-对象",
        "children": []
      }
    ],
    "path": "/es6/let-const/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Iterator 和 for...of 循环",
    "headers": [
      {
        "level": 2,
        "title": "Iterator",
        "slug": "iterator",
        "link": "#iterator",
        "children": [
          {
            "level": 3,
            "title": "模拟",
            "slug": "模拟",
            "link": "#模拟",
            "children": []
          },
          {
            "level": 3,
            "title": "默认 Iterator 接口",
            "slug": "默认-iterator-接口",
            "link": "#默认-iterator-接口",
            "children": []
          },
          {
            "level": 3,
            "title": "调用 Iterator 接口的场合",
            "slug": "调用-iterator-接口的场合",
            "link": "#调用-iterator-接口的场合",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "字符串的 Iterator 接口",
        "slug": "字符串的-iterator-接口",
        "link": "#字符串的-iterator-接口",
        "children": []
      },
      {
        "level": 2,
        "title": "Iterator 接口与 Generator 函数",
        "slug": "iterator-接口与-generator-函数",
        "link": "#iterator-接口与-generator-函数",
        "children": []
      },
      {
        "level": 2,
        "title": "遍历器对象的 return()，throw()",
        "slug": "遍历器对象的-return-throw",
        "link": "#遍历器对象的-return-throw",
        "children": []
      },
      {
        "level": 2,
        "title": "for...of 循环",
        "slug": "for-of-循环",
        "link": "#for-of-循环",
        "children": [
          {
            "level": 3,
            "title": "数组",
            "slug": "数组",
            "link": "#数组",
            "children": []
          },
          {
            "level": 3,
            "title": "Set 和 Map 结构",
            "slug": "set-和-map-结构",
            "link": "#set-和-map-结构",
            "children": []
          },
          {
            "level": 3,
            "title": "计算生成的数据结构",
            "slug": "计算生成的数据结构",
            "link": "#计算生成的数据结构",
            "children": []
          },
          {
            "level": 3,
            "title": "类似数组的对象",
            "slug": "类似数组的对象",
            "link": "#类似数组的对象",
            "children": []
          },
          {
            "level": 3,
            "title": "对象",
            "slug": "对象",
            "link": "#对象",
            "children": []
          },
          {
            "level": 3,
            "title": "与其他遍历语法的比较",
            "slug": "与其他遍历语法的比较",
            "link": "#与其他遍历语法的比较",
            "children": []
          }
        ]
      }
    ],
    "path": "/es6/iterator/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Module",
    "headers": [
      {
        "level": 2,
        "title": "ES6 VS CommonJS",
        "slug": "es6-vs-commonjs",
        "link": "#es6-vs-commonjs",
        "children": []
      },
      {
        "level": 2,
        "title": "严格模式",
        "slug": "严格模式",
        "link": "#严格模式",
        "children": []
      },
      {
        "level": 2,
        "title": "export 命令",
        "slug": "export-命令",
        "link": "#export-命令",
        "children": [
          {
            "level": 3,
            "title": "export 变量的动态绑定",
            "slug": "export-变量的动态绑定",
            "link": "#export-变量的动态绑定",
            "children": []
          },
          {
            "level": 3,
            "title": "export default 的静态绑定",
            "slug": "export-default-的静态绑定",
            "link": "#export-default-的静态绑定",
            "children": []
          },
          {
            "level": 3,
            "title": "export 命令的位置",
            "slug": "export-命令的位置",
            "link": "#export-命令的位置",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "import 命令",
        "slug": "import-命令",
        "link": "#import-命令",
        "children": [
          {
            "level": 3,
            "title": "import 输入的变量是只读的",
            "slug": "import-输入的变量是只读的",
            "link": "#import-输入的变量是只读的",
            "children": []
          },
          {
            "level": 3,
            "title": "import 命令提升",
            "slug": "import-命令提升",
            "link": "#import-命令提升",
            "children": []
          },
          {
            "level": 3,
            "title": "import 命令不能使用表达式和变量",
            "slug": "import-命令不能使用表达式和变量",
            "link": "#import-命令不能使用表达式和变量",
            "children": []
          },
          {
            "level": 3,
            "title": "import 命令会执行所加载的模块",
            "slug": "import-命令会执行所加载的模块",
            "link": "#import-命令会执行所加载的模块",
            "children": []
          },
          {
            "level": 3,
            "title": "import 语句是单例模式",
            "slug": "import-语句是单例模式",
            "link": "#import-语句是单例模式",
            "children": []
          },
          {
            "level": 3,
            "title": "import 命令在模块里早于 require 执行",
            "slug": "import-命令在模块里早于-require-执行",
            "link": "#import-命令在模块里早于-require-执行",
            "children": []
          },
          {
            "level": 3,
            "title": "import 语句的静态分析",
            "slug": "import-语句的静态分析",
            "link": "#import-语句的静态分析",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "模块的整体加载",
        "slug": "模块的整体加载",
        "link": "#模块的整体加载",
        "children": []
      },
      {
        "level": 2,
        "title": "export default 命令",
        "slug": "export-default-命令",
        "link": "#export-default-命令",
        "children": [
          {
            "level": 3,
            "title": "export default 的本质",
            "slug": "export-default-的本质",
            "link": "#export-default-的本质",
            "children": []
          },
          {
            "level": 3,
            "title": "import 同时输入默认方法和其他接口",
            "slug": "import-同时输入默认方法和其他接口",
            "link": "#import-同时输入默认方法和其他接口",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "export 与 import 的复合写法",
        "slug": "export-与-import-的复合写法",
        "link": "#export-与-import-的复合写法",
        "children": []
      },
      {
        "level": 2,
        "title": "import() 动态加载",
        "slug": "import-动态加载",
        "link": "#import-动态加载",
        "children": []
      },
      {
        "level": 2,
        "title": "循环加载",
        "slug": "循环加载",
        "link": "#循环加载",
        "children": [
          {
            "level": 3,
            "title": "CommonJS",
            "slug": "commonjs",
            "link": "#commonjs",
            "children": []
          },
          {
            "level": 3,
            "title": "ES 2015",
            "slug": "es-2015",
            "link": "#es-2015",
            "children": []
          }
        ]
      }
    ],
    "path": "/es6/module/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Promise",
    "headers": [
      {
        "level": 2,
        "title": "Promise 构造函数",
        "slug": "promise-构造函数",
        "link": "#promise-构造函数",
        "children": [
          {
            "level": 3,
            "title": "resolve 的参数是 Promise 实例",
            "slug": "resolve-的参数是-promise-实例",
            "link": "#resolve-的参数是-promise-实例",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Promise.prototype.then/catch 方法",
        "slug": "promise-prototype-then-catch-方法",
        "link": "#promise-prototype-then-catch-方法",
        "children": [
          {
            "level": 3,
            "title": "then/catch 方法返回新的 Promise 实例",
            "slug": "then-catch-方法返回新的-promise-实例",
            "link": "#then-catch-方法返回新的-promise-实例",
            "children": []
          },
          {
            "level": 3,
            "title": "resolved/rejected 回调函数返回另一 Promise 实例",
            "slug": "resolved-rejected-回调函数返回另一-promise-实例",
            "link": "#resolved-rejected-回调函数返回另一-promise-实例",
            "children": []
          },
          {
            "level": 3,
            "title": "Promise.prototype.catch",
            "slug": "promise-prototype-catch",
            "link": "#promise-prototype-catch",
            "children": []
          },
          {
            "level": 3,
            "title": "then/catch 返回的 Promise 实例的状态",
            "slug": "then-catch-返回的-promise-实例的状态",
            "link": "#then-catch-返回的-promise-实例的状态",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Promise.all()",
        "slug": "promise-all",
        "link": "#promise-all",
        "children": []
      },
      {
        "level": 2,
        "title": "Promise.race()",
        "slug": "promise-race",
        "link": "#promise-race",
        "children": []
      },
      {
        "level": 2,
        "title": "Promise.resolve()",
        "slug": "promise-resolve",
        "link": "#promise-resolve",
        "children": []
      },
      {
        "level": 2,
        "title": "Promise 实现",
        "slug": "promise-实现",
        "link": "#promise-实现",
        "children": [
          {
            "level": 3,
            "title": "Promises/A+ 规范",
            "slug": "promises-a-规范",
            "link": "#promises-a-规范",
            "children": []
          },
          {
            "level": 3,
            "title": "重难点问题",
            "slug": "重难点问题",
            "link": "#重难点问题",
            "children": []
          },
          {
            "level": 3,
            "title": "简单实现源码",
            "slug": "简单实现源码",
            "link": "#简单实现源码",
            "children": []
          }
        ]
      }
    ],
    "path": "/es6/promise/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Promise 使用技巧",
    "headers": [
      {
        "level": 2,
        "title": "单例 Promise",
        "slug": "单例-promise",
        "link": "#单例-promise",
        "children": []
      },
      {
        "level": 2,
        "title": "Promise 缓存",
        "slug": "promise-缓存",
        "link": "#promise-缓存",
        "children": [
          {
            "level": 3,
            "title": "lodash.memoize 实现",
            "slug": "lodash-memoize-实现",
            "link": "#lodash-memoize-实现",
            "children": []
          },
          {
            "level": 3,
            "title": "错误处理",
            "slug": "错误处理",
            "link": "#错误处理",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/es6/promise/promise-skills.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Proxy/Reflect",
    "headers": [
      {
        "level": 2,
        "title": "this 和 receiver",
        "slug": "this-和-receiver",
        "link": "#this-和-receiver",
        "children": [
          {
            "level": 3,
            "title": "Proxy 的 get() 里的 this 和 receiver",
            "slug": "proxy-的-get-里的-this-和-receiver",
            "link": "#proxy-的-get-里的-this-和-receiver",
            "children": []
          },
          {
            "level": 3,
            "title": "Proxy 的 set() 里的 receiver",
            "slug": "proxy-的-set-里的-receiver",
            "link": "#proxy-的-set-里的-receiver",
            "children": []
          },
          {
            "level": 3,
            "title": "Proxy 的 get()/set() 里的 this",
            "slug": "proxy-的-get-set-里的-this",
            "link": "#proxy-的-get-set-里的-this",
            "children": []
          },
          {
            "level": 3,
            "title": "Proxy 的 get() 返回的函数内的 this",
            "slug": "proxy-的-get-返回的函数内的-this",
            "link": "#proxy-的-get-返回的函数内的-this",
            "children": []
          },
          {
            "level": 3,
            "title": "Reflect.get() 里的 this 和 receiver",
            "slug": "reflect-get-里的-this-和-receiver",
            "link": "#reflect-get-里的-this-和-receiver",
            "children": []
          },
          {
            "level": 3,
            "title": "Reflect.set() 里的 this 和 receiver",
            "slug": "reflect-set-里的-this-和-receiver",
            "link": "#reflect-set-里的-this-和-receiver",
            "children": []
          }
        ]
      }
    ],
    "path": "/es6/proxy-reflect/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Proxy 实践",
    "headers": [
      {
        "level": 2,
        "title": "遍历 Proxy 实例上的属性/属性值的方法",
        "slug": "遍历-proxy-实例上的属性-属性值的方法",
        "link": "#遍历-proxy-实例上的属性-属性值的方法",
        "children": []
      },
      {
        "level": 2,
        "title": "Proxy 实例上的数组方法",
        "slug": "proxy-实例上的数组方法",
        "link": "#proxy-实例上的数组方法",
        "children": [
          {
            "level": 3,
            "title": "push",
            "slug": "push",
            "link": "#push",
            "children": []
          },
          {
            "level": 3,
            "title": "pop",
            "slug": "pop",
            "link": "#pop",
            "children": []
          },
          {
            "level": 3,
            "title": "shift",
            "slug": "shift",
            "link": "#shift",
            "children": []
          },
          {
            "level": 3,
            "title": "unshift",
            "slug": "unshift",
            "link": "#unshift",
            "children": []
          },
          {
            "level": 3,
            "title": "splice",
            "slug": "splice",
            "link": "#splice",
            "children": []
          },
          {
            "level": 3,
            "title": "includes/indexOf/lastIndexOf",
            "slug": "includes-indexof-lastindexof",
            "link": "#includes-indexof-lastindexof",
            "children": []
          },
          {
            "level": 3,
            "title": "map",
            "slug": "map",
            "link": "#map",
            "children": []
          },
          {
            "level": 3,
            "title": "forEach",
            "slug": "foreach",
            "link": "#foreach",
            "children": []
          },
          {
            "level": 3,
            "title": "for of",
            "slug": "for-of",
            "link": "#for-of",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Proxy 的 ownKeys() 方法",
        "slug": "proxy-的-ownkeys-方法",
        "link": "#proxy-的-ownkeys-方法",
        "children": []
      }
    ],
    "path": "/es6/proxy-reflect/proxy-practice.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "前端稳定性建设",
    "headers": [
      {
        "level": 2,
        "title": "引言",
        "slug": "引言",
        "link": "#引言",
        "children": [
          {
            "level": 3,
            "title": "浏览器兼容性问题",
            "slug": "浏览器兼容性问题",
            "link": "#浏览器兼容性问题",
            "children": []
          },
          {
            "level": 3,
            "title": "网络环境复杂多变",
            "slug": "网络环境复杂多变",
            "link": "#网络环境复杂多变",
            "children": []
          },
          {
            "level": 3,
            "title": "第三方服务不可用",
            "slug": "第三方服务不可用",
            "link": "#第三方服务不可用",
            "children": []
          },
          {
            "level": 3,
            "title": "代码质量参差不齐",
            "slug": "代码质量参差不齐",
            "link": "#代码质量参差不齐",
            "children": []
          },
          {
            "level": 3,
            "title": "业务需求快速变化",
            "slug": "业务需求快速变化",
            "link": "#业务需求快速变化",
            "children": []
          },
          {
            "level": 3,
            "title": "缺乏完善的监控和报警",
            "slug": "缺乏完善的监控和报警",
            "link": "#缺乏完善的监控和报警",
            "children": []
          },
          {
            "level": 3,
            "title": "缺少专门的稳定性团队和机制",
            "slug": "缺少专门的稳定性团队和机制",
            "link": "#缺少专门的稳定性团队和机制",
            "children": []
          },
          {
            "level": 3,
            "title": "技术更新迭代加快",
            "slug": "技术更新迭代加快",
            "link": "#技术更新迭代加快",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "详细建设方案",
        "slug": "详细建设方案",
        "link": "#详细建设方案",
        "children": []
      }
    ],
    "path": "/front-end-engineering/frontend-stability-construction/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "总结",
    "headers": [],
    "path": "/front-end-engineering/frontend-stability-construction/summary.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "",
    "headers": [],
    "path": "/full-stack/data-management/ES.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "MongoDB",
    "headers": [
      {
        "level": 2,
        "title": "常用命令",
        "slug": "常用命令",
        "link": "#常用命令",
        "children": [
          {
            "level": 3,
            "title": "启动",
            "slug": "启动",
            "link": "#启动",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "mongo shell",
        "slug": "mongo-shell",
        "link": "#mongo-shell",
        "children": [
          {
            "level": 3,
            "title": "连接本地数据库",
            "slug": "连接本地数据库",
            "link": "#连接本地数据库",
            "children": []
          },
          {
            "level": 3,
            "title": "连接远程数据库",
            "slug": "连接远程数据库",
            "link": "#连接远程数据库",
            "children": []
          },
          {
            "level": 3,
            "title": "数据库操作",
            "slug": "数据库操作",
            "link": "#数据库操作",
            "children": []
          },
          {
            "level": 3,
            "title": "数据操作",
            "slug": "数据操作",
            "link": "#数据操作",
            "children": []
          },
          {
            "level": 3,
            "title": "数据操作示例",
            "slug": "数据操作示例",
            "link": "#数据操作示例",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "WriteConcern/ReadConcern",
        "slug": "writeconcern-readconcern",
        "link": "#writeconcern-readconcern",
        "children": []
      },
      {
        "level": 2,
        "title": "Replica Set 副本集",
        "slug": "replica-set-副本集",
        "link": "#replica-set-副本集",
        "children": []
      },
      {
        "level": 2,
        "title": "分片集群",
        "slug": "分片集群",
        "link": "#分片集群",
        "children": []
      },
      {
        "level": 2,
        "title": "事务",
        "slug": "事务",
        "link": "#事务",
        "children": []
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      }
    ],
    "path": "/full-stack/data-management/mongodb.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "",
    "headers": [],
    "path": "/full-stack/data-management/mongoosejs.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "单例模式",
    "headers": [
      {
        "level": 2,
        "title": "使用代理实现单例模式",
        "slug": "使用代理实现单例模式",
        "link": "#使用代理实现单例模式",
        "children": []
      }
    ],
    "path": "/full-stack/design-patterns/singleton-pattern.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Google Cloud",
    "headers": [
      {
        "level": 2,
        "title": "Linux 上安装 Node.js",
        "slug": "linux-上安装-node-js",
        "link": "#linux-上安装-node-js",
        "children": [
          {
            "level": 3,
            "title": "配置环境变量",
            "slug": "配置环境变量",
            "link": "#配置环境变量",
            "children": []
          },
          {
            "level": 3,
            "title": "添加软链",
            "slug": "添加软链",
            "link": "#添加软链",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "本地控制台连接到 VM 实例",
        "slug": "本地控制台连接到-vm-实例",
        "link": "#本地控制台连接到-vm-实例",
        "children": [
          {
            "level": 3,
            "title": "创建新的 SSH 密钥",
            "slug": "创建新的-ssh-密钥",
            "link": "#创建新的-ssh-密钥",
            "children": []
          },
          {
            "level": 3,
            "title": "添加项目范围的 SSH 公钥",
            "slug": "添加项目范围的-ssh-公钥",
            "link": "#添加项目范围的-ssh-公钥",
            "children": []
          },
          {
            "level": 3,
            "title": "使用第三方工具进行连接",
            "slug": "使用第三方工具进行连接",
            "link": "#使用第三方工具进行连接",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "将文件传输到 Linux 实例",
        "slug": "将文件传输到-linux-实例",
        "link": "#将文件传输到-linux-实例",
        "children": [
          {
            "level": 3,
            "title": "预先设置 project",
            "slug": "预先设置-project",
            "link": "#预先设置-project",
            "children": []
          },
          {
            "level": 3,
            "title": "预先设置 zone",
            "slug": "预先设置-zone",
            "link": "#预先设置-zone",
            "children": []
          },
          {
            "level": 3,
            "title": "文件传输",
            "slug": "文件传输",
            "link": "#文件传输",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "服务器上安装 git",
        "slug": "服务器上安装-git",
        "link": "#服务器上安装-git",
        "children": []
      },
      {
        "level": 2,
        "title": "启动应用",
        "slug": "启动应用",
        "link": "#启动应用",
        "children": [
          {
            "level": 3,
            "title": "应用启动 host",
            "slug": "应用启动-host",
            "link": "#应用启动-host",
            "children": []
          },
          {
            "level": 3,
            "title": "应用启动端口",
            "slug": "应用启动端口",
            "link": "#应用启动端口",
            "children": []
          }
        ]
      }
    ],
    "path": "/full-stack/others/google-cloud.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "字体",
    "headers": [
      {
        "level": 2,
        "title": "无衬线字体、有衬线字体",
        "slug": "无衬线字体、有衬线字体",
        "link": "#无衬线字体、有衬线字体",
        "children": []
      },
      {
        "level": 2,
        "title": "各平台默认字体",
        "slug": "各平台默认字体",
        "link": "#各平台默认字体",
        "children": [
          {
            "level": 3,
            "title": "Windows 下",
            "slug": "windows-下",
            "link": "#windows-下",
            "children": []
          },
          {
            "level": 3,
            "title": "Mac OS 下",
            "slug": "mac-os-下",
            "link": "#mac-os-下",
            "children": []
          },
          {
            "level": 3,
            "title": "Android 系统下",
            "slug": "android-系统下",
            "link": "#android-系统下",
            "children": []
          },
          {
            "level": 3,
            "title": "iOS 系统 下",
            "slug": "ios-系统-下",
            "link": "#ios-系统-下",
            "children": []
          },
          {
            "level": 3,
            "title": "Linux 下",
            "slug": "linux-下",
            "link": "#linux-下",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "如何优雅的选择字体（设置 font-family）",
        "slug": "如何优雅的选择字体-设置-font-family",
        "link": "#如何优雅的选择字体-设置-font-family",
        "children": [
          {
            "level": 3,
            "title": "字体的中英文写法",
            "slug": "字体的中英文写法",
            "link": "#字体的中英文写法",
            "children": []
          },
          {
            "level": 3,
            "title": "声明英文字体",
            "slug": "声明英文字体",
            "link": "#声明英文字体",
            "children": []
          },
          {
            "level": 3,
            "title": "照顾不同的操作系统",
            "slug": "照顾不同的操作系统",
            "link": "#照顾不同的操作系统",
            "children": []
          },
          {
            "level": 3,
            "title": "注意向下兼容",
            "slug": "注意向下兼容",
            "link": "#注意向下兼容",
            "children": []
          },
          {
            "level": 3,
            "title": "补充字体族名称",
            "slug": "补充字体族名称",
            "link": "#补充字体族名称",
            "children": []
          },
          {
            "level": 3,
            "title": "其他一些注意点",
            "slug": "其他一些注意点",
            "link": "#其他一些注意点",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "font-family 最佳实践",
        "slug": "font-family-最佳实践",
        "link": "#font-family-最佳实践",
        "children": []
      },
      {
        "level": 2,
        "title": "字体结构",
        "slug": "字体结构",
        "link": "#字体结构",
        "children": []
      },
      {
        "level": 2,
        "title": "深入理解 CSS：字体度量、line-height 和 vertical-align",
        "slug": "深入理解-css-字体度量、line-height-和-vertical-align",
        "link": "#深入理解-css-字体度量、line-height-和-vertical-align",
        "children": []
      },
      {
        "level": 2,
        "title": "深入理解 font-weight",
        "slug": "深入理解-font-weight",
        "link": "#深入理解-font-weight",
        "children": []
      },
      {
        "level": 2,
        "title": "font-face",
        "slug": "font-face",
        "link": "#font-face",
        "children": [
          {
            "level": 3,
            "title": "src 里文件格式的选择",
            "slug": "src-里文件格式的选择",
            "link": "#src-里文件格式的选择",
            "children": []
          },
          {
            "level": 3,
            "title": "移动端的选择",
            "slug": "移动端的选择",
            "link": "#移动端的选择",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/font/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "深入理解 CSS：字体度量、line-height 和 vertical-align",
    "headers": [
      {
        "level": 2,
        "title": "术语中英文对照",
        "slug": "术语中英文对照",
        "link": "#术语中英文对照",
        "children": []
      },
      {
        "level": 2,
        "title": "font-size",
        "slug": "font-size",
        "link": "#font-size",
        "children": []
      },
      {
        "level": 2,
        "title": "line-height",
        "slug": "line-height",
        "link": "#line-height",
        "children": []
      },
      {
        "level": 2,
        "title": "vertical-align",
        "slug": "vertical-align",
        "link": "#vertical-align",
        "children": []
      },
      {
        "level": 2,
        "title": "总结",
        "slug": "总结",
        "link": "#总结",
        "children": []
      }
    ],
    "path": "/css/font/css-font-metrics-line-height-and-vertical-align.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "布局",
    "headers": [
      {
        "level": 2,
        "title": "流类型",
        "slug": "流类型",
        "link": "#流类型",
        "children": []
      },
      {
        "level": 2,
        "title": "垂直居中",
        "slug": "垂直居中",
        "link": "#垂直居中",
        "children": []
      },
      {
        "level": 2,
        "title": "外边距折叠",
        "slug": "外边距折叠",
        "link": "#外边距折叠",
        "children": [
          {
            "level": 3,
            "title": "为什么会出现外边距折叠",
            "slug": "为什么会出现外边距折叠",
            "link": "#为什么会出现外边距折叠",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "清除浮动",
        "slug": "清除浮动",
        "link": "#清除浮动",
        "children": []
      },
      {
        "level": 2,
        "title": "shrink-to-fit",
        "slug": "shrink-to-fit",
        "link": "#shrink-to-fit",
        "children": []
      },
      {
        "level": 2,
        "title": "box",
        "slug": "box",
        "link": "#box",
        "children": [
          {
            "level": 3,
            "title": "块级元素/块级盒",
            "slug": "块级元素-块级盒",
            "link": "#块级元素-块级盒",
            "children": []
          },
          {
            "level": 3,
            "title": "块容器盒（block container box）",
            "slug": "块容器盒-block-container-box",
            "link": "#块容器盒-block-container-box",
            "children": []
          },
          {
            "level": 3,
            "title": "块盒",
            "slug": "块盒",
            "link": "#块盒",
            "children": []
          },
          {
            "level": 3,
            "title": "行盒",
            "slug": "行盒",
            "link": "#行盒",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/layouts/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "问答篇",
    "headers": [
      {
        "level": 2,
        "title": "CSS 中可以通过哪些属性定义，使得一个DOM元素不显示在浏览器可视范围内？",
        "slug": "css-中可以通过哪些属性定义-使得一个dom元素不显示在浏览器可视范围内",
        "link": "#css-中可以通过哪些属性定义-使得一个dom元素不显示在浏览器可视范围内",
        "children": []
      },
      {
        "level": 2,
        "title": "如何实现自适应的正方形？",
        "slug": "如何实现自适应的正方形",
        "link": "#如何实现自适应的正方形",
        "children": [
          {
            "level": 3,
            "title": "解决思路一：padding-top/bottom百分比取值",
            "slug": "解决思路一-padding-top-bottom百分比取值",
            "link": "#解决思路一-padding-top-bottom百分比取值",
            "children": []
          },
          {
            "level": 3,
            "title": "解决思路二：CSS3 vw 单位",
            "slug": "解决思路二-css3-vw-单位",
            "link": "#解决思路二-css3-vw-单位",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/practices/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "属性",
    "headers": [
      {
        "level": 2,
        "title": "最佳实践",
        "slug": "最佳实践",
        "link": "#最佳实践",
        "children": []
      },
      {
        "level": 2,
        "title": "rgba() 与 opacity",
        "slug": "rgba-与-opacity",
        "link": "#rgba-与-opacity",
        "children": []
      },
      {
        "level": 2,
        "title": "display",
        "slug": "display",
        "link": "#display",
        "children": [
          {
            "level": 3,
            "title": "display: none 与 visibility: hidden 与 opacity: 0",
            "slug": "display-none-与-visibility-hidden-与-opacity-0",
            "link": "#display-none-与-visibility-hidden-与-opacity-0",
            "children": []
          },
          {
            "level": 3,
            "title": "display: inline-block 的 baseline 的确定",
            "slug": "display-inline-block-的-baseline-的确定",
            "link": "#display-inline-block-的-baseline-的确定",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "z-index",
        "slug": "z-index",
        "link": "#z-index",
        "children": [
          {
            "level": 3,
            "title": "层叠上下文",
            "slug": "层叠上下文",
            "link": "#层叠上下文",
            "children": []
          },
          {
            "level": 3,
            "title": "层叠顺序",
            "slug": "层叠顺序",
            "link": "#层叠顺序",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "vertical-align",
        "slug": "vertical-align",
        "link": "#vertical-align",
        "children": []
      },
      {
        "level": 2,
        "title": "perspective",
        "slug": "perspective",
        "link": "#perspective",
        "children": [
          {
            "level": 3,
            "title": "设置 perspective 之后子元素的大小",
            "slug": "设置-perspective-之后子元素的大小",
            "link": "#设置-perspective-之后子元素的大小",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "width",
        "slug": "width",
        "link": "#width",
        "children": [
          {
            "level": 3,
            "title": "CSS 3 里 width 属性的新取值：max/min-content、fit-content、fill-available",
            "slug": "css-3-里-width-属性的新取值-max-min-content、fit-content、fill-available",
            "link": "#css-3-里-width-属性的新取值-max-min-content、fit-content、fill-available",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "flex 相关",
        "slug": "flex-相关",
        "link": "#flex-相关",
        "children": [
          {
            "level": 3,
            "title": "flex-basis",
            "slug": "flex-basis",
            "link": "#flex-basis",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "属性值的百分比",
        "slug": "属性值的百分比",
        "link": "#属性值的百分比",
        "children": []
      }
    ],
    "path": "/css/properties/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "属性书写顺序",
    "headers": [
      {
        "level": 2,
        "title": "属性间顺序",
        "slug": "属性间顺序",
        "link": "#属性间顺序",
        "children": [
          {
            "level": 3,
            "title": "浏览器厂商前缀",
            "slug": "浏览器厂商前缀",
            "link": "#浏览器厂商前缀",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "属性内顺序",
        "slug": "属性内顺序",
        "link": "#属性内顺序",
        "children": [
          {
            "level": 3,
            "title": "background 属性简写",
            "slug": "background-属性简写",
            "link": "#background-属性简写",
            "children": []
          },
          {
            "level": 3,
            "title": "animation",
            "slug": "animation",
            "link": "#animation",
            "children": []
          },
          {
            "level": 3,
            "title": "其他",
            "slug": "其他",
            "link": "#其他",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/properties/properties-order.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "less",
    "headers": [
      {
        "level": 2,
        "title": "最佳实践",
        "slug": "最佳实践",
        "link": "#最佳实践",
        "children": [
          {
            "level": 3,
            "title": "Mixins",
            "slug": "mixins",
            "link": "#mixins",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/preprocessor/less.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "stylus 重点",
    "headers": [
      {
        "level": 2,
        "title": "选择器",
        "slug": "选择器",
        "link": "#选择器",
        "children": []
      },
      {
        "level": 2,
        "title": "变量",
        "slug": "变量",
        "link": "#变量",
        "children": []
      },
      {
        "level": 2,
        "title": "插值",
        "slug": "插值",
        "link": "#插值",
        "children": []
      },
      {
        "level": 2,
        "title": "运算符",
        "slug": "运算符",
        "link": "#运算符",
        "children": [
          {
            "level": 3,
            "title": "常规支持的运算符",
            "slug": "常规支持的运算符",
            "link": "#常规支持的运算符",
            "children": []
          },
          {
            "level": 3,
            "title": "%",
            "slug": "",
            "link": "#",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "mixin",
        "slug": "mixin",
        "link": "#mixin",
        "children": []
      },
      {
        "level": 2,
        "title": "函数",
        "slug": "函数",
        "link": "#函数",
        "children": []
      }
    ],
    "path": "/css/preprocessor/stylus.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "屏幕尺寸单位",
    "headers": [
      {
        "level": 2,
        "title": "英寸",
        "slug": "英寸",
        "link": "#英寸",
        "children": []
      },
      {
        "level": 2,
        "title": "DPI",
        "slug": "dpi",
        "link": "#dpi",
        "children": []
      },
      {
        "level": 2,
        "title": "PPI",
        "slug": "ppi",
        "link": "#ppi",
        "children": [
          {
            "level": 3,
            "title": "计算机与手机屏幕的 PPI",
            "slug": "计算机与手机屏幕的-ppi",
            "link": "#计算机与手机屏幕的-ppi",
            "children": []
          },
          {
            "level": 3,
            "title": "屏幕 PPI 计算公式",
            "slug": "屏幕-ppi-计算公式",
            "link": "#屏幕-ppi-计算公式",
            "children": []
          },
          {
            "level": 3,
            "title": "基于每英寸像素值的屏幕分级",
            "slug": "基于每英寸像素值的屏幕分级",
            "link": "#基于每英寸像素值的屏幕分级",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "像素",
        "slug": "像素",
        "link": "#像素",
        "children": [
          {
            "level": 3,
            "title": "设备像素/物理像素",
            "slug": "设备像素-物理像素",
            "link": "#设备像素-物理像素",
            "children": []
          },
          {
            "level": 3,
            "title": "CSS 像素",
            "slug": "css-像素",
            "link": "#css-像素",
            "children": []
          },
          {
            "level": 3,
            "title": "DPR",
            "slug": "dpr",
            "link": "#dpr",
            "children": []
          },
          {
            "level": 3,
            "title": "DIP",
            "slug": "dip",
            "link": "#dip",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "DP",
        "slug": "dp",
        "link": "#dp",
        "children": []
      }
    ],
    "path": "/css/screen/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "选择器",
    "headers": [
      {
        "level": 2,
        "title": "选择器优先级",
        "slug": "选择器优先级",
        "link": "#选择器优先级",
        "children": []
      },
      {
        "level": 2,
        "title": "CSS 选择器 效率",
        "slug": "css-选择器-效率",
        "link": "#css-选择器-效率",
        "children": []
      },
      {
        "level": 2,
        "title": "浏览器从右到左解析",
        "slug": "浏览器从右到左解析",
        "link": "#浏览器从右到左解析",
        "children": []
      },
      {
        "level": 2,
        "title": "命名规范",
        "slug": "命名规范",
        "link": "#命名规范",
        "children": [
          {
            "level": 3,
            "title": "BEM",
            "slug": "bem",
            "link": "#bem",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/selectors/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "折角效果",
    "headers": [
      {
        "level": 2,
        "title": "实现方法一：增加两个小三角，模拟折角和模拟缺口",
        "slug": "实现方法一-增加两个小三角-模拟折角和模拟缺口",
        "link": "#实现方法一-增加两个小三角-模拟折角和模拟缺口",
        "children": []
      },
      {
        "level": 2,
        "title": "实现方式二：双渐变背景",
        "slug": "实现方式二-双渐变背景",
        "link": "#实现方式二-双渐变背景",
        "children": []
      },
      {
        "level": 2,
        "title": "实现方式三：单渐变背景+单伪元素（任意角度折角）",
        "slug": "实现方式三-单渐变背景-单伪元素-任意角度折角",
        "link": "#实现方式三-单渐变背景-单伪元素-任意角度折角",
        "children": []
      },
      {
        "level": 2,
        "title": "实现方式四：border + 单伪元素背景渐变",
        "slug": "实现方式四-border-单伪元素背景渐变",
        "link": "#实现方式四-border-单伪元素背景渐变",
        "children": []
      }
    ],
    "path": "/css/skills/dog-ear.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "行盒的截断样式",
    "headers": [
      {
        "level": 2,
        "title": "目标效果",
        "slug": "目标效果",
        "link": "#目标效果",
        "children": []
      },
      {
        "level": 2,
        "title": "实际效果",
        "slug": "实际效果",
        "link": "#实际效果",
        "children": []
      },
      {
        "level": 2,
        "title": "最终实现",
        "slug": "最终实现",
        "link": "#最终实现",
        "children": []
      }
    ],
    "path": "/css/skills/line-boxes-truncation-style.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "安全距离",
    "headers": [
      {
        "level": 2,
        "title": "stylus 版本",
        "slug": "stylus-版本",
        "link": "#stylus-版本",
        "children": []
      },
      {
        "level": 2,
        "title": "less 版本",
        "slug": "less-版本",
        "link": "#less-版本",
        "children": []
      }
    ],
    "path": "/css/tools/safe-area.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "文字省略",
    "headers": [
      {
        "level": 2,
        "title": "单行省略",
        "slug": "单行省略",
        "link": "#单行省略",
        "children": []
      },
      {
        "level": 2,
        "title": "多行省略",
        "slug": "多行省略",
        "link": "#多行省略",
        "children": []
      }
    ],
    "path": "/css/tools/text-ellipsis.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "position: fixed 失效",
    "headers": [],
    "path": "/css/topics/position-fixed.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "A tale of two viewports — part one",
    "headers": [
      {
        "level": 2,
        "title": "设备像素和 CSS 像素",
        "slug": "设备像素和-css-像素",
        "link": "#设备像素和-css-像素",
        "children": [
          {
            "level": 3,
            "title": "100% 缩放",
            "slug": "_100-缩放",
            "link": "#_100-缩放",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "屏幕尺寸（Screen size）",
        "slug": "屏幕尺寸-screen-size",
        "link": "#屏幕尺寸-screen-size",
        "children": []
      },
      {
        "level": 2,
        "title": "窗口尺寸（Window size）",
        "slug": "窗口尺寸-window-size",
        "link": "#窗口尺寸-window-size",
        "children": []
      },
      {
        "level": 2,
        "title": "滚动偏移（Scrolling offset）",
        "slug": "滚动偏移-scrolling-offset",
        "link": "#滚动偏移-scrolling-offset",
        "children": []
      },
      {
        "level": 2,
        "title": "视口",
        "slug": "视口",
        "link": "#视口",
        "children": [
          {
            "level": 3,
            "title": "后果",
            "slug": "后果",
            "link": "#后果",
            "children": []
          },
          {
            "level": 3,
            "title": "文档宽度",
            "slug": "文档宽度",
            "link": "#文档宽度",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "测量视口",
        "slug": "测量视口",
        "link": "#测量视口",
        "children": [
          {
            "level": 3,
            "title": "两个属性对",
            "slug": "两个属性对",
            "link": "#两个属性对",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "测量 html 元素",
        "slug": "测量-html-元素",
        "link": "#测量-html-元素",
        "children": []
      },
      {
        "level": 2,
        "title": "事件坐标",
        "slug": "事件坐标",
        "link": "#事件坐标",
        "children": [
          {
            "level": 3,
            "title": "pageX/Y、clientX/Y、screenX/Y 示意",
            "slug": "pagex-y、clientx-y、screenx-y-示意",
            "link": "#pagex-y、clientx-y、screenx-y-示意",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "媒体查询",
        "slug": "媒体查询",
        "link": "#媒体查询",
        "children": []
      },
      {
        "level": 2,
        "title": "总结",
        "slug": "总结-1",
        "link": "#总结-1",
        "children": []
      }
    ],
    "path": "/css/viewport/a-tale-of-viewports-one.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "A tale of two viewports — part two",
    "headers": [
      {
        "level": 2,
        "title": "移动端浏览器的问题",
        "slug": "移动端浏览器的问题",
        "link": "#移动端浏览器的问题",
        "children": []
      },
      {
        "level": 2,
        "title": "两种视口",
        "slug": "两种视口",
        "link": "#两种视口",
        "children": [
          {
            "level": 3,
            "title": "缩放",
            "slug": "缩放",
            "link": "#缩放",
            "children": []
          },
          {
            "level": 3,
            "title": "理解布局视口",
            "slug": "理解布局视口",
            "link": "#理解布局视口",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "测量布局视口",
        "slug": "测量布局视口",
        "link": "#测量布局视口",
        "children": []
      },
      {
        "level": 2,
        "title": "测量视觉视口",
        "slug": "测量视觉视口",
        "link": "#测量视觉视口",
        "children": []
      },
      {
        "level": 2,
        "title": "屏幕",
        "slug": "屏幕",
        "link": "#屏幕",
        "children": [
          {
            "level": 3,
            "title": "缩放层级",
            "slug": "缩放层级",
            "link": "#缩放层级",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "滚动偏移",
        "slug": "滚动偏移",
        "link": "#滚动偏移",
        "children": []
      },
      {
        "level": 2,
        "title": "html 元素",
        "slug": "html-元素",
        "link": "#html-元素",
        "children": []
      },
      {
        "level": 2,
        "title": "媒体查询",
        "slug": "媒体查询",
        "link": "#媒体查询",
        "children": []
      },
      {
        "level": 2,
        "title": "事件坐标",
        "slug": "事件坐标",
        "link": "#事件坐标",
        "children": []
      },
      {
        "level": 2,
        "title": "Meta viewport",
        "slug": "meta-viewport",
        "link": "#meta-viewport",
        "children": []
      },
      {
        "level": 2,
        "title": "相关研究",
        "slug": "相关研究",
        "link": "#相关研究",
        "children": []
      }
    ],
    "path": "/css/viewport/a-tale-of-viewports-two.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CSS 兼容性",
    "headers": [
      {
        "level": 2,
        "title": "background-size: 100% auto; 导致 background-repeat 属性失效",
        "slug": "background-size-100-auto-导致-background-repeat-属性失效",
        "link": "#background-size-100-auto-导致-background-repeat-属性失效",
        "children": []
      },
      {
        "level": 2,
        "title": "flex 兼容性问题",
        "slug": "flex-兼容性问题",
        "link": "#flex-兼容性问题",
        "children": [
          {
            "level": 3,
            "title": "flex-basis",
            "slug": "flex-basis",
            "link": "#flex-basis",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "rem 在 Android APP 的 webview 计算不准确的问题",
        "slug": "rem-在-android-app-的-webview-计算不准确的问题",
        "link": "#rem-在-android-app-的-webview-计算不准确的问题",
        "children": []
      },
      {
        "level": 2,
        "title": "小于 12px 字体使用 line-height 属性垂直居中偏上的问题",
        "slug": "小于-12px-字体使用-line-height-属性垂直居中偏上的问题",
        "link": "#小于-12px-字体使用-line-height-属性垂直居中偏上的问题",
        "children": [
          {
            "level": 3,
            "title": "方案一：scale",
            "slug": "方案一-scale",
            "link": "#方案一-scale",
            "children": []
          },
          {
            "level": 3,
            "title": "方案二：table-cell",
            "slug": "方案二-table-cell",
            "link": "#方案二-table-cell",
            "children": []
          },
          {
            "level": 3,
            "title": "方案三：伪元素 + vertical-align: middle",
            "slug": "方案三-伪元素-vertical-align-middle",
            "link": "#方案三-伪元素-vertical-align-middle",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "IE",
        "slug": "ie",
        "link": "#ie",
        "children": [
          {
            "level": 3,
            "title": "IE6~8 CSS hack",
            "slug": "ie6-8-css-hack",
            "link": "#ie6-8-css-hack",
            "children": []
          },
          {
            "level": 3,
            "title": "IE6 float 换行",
            "slug": "ie6-float-换行",
            "link": "#ie6-float-换行",
            "children": []
          },
          {
            "level": 3,
            "title": "IE6 a:hover 问题",
            "slug": "ie6-a-hover-问题",
            "link": "#ie6-a-hover-问题",
            "children": []
          },
          {
            "level": 3,
            "title": "IE6~8 a 超链接被击穿问题",
            "slug": "ie6-8-a-超链接被击穿问题",
            "link": "#ie6-8-a-超链接被击穿问题",
            "children": []
          },
          {
            "level": 3,
            "title": "IE6 多类选择器 bug（避免使用）",
            "slug": "ie6-多类选择器-bug-避免使用",
            "link": "#ie6-多类选择器-bug-避免使用",
            "children": []
          },
          {
            "level": 3,
            "title": "IE6 相对父容器绝对定位的bug",
            "slug": "ie6-相对父容器绝对定位的bug",
            "link": "#ie6-相对父容器绝对定位的bug",
            "children": []
          },
          {
            "level": 3,
            "title": "IE6 固定定位",
            "slug": "ie6-固定定位",
            "link": "#ie6-固定定位",
            "children": []
          },
          {
            "level": 3,
            "title": "IE 6~8（9及以上没有测） 输入框内容高度兼容性问题",
            "slug": "ie-6-8-9及以上没有测-输入框内容高度兼容性问题",
            "link": "#ie-6-8-9及以上没有测-输入框内容高度兼容性问题",
            "children": []
          },
          {
            "level": 3,
            "title": "IE 6、7下将 块级元素设置为 display: inline-block; 失效",
            "slug": "ie-6、7下将-块级元素设置为-display-inline-block-失效",
            "link": "#ie-6、7下将-块级元素设置为-display-inline-block-失效",
            "children": []
          },
          {
            "level": 3,
            "title": "IE 6 overflow: hidden; 失效",
            "slug": "ie-6-overflow-hidden-失效",
            "link": "#ie-6-overflow-hidden-失效",
            "children": []
          },
          {
            "level": 3,
            "title": "其他",
            "slug": "其他",
            "link": "#其他",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/unclassified/compatibility.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "技巧和坑",
    "headers": [
      {
        "level": 2,
        "title": "animation-timing-function",
        "slug": "animation-timing-function",
        "link": "#animation-timing-function",
        "children": []
      }
    ],
    "path": "/css/unclassified/skill-pitfall.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "用户体验",
    "headers": [
      {
        "level": 2,
        "title": "元素不成为鼠标事件目标",
        "slug": "元素不成为鼠标事件目标",
        "link": "#元素不成为鼠标事件目标",
        "children": []
      },
      {
        "level": 2,
        "title": "禁用文字选中",
        "slug": "禁用文字选中",
        "link": "#禁用文字选中",
        "children": []
      },
      {
        "level": 2,
        "title": "禁用 iOS 长按图片预览",
        "slug": "禁用-ios-长按图片预览",
        "link": "#禁用-ios-长按图片预览",
        "children": []
      },
      {
        "level": 2,
        "title": "点击元素不高亮显示",
        "slug": "点击元素不高亮显示",
        "link": "#点击元素不高亮显示",
        "children": []
      },
      {
        "level": 2,
        "title": "类似电话号码的数字不可点击拨号",
        "slug": "类似电话号码的数字不可点击拨号",
        "link": "#类似电话号码的数字不可点击拨号",
        "children": []
      },
      {
        "level": 2,
        "title": "网页置灰",
        "slug": "网页置灰",
        "link": "#网页置灰",
        "children": []
      },
      {
        "level": 2,
        "title": "其他",
        "slug": "其他",
        "link": "#其他",
        "children": [
          {
            "level": 3,
            "title": "iOS 页面顶部边界下拉出现白色空白",
            "slug": "ios-页面顶部边界下拉出现白色空白",
            "link": "#ios-页面顶部边界下拉出现白色空白",
            "children": []
          },
          {
            "level": 3,
            "title": "页面的放大和缩小",
            "slug": "页面的放大和缩小",
            "link": "#页面的放大和缩小",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/unclassified/user-experience.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "浏览器",
    "headers": [],
    "path": "/interview/browser/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级】输入 url 到页面展现发生了什么：主要考察网络和渲染",
    "headers": [],
    "path": "/interview/browser/the-process-of-input-an-url.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级】HTML 里外链 CSS、JS 文件放置位置和原因",
    "headers": [
      {
        "level": 2,
        "title": "评分标准",
        "slug": "评分标准",
        "link": "#评分标准",
        "children": []
      }
    ],
    "path": "/interview/browser/the-reason-for-the-position-of-css-and-js-in-html.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】隐藏页面元素的方式有哪些？",
    "headers": [],
    "path": "/interview/css/hide-elements-methods.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CSS",
    "headers": [],
    "path": "/interview/css/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【高级】如何实现自适应的正方形？",
    "headers": [
      {
        "level": 2,
        "title": "参考答案",
        "slug": "参考答案",
        "link": "#参考答案",
        "children": [
          {
            "level": 3,
            "title": "解决思路一：padding-top/bottom百分比取值",
            "slug": "解决思路一-padding-top-bottom百分比取值",
            "link": "#解决思路一-padding-top-bottom百分比取值",
            "children": []
          },
          {
            "level": 3,
            "title": "解决思路二：CSS3 vw 单位",
            "slug": "解决思路二-css3-vw-单位",
            "link": "#解决思路二-css3-vw-单位",
            "children": []
          },
          {
            "level": 3,
            "title": "解决思路三：aspect-ratio",
            "slug": "解决思路三-aspect-ratio",
            "link": "#解决思路三-aspect-ratio",
            "children": []
          }
        ]
      }
    ],
    "path": "/interview/css/self-fit-square.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "二叉树",
    "headers": [
      {
        "level": 2,
        "title": "找出二叉树中所有节点的个数",
        "slug": "找出二叉树中所有节点的个数",
        "link": "#找出二叉树中所有节点的个数",
        "children": []
      }
    ],
    "path": "/interview/data-structure/binary-tree.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "JavaScript 面试题",
    "headers": [
      {
        "level": 2,
        "title": "算法类",
        "slug": "算法类",
        "link": "#算法类",
        "children": [
          {
            "level": 3,
            "title": "使用",
            "slug": "使用",
            "link": "#使用",
            "children": []
          },
          {
            "level": 3,
            "title": "二分查找",
            "slug": "二分查找",
            "link": "#二分查找",
            "children": []
          }
        ]
      }
    ],
    "path": "/interview/javascript/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "计算机网络",
    "headers": [
      {
        "level": 2,
        "title": "【初级】常见http编码",
        "slug": "【初级】常见http编码",
        "link": "#【初级】常见http编码",
        "children": []
      },
      {
        "level": 2,
        "title": "【初级】前端会涉及到哪些缓存 ？",
        "slug": "【初级】前端会涉及到哪些缓存",
        "link": "#【初级】前端会涉及到哪些缓存",
        "children": []
      },
      {
        "level": 2,
        "title": "【初级】DNS是什么以及其原理，浏览器从URL到展示经历了哪些？",
        "slug": "【初级】dns是什么以及其原理-浏览器从url到展示经历了哪些",
        "link": "#【初级】dns是什么以及其原理-浏览器从url到展示经历了哪些",
        "children": []
      }
    ],
    "path": "/interview/network/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "项目经验",
    "headers": [
      {
        "level": 2,
        "title": "性能优化",
        "slug": "性能优化",
        "link": "#性能优化",
        "children": []
      },
      {
        "level": 2,
        "title": "稳定性",
        "slug": "稳定性",
        "link": "#稳定性",
        "children": []
      },
      {
        "level": 2,
        "title": "对下一份工作的期待？",
        "slug": "对下一份工作的期待",
        "link": "#对下一份工作的期待",
        "children": []
      },
      {
        "level": 2,
        "title": "评语",
        "slug": "评语",
        "link": "#评语",
        "children": [
          {
            "level": 3,
            "title": "正面评语",
            "slug": "正面评语",
            "link": "#正面评语",
            "children": []
          },
          {
            "level": 3,
            "title": "负面评语",
            "slug": "负面评语",
            "link": "#负面评语",
            "children": []
          }
        ]
      }
    ],
    "path": "/interview/project-experience/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "NodeJS",
    "headers": [
      {
        "level": 2,
        "title": "判断文件是否存在",
        "slug": "判断文件是否存在",
        "link": "#判断文件是否存在",
        "children": []
      }
    ],
    "path": "/interview/nodejs/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "大文件上传及断点续传",
    "headers": [
      {
        "level": 2,
        "title": "重难点",
        "slug": "重难点",
        "link": "#重难点",
        "children": []
      },
      {
        "level": 2,
        "title": "核心思路",
        "slug": "核心思路",
        "link": "#核心思路",
        "children": [
          {
            "level": 3,
            "title": "分片上传",
            "slug": "分片上传",
            "link": "#分片上传",
            "children": []
          },
          {
            "level": 3,
            "title": "断点续传",
            "slug": "断点续传",
            "link": "#断点续传",
            "children": []
          },
          {
            "level": 3,
            "title": "进度条显示",
            "slug": "进度条显示",
            "link": "#进度条显示",
            "children": []
          }
        ]
      }
    ],
    "path": "/interview/topic/large-file-upload.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "错误处理",
    "headers": [
      {
        "level": 2,
        "title": "Completion Record",
        "slug": "completion-record",
        "link": "#completion-record",
        "children": []
      },
      {
        "level": 2,
        "title": "自定义错误",
        "slug": "自定义错误",
        "link": "#自定义错误",
        "children": []
      },
      {
        "level": 2,
        "title": "包装异常",
        "slug": "包装异常",
        "link": "#包装异常",
        "children": []
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      }
    ],
    "path": "/js/error-handling/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "错误处理 - 浏览器环境",
    "headers": [
      {
        "level": 2,
        "title": "错误处理方式",
        "slug": "错误处理方式",
        "link": "#错误处理方式",
        "children": [
          {
            "level": 3,
            "title": "window.onerror",
            "slug": "window-onerror",
            "link": "#window-onerror",
            "children": []
          },
          {
            "level": 3,
            "title": "window.addEventListener('error')",
            "slug": "window-addeventlistener-error",
            "link": "#window-addeventlistener-error",
            "children": []
          },
          {
            "level": 3,
            "title": "element.onerror",
            "slug": "element-onerror",
            "link": "#element-onerror",
            "children": []
          },
          {
            "level": 3,
            "title": "注意事项",
            "slug": "注意事项",
            "link": "#注意事项",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/js/error-handling/browser-error-handling.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "日志",
    "headers": [
      {
        "level": 2,
        "title": "为什么浏览器通常在发送数据埋点请求的时候使用的是 1x1 像素的透明 gif 图片？",
        "slug": "为什么浏览器通常在发送数据埋点请求的时候使用的是-1x1-像素的透明-gif-图片",
        "link": "#为什么浏览器通常在发送数据埋点请求的时候使用的是-1x1-像素的透明-gif-图片",
        "children": []
      },
      {
        "level": 2,
        "title": "元素日志",
        "slug": "元素日志",
        "link": "#元素日志",
        "children": [
          {
            "level": 3,
            "title": "元素曝光日志",
            "slug": "元素曝光日志",
            "link": "#元素曝光日志",
            "children": []
          },
          {
            "level": 3,
            "title": "元素点击日志",
            "slug": "元素点击日志",
            "link": "#元素点击日志",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/error-handling/log.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "错误处理 - try catch",
    "headers": [
      {
        "level": 2,
        "title": "try catch 无法捕获的错误",
        "slug": "try-catch-无法捕获的错误",
        "link": "#try-catch-无法捕获的错误",
        "children": []
      },
      {
        "level": 2,
        "title": "finally",
        "slug": "finally",
        "link": "#finally",
        "children": []
      }
    ],
    "path": "/js/error-handling/try-catch.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "JavaScript 执行机制",
    "headers": [
      {
        "level": 2,
        "title": "动态语言 & 弱类型语言",
        "slug": "动态语言-弱类型语言",
        "link": "#动态语言-弱类型语言",
        "children": []
      },
      {
        "level": 2,
        "title": "变量提升",
        "slug": "变量提升",
        "link": "#变量提升",
        "children": [
          {
            "level": 3,
            "title": "为什么要设计变量提升",
            "slug": "为什么要设计变量提升",
            "link": "#为什么要设计变量提升",
            "children": []
          },
          {
            "level": 3,
            "title": "this",
            "slug": "this",
            "link": "#this",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "垃圾回收",
        "slug": "垃圾回收",
        "link": "#垃圾回收",
        "children": [
          {
            "level": 3,
            "title": "引用计数（旧版 IE 4-6）",
            "slug": "引用计数-旧版-ie-4-6",
            "link": "#引用计数-旧版-ie-4-6",
            "children": []
          },
          {
            "level": 3,
            "title": "标记清除（Mark-and-Sweep）（主流）",
            "slug": "标记清除-mark-and-sweep-主流",
            "link": "#标记清除-mark-and-sweep-主流",
            "children": []
          },
          {
            "level": 3,
            "title": "造成内存泄漏的原因",
            "slug": "造成内存泄漏的原因",
            "link": "#造成内存泄漏的原因",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "V8 执行 JavaScript 代码的过程",
        "slug": "v8-执行-javascript-代码的过程",
        "link": "#v8-执行-javascript-代码的过程",
        "children": []
      },
      {
        "level": 2,
        "title": "疑问",
        "slug": "疑问",
        "link": "#疑问",
        "children": [
          {
            "level": 3,
            "title": "块级作用域里声明函数",
            "slug": "块级作用域里声明函数",
            "link": "#块级作用域里声明函数",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/execution-mechanism/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "事件循环",
    "headers": [
      {
        "level": 2,
        "title": "setTimeout、setInterval",
        "slug": "settimeout、setinterval",
        "link": "#settimeout、setinterval",
        "children": [
          {
            "level": 3,
            "title": "延时时间参数 delayTime",
            "slug": "延时时间参数-delaytime",
            "link": "#延时时间参数-delaytime",
            "children": []
          },
          {
            "level": 3,
            "title": "堆积未执行的 setInterval 回调只会执行一个",
            "slug": "堆积未执行的-setinterval-回调只会执行一个",
            "link": "#堆积未执行的-setinterval-回调只会执行一个",
            "children": []
          },
          {
            "level": 3,
            "title": "示例",
            "slug": "示例",
            "link": "#示例",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "宏任务/微任务队列",
        "slug": "宏任务-微任务队列",
        "link": "#宏任务-微任务队列",
        "children": []
      },
      {
        "level": 2,
        "title": "宏任务、微任务与渲染的关系",
        "slug": "宏任务、微任务与渲染的关系",
        "link": "#宏任务、微任务与渲染的关系",
        "children": []
      },
      {
        "level": 2,
        "title": "浏览器的独有的 Event Loop",
        "slug": "浏览器的独有的-event-loop",
        "link": "#浏览器的独有的-event-loop",
        "children": [
          {
            "level": 3,
            "title": "requestAnimationFrame",
            "slug": "requestanimationframe",
            "link": "#requestanimationframe",
            "children": []
          },
          {
            "level": 3,
            "title": "用户点击与代码触发点击",
            "slug": "用户点击与代码触发点击",
            "link": "#用户点击与代码触发点击",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Node.js 的 Event Loop",
        "slug": "node-js-的-event-loop",
        "link": "#node-js-的-event-loop",
        "children": [
          {
            "level": 3,
            "title": "process.nextTick",
            "slug": "process-nexttick",
            "link": "#process-nexttick",
            "children": []
          },
          {
            "level": 3,
            "title": "setImmediate",
            "slug": "setimmediate",
            "link": "#setimmediate",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": [
          {
            "level": 3,
            "title": "定时器时间的确定",
            "slug": "定时器时间的确定",
            "link": "#定时器时间的确定",
            "children": []
          },
          {
            "level": 3,
            "title": "用户触发事件/代码触发事件 区别",
            "slug": "用户触发事件-代码触发事件-区别",
            "link": "#用户触发事件-代码触发事件-区别",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/js/execution-mechanism/event-loop.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "执行上下文",
    "headers": [
      {
        "level": 2,
        "title": "调用栈（执行上下文栈）",
        "slug": "调用栈-执行上下文栈",
        "link": "#调用栈-执行上下文栈",
        "children": []
      },
      {
        "level": 2,
        "title": "变量环境",
        "slug": "变量环境",
        "link": "#变量环境",
        "children": []
      },
      {
        "level": 2,
        "title": "词法环境",
        "slug": "词法环境",
        "link": "#词法环境",
        "children": []
      },
      {
        "level": 2,
        "title": "作用域",
        "slug": "作用域",
        "link": "#作用域",
        "children": [
          {
            "level": 3,
            "title": "作用域链",
            "slug": "作用域链",
            "link": "#作用域链",
            "children": []
          },
          {
            "level": 3,
            "title": "词法作用域",
            "slug": "词法作用域",
            "link": "#词法作用域",
            "children": []
          },
          {
            "level": 3,
            "title": "动态作用域 vs 静态作用域",
            "slug": "动态作用域-vs-静态作用域",
            "link": "#动态作用域-vs-静态作用域",
            "children": []
          },
          {
            "level": 3,
            "title": "闭包",
            "slug": "闭包",
            "link": "#闭包",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/execution-mechanism/execution-context.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "原型-prototype",
    "headers": [
      {
        "level": 2,
        "title": "原型关系图",
        "slug": "原型关系图",
        "link": "#原型关系图",
        "children": []
      },
      {
        "level": 2,
        "title": "关于 instanceof",
        "slug": "关于-instanceof",
        "link": "#关于-instanceof",
        "children": []
      },
      {
        "level": 2,
        "title": "Object.getPrototypeOf() 和 Function.prototype",
        "slug": "object-getprototypeof-和-function-prototype",
        "link": "#object-getprototypeof-和-function-prototype",
        "children": []
      },
      {
        "level": 2,
        "title": "继承",
        "slug": "继承",
        "link": "#继承",
        "children": [
          {
            "level": 3,
            "title": "借用构造函数",
            "slug": "借用构造函数",
            "link": "#借用构造函数",
            "children": []
          },
          {
            "level": 3,
            "title": "原型式继承",
            "slug": "原型式继承",
            "link": "#原型式继承",
            "children": []
          },
          {
            "level": 3,
            "title": "组合继承",
            "slug": "组合继承",
            "link": "#组合继承",
            "children": []
          },
          {
            "level": 3,
            "title": "寄生式继承",
            "slug": "寄生式继承",
            "link": "#寄生式继承",
            "children": []
          },
          {
            "level": 3,
            "title": "寄生组合继承",
            "slug": "寄生组合继承",
            "link": "#寄生组合继承",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/execution-mechanism/prototype.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "this",
    "headers": [
      {
        "level": 2,
        "title": "函数有哪几种调用方式可以导致 this 不同？",
        "slug": "函数有哪几种调用方式可以导致-this-不同",
        "link": "#函数有哪几种调用方式可以导致-this-不同",
        "children": []
      },
      {
        "level": 2,
        "title": "作为普通函数调用",
        "slug": "作为普通函数调用",
        "link": "#作为普通函数调用",
        "children": []
      },
      {
        "level": 2,
        "title": "new fn() 的过程",
        "slug": "new-fn-的过程",
        "link": "#new-fn-的过程",
        "children": []
      },
      {
        "level": 2,
        "title": "apply 和 call 方法",
        "slug": "apply-和-call-方法",
        "link": "#apply-和-call-方法",
        "children": [
          {
            "level": 3,
            "title": "apply 与 call 的区别",
            "slug": "apply-与-call-的区别",
            "link": "#apply-与-call-的区别",
            "children": []
          },
          {
            "level": 3,
            "title": "性能对比",
            "slug": "性能对比",
            "link": "#性能对比",
            "children": []
          },
          {
            "level": 3,
            "title": "常用示例",
            "slug": "常用示例",
            "link": "#常用示例",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/execution-mechanism/this.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "数据类型",
    "headers": [
      {
        "level": 2,
        "title": "类型划分方式",
        "slug": "类型划分方式",
        "link": "#类型划分方式",
        "children": []
      },
      {
        "level": 2,
        "title": "基本类型",
        "slug": "基本类型",
        "link": "#基本类型",
        "children": [
          {
            "level": 3,
            "title": "typeof",
            "slug": "typeof",
            "link": "#typeof",
            "children": []
          },
          {
            "level": 3,
            "title": "基本包装类型",
            "slug": "基本包装类型",
            "link": "#基本包装类型",
            "children": []
          },
          {
            "level": 3,
            "title": "Null",
            "slug": "null",
            "link": "#null",
            "children": []
          },
          {
            "level": 3,
            "title": "Undefined",
            "slug": "undefined",
            "link": "#undefined",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "引用类型",
        "slug": "引用类型",
        "link": "#引用类型",
        "children": []
      }
    ],
    "path": "/js/data-types/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "类型转换",
    "headers": [
      {
        "level": 2,
        "title": "返回给定参数的类型",
        "slug": "返回给定参数的类型",
        "link": "#返回给定参数的类型",
        "children": []
      },
      {
        "level": 2,
        "title": "如何判断参数的数据类型是给定类型",
        "slug": "如何判断参数的数据类型是给定类型",
        "link": "#如何判断参数的数据类型是给定类型",
        "children": []
      },
      {
        "level": 2,
        "title": "基本包装类型的转换",
        "slug": "基本包装类型的转换",
        "link": "#基本包装类型的转换",
        "children": [
          {
            "level": 3,
            "title": "Boolean()/String()/Number() 函数",
            "slug": "boolean-string-number-函数",
            "link": "#boolean-string-number-函数",
            "children": []
          },
          {
            "level": 3,
            "title": "临时转换成基本包装类型",
            "slug": "临时转换成基本包装类型",
            "link": "#临时转换成基本包装类型",
            "children": []
          },
          {
            "level": 3,
            "title": "完全转换成基本包装类型",
            "slug": "完全转换成基本包装类型",
            "link": "#完全转换成基本包装类型",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "逻辑非操作符（!）",
        "slug": "逻辑非操作符",
        "link": "#逻辑非操作符",
        "children": []
      },
      {
        "level": 2,
        "title": "判断 == 的过程",
        "slug": "判断-的过程",
        "link": "#判断-的过程",
        "children": []
      },
      {
        "level": 2,
        "title": "对象转换成原始值",
        "slug": "对象转换成原始值",
        "link": "#对象转换成原始值",
        "children": [
          {
            "level": 3,
            "title": "将对象转换成字符串",
            "slug": "将对象转换成字符串",
            "link": "#将对象转换成字符串",
            "children": []
          },
          {
            "level": 3,
            "title": "将对象转换成数值",
            "slug": "将对象转换成数值",
            "link": "#将对象转换成数值",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "浅拷贝 VS 深拷贝",
        "slug": "浅拷贝-vs-深拷贝",
        "link": "#浅拷贝-vs-深拷贝",
        "children": [
          {
            "level": 3,
            "title": "浅拷贝",
            "slug": "浅拷贝",
            "link": "#浅拷贝",
            "children": []
          },
          {
            "level": 3,
            "title": "最简单的深拷贝",
            "slug": "最简单的深拷贝",
            "link": "#最简单的深拷贝",
            "children": []
          },
          {
            "level": 3,
            "title": "JSON 深拷贝",
            "slug": "json-深拷贝",
            "link": "#json-深拷贝",
            "children": []
          },
          {
            "level": 3,
            "title": "终极深拷贝",
            "slug": "终极深拷贝",
            "link": "#终极深拷贝",
            "children": []
          },
          {
            "level": 3,
            "title": "MessageChannel 深拷贝",
            "slug": "messagechannel-深拷贝",
            "link": "#messagechannel-深拷贝",
            "children": []
          },
          {
            "level": 3,
            "title": "社区解决方案",
            "slug": "社区解决方案",
            "link": "#社区解决方案",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "序列化 & 反序列化",
        "slug": "序列化-反序列化",
        "link": "#序列化-反序列化",
        "children": [
          {
            "level": 3,
            "title": "eval",
            "slug": "eval",
            "link": "#eval",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/data-types/type-conversion.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "未分类内容",
    "headers": [
      {
        "level": 2,
        "title": "编写原生 JavaScript 插件",
        "slug": "编写原生-javascript-插件",
        "link": "#编写原生-javascript-插件",
        "children": [
          {
            "level": 3,
            "title": "插件需要满足的条件",
            "slug": "插件需要满足的条件",
            "link": "#插件需要满足的条件",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/unclassified/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "函数式编程",
    "headers": [
      {
        "level": 2,
        "title": "纯函数（Pure Function）",
        "slug": "纯函数-pure-function",
        "link": "#纯函数-pure-function",
        "children": [
          {
            "level": 3,
            "title": "纯函数特性",
            "slug": "纯函数特性",
            "link": "#纯函数特性",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "高阶函数（Higher-order Function）",
        "slug": "高阶函数-higher-order-function",
        "link": "#高阶函数-higher-order-function",
        "children": []
      },
      {
        "level": 2,
        "title": "引用透明",
        "slug": "引用透明",
        "link": "#引用透明",
        "children": []
      },
      {
        "level": 2,
        "title": "函数式编程的特性",
        "slug": "函数式编程的特性",
        "link": "#函数式编程的特性",
        "children": []
      },
      {
        "level": 2,
        "title": "为什么函数式编程要求函数必须是纯的，不能有副作用？",
        "slug": "为什么函数式编程要求函数必须是纯的-不能有副作用",
        "link": "#为什么函数式编程要求函数必须是纯的-不能有副作用",
        "children": []
      },
      {
        "level": 2,
        "title": "函数式编程基本运算",
        "slug": "函数式编程基本运算",
        "link": "#函数式编程基本运算",
        "children": []
      }
    ],
    "path": "/js/unclassified/functional-programming.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "踩过的坑",
    "headers": [
      {
        "level": 2,
        "title": "video.js 7.6.2 里的 WeakMap 未经编译",
        "slug": "video-js-7-6-2-里的-weakmap-未经编译",
        "link": "#video-js-7-6-2-里的-weakmap-未经编译",
        "children": []
      }
    ],
    "path": "/js/unclassified/pitfall.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "WebAssemply",
    "headers": [
      {
        "level": 2,
        "title": "什么是 WebAssemply？",
        "slug": "什么是-webassemply",
        "link": "#什么是-webassemply",
        "children": []
      },
      {
        "level": 2,
        "title": "WebAssemply 与汇编语言的关系？",
        "slug": "webassemply-与汇编语言的关系",
        "link": "#webassemply-与汇编语言的关系",
        "children": []
      },
      {
        "level": 2,
        "title": "WebAssemply 与 JavaScript 的关系？",
        "slug": "webassemply-与-javascript-的关系",
        "link": "#webassemply-与-javascript-的关系",
        "children": []
      },
      {
        "level": 2,
        "title": "字节码",
        "slug": "字节码",
        "link": "#字节码",
        "children": []
      },
      {
        "level": 2,
        "title": "参考",
        "slug": "参考",
        "link": "#参考",
        "children": []
      }
    ],
    "path": "/js/web-assembly/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "uni-app",
    "headers": [
      {
        "level": 2,
        "title": "uni-app 学习记录",
        "slug": "uni-app-学习记录",
        "link": "#uni-app-学习记录",
        "children": [
          {
            "level": 3,
            "title": "为什么在 uni-app 的项目里可以直接使用 HTML 标签",
            "slug": "为什么在-uni-app-的项目里可以直接使用-html-标签",
            "link": "#为什么在-uni-app-的项目里可以直接使用-html-标签",
            "children": []
          },
          {
            "level": 3,
            "title": "原生微信小程序与 uni-app 里组件生命周期的对象关系",
            "slug": "原生微信小程序与-uni-app-里组件生命周期的对象关系",
            "link": "#原生微信小程序与-uni-app-里组件生命周期的对象关系",
            "children": []
          },
          {
            "level": 3,
            "title": "uni-app 之 Webpack 打包",
            "slug": "uni-app-之-webpack-打包",
            "link": "#uni-app-之-webpack-打包",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "踩过的坑",
        "slug": "踩过的坑",
        "link": "#踩过的坑",
        "children": [
          {
            "level": 3,
            "title": "父子组件销毁顺序",
            "slug": "父子组件销毁顺序",
            "link": "#父子组件销毁顺序",
            "children": []
          },
          {
            "level": 3,
            "title": "列表循环里的 key 不生效",
            "slug": "列表循环里的-key-不生效",
            "link": "#列表循环里的-key-不生效",
            "children": []
          }
        ]
      }
    ],
    "path": "/mini-program/uni-app/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "列表循环里的 key 不生效",
    "headers": [
      {
        "level": 2,
        "title": "测试示例",
        "slug": "测试示例",
        "link": "#测试示例",
        "children": []
      },
      {
        "level": 2,
        "title": "解决方案",
        "slug": "解决方案",
        "link": "#解决方案",
        "children": [
          {
            "level": 3,
            "title": "方案一",
            "slug": "方案一",
            "link": "#方案一",
            "children": []
          },
          {
            "level": 3,
            "title": "方案二",
            "slug": "方案二",
            "link": "#方案二",
            "children": []
          }
        ]
      }
    ],
    "path": "/mini-program/uni-app/v-for-key.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "运算符",
    "headers": [
      {
        "level": 2,
        "title": "幂运算符 **",
        "slug": "幂运算符",
        "link": "#幂运算符",
        "children": []
      },
      {
        "level": 2,
        "title": "按位运算符",
        "slug": "按位运算符",
        "link": "#按位运算符",
        "children": [
          {
            "level": 3,
            "title": "判断数值奇偶性",
            "slug": "判断数值奇偶性",
            "link": "#判断数值奇偶性",
            "children": []
          },
          {
            "level": 3,
            "title": "数值取整",
            "slug": "数值取整",
            "link": "#数值取整",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/operators/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "",
    "headers": [],
    "path": "/js/operators/bitwise-operators.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "微信小程序",
    "headers": [
      {
        "level": 2,
        "title": "独有特性",
        "slug": "独有特性",
        "link": "#独有特性",
        "children": [
          {
            "level": 3,
            "title": "分享卡片进入会创建新页面栈",
            "slug": "分享卡片进入会创建新页面栈",
            "link": "#分享卡片进入会创建新页面栈",
            "children": []
          },
          {
            "level": 3,
            "title": "WXS",
            "slug": "wxs",
            "link": "#wxs",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "生命周期",
        "slug": "生命周期",
        "link": "#生命周期",
        "children": [
          {
            "level": 3,
            "title": "父子组件生命周期顺序",
            "slug": "父子组件生命周期顺序",
            "link": "#父子组件生命周期顺序",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "疑难杂症",
        "slug": "疑难杂症",
        "link": "#疑难杂症",
        "children": [
          {
            "level": 3,
            "title": "如何隐藏 scroll-view 滚动条",
            "slug": "如何隐藏-scroll-view-滚动条",
            "link": "#如何隐藏-scroll-view-滚动条",
            "children": []
          },
          {
            "level": 3,
            "title": "禁止页面顶部下拉或底部上滑的弹性效果",
            "slug": "禁止页面顶部下拉或底部上滑的弹性效果",
            "link": "#禁止页面顶部下拉或底部上滑的弹性效果",
            "children": []
          },
          {
            "level": 3,
            "title": "1rpx 圆角边框缺失或不清晰",
            "slug": "_1rpx-圆角边框缺失或不清晰",
            "link": "#_1rpx-圆角边框缺失或不清晰",
            "children": []
          },
          {
            "level": 3,
            "title": "子组件上添加样式",
            "slug": "子组件上添加样式",
            "link": "#子组件上添加样式",
            "children": []
          },
          {
            "level": 3,
            "title": "包含自定义组件的元素的 opacity 的 transition 无效",
            "slug": "包含自定义组件的元素的-opacity-的-transition-无效",
            "link": "#包含自定义组件的元素的-opacity-的-transition-无效",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "开发",
        "slug": "开发",
        "link": "#开发",
        "children": [
          {
            "level": 3,
            "title": "反编译",
            "slug": "反编译",
            "link": "#反编译",
            "children": []
          },
          {
            "level": 3,
            "title": "小程序上传打包产物",
            "slug": "小程序上传打包产物",
            "link": "#小程序上传打包产物",
            "children": []
          },
          {
            "level": 3,
            "title": "miniprogram-api-typings",
            "slug": "miniprogram-api-typings",
            "link": "#miniprogram-api-typings",
            "children": []
          },
          {
            "level": 3,
            "title": "miniprogram-api-promise",
            "slug": "miniprogram-api-promise",
            "link": "#miniprogram-api-promise",
            "children": []
          }
        ]
      }
    ],
    "path": "/mini-program/weixin/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "自定义 Hooks",
    "headers": [
      {
        "level": 2,
        "title": "命名公约",
        "slug": "命名公约",
        "link": "#命名公约",
        "children": [
          {
            "level": 3,
            "title": "渲染期间调用的所有函数都应该以 use 前缀开头么？",
            "slug": "渲染期间调用的所有函数都应该以-use-前缀开头么",
            "link": "#渲染期间调用的所有函数都应该以-use-前缀开头么",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "使用场景",
        "slug": "使用场景",
        "link": "#使用场景",
        "children": [
          {
            "level": 3,
            "title": "什么时候使用自定义 Hook",
            "slug": "什么时候使用自定义-hook",
            "link": "#什么时候使用自定义-hook",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": [
          {
            "level": 3,
            "title": "自定义 Hook 共享的只是状态逻辑而不是状态本身",
            "slug": "自定义-hook-共享的只是状态逻辑而不是状态本身",
            "link": "#自定义-hook-共享的只是状态逻辑而不是状态本身",
            "children": []
          }
        ]
      }
    ],
    "path": "/react/hooks/custom-hooks.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "总览",
    "headers": [
      {
        "level": 2,
        "title": "Hooks 的使用",
        "slug": "hooks-的使用",
        "link": "#hooks-的使用",
        "children": [
          {
            "level": 3,
            "title": "依赖项",
            "slug": "依赖项",
            "link": "#依赖项",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": [
          {
            "level": 3,
            "title": "哪些 hooks 会触发组件的重新渲染？",
            "slug": "哪些-hooks-会触发组件的重新渲染",
            "link": "#哪些-hooks-会触发组件的重新渲染",
            "children": []
          },
          {
            "level": 3,
            "title": "哪些 hooks 不会触发组件的重新渲染？",
            "slug": "哪些-hooks-不会触发组件的重新渲染",
            "link": "#哪些-hooks-不会触发组件的重新渲染",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "React Hooks 原理",
        "slug": "react-hooks-原理",
        "link": "#react-hooks-原理",
        "children": []
      }
    ],
    "path": "/react/hooks/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "useContext",
    "headers": [
      {
        "level": 2,
        "title": "Context 的背景",
        "slug": "context-的背景",
        "link": "#context-的背景",
        "children": []
      },
      {
        "level": 2,
        "title": "用法",
        "slug": "用法",
        "link": "#用法",
        "children": [
          {
            "level": 3,
            "title": "provider 默认值与实际提供值",
            "slug": "provider-默认值与实际提供值",
            "link": "#provider-默认值与实际提供值",
            "children": []
          },
          {
            "level": 3,
            "title": "多次嵌套和覆盖 provider",
            "slug": "多次嵌套和覆盖-provider",
            "link": "#多次嵌套和覆盖-provider",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": [
          {
            "level": 3,
            "title": "当 useContext 接收到新值后，React 自动重新渲染使用了该特定 context 的所有子级",
            "slug": "当-usecontext-接收到新值后-react-自动重新渲染使用了该特定-context-的所有子级",
            "link": "#当-usecontext-接收到新值后-react-自动重新渲染使用了该特定-context-的所有子级",
            "children": []
          },
          {
            "level": 3,
            "title": "如何寻找 provider？",
            "slug": "如何寻找-provider",
            "link": "#如何寻找-provider",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "写在你使用 context 之前",
        "slug": "写在你使用-context-之前",
        "link": "#写在你使用-context-之前",
        "children": []
      },
      {
        "level": 2,
        "title": "Context 的使用场景",
        "slug": "context-的使用场景",
        "link": "#context-的使用场景",
        "children": []
      }
    ],
    "path": "/react/hooks/useContext.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "useEffect/useLayoutEffect",
    "headers": [
      {
        "level": 2,
        "title": "运行时机",
        "slug": "运行时机",
        "link": "#运行时机",
        "children": []
      },
      {
        "level": 2,
        "title": "依赖项",
        "slug": "依赖项",
        "link": "#依赖项",
        "children": []
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": [
          {
            "level": 3,
            "title": "使用 useEffect 尽量在 setup 函数里返回一个 cleanup 函数以在组件卸载时做一些清除操作",
            "slug": "使用-useeffect-尽量在-setup-函数里返回一个-cleanup-函数以在组件卸载时做一些清除操作",
            "link": "#使用-useeffect-尽量在-setup-函数里返回一个-cleanup-函数以在组件卸载时做一些清除操作",
            "children": []
          },
          {
            "level": 3,
            "title": "Effect 中的数据请求有什么好的替代方法",
            "slug": "effect-中的数据请求有什么好的替代方法",
            "link": "#effect-中的数据请求有什么好的替代方法",
            "children": []
          },
          {
            "level": 3,
            "title": "在 useLayoutEffect 的 setup 里修改了响应式字段",
            "slug": "在-uselayouteffect-的-setup-里修改了响应式字段",
            "link": "#在-uselayouteffect-的-setup-里修改了响应式字段",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "关于 useEffectEvent",
        "slug": "关于-useeffectevent",
        "link": "#关于-useeffectevent",
        "children": []
      },
      {
        "level": 2,
        "title": "扩展阅读",
        "slug": "扩展阅读",
        "link": "#扩展阅读",
        "children": [
          {
            "level": 3,
            "title": "你可能不需要 Effect",
            "slug": "你可能不需要-effect",
            "link": "#你可能不需要-effect",
            "children": []
          },
          {
            "level": 3,
            "title": "移除 Effect 依赖",
            "slug": "移除-effect-依赖",
            "link": "#移除-effect-依赖",
            "children": []
          }
        ]
      }
    ],
    "path": "/react/hooks/useEffect.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "useMemo/useCallback/memo",
    "headers": [
      {
        "level": 2,
        "title": "useMemo 与 useCallback 的区别",
        "slug": "usememo-与-usecallback-的区别",
        "link": "#usememo-与-usecallback-的区别",
        "children": []
      },
      {
        "level": 2,
        "title": "useMemo 和 memo 的区别",
        "slug": "usememo-和-memo-的区别",
        "link": "#usememo-和-memo-的区别",
        "children": []
      }
    ],
    "path": "/react/hooks/useMemo.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "useReducer",
    "headers": [
      {
        "level": 2,
        "title": "解惑",
        "slug": "解惑",
        "link": "#解惑",
        "children": [
          {
            "level": 3,
            "title": "为什么称之为 reducer?",
            "slug": "为什么称之为-reducer",
            "link": "#为什么称之为-reducer",
            "children": []
          },
          {
            "level": 3,
            "title": "对比 useState 和 useReducer",
            "slug": "对比-usestate-和-usereducer",
            "link": "#对比-usestate-和-usereducer",
            "children": []
          },
          {
            "level": 3,
            "title": "如何编写一个好的 reducer",
            "slug": "如何编写一个好的-reducer",
            "link": "#如何编写一个好的-reducer",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": [
          {
            "level": 3,
            "title": "state 是只读的，即使是对象或数组也不要尝试修改它",
            "slug": "state-是只读的-即使是对象或数组也不要尝试修改它",
            "link": "#state-是只读的-即使是对象或数组也不要尝试修改它",
            "children": []
          },
          {
            "level": 3,
            "title": "避免重新创建初始值",
            "slug": "避免重新创建初始值",
            "link": "#避免重新创建初始值",
            "children": []
          },
          {
            "level": 3,
            "title": "dispatch 了一个 action，不会改变当前渲染的 state",
            "slug": "dispatch-了一个-action-不会改变当前渲染的-state",
            "link": "#dispatch-了一个-action-不会改变当前渲染的-state",
            "children": []
          },
          {
            "level": 3,
            "title": "我收到了一个报错：“Too many re-renders”",
            "slug": "我收到了一个报错-too-many-re-renders",
            "link": "#我收到了一个报错-too-many-re-renders",
            "children": []
          },
          {
            "level": 3,
            "title": "使用 Immer 简化 reducer",
            "slug": "使用-immer-简化-reducer",
            "link": "#使用-immer-简化-reducer",
            "children": []
          }
        ]
      }
    ],
    "path": "/react/hooks/useReducer.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "useRef/forwardRef/useImperativeHandle",
    "headers": [
      {
        "level": 2,
        "title": "useRef 的好处",
        "slug": "useref-的好处",
        "link": "#useref-的好处",
        "children": []
      },
      {
        "level": 2,
        "title": "用法",
        "slug": "用法",
        "link": "#用法",
        "children": [
          {
            "level": 3,
            "title": "通过 ref 操作 DOM",
            "slug": "通过-ref-操作-dom",
            "link": "#通过-ref-操作-dom",
            "children": []
          },
          {
            "level": 3,
            "title": "将 DOM 节点暴露给父组件",
            "slug": "将-dom-节点暴露给父组件",
            "link": "#将-dom-节点暴露给父组件",
            "children": []
          },
          {
            "level": 3,
            "title": "在多个组件中转发 ref",
            "slug": "在多个组件中转发-ref",
            "link": "#在多个组件中转发-ref",
            "children": []
          },
          {
            "level": 3,
            "title": "暴露命令式句柄而非 DOM 节点",
            "slug": "暴露命令式句柄而非-dom-节点",
            "link": "#暴露命令式句柄而非-dom-节点",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": [
          {
            "level": 3,
            "title": "ref.current 是可变的，修改 ref.current，React 不会重新渲染组件",
            "slug": "ref-current-是可变的-修改-ref-current-react-不会重新渲染组件",
            "link": "#ref-current-是可变的-修改-ref-current-react-不会重新渲染组件",
            "children": []
          },
          {
            "level": 3,
            "title": "不要在渲染期间写入或者读取 ref.current",
            "slug": "不要在渲染期间写入或者读取-ref-current",
            "link": "#不要在渲染期间写入或者读取-ref-current",
            "children": []
          },
          {
            "level": 3,
            "title": "避免重复创建 ref 的内容",
            "slug": "避免重复创建-ref-的内容",
            "link": "#避免重复创建-ref-的内容",
            "children": []
          },
          {
            "level": 3,
            "title": "避免在初始化 useRef 之后进行 null 的类型检查",
            "slug": "避免在初始化-useref-之后进行-null-的类型检查",
            "link": "#避免在初始化-useref-之后进行-null-的类型检查",
            "children": []
          }
        ]
      }
    ],
    "path": "/react/hooks/useRef.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "useState",
    "headers": [
      {
        "level": 2,
        "title": "",
        "slug": "",
        "link": "#",
        "children": []
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": [
          {
            "level": 3,
            "title": "set 函数仅更新下一次渲染的状态变量",
            "slug": "set-函数仅更新下一次渲染的状态变量",
            "link": "#set-函数仅更新下一次渲染的状态变量",
            "children": []
          },
          {
            "level": 3,
            "title": "新值与旧值相同时跳过组件的重新渲染",
            "slug": "新值与旧值相同时跳过组件的重新渲染",
            "link": "#新值与旧值相同时跳过组件的重新渲染",
            "children": []
          },
          {
            "level": 3,
            "title": "批量处理状态更新",
            "slug": "批量处理状态更新",
            "link": "#批量处理状态更新",
            "children": []
          },
          {
            "level": 3,
            "title": "更新状态中的对象和数组",
            "slug": "更新状态中的对象和数组",
            "link": "#更新状态中的对象和数组",
            "children": []
          },
          {
            "level": 3,
            "title": "避免重复创建初始状态",
            "slug": "避免重复创建初始状态",
            "link": "#避免重复创建初始状态",
            "children": []
          },
          {
            "level": 3,
            "title": "使用 key 重置组件状态",
            "slug": "使用-key-重置组件状态",
            "link": "#使用-key-重置组件状态",
            "children": []
          },
          {
            "level": 3,
            "title": "如何将 state 设置成一个函数",
            "slug": "如何将-state-设置成一个函数",
            "link": "#如何将-state-设置成一个函数",
            "children": []
          },
          {
            "level": 3,
            "title": "使用 Immer 编写简洁的更新逻辑",
            "slug": "使用-immer-编写简洁的更新逻辑",
            "link": "#使用-immer-编写简洁的更新逻辑",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "原理说明",
        "slug": "原理说明",
        "link": "#原理说明",
        "children": [
          {
            "level": 3,
            "title": "如何更新 state 中的对象？",
            "slug": "如何更新-state-中的对象",
            "link": "#如何更新-state-中的对象",
            "children": []
          },
          {
            "level": 3,
            "title": "为什么在 React 中不推荐直接修改 state？",
            "slug": "为什么在-react-中不推荐直接修改-state",
            "link": "#为什么在-react-中不推荐直接修改-state",
            "children": []
          }
        ]
      }
    ],
    "path": "/react/hooks/useState.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "useSyncExternalStore",
    "headers": [
      {
        "level": 2,
        "title": "用法",
        "slug": "用法",
        "link": "#用法",
        "children": []
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": []
      },
      {
        "level": 2,
        "title": "重新渲染时要传入相同的 subscribe 参数，否则 subscribe 会被再次调用",
        "slug": "重新渲染时要传入相同的-subscribe-参数-否则-subscribe-会被再次调用",
        "link": "#重新渲染时要传入相同的-subscribe-参数-否则-subscribe-会被再次调用",
        "children": []
      },
      {
        "level": 2,
        "title": "getSnapshot 返回的 store 快照必须是不可变的",
        "slug": "getsnapshot-返回的-store-快照必须是不可变的",
        "link": "#getsnapshot-返回的-store-快照必须是不可变的",
        "children": []
      }
    ],
    "path": "/react/hooks/useSyncExternalStore.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "数据类型",
    "headers": [
      {
        "level": 2,
        "title": "类型分类",
        "slug": "类型分类",
        "link": "#类型分类",
        "children": [
          {
            "level": 3,
            "title": "基本类型",
            "slug": "基本类型",
            "link": "#基本类型",
            "children": []
          },
          {
            "level": 3,
            "title": "抽象类型",
            "slug": "抽象类型",
            "link": "#抽象类型",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "联合类型",
        "slug": "联合类型",
        "link": "#联合类型",
        "children": []
      },
      {
        "level": 2,
        "title": "交叉类型",
        "slug": "交叉类型",
        "link": "#交叉类型",
        "children": [
          {
            "level": 3,
            "title": "key 相同类型不同",
            "slug": "key-相同类型不同",
            "link": "#key-相同类型不同",
            "children": []
          }
        ]
      }
    ],
    "path": "/typescript/data-types/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "数组",
    "headers": [
      {
        "level": 2,
        "title": "数组类型声明",
        "slug": "数组类型声明",
        "link": "#数组类型声明",
        "children": [
          {
            "level": 3,
            "title": "数组项的类型为对象",
            "slug": "数组项的类型为对象",
            "link": "#数组项的类型为对象",
            "children": []
          },
          {
            "level": 3,
            "title": "数组项包含多种类型",
            "slug": "数组项包含多种类型",
            "link": "#数组项包含多种类型",
            "children": []
          },
          {
            "level": 3,
            "title": "获取数组全部元素的类型",
            "slug": "获取数组全部元素的类型",
            "link": "#获取数组全部元素的类型",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "元组",
        "slug": "元组",
        "link": "#元组",
        "children": [
          {
            "level": 3,
            "title": "具名元组",
            "slug": "具名元组",
            "link": "#具名元组",
            "children": []
          }
        ]
      }
    ],
    "path": "/typescript/data-types/array.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "类",
    "headers": [
      {
        "level": 2,
        "title": "protected",
        "slug": "protected",
        "link": "#protected",
        "children": []
      },
      {
        "level": 2,
        "title": "类实现接口",
        "slug": "类实现接口",
        "link": "#类实现接口",
        "children": []
      },
      {
        "level": 2,
        "title": "接口描述类的类型",
        "slug": "接口描述类的类型",
        "link": "#接口描述类的类型",
        "children": []
      },
      {
        "level": 2,
        "title": "作为接口的类",
        "slug": "作为接口的类",
        "link": "#作为接口的类",
        "children": []
      },
      {
        "level": 2,
        "title": "抽象类",
        "slug": "抽象类",
        "link": "#抽象类",
        "children": []
      },
      {
        "level": 2,
        "title": "接口继承类",
        "slug": "接口继承类",
        "link": "#接口继承类",
        "children": []
      }
    ],
    "path": "/typescript/data-types/class.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "枚举",
    "headers": [
      {
        "level": 2,
        "title": "编译后为对象",
        "slug": "编译后为对象",
        "link": "#编译后为对象",
        "children": []
      },
      {
        "level": 2,
        "title": "常量枚举",
        "slug": "常量枚举",
        "link": "#常量枚举",
        "children": []
      },
      {
        "level": 2,
        "title": "计算成员",
        "slug": "计算成员",
        "link": "#计算成员",
        "children": []
      }
    ],
    "path": "/typescript/data-types/enum.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "函数",
    "headers": [
      {
        "level": 2,
        "title": "声明函数类型",
        "slug": "声明函数类型",
        "link": "#声明函数类型",
        "children": [
          {
            "level": 3,
            "title": "方式一: type",
            "slug": "方式一-type",
            "link": "#方式一-type",
            "children": []
          },
          {
            "level": 3,
            "title": "方式二: interface",
            "slug": "方式二-interface",
            "link": "#方式二-interface",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "函数类型兼容",
        "slug": "函数类型兼容",
        "link": "#函数类型兼容",
        "children": [
          {
            "level": 3,
            "title": "参数兼容",
            "slug": "参数兼容",
            "link": "#参数兼容",
            "children": []
          },
          {
            "level": 3,
            "title": "返回值兼容",
            "slug": "返回值兼容",
            "link": "#返回值兼容",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "函数类型的双向推导",
        "slug": "函数类型的双向推导",
        "link": "#函数类型的双向推导",
        "children": []
      }
    ],
    "path": "/typescript/data-types/function.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "对象类型",
    "headers": [
      {
        "level": 2,
        "title": "索引签名",
        "slug": "索引签名",
        "link": "#索引签名",
        "children": []
      },
      {
        "level": 2,
        "title": "接口里的方法",
        "slug": "接口里的方法",
        "link": "#接口里的方法",
        "children": []
      },
      {
        "level": 2,
        "title": "用接口描述函数",
        "slug": "用接口描述函数",
        "link": "#用接口描述函数",
        "children": []
      },
      {
        "level": 2,
        "title": "带属性声明的函数类型",
        "slug": "带属性声明的函数类型",
        "link": "#带属性声明的函数类型",
        "children": []
      },
      {
        "level": 2,
        "title": "构造函数",
        "slug": "构造函数",
        "link": "#构造函数",
        "children": [
          {
            "level": 3,
            "title": "纯对象",
            "slug": "纯对象",
            "link": "#纯对象",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "接口继承",
        "slug": "接口继承",
        "link": "#接口继承",
        "children": []
      },
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": [
          {
            "level": 3,
            "title": "解构赋值内无法添加类型声明",
            "slug": "解构赋值内无法添加类型声明",
            "link": "#解构赋值内无法添加类型声明",
            "children": []
          }
        ]
      }
    ],
    "path": "/typescript/data-types/object-type.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "基本类型",
    "headers": [
      {
        "level": 2,
        "title": "类型兼容性",
        "slug": "类型兼容性",
        "link": "#类型兼容性",
        "children": []
      },
      {
        "level": 2,
        "title": "void/never",
        "slug": "void-never",
        "link": "#void-never",
        "children": []
      },
      {
        "level": 2,
        "title": "any/unknown",
        "slug": "any-unknown",
        "link": "#any-unknown",
        "children": [
          {
            "level": 3,
            "title": "any",
            "slug": "any",
            "link": "#any",
            "children": []
          },
          {
            "level": 3,
            "title": "unknown",
            "slug": "unknown",
            "link": "#unknown",
            "children": []
          },
          {
            "level": 3,
            "title": "any 和 unknown 的对比",
            "slug": "any-和-unknown-的对比",
            "link": "#any-和-unknown-的对比",
            "children": []
          },
          {
            "level": 3,
            "title": "与 void 和 never 的对比",
            "slug": "与-void-和-never-的对比",
            "link": "#与-void-和-never-的对比",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      }
    ],
    "path": "/typescript/data-types/primitive-types.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "装饰器",
    "headers": [
      {
        "level": 2,
        "title": "类装饰器",
        "slug": "类装饰器",
        "link": "#类装饰器",
        "children": []
      },
      {
        "level": 2,
        "title": "方法装饰器",
        "slug": "方法装饰器",
        "link": "#方法装饰器",
        "children": []
      },
      {
        "level": 2,
        "title": "访问器装饰器",
        "slug": "访问器装饰器",
        "link": "#访问器装饰器",
        "children": []
      },
      {
        "level": 2,
        "title": "参数装饰器",
        "slug": "参数装饰器",
        "link": "#参数装饰器",
        "children": []
      }
    ],
    "path": "/typescript/decorators/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "模块及模块解析",
    "headers": [
      {
        "level": 2,
        "title": "模块",
        "slug": "模块",
        "link": "#模块",
        "children": [
          {
            "level": 3,
            "title": "export = 和 import = require()",
            "slug": "export-和-import-require",
            "link": "#export-和-import-require",
            "children": []
          },
          {
            "level": 3,
            "title": "可选的模块加载",
            "slug": "可选的模块加载",
            "link": "#可选的模块加载",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "模块解析",
        "slug": "模块解析",
        "link": "#模块解析",
        "children": []
      }
    ],
    "path": "/typescript/module-system/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "类型操作",
    "headers": [
      {
        "level": 2,
        "title": "keyof",
        "slug": "keyof",
        "link": "#keyof",
        "children": []
      },
      {
        "level": 2,
        "title": "条件类型 Conditional Types",
        "slug": "条件类型-conditional-types",
        "link": "#条件类型-conditional-types",
        "children": [
          {
            "level": 3,
            "title": "infer 类型推断",
            "slug": "infer-类型推断",
            "link": "#infer-类型推断",
            "children": []
          },
          {
            "level": 3,
            "title": "可分配的条件类型",
            "slug": "可分配的条件类型",
            "link": "#可分配的条件类型",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "映射类型 Mapped Types",
        "slug": "映射类型-mapped-types",
        "link": "#映射类型-mapped-types",
        "children": [
          {
            "level": 3,
            "title": "映射修饰符",
            "slug": "映射修饰符",
            "link": "#映射修饰符",
            "children": []
          },
          {
            "level": 3,
            "title": "键名重命名 as",
            "slug": "键名重命名-as",
            "link": "#键名重命名-as",
            "children": []
          }
        ]
      }
    ],
    "path": "/typescript/type-manipulation/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "TypeScript 类型体操",
    "headers": [
      {
        "level": 2,
        "title": "简单",
        "slug": "简单",
        "link": "#简单",
        "children": [
          {
            "level": 3,
            "title": "实现 Pick",
            "slug": "实现-pick",
            "link": "#实现-pick",
            "children": []
          },
          {
            "level": 3,
            "title": "实现 Readonly",
            "slug": "实现-readonly",
            "link": "#实现-readonly",
            "children": []
          },
          {
            "level": 3,
            "title": "元组转换为对象",
            "slug": "元组转换为对象",
            "link": "#元组转换为对象",
            "children": []
          },
          {
            "level": 3,
            "title": "第一个元素",
            "slug": "第一个元素",
            "link": "#第一个元素",
            "children": []
          },
          {
            "level": 3,
            "title": "Exclude",
            "slug": "exclude",
            "link": "#exclude",
            "children": []
          },
          {
            "level": 3,
            "title": "Awaited",
            "slug": "awaited",
            "link": "#awaited",
            "children": []
          },
          {
            "level": 3,
            "title": "If",
            "slug": "if",
            "link": "#if",
            "children": []
          },
          {
            "level": 3,
            "title": "Concat",
            "slug": "concat",
            "link": "#concat",
            "children": []
          },
          {
            "level": 3,
            "title": "Includes",
            "slug": "includes",
            "link": "#includes",
            "children": []
          },
          {
            "level": 3,
            "title": "Push/Unshift",
            "slug": "push-unshift",
            "link": "#push-unshift",
            "children": []
          },
          {
            "level": 3,
            "title": "Parameters",
            "slug": "parameters",
            "link": "#parameters",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "中等",
        "slug": "中等",
        "link": "#中等",
        "children": [
          {
            "level": 3,
            "title": "Get Return Type",
            "slug": "get-return-type",
            "link": "#get-return-type",
            "children": []
          },
          {
            "level": 3,
            "title": "Omit",
            "slug": "omit",
            "link": "#omit",
            "children": []
          }
        ]
      }
    ],
    "path": "/typescript/type-manipulation/type-challenges.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "类型操作符",
    "headers": [
      {
        "level": 2,
        "title": "typeof",
        "slug": "typeof",
        "link": "#typeof",
        "children": []
      },
      {
        "level": 2,
        "title": "keyof 索引查询",
        "slug": "keyof-索引查询",
        "link": "#keyof-索引查询",
        "children": [
          {
            "level": 3,
            "title": "keyof any",
            "slug": "keyof-any",
            "link": "#keyof-any",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "extends",
        "slug": "extends",
        "link": "#extends",
        "children": []
      },
      {
        "level": 2,
        "title": "infer",
        "slug": "infer",
        "link": "#infer",
        "children": []
      },
      {
        "level": 2,
        "title": "操作符",
        "slug": "操作符",
        "link": "#操作符",
        "children": []
      }
    ],
    "path": "/typescript/type-manipulation/type-operators.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "类型系统",
    "headers": [
      {
        "level": 2,
        "title": "索引访问",
        "slug": "索引访问",
        "link": "#索引访问",
        "children": [
          {
            "level": 3,
            "title": "索引不存在的属性",
            "slug": "索引不存在的属性",
            "link": "#索引不存在的属性",
            "children": []
          },
          {
            "level": 3,
            "title": "获取数组元素的类型",
            "slug": "获取数组元素的类型",
            "link": "#获取数组元素的类型",
            "children": []
          },
          {
            "level": 3,
            "title": "T[K]",
            "slug": "t-k",
            "link": "#t-k",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "类型推导",
        "slug": "类型推导",
        "link": "#类型推导",
        "children": []
      },
      {
        "level": 2,
        "title": "类型断言",
        "slug": "类型断言",
        "link": "#类型断言",
        "children": []
      },
      {
        "level": 2,
        "title": "类型守卫",
        "slug": "类型守卫",
        "link": "#类型守卫",
        "children": [
          {
            "level": 3,
            "title": "类型收窄",
            "slug": "类型收窄",
            "link": "#类型收窄",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "结构化类型",
        "slug": "结构化类型",
        "link": "#结构化类型",
        "children": []
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      }
    ],
    "path": "/typescript/type-system/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "泛型",
    "headers": [
      {
        "level": 2,
        "title": "泛型类",
        "slug": "泛型类",
        "link": "#泛型类",
        "children": [
          {
            "level": 3,
            "title": "静态成员",
            "slug": "静态成员",
            "link": "#静态成员",
            "children": []
          }
        ]
      }
    ],
    "path": "/typescript/type-system/generics.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "属性修饰符",
    "headers": [
      {
        "level": 2,
        "title": "readonly",
        "slug": "readonly",
        "link": "#readonly",
        "children": []
      }
    ],
    "path": "/typescript/type-system/property-modifiers.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "内置工具类型",
    "headers": [
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      },
      {
        "level": 2,
        "title": "Partial",
        "slug": "partial",
        "link": "#partial",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例",
            "link": "#示例",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现",
            "link": "#实现",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Required",
        "slug": "required",
        "link": "#required",
        "children": []
      },
      {
        "level": 2,
        "title": "Readonly",
        "slug": "readonly",
        "link": "#readonly",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例-1",
            "link": "#示例-1",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现-1",
            "link": "#实现-1",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Record<Keys, Type>",
        "slug": "record-keys-type",
        "link": "#record-keys-type",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例-2",
            "link": "#示例-2",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现-2",
            "link": "#实现-2",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Extract<Type, Union>",
        "slug": "extract-type-union",
        "link": "#extract-type-union",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例-3",
            "link": "#示例-3",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现-3",
            "link": "#实现-3",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Exclude<Type, ExcludedUnion>",
        "slug": "exclude-type-excludedunion",
        "link": "#exclude-type-excludedunion",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例-4",
            "link": "#示例-4",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现-4",
            "link": "#实现-4",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Pick<Type, Keys>",
        "slug": "pick-type-keys",
        "link": "#pick-type-keys",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例-5",
            "link": "#示例-5",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现-5",
            "link": "#实现-5",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Omit<Type, Keys>",
        "slug": "omit-type-keys",
        "link": "#omit-type-keys",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例-6",
            "link": "#示例-6",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现-6",
            "link": "#实现-6",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Parameters",
        "slug": "parameters",
        "link": "#parameters",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例-7",
            "link": "#示例-7",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现-7",
            "link": "#实现-7",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "ConstructorParameters",
        "slug": "constructorparameters",
        "link": "#constructorparameters",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例-8",
            "link": "#示例-8",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现-8",
            "link": "#实现-8",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "InstanceType",
        "slug": "instancetype",
        "link": "#instancetype",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例-9",
            "link": "#示例-9",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现-9",
            "link": "#实现-9",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "ReturnType",
        "slug": "returntype",
        "link": "#returntype",
        "children": [
          {
            "level": 3,
            "title": "示例",
            "slug": "示例-10",
            "link": "#示例-10",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现-10",
            "link": "#实现-10",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "TypeScript Compiler 内部实现的类型",
        "slug": "typescript-compiler-内部实现的类型",
        "link": "#typescript-compiler-内部实现的类型",
        "children": [
          {
            "level": 3,
            "title": "Uppercase",
            "slug": "uppercase",
            "link": "#uppercase",
            "children": []
          },
          {
            "level": 3,
            "title": "Lowercase",
            "slug": "lowercase",
            "link": "#lowercase",
            "children": []
          },
          {
            "level": 3,
            "title": "Capitalize",
            "slug": "capitalize",
            "link": "#capitalize",
            "children": []
          },
          {
            "level": 3,
            "title": "Uncapitalize",
            "slug": "uncapitalize",
            "link": "#uncapitalize",
            "children": []
          }
        ]
      }
    ],
    "path": "/typescript/type-system/utility-types.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "编译",
    "headers": [
      {
        "level": 2,
        "title": "编译时将包含哪些 ts 文件",
        "slug": "编译时将包含哪些-ts-文件",
        "link": "#编译时将包含哪些-ts-文件",
        "children": []
      },
      {
        "level": 2,
        "title": "重难点说明",
        "slug": "重难点说明",
        "link": "#重难点说明",
        "children": [
          {
            "level": 3,
            "title": "类型去除",
            "slug": "类型去除",
            "link": "#类型去除",
            "children": []
          },
          {
            "level": 3,
            "title": "在声明文件里有声明但在运行时里不一定有对应实现",
            "slug": "在声明文件里有声明但在运行时里不一定有对应实现",
            "link": "#在声明文件里有声明但在运行时里不一定有对应实现",
            "children": []
          },
          {
            "level": 3,
            "title": "为什么 TypeScript 文件里的 import 即可以导入模块的实现也能导入模块的类型声明文件？",
            "slug": "为什么-typescript-文件里的-import-即可以导入模块的实现也能导入模块的类型声明文件",
            "link": "#为什么-typescript-文件里的-import-即可以导入模块的实现也能导入模块的类型声明文件",
            "children": []
          },
          {
            "level": 3,
            "title": "为什么 TypeScript 代码里的 import 语句即可以引入值也可以引入类型声明?",
            "slug": "为什么-typescript-代码里的-import-语句即可以引入值也可以引入类型声明",
            "link": "#为什么-typescript-代码里的-import-语句即可以引入值也可以引入类型声明",
            "children": []
          }
        ]
      }
    ],
    "path": "/typescript/typescript-compilation/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "声明文件",
    "headers": [
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      },
      {
        "level": 2,
        "title": "零散知识点",
        "slug": "零散知识点",
        "link": "#零散知识点",
        "children": []
      },
      {
        "level": 2,
        "title": "全局声明文件",
        "slug": "全局声明文件",
        "link": "#全局声明文件",
        "children": [
          {
            "level": 3,
            "title": "引入全局声明文件",
            "slug": "引入全局声明文件",
            "link": "#引入全局声明文件",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "第三方声明文件",
        "slug": "第三方声明文件",
        "link": "#第三方声明文件",
        "children": [
          {
            "level": 3,
            "title": "@types 模块下的声明文件",
            "slug": "types-模块下的声明文件",
            "link": "#types-模块下的声明文件",
            "children": []
          },
          {
            "level": 3,
            "title": "模块绑定的声明文件",
            "slug": "模块绑定的声明文件",
            "link": "#模块绑定的声明文件",
            "children": []
          },
          {
            "level": 3,
            "title": "为第三方模块编写声明文件",
            "slug": "为第三方模块编写声明文件",
            "link": "#为第三方模块编写声明文件",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "文章里的其他内容",
        "slug": "文章里的其他内容",
        "link": "#文章里的其他内容",
        "children": []
      }
    ],
    "path": "/typescript/usage/declaration-files.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "发布",
    "headers": [],
    "path": "/typescript/usage/publish.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "tsconfig.json",
    "headers": [
      {
        "level": 2,
        "title": "根级选项",
        "slug": "根级选项",
        "link": "#根级选项",
        "children": [
          {
            "level": 3,
            "title": "types",
            "slug": "types",
            "link": "#types",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "编译选项",
        "slug": "编译选项",
        "link": "#编译选项",
        "children": [
          {
            "level": 3,
            "title": "outFile",
            "slug": "outfile",
            "link": "#outfile",
            "children": []
          },
          {
            "level": 3,
            "title": "paths",
            "slug": "paths",
            "link": "#paths",
            "children": []
          },
          {
            "level": 3,
            "title": "allowJs",
            "slug": "allowjs",
            "link": "#allowjs",
            "children": []
          },
          {
            "level": 3,
            "title": "checkJs",
            "slug": "checkjs",
            "link": "#checkjs",
            "children": []
          },
          {
            "level": 3,
            "title": "baseUrl",
            "slug": "baseurl",
            "link": "#baseurl",
            "children": []
          },
          {
            "level": 3,
            "title": "extends",
            "slug": "extends",
            "link": "#extends",
            "children": []
          }
        ]
      }
    ],
    "path": "/typescript/usage/tsconfig-json.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "整体说明",
    "headers": [
      {
        "level": 2,
        "title": "Vue 版本",
        "slug": "vue-版本",
        "link": "#vue-版本",
        "children": []
      },
      {
        "level": 2,
        "title": "技巧",
        "slug": "技巧",
        "link": "#技巧",
        "children": [
          {
            "level": 3,
            "title": "判断深层次的属性是否存在",
            "slug": "判断深层次的属性是否存在",
            "link": "#判断深层次的属性是否存在",
            "children": []
          },
          {
            "level": 3,
            "title": "代码格式",
            "slug": "代码格式",
            "link": "#代码格式",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "element-ui",
        "slug": "element-ui",
        "link": "#element-ui",
        "children": [
          {
            "level": 3,
            "title": "el-input 支持 enter 事件",
            "slug": "el-input-支持-enter-事件",
            "link": "#el-input-支持-enter-事件",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vue 构造函数",
    "headers": [
      {
        "level": 2,
        "title": "核心版 Vue",
        "slug": "核心版-vue",
        "link": "#核心版-vue",
        "children": [
          {
            "level": 3,
            "title": "基础核心版 Vue",
            "slug": "基础核心版-vue",
            "link": "#基础核心版-vue",
            "children": []
          },
          {
            "level": 3,
            "title": "完整核心版 Vue",
            "slug": "完整核心版-vue",
            "link": "#完整核心版-vue",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Web 版 Vue",
        "slug": "web-版-vue",
        "link": "#web-版-vue",
        "children": [
          {
            "level": 3,
            "title": "Web 初次处理版 Vue",
            "slug": "web-初次处理版-vue",
            "link": "#web-初次处理版-vue",
            "children": []
          },
          {
            "level": 3,
            "title": "Web 最终导出版 Vue",
            "slug": "web-最终导出版-vue",
            "link": "#web-最终导出版-vue",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "释疑",
        "slug": "释疑",
        "link": "#释疑",
        "children": [
          {
            "level": 3,
            "title": "Vue 为什么不用 Class 实现 ？",
            "slug": "vue-为什么不用-class-实现",
            "link": "#vue-为什么不用-class-实现",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/vue-constructor.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vue 2 和 Vue 3 响应式使用的差异",
    "headers": [
      {
        "level": 2,
        "title": "动态添加/删除属性",
        "slug": "动态添加-删除属性",
        "link": "#动态添加-删除属性",
        "children": []
      }
    ],
    "path": "/vue3/reactivity/use-difference.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "房地产",
    "headers": [
      {
        "level": 2,
        "title": "五证",
        "slug": "五证",
        "link": "#五证",
        "children": []
      },
      {
        "level": 2,
        "title": "限竞房",
        "slug": "限竞房",
        "link": "#限竞房",
        "children": [
          {
            "level": 3,
            "title": "北京限竞房",
            "slug": "北京限竞房",
            "link": "#北京限竞房",
            "children": []
          },
          {
            "level": 3,
            "title": "限竞房缺点",
            "slug": "限竞房缺点",
            "link": "#限竞房缺点",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "限竞房转化为共有产权房",
        "slug": "限竞房转化为共有产权房",
        "link": "#限竞房转化为共有产权房",
        "children": [
          {
            "level": 3,
            "title": "限竞房户型选择",
            "slug": "限竞房户型选择",
            "link": "#限竞房户型选择",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "棚改货币化",
        "slug": "棚改货币化",
        "link": "#棚改货币化",
        "children": []
      },
      {
        "level": 2,
        "title": "市中心老房子到底还能不能买？",
        "slug": "市中心老房子到底还能不能买",
        "link": "#市中心老房子到底还能不能买",
        "children": [
          {
            "level": 3,
            "title": "老房子=土地的钱",
            "slug": "老房子-土地的钱",
            "link": "#老房子-土地的钱",
            "children": []
          },
          {
            "level": 3,
            "title": "市中心的土地会不会变的更值钱？",
            "slug": "市中心的土地会不会变的更值钱",
            "link": "#市中心的土地会不会变的更值钱",
            "children": []
          },
          {
            "level": 3,
            "title": "为什么会出现这样巨大的不同？",
            "slug": "为什么会出现这样巨大的不同",
            "link": "#为什么会出现这样巨大的不同",
            "children": []
          }
        ]
      }
    ],
    "path": "/wander/house/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "各个楼盘对比",
    "headers": [],
    "path": "/wander/house/comparison.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "天涯神贴",
    "headers": [
      {
        "level": 2,
        "title": "【反驳】房地产必须下降的若干义正言辞的理由",
        "slug": "【反驳】房地产必须下降的若干义正言辞的理由",
        "link": "#【反驳】房地产必须下降的若干义正言辞的理由",
        "children": []
      },
      {
        "level": 2,
        "title": "2010年房地产调控的真实意图",
        "slug": "_2010年房地产调控的真实意图",
        "link": "#_2010年房地产调控的真实意图",
        "children": []
      },
      {
        "level": 2,
        "title": "ZF 为什么要垄断房价？",
        "slug": "zf-为什么要垄断房价",
        "link": "#zf-为什么要垄断房价",
        "children": [
          {
            "level": 3,
            "title": "降低风险",
            "slug": "降低风险",
            "link": "#降低风险",
            "children": []
          },
          {
            "level": 3,
            "title": "社会稳定",
            "slug": "社会稳定",
            "link": "#社会稳定",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "ZF 如何垄断房价？",
        "slug": "zf-如何垄断房价",
        "link": "#zf-如何垄断房价",
        "children": []
      },
      {
        "level": 2,
        "title": "房地产游戏模式的三个环节",
        "slug": "房地产游戏模式的三个环节",
        "link": "#房地产游戏模式的三个环节",
        "children": []
      },
      {
        "level": 2,
        "title": "房产税",
        "slug": "房产税",
        "link": "#房产税",
        "children": [
          {
            "level": 3,
            "title": "ZF 对房产税的问题还是慎重的",
            "slug": "zf-对房产税的问题还是慎重的",
            "link": "#zf-对房产税的问题还是慎重的",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "房地产的现状",
        "slug": "房地产的现状",
        "link": "#房地产的现状",
        "children": []
      },
      {
        "level": 2,
        "title": "ZF 无需考虑民生问题吗?",
        "slug": "zf-无需考虑民生问题吗",
        "link": "#zf-无需考虑民生问题吗",
        "children": []
      },
      {
        "level": 2,
        "title": "公租房",
        "slug": "公租房",
        "link": "#公租房",
        "children": [
          {
            "level": 3,
            "title": "DFZF 如何解决建设公租房的钱的问题？",
            "slug": "dfzf-如何解决建设公租房的钱的问题",
            "link": "#dfzf-如何解决建设公租房的钱的问题",
            "children": []
          },
          {
            "level": 3,
            "title": "解决体制内员工的住房问题",
            "slug": "解决体制内员工的住房问题",
            "link": "#解决体制内员工的住房问题",
            "children": []
          },
          {
            "level": 3,
            "title": "解决体制外人员的住房问题",
            "slug": "解决体制外人员的住房问题",
            "link": "#解决体制外人员的住房问题",
            "children": []
          },
          {
            "level": 3,
            "title": "公租房的定价",
            "slug": "公租房的定价",
            "link": "#公租房的定价",
            "children": []
          },
          {
            "level": 3,
            "title": "未来",
            "slug": "未来",
            "link": "#未来",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "2010年房地产调控后的现象",
        "slug": "_2010年房地产调控后的现象",
        "link": "#_2010年房地产调控后的现象",
        "children": [
          {
            "level": 3,
            "title": "08年调控和10年调控结果对比",
            "slug": "_08年调控和10年调控结果对比",
            "link": "#_08年调控和10年调控结果对比",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "各城市房价分析",
        "slug": "各城市房价分析",
        "link": "#各城市房价分析",
        "children": [
          {
            "level": 3,
            "title": "石家庄、长沙",
            "slug": "石家庄、长沙",
            "link": "#石家庄、长沙",
            "children": []
          },
          {
            "level": 3,
            "title": "昆明",
            "slug": "昆明",
            "link": "#昆明",
            "children": []
          },
          {
            "level": 3,
            "title": "广州",
            "slug": "广州",
            "link": "#广州",
            "children": []
          },
          {
            "level": 3,
            "title": "海南",
            "slug": "海南",
            "link": "#海南",
            "children": []
          },
          {
            "level": 3,
            "title": "合肥",
            "slug": "合肥",
            "link": "#合肥",
            "children": []
          },
          {
            "level": 3,
            "title": "广州、佛山",
            "slug": "广州、佛山",
            "link": "#广州、佛山",
            "children": []
          },
          {
            "level": 3,
            "title": "杭州",
            "slug": "杭州",
            "link": "#杭州",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "【反驳】中国的土地可不稀缺，只是没开发罢了",
        "slug": "【反驳】中国的土地可不稀缺-只是没开发罢了",
        "link": "#【反驳】中国的土地可不稀缺-只是没开发罢了",
        "children": []
      },
      {
        "level": 2,
        "title": "资金为什么不能流向农产品？",
        "slug": "资金为什么不能流向农产品",
        "link": "#资金为什么不能流向农产品",
        "children": []
      },
      {
        "level": 2,
        "title": "体制外的都市中下层群众才是高房价的受害者",
        "slug": "体制外的都市中下层群众才是高房价的受害者",
        "link": "#体制外的都市中下层群众才是高房价的受害者",
        "children": []
      },
      {
        "level": 2,
        "title": "租房，及其发展趋势",
        "slug": "租房-及其发展趋势",
        "link": "#租房-及其发展趋势",
        "children": []
      },
      {
        "level": 2,
        "title": "粮食问题，及其与房屋对比",
        "slug": "粮食问题-及其与房屋对比",
        "link": "#粮食问题-及其与房屋对比",
        "children": []
      },
      {
        "level": 2,
        "title": "为什么资金不流向实体经济？",
        "slug": "为什么资金不流向实体经济",
        "link": "#为什么资金不流向实体经济",
        "children": [
          {
            "level": 3,
            "title": "房地产是资本市场还是实体经济？",
            "slug": "房地产是资本市场还是实体经济",
            "link": "#房地产是资本市场还是实体经济",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "买房要量力而行",
        "slug": "买房要量力而行",
        "link": "#买房要量力而行",
        "children": []
      },
      {
        "level": 2,
        "title": "为什么中国的物价高于美国？",
        "slug": "为什么中国的物价高于美国",
        "link": "#为什么中国的物价高于美国",
        "children": [
          {
            "level": 3,
            "title": "货币贬值",
            "slug": "货币贬值",
            "link": "#货币贬值",
            "children": []
          },
          {
            "level": 3,
            "title": "物价高的原因",
            "slug": "物价高的原因",
            "link": "#物价高的原因",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "房价会不会跌？",
        "slug": "房价会不会跌",
        "link": "#房价会不会跌",
        "children": []
      },
      {
        "level": 2,
        "title": "通货膨胀就是减缓灭亡时间的最好良药",
        "slug": "通货膨胀就是减缓灭亡时间的最好良药",
        "link": "#通货膨胀就是减缓灭亡时间的最好良药",
        "children": [
          {
            "level": 3,
            "title": "明朝灭亡的原因",
            "slug": "明朝灭亡的原因",
            "link": "#明朝灭亡的原因",
            "children": []
          },
          {
            "level": 3,
            "title": "鸦片战争",
            "slug": "鸦片战争",
            "link": "#鸦片战争",
            "children": []
          },
          {
            "level": 3,
            "title": "为什么说通货膨胀是良药？",
            "slug": "为什么说通货膨胀是良药",
            "link": "#为什么说通货膨胀是良药",
            "children": []
          },
          {
            "level": 3,
            "title": "房地产崛起，成为消灭老百姓手中的流动性的最好工具",
            "slug": "房地产崛起-成为消灭老百姓手中的流动性的最好工具",
            "link": "#房地产崛起-成为消灭老百姓手中的流动性的最好工具",
            "children": []
          },
          {
            "level": 3,
            "title": "ZF 希望的抗通胀的方式",
            "slug": "zf-希望的抗通胀的方式",
            "link": "#zf-希望的抗通胀的方式",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "房产投资 的方向",
        "slug": "房产投资-的方向",
        "link": "#房产投资-的方向",
        "children": [
          {
            "level": 3,
            "title": "原则",
            "slug": "原则",
            "link": "#原则",
            "children": []
          },
          {
            "level": 3,
            "title": "时机",
            "slug": "时机",
            "link": "#时机",
            "children": []
          },
          {
            "level": 3,
            "title": "类型",
            "slug": "类型",
            "link": "#类型",
            "children": []
          },
          {
            "level": 3,
            "title": "位置",
            "slug": "位置",
            "link": "#位置",
            "children": []
          },
          {
            "level": 3,
            "title": "大小",
            "slug": "大小",
            "link": "#大小",
            "children": []
          },
          {
            "level": 3,
            "title": "朝向",
            "slug": "朝向",
            "link": "#朝向",
            "children": []
          },
          {
            "level": 3,
            "title": "物业",
            "slug": "物业",
            "link": "#物业",
            "children": []
          },
          {
            "level": 3,
            "title": "新房、老公房",
            "slug": "新房、老公房",
            "link": "#新房、老公房",
            "children": []
          },
          {
            "level": 3,
            "title": "市中心老旧二手房",
            "slug": "市中心老旧二手房",
            "link": "#市中心老旧二手房",
            "children": []
          },
          {
            "level": 3,
            "title": "政府搬迁",
            "slug": "政府搬迁",
            "link": "#政府搬迁",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "拆迁",
        "slug": "拆迁",
        "link": "#拆迁",
        "children": [
          {
            "level": 3,
            "title": "拆迁补偿",
            "slug": "拆迁补偿",
            "link": "#拆迁补偿",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "房产双轨制",
        "slug": "房产双轨制",
        "link": "#房产双轨制",
        "children": [
          {
            "level": 3,
            "title": "牟取暴利",
            "slug": "牟取暴利",
            "link": "#牟取暴利",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "为什么房价租售比低？",
        "slug": "为什么房价租售比低",
        "link": "#为什么房价租售比低",
        "children": []
      },
      {
        "level": 2,
        "title": "未来的房子为啥会涨？",
        "slug": "未来的房子为啥会涨",
        "link": "#未来的房子为啥会涨",
        "children": []
      },
      {
        "level": 2,
        "title": "贷款控制地这么严，是谁在买房？",
        "slug": "贷款控制地这么严-是谁在买房",
        "link": "#贷款控制地这么严-是谁在买房",
        "children": []
      },
      {
        "level": 2,
        "title": "为什么不买外国的别墅？",
        "slug": "为什么不买外国的别墅",
        "link": "#为什么不买外国的别墅",
        "children": []
      },
      {
        "level": 2,
        "title": "为什么不能精简公务员？",
        "slug": "为什么不能精简公务员",
        "link": "#为什么不能精简公务员",
        "children": []
      },
      {
        "level": 2,
        "title": "银行为什么要提高首付？",
        "slug": "银行为什么要提高首付",
        "link": "#银行为什么要提高首付",
        "children": []
      },
      {
        "level": 2,
        "title": "政府为什么要限制外汇外流？",
        "slug": "政府为什么要限制外汇外流",
        "link": "#政府为什么要限制外汇外流",
        "children": []
      },
      {
        "level": 2,
        "title": "其他",
        "slug": "其他",
        "link": "#其他",
        "children": []
      }
    ],
    "path": "/wander/house/tianya-post.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "投资理财",
    "headers": [
      {
        "level": 2,
        "title": "汇丰银行港币兑换",
        "slug": "汇丰银行港币兑换",
        "link": "#汇丰银行港币兑换",
        "children": []
      }
    ],
    "path": "/wander/investment/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "股票",
    "headers": [
      {
        "level": 2,
        "title": "美联储降息",
        "slug": "美联储降息",
        "link": "#美联储降息",
        "children": [
          {
            "level": 3,
            "title": "降息降的是什么利息？",
            "slug": "降息降的是什么利息",
            "link": "#降息降的是什么利息",
            "children": []
          },
          {
            "level": 3,
            "title": "目标和工具",
            "slug": "目标和工具",
            "link": "#目标和工具",
            "children": []
          },
          {
            "level": 3,
            "title": "加息和降息的节奏",
            "slug": "加息和降息的节奏",
            "link": "#加息和降息的节奏",
            "children": []
          },
          {
            "level": 3,
            "title": "降息后，市场理论上的结果",
            "slug": "降息后-市场理论上的结果",
            "link": "#降息后-市场理论上的结果",
            "children": []
          },
          {
            "level": 3,
            "title": "历史降息，实际上市场的结果",
            "slug": "历史降息-实际上市场的结果",
            "link": "#历史降息-实际上市场的结果",
            "children": []
          },
          {
            "level": 3,
            "title": "其他央行的操作",
            "slug": "其他央行的操作",
            "link": "#其他央行的操作",
            "children": []
          }
        ]
      }
    ],
    "path": "/wander/investment/stocks.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Apple 产品使用",
    "headers": [
      {
        "level": 2,
        "title": "Mac",
        "slug": "mac",
        "link": "#mac",
        "children": [
          {
            "level": 3,
            "title": "Mds_stores 内存占用过高",
            "slug": "mds-stores-内存占用过高",
            "link": "#mds-stores-内存占用过高",
            "children": []
          }
        ]
      }
    ],
    "path": "/wander/others/apple-mac.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Mac 快捷键",
    "headers": [],
    "path": "/wander/others/mac-shortcut-keys.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "名人名言",
    "headers": [],
    "path": "/wander/others/quotes.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "各类理论",
    "headers": [
      {
        "level": 2,
        "title": "理论/效应",
        "slug": "理论-效应",
        "link": "#理论-效应",
        "children": [
          {
            "level": 3,
            "title": "禀赋效应",
            "slug": "禀赋效应",
            "link": "#禀赋效应",
            "children": []
          },
          {
            "level": 3,
            "title": "最佳停止理论",
            "slug": "最佳停止理论",
            "link": "#最佳停止理论",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "方法论",
        "slug": "方法论",
        "link": "#方法论",
        "children": [
          {
            "level": 3,
            "title": "最有效的五步推销法",
            "slug": "最有效的五步推销法",
            "link": "#最有效的五步推销法",
            "children": []
          }
        ]
      }
    ],
    "path": "/wander/others/theories.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "常见英语单词发音",
    "headers": [],
    "path": "/wander/others/word-pronunciation.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "旅游计划",
    "headers": [
      {
        "level": 2,
        "title": "目的地优选",
        "slug": "目的地优选",
        "link": "#目的地优选",
        "children": []
      },
      {
        "level": 2,
        "title": "历史行程",
        "slug": "历史行程",
        "link": "#历史行程",
        "children": []
      },
      {
        "level": 2,
        "title": "户外装备篇",
        "slug": "户外装备篇",
        "link": "#户外装备篇",
        "children": [
          {
            "level": 3,
            "title": "基础物品",
            "slug": "基础物品",
            "link": "#基础物品",
            "children": []
          },
          {
            "level": 3,
            "title": "进阶-露营",
            "slug": "进阶-露营",
            "link": "#进阶-露营",
            "children": []
          },
          {
            "level": 3,
            "title": "进阶-雪山",
            "slug": "进阶-雪山",
            "link": "#进阶-雪山",
            "children": []
          }
        ]
      }
    ],
    "path": "/wander/outdoor/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "rem 组件",
    "headers": [
      {
        "level": 2,
        "title": "使用方式",
        "slug": "使用方式",
        "link": "#使用方式",
        "children": []
      },
      {
        "level": 2,
        "title": "Android 设置系统字体大小影响 rem 的值",
        "slug": "android-设置系统字体大小影响-rem-的值",
        "link": "#android-设置系统字体大小影响-rem-的值",
        "children": [
          {
            "level": 3,
            "title": "方案一: 客户端固定 webview 的默认字体大小（推荐）",
            "slug": "方案一-客户端固定-webview-的默认字体大小-推荐",
            "link": "#方案一-客户端固定-webview-的默认字体大小-推荐",
            "children": []
          },
          {
            "level": 3,
            "title": "方案二: 获取系统字体大小后改写 html 的大小为百分比",
            "slug": "方案二-获取系统字体大小后改写-html-的大小为百分比",
            "link": "#方案二-获取系统字体大小后改写-html-的大小为百分比",
            "children": []
          },
          {
            "level": 3,
            "title": "方案三: 先设置再读取，不一致的话，重新设置",
            "slug": "方案三-先设置再读取-不一致的话-重新设置",
            "link": "#方案三-先设置再读取-不一致的话-重新设置",
            "children": []
          }
        ]
      }
    ],
    "path": "/code-snippet/browser-env/rem/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Class 操作",
    "headers": [],
    "path": "/code-snippet/js/browser/class.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "复制内容到剪贴板",
    "headers": [],
    "path": "/code-snippet/js/browser/clipboard.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Cookie 操作",
    "headers": [],
    "path": "/code-snippet/js/browser/cookie.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "异步加载 JS 文件",
    "headers": [],
    "path": "/code-snippet/js/browser/load-script.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Storage",
    "headers": [
      {
        "level": 2,
        "title": "判断周期内（天/周/月/年）是否还有次数可用",
        "slug": "判断周期内-天-周-月-年-是否还有次数可用",
        "link": "#判断周期内-天-周-月-年-是否还有次数可用",
        "children": []
      },
      {
        "level": 2,
        "title": "简单封装 localStorage/sessionStorage",
        "slug": "简单封装-localstorage-sessionstorage",
        "link": "#简单封装-localstorage-sessionstorage",
        "children": [
          {
            "level": 3,
            "title": "背景",
            "slug": "背景",
            "link": "#背景",
            "children": []
          },
          {
            "level": 3,
            "title": "设计",
            "slug": "设计",
            "link": "#设计",
            "children": []
          },
          {
            "level": 3,
            "title": "实现",
            "slug": "实现",
            "link": "#实现",
            "children": []
          }
        ]
      }
    ],
    "path": "/code-snippet/js/browser/storage.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "URL",
    "headers": [
      {
        "level": 2,
        "title": "URL 路径操作",
        "slug": "url-路径操作",
        "link": "#url-路径操作",
        "children": [
          {
            "level": 3,
            "title": "Axios 里的代码",
            "slug": "axios-里的代码",
            "link": "#axios-里的代码",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "URL 参数操作",
        "slug": "url-参数操作",
        "link": "#url-参数操作",
        "children": [
          {
            "level": 3,
            "title": "url-polyfill",
            "slug": "url-polyfill",
            "link": "#url-polyfill",
            "children": []
          }
        ]
      }
    ],
    "path": "/code-snippet/js/browser/url.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "数据类型判断",
    "headers": [
      {
        "level": 2,
        "title": "基本类型",
        "slug": "基本类型",
        "link": "#基本类型",
        "children": []
      },
      {
        "level": 2,
        "title": "引用类型",
        "slug": "引用类型",
        "link": "#引用类型",
        "children": []
      },
      {
        "level": 2,
        "title": "其他对象类型",
        "slug": "其他对象类型",
        "link": "#其他对象类型",
        "children": []
      }
    ],
    "path": "/code-snippet/js/utils/data-type.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "环境判断",
    "headers": [],
    "path": "/code-snippet/js/utils/env.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "EventEmitter",
    "headers": [],
    "path": "/code-snippet/js/utils/event-emitter.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "格式化",
    "headers": [
      {
        "level": 2,
        "title": "数字",
        "slug": "数字",
        "link": "#数字",
        "children": [
          {
            "level": 3,
            "title": "金额格式化",
            "slug": "金额格式化",
            "link": "#金额格式化",
            "children": []
          },
          {
            "level": 3,
            "title": "将数字转换成亿、万",
            "slug": "将数字转换成亿、万",
            "link": "#将数字转换成亿、万",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "字符串格式化",
        "slug": "字符串格式化",
        "link": "#字符串格式化",
        "children": [
          {
            "level": 3,
            "title": "命名方法转换",
            "slug": "命名方法转换",
            "link": "#命名方法转换",
            "children": []
          }
        ]
      }
    ],
    "path": "/code-snippet/js/utils/format.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "队列函数迭代执行",
    "headers": [
      {
        "level": 2,
        "title": "实现",
        "slug": "实现",
        "link": "#实现",
        "children": [
          {
            "level": 3,
            "title": "队列执行器",
            "slug": "队列执行器",
            "link": "#队列执行器",
            "children": []
          },
          {
            "level": 3,
            "title": "迭代器",
            "slug": "迭代器",
            "link": "#迭代器",
            "children": []
          },
          {
            "level": 3,
            "title": "测试",
            "slug": "测试",
            "link": "#测试",
            "children": []
          }
        ]
      }
    ],
    "path": "/code-snippet/js/utils/queen-next.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "版本比较",
    "headers": [],
    "path": "/code-snippet/js/utils/version.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "服务器环境",
    "headers": [
      {
        "level": 2,
        "title": "获取本机 IPv4 地址",
        "slug": "获取本机-ipv4-地址",
        "link": "#获取本机-ipv4-地址",
        "children": []
      }
    ],
    "path": "/code-snippet/js/server/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "校验规则",
    "headers": [
      {
        "level": 2,
        "title": "身份证有效性校验",
        "slug": "身份证有效性校验",
        "link": "#身份证有效性校验",
        "children": []
      },
      {
        "level": 2,
        "title": "中文名称校验",
        "slug": "中文名称校验",
        "link": "#中文名称校验",
        "children": []
      }
    ],
    "path": "/code-snippet/js/validate/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "DevTools",
    "headers": [
      {
        "level": 2,
        "title": "Eelements",
        "slug": "eelements",
        "link": "#eelements",
        "children": [
          {
            "level": 3,
            "title": "展开所有的子节点",
            "slug": "展开所有的子节点",
            "link": "#展开所有的子节点",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Network",
        "slug": "network",
        "link": "#network",
        "children": [
          {
            "level": 3,
            "title": "查询进行中的请求",
            "slug": "查询进行中的请求",
            "link": "#查询进行中的请求",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "功能",
        "slug": "功能",
        "link": "#功能",
        "children": [
          {
            "level": 3,
            "title": "命令菜单",
            "slug": "命令菜单",
            "link": "#命令菜单",
            "children": []
          },
          {
            "level": 3,
            "title": "截图",
            "slug": "截图",
            "link": "#截图",
            "children": []
          },
          {
            "level": 3,
            "title": "待补充",
            "slug": "待补充",
            "link": "#待补充",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      }
    ],
    "path": "/browser-env/browser/dev-tools/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "性能优化",
    "headers": [
      {
        "level": 2,
        "title": "衡量指标",
        "slug": "衡量指标",
        "link": "#衡量指标",
        "children": []
      },
      {
        "level": 2,
        "title": "加载和执行",
        "slug": "加载和执行",
        "link": "#加载和执行",
        "children": [
          {
            "level": 3,
            "title": "优化建议",
            "slug": "优化建议",
            "link": "#优化建议",
            "children": []
          },
          {
            "level": 3,
            "title": "加载",
            "slug": "加载",
            "link": "#加载",
            "children": []
          },
          {
            "level": 3,
            "title": "执行",
            "slug": "执行",
            "link": "#执行",
            "children": []
          },
          {
            "level": 3,
            "title": "异步加载执行脚本的方法",
            "slug": "异步加载执行脚本的方法",
            "link": "#异步加载执行脚本的方法",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "性能数据获取",
        "slug": "性能数据获取",
        "link": "#性能数据获取",
        "children": [
          {
            "level": 3,
            "title": "Performance",
            "slug": "performance",
            "link": "#performance",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/browser/performance/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "非视口内 input 输入延迟",
    "headers": [
      {
        "level": 2,
        "title": "问题描述",
        "slug": "问题描述",
        "link": "#问题描述",
        "children": []
      },
      {
        "level": 2,
        "title": "问题产生",
        "slug": "问题产生",
        "link": "#问题产生",
        "children": []
      },
      {
        "level": 2,
        "title": "解决方案",
        "slug": "解决方案",
        "link": "#解决方案",
        "children": [
          {
            "level": 3,
            "title": "（不推荐）方案一：scale(0)",
            "slug": "不推荐-方案一-scale-0",
            "link": "#不推荐-方案一-scale-0",
            "children": []
          },
          {
            "level": 3,
            "title": "（推荐）方案二：输入框祖先元素 fixed 定位",
            "slug": "推荐-方案二-输入框祖先元素-fixed-定位",
            "link": "#推荐-方案二-输入框祖先元素-fixed-定位",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "html 示例",
        "slug": "html-示例",
        "link": "#html-示例",
        "children": []
      }
    ],
    "path": "/browser-env/compatibility/input-delay/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "iOS 兼容性问题",
    "headers": [
      {
        "level": 2,
        "title": "输入框光标问题",
        "slug": "输入框光标问题",
        "link": "#输入框光标问题",
        "children": []
      },
      {
        "level": 2,
        "title": ":active 不生效",
        "slug": "active-不生效",
        "link": "#active-不生效",
        "children": []
      },
      {
        "level": 2,
        "title": "iOS 10 上 flex item 元素的子元素的 height: 100% 未生效",
        "slug": "ios-10-上-flex-item-元素的子元素的-height-100-未生效",
        "link": "#ios-10-上-flex-item-元素的子元素的-height-100-未生效",
        "children": []
      },
      {
        "level": 2,
        "title": "iOS UIWebView 里滚动页面导致计时器停止",
        "slug": "ios-uiwebview-里滚动页面导致计时器停止",
        "link": "#ios-uiwebview-里滚动页面导致计时器停止",
        "children": []
      },
      {
        "level": 2,
        "title": "WebKit",
        "slug": "webkit",
        "link": "#webkit",
        "children": [
          {
            "level": 3,
            "title": "子元素上存在 transform 时父元素的 border-radius + overflow: hidden 不生效",
            "slug": "子元素上存在-transform-时父元素的-border-radius-overflow-hidden-不生效",
            "link": "#子元素上存在-transform-时父元素的-border-radius-overflow-hidden-不生效",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/compatibility/ios/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Mobile Safari 页面底部脚本下载会阻塞首屏渲染",
    "headers": [],
    "path": "/browser-env/compatibility/ios/safari-script-block-render.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "特性",
    "headers": [
      {
        "level": 2,
        "title": "布尔特性（Boolean Attributes）",
        "slug": "布尔特性-boolean-attributes",
        "link": "#布尔特性-boolean-attributes",
        "children": []
      },
      {
        "level": 2,
        "title": "src 和 href 的区别",
        "slug": "src-和-href-的区别",
        "link": "#src-和-href-的区别",
        "children": []
      },
      {
        "level": 2,
        "title": "超链接 rel = noopener",
        "slug": "超链接-rel-noopener",
        "link": "#超链接-rel-noopener",
        "children": []
      },
      {
        "level": 2,
        "title": "首字母自动大写 autocapitalize",
        "slug": "首字母自动大写-autocapitalize",
        "link": "#首字母自动大写-autocapitalize",
        "children": []
      }
    ],
    "path": "/browser-env/html-dom/attributes-properties/attributes.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "特性和属性的区别",
    "headers": [
      {
        "level": 2,
        "title": "结论",
        "slug": "结论",
        "link": "#结论",
        "children": []
      }
    ],
    "path": "/browser-env/html-dom/attributes-properties/differences-between-properties-and-attributes.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "属性",
    "headers": [
      {
        "level": 2,
        "title": "元素大小",
        "slug": "元素大小",
        "link": "#元素大小",
        "children": [
          {
            "level": 3,
            "title": "scrollWidth/scrollHeight",
            "slug": "scrollwidth-scrollheight",
            "link": "#scrollwidth-scrollheight",
            "children": []
          },
          {
            "level": 3,
            "title": "clientWidth/clientHeigh",
            "slug": "clientwidth-clientheigh",
            "link": "#clientwidth-clientheigh",
            "children": []
          },
          {
            "level": 3,
            "title": "offsetWidth/offsetHeight",
            "slug": "offsetwidth-offsetheight",
            "link": "#offsetwidth-offsetheight",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "文档/元素位置",
        "slug": "文档-元素位置",
        "link": "#文档-元素位置",
        "children": [
          {
            "level": 3,
            "title": "文档滚动距离",
            "slug": "文档滚动距离",
            "link": "#文档滚动距离",
            "children": []
          },
          {
            "level": 3,
            "title": "获取视口尺寸",
            "slug": "获取视口尺寸",
            "link": "#获取视口尺寸",
            "children": []
          },
          {
            "level": 3,
            "title": "元素相对于文档的位置",
            "slug": "元素相对于文档的位置",
            "link": "#元素相对于文档的位置",
            "children": []
          },
          {
            "level": 3,
            "title": "向上递归 offsetTop/offsetLeft",
            "slug": "向上递归-offsettop-offsetleft",
            "link": "#向上递归-offsettop-offsetleft",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/html-dom/attributes-properties/properties.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "图片",
    "headers": [
      {
        "level": 2,
        "title": "图片格式对比",
        "slug": "图片格式对比",
        "link": "#图片格式对比",
        "children": []
      },
      {
        "level": 2,
        "title": "JPG",
        "slug": "jpg",
        "link": "#jpg",
        "children": [
          {
            "level": 3,
            "title": "连续的 JPG",
            "slug": "连续的-jpg",
            "link": "#连续的-jpg",
            "children": []
          },
          {
            "level": 3,
            "title": "PNG",
            "slug": "png",
            "link": "#png",
            "children": []
          },
          {
            "level": 3,
            "title": "GIF",
            "slug": "gif",
            "link": "#gif",
            "children": []
          },
          {
            "level": 3,
            "title": "颜色表",
            "slug": "颜色表",
            "link": "#颜色表",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "图片的性能优化",
        "slug": "图片的性能优化",
        "link": "#图片的性能优化",
        "children": []
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/browser-env/html-dom/image/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "图片 - 懒加载",
    "headers": [
      {
        "level": 2,
        "title": "原理",
        "slug": "原理",
        "link": "#原理",
        "children": []
      },
      {
        "level": 2,
        "title": "相关插件",
        "slug": "相关插件",
        "link": "#相关插件",
        "children": []
      },
      {
        "level": 2,
        "title": "如何判断图片处于页面可视区域？",
        "slug": "如何判断图片处于页面可视区域",
        "link": "#如何判断图片处于页面可视区域",
        "children": [
          {
            "level": 3,
            "title": "方法一：getBoundingClientRect （推荐）",
            "slug": "方法一-getboundingclientrect-推荐",
            "link": "#方法一-getboundingclientrect-推荐",
            "children": []
          },
          {
            "level": 3,
            "title": "方法二：offsetTop/offsetLeft、scrollTop/srollLeft",
            "slug": "方法二-offsettop-offsetleft、scrolltop-srollleft",
            "link": "#方法二-offsettop-offsetleft、scrolltop-srollleft",
            "children": []
          },
          {
            "level": 3,
            "title": "方法三：原生 IntersectionObserver 函数",
            "slug": "方法三-原生-intersectionobserver-函数",
            "link": "#方法三-原生-intersectionobserver-函数",
            "children": []
          },
          {
            "level": 3,
            "title": "工具函数",
            "slug": "工具函数",
            "link": "#工具函数",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/html-dom/image/image-lazy-load.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "元素",
    "headers": [
      {
        "level": 2,
        "title": "元素分类",
        "slug": "元素分类",
        "link": "#元素分类",
        "children": [
          {
            "level": 3,
            "title": "可替换元素 VS 非替换元素",
            "slug": "可替换元素-vs-非替换元素",
            "link": "#可替换元素-vs-非替换元素",
            "children": []
          },
          {
            "level": 3,
            "title": "块级元素 VS 行内元素",
            "slug": "块级元素-vs-行内元素",
            "link": "#块级元素-vs-行内元素",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "元素操作",
        "slug": "元素操作",
        "link": "#元素操作",
        "children": [
          {
            "level": 3,
            "title": "查找元素",
            "slug": "查找元素",
            "link": "#查找元素",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "特别的元素",
        "slug": "特别的元素",
        "link": "#特别的元素",
        "children": [
          {
            "level": 3,
            "title": "iframe 元素",
            "slug": "iframe-元素",
            "link": "#iframe-元素",
            "children": []
          },
          {
            "level": 3,
            "title": "幽灵空白节点",
            "slug": "幽灵空白节点",
            "link": "#幽灵空白节点",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "a 标签",
        "slug": "a-标签",
        "link": "#a-标签",
        "children": [
          {
            "level": 3,
            "title": "文件下载",
            "slug": "文件下载",
            "link": "#文件下载",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "script 元素",
        "slug": "script-元素",
        "link": "#script-元素",
        "children": [
          {
            "level": 3,
            "title": "script 元素内的脚本执行",
            "slug": "script-元素内的脚本执行",
            "link": "#script-元素内的脚本执行",
            "children": []
          },
          {
            "level": 3,
            "title": "获取 script 元素的特性",
            "slug": "获取-script-元素的特性",
            "link": "#获取-script-元素的特性",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "meta 标签",
        "slug": "meta-标签",
        "link": "#meta-标签",
        "children": [
          {
            "level": 3,
            "title": "theme-color 设置浏览器导航栏背景颜色",
            "slug": "theme-color-设置浏览器导航栏背景颜色",
            "link": "#theme-color-设置浏览器导航栏背景颜色",
            "children": []
          },
          {
            "level": 3,
            "title": "charset 设置文档编码方式",
            "slug": "charset-设置文档编码方式",
            "link": "#charset-设置文档编码方式",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/html-dom/elements/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "SVG",
    "headers": [],
    "path": "/browser-env/html-dom/svg/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CORS",
    "headers": [
      {
        "level": 2,
        "title": "简单请求和非简单请求",
        "slug": "简单请求和非简单请求",
        "link": "#简单请求和非简单请求",
        "children": [
          {
            "level": 3,
            "title": "参考链接",
            "slug": "参考链接",
            "link": "#参考链接",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/network/cors/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "HTTP",
    "headers": [
      {
        "level": 2,
        "title": "浏览器 http 请求的生命周期",
        "slug": "浏览器-http-请求的生命周期",
        "link": "#浏览器-http-请求的生命周期",
        "children": [
          {
            "level": 3,
            "title": "1. 构建 http 请求",
            "slug": "_1-构建-http-请求",
            "link": "#_1-构建-http-请求",
            "children": []
          },
          {
            "level": 3,
            "title": "2. 查找缓存",
            "slug": "_2-查找缓存",
            "link": "#_2-查找缓存",
            "children": []
          },
          {
            "level": 3,
            "title": "3. 确定服务器 IP 地址和端口",
            "slug": "_3-确定服务器-ip-地址和端口",
            "link": "#_3-确定服务器-ip-地址和端口",
            "children": []
          },
          {
            "level": 3,
            "title": "4. 等待 TCP 队列",
            "slug": "_4-等待-tcp-队列",
            "link": "#_4-等待-tcp-队列",
            "children": []
          },
          {
            "level": 3,
            "title": "5. 建立 TCP 连接",
            "slug": "_5-建立-tcp-连接",
            "link": "#_5-建立-tcp-连接",
            "children": []
          },
          {
            "level": 3,
            "title": "6. 发送 HTTP 请求",
            "slug": "_6-发送-http-请求",
            "link": "#_6-发送-http-请求",
            "children": []
          },
          {
            "level": 3,
            "title": "7. 服务器处理请求并返回",
            "slug": "_7-服务器处理请求并返回",
            "link": "#_7-服务器处理请求并返回",
            "children": []
          },
          {
            "level": 3,
            "title": "8. 断开 HTTP 请求",
            "slug": "_8-断开-http-请求",
            "link": "#_8-断开-http-请求",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "请求/响应头",
        "slug": "请求-响应头",
        "link": "#请求-响应头",
        "children": [
          {
            "level": 3,
            "title": "常用的通用头",
            "slug": "常用的通用头",
            "link": "#常用的通用头",
            "children": []
          },
          {
            "level": 3,
            "title": "常用的请求头",
            "slug": "常用的请求头",
            "link": "#常用的请求头",
            "children": []
          },
          {
            "level": 3,
            "title": "常用的响应头",
            "slug": "常用的响应头",
            "link": "#常用的响应头",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/network/http/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "HTTP2",
    "headers": [
      {
        "level": 2,
        "title": "为什么是 HTTP2 而不是 HTTP/1.2",
        "slug": "为什么是-http2-而不是-http-1-2",
        "link": "#为什么是-http2-而不是-http-1-2",
        "children": []
      },
      {
        "level": 2,
        "title": "HTTP/0.9-1.x 的缺点",
        "slug": "http-0-9-1-x-的缺点",
        "link": "#http-0-9-1-x-的缺点",
        "children": []
      },
      {
        "level": 2,
        "title": "HTTP2",
        "slug": "http2-1",
        "link": "#http2-1",
        "children": [
          {
            "level": 3,
            "title": "二进制分帧层",
            "slug": "二进制分帧层",
            "link": "#二进制分帧层",
            "children": []
          },
          {
            "level": 3,
            "title": "数据流、消息、帧",
            "slug": "数据流、消息、帧",
            "link": "#数据流、消息、帧",
            "children": []
          },
          {
            "level": 3,
            "title": "请求与响应复用",
            "slug": "请求与响应复用",
            "link": "#请求与响应复用",
            "children": []
          },
          {
            "level": 3,
            "title": "数据流优先级",
            "slug": "数据流优先级",
            "link": "#数据流优先级",
            "children": []
          },
          {
            "level": 3,
            "title": "每个来源一个连接",
            "slug": "每个来源一个连接",
            "link": "#每个来源一个连接",
            "children": []
          },
          {
            "level": 3,
            "title": "流控制",
            "slug": "流控制",
            "link": "#流控制",
            "children": []
          },
          {
            "level": 3,
            "title": "服务器推送",
            "slug": "服务器推送",
            "link": "#服务器推送",
            "children": []
          },
          {
            "level": 3,
            "title": "标头压缩",
            "slug": "标头压缩",
            "link": "#标头压缩",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/network/http2/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "HTTPS",
    "headers": [
      {
        "level": 2,
        "title": "相关文章",
        "slug": "相关文章",
        "link": "#相关文章",
        "children": []
      },
      {
        "level": 2,
        "title": "术语",
        "slug": "术语",
        "link": "#术语",
        "children": []
      },
      {
        "level": 2,
        "title": "http vs https",
        "slug": "http-vs-https",
        "link": "#http-vs-https",
        "children": []
      },
      {
        "level": 2,
        "title": "SSL/TLS",
        "slug": "ssl-tls",
        "link": "#ssl-tls",
        "children": [
          {
            "level": 3,
            "title": "SSL 协议的组成",
            "slug": "ssl-协议的组成",
            "link": "#ssl-协议的组成",
            "children": []
          },
          {
            "level": 3,
            "title": "SSL 协议的基本过程",
            "slug": "ssl-协议的基本过程",
            "link": "#ssl-协议的基本过程",
            "children": []
          },
          {
            "level": 3,
            "title": "握手阶段",
            "slug": "握手阶段",
            "link": "#握手阶段",
            "children": []
          },
          {
            "level": 3,
            "title": "加密通信过程中的算法",
            "slug": "加密通信过程中的算法",
            "link": "#加密通信过程中的算法",
            "children": []
          },
          {
            "level": 3,
            "title": "数字证书",
            "slug": "数字证书",
            "link": "#数字证书",
            "children": []
          },
          {
            "level": 3,
            "title": "数据完整性",
            "slug": "数据完整性",
            "link": "#数据完整性",
            "children": []
          },
          {
            "level": 3,
            "title": "自我理解",
            "slug": "自我理解",
            "link": "#自我理解",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "https 的实现",
        "slug": "https-的实现",
        "link": "#https-的实现",
        "children": [
          {
            "level": 3,
            "title": "混合内容",
            "slug": "混合内容",
            "link": "#混合内容",
            "children": []
          }
        ]
      }
    ],
    "path": "/browser-env/network/https/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "微信",
    "headers": [
      {
        "level": 2,
        "title": "openid 和 unionid",
        "slug": "openid-和-unionid",
        "link": "#openid-和-unionid",
        "children": []
      }
    ],
    "path": "/browser-env/vendor-app/wechat/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "微信 - Android 微信里自动调起系统浏览器访问页面",
    "headers": [
      {
        "level": 2,
        "title": "进一步优化",
        "slug": "进一步优化",
        "link": "#进一步优化",
        "children": []
      },
      {
        "level": 2,
        "title": "核心 response header 的解释",
        "slug": "核心-response-header-的解释",
        "link": "#核心-response-header-的解释",
        "children": []
      },
      {
        "level": 2,
        "title": "参考",
        "slug": "参考",
        "link": "#参考",
        "children": []
      }
    ],
    "path": "/browser-env/vendor-app/wechat/android-weixin-auto-open-browser.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "@babel/plugin-transform-runtime",
    "headers": [
      {
        "level": 2,
        "title": "安装",
        "slug": "安装",
        "link": "#安装",
        "children": []
      },
      {
        "level": 2,
        "title": "为什么需要 @babel/plugin-transform-runtime",
        "slug": "为什么需要-babel-plugin-transform-runtime",
        "link": "#为什么需要-babel-plugin-transform-runtime",
        "children": []
      },
      {
        "level": 2,
        "title": "使用",
        "slug": "使用",
        "link": "#使用",
        "children": [
          {
            "level": 3,
            "title": "通过 .babelrc（推荐）",
            "slug": "通过-babelrc-推荐",
            "link": "#通过-babelrc-推荐",
            "children": []
          },
          {
            "level": 3,
            "title": "通过 CLI",
            "slug": "通过-cli",
            "link": "#通过-cli",
            "children": []
          },
          {
            "level": 3,
            "title": "通过 Node API",
            "slug": "通过-node-api",
            "link": "#通过-node-api",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "选项",
        "slug": "选项",
        "link": "#选项",
        "children": [
          {
            "level": 3,
            "title": "corejs",
            "slug": "corejs",
            "link": "#corejs",
            "children": []
          },
          {
            "level": 3,
            "title": "helpers",
            "slug": "helpers",
            "link": "#helpers",
            "children": []
          },
          {
            "level": 3,
            "title": "polyfill",
            "slug": "polyfill",
            "link": "#polyfill",
            "children": []
          },
          {
            "level": 3,
            "title": "regenerator",
            "slug": "regenerator",
            "link": "#regenerator",
            "children": []
          },
          {
            "level": 3,
            "title": "useBuiltIns",
            "slug": "usebuiltins",
            "link": "#usebuiltins",
            "children": []
          },
          {
            "level": 3,
            "title": "useESModules",
            "slug": "useesmodules",
            "link": "#useesmodules",
            "children": []
          },
          {
            "level": 3,
            "title": "absoluteRuntime",
            "slug": "absoluteruntime",
            "link": "#absoluteruntime",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "技术细节",
        "slug": "技术细节",
        "link": "#技术细节",
        "children": [
          {
            "level": 3,
            "title": "regenerator 替换",
            "slug": "regenerator-替换",
            "link": "#regenerator-替换",
            "children": []
          },
          {
            "level": 3,
            "title": "core-js 替换",
            "slug": "core-js-替换",
            "link": "#core-js-替换",
            "children": []
          },
          {
            "level": 3,
            "title": "helper 替换",
            "slug": "helper-替换",
            "link": "#helper-替换",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "译者总结",
        "slug": "译者总结",
        "link": "#译者总结",
        "children": [
          {
            "level": 3,
            "title": "术语解释",
            "slug": "术语解释",
            "link": "#术语解释",
            "children": []
          },
          {
            "level": 3,
            "title": "使用 @babel/plugin-transform-runtime 的原因",
            "slug": "使用-babel-plugin-transform-runtime-的原因",
            "link": "#使用-babel-plugin-transform-runtime-的原因",
            "children": []
          },
          {
            "level": 3,
            "title": "缺点",
            "slug": "缺点",
            "link": "#缺点",
            "children": []
          },
          {
            "level": 3,
            "title": "关于 @babel/plugin-transform-runtime 和 @babel/polyfill 的区别",
            "slug": "关于-babel-plugin-transform-runtime-和-babel-polyfill-的区别",
            "link": "#关于-babel-plugin-transform-runtime-和-babel-polyfill-的区别",
            "children": []
          }
        ]
      }
    ],
    "path": "/es6/babel/@babel/plugin-transform-runtime.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "@babel/preset-env",
    "headers": [
      {
        "level": 2,
        "title": "安装",
        "slug": "安装",
        "link": "#安装",
        "children": []
      },
      {
        "level": 2,
        "title": "它如何工作",
        "slug": "它如何工作",
        "link": "#它如何工作",
        "children": []
      },
      {
        "level": 2,
        "title": "Browserslist 集成",
        "slug": "browserslist-集成",
        "link": "#browserslist-集成",
        "children": []
      },
      {
        "level": 2,
        "title": "Options",
        "slug": "options",
        "link": "#options",
        "children": [
          {
            "level": 3,
            "title": "targets",
            "slug": "targets",
            "link": "#targets",
            "children": []
          },
          {
            "level": 3,
            "title": "spec",
            "slug": "spec",
            "link": "#spec",
            "children": []
          },
          {
            "level": 3,
            "title": "loose",
            "slug": "loose",
            "link": "#loose",
            "children": []
          },
          {
            "level": 3,
            "title": "modules",
            "slug": "modules",
            "link": "#modules",
            "children": []
          },
          {
            "level": 3,
            "title": "debug",
            "slug": "debug",
            "link": "#debug",
            "children": []
          },
          {
            "level": 3,
            "title": "include",
            "slug": "include",
            "link": "#include",
            "children": []
          },
          {
            "level": 3,
            "title": "exclude",
            "slug": "exclude",
            "link": "#exclude",
            "children": []
          },
          {
            "level": 3,
            "title": "useBuiltIns",
            "slug": "usebuiltins",
            "link": "#usebuiltins",
            "children": []
          },
          {
            "level": 3,
            "title": "forceAllTransforms",
            "slug": "forcealltransforms",
            "link": "#forcealltransforms",
            "children": []
          },
          {
            "level": 3,
            "title": "configPath",
            "slug": "configpath",
            "link": "#configpath",
            "children": []
          },
          {
            "level": 3,
            "title": "ignoreBrowserslistConfig",
            "slug": "ignorebrowserslistconfig",
            "link": "#ignorebrowserslistconfig",
            "children": []
          },
          {
            "level": 3,
            "title": "shippedProposals",
            "slug": "shippedproposals",
            "link": "#shippedproposals",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "@vue/babel-preset-env",
        "slug": "vue-babel-preset-env",
        "link": "#vue-babel-preset-env",
        "children": []
      }
    ],
    "path": "/es6/babel/@babel/preset-env.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "@babel/runtime-corejs2",
    "headers": [],
    "path": "/es6/babel/@babel/runtime-corejs2.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "@babel/runtime",
    "headers": [
      {
        "level": 2,
        "title": "安装",
        "slug": "安装",
        "link": "#安装",
        "children": []
      },
      {
        "level": 2,
        "title": "使用",
        "slug": "使用",
        "link": "#使用",
        "children": []
      },
      {
        "level": 2,
        "title": "Why",
        "slug": "why",
        "link": "#why",
        "children": []
      }
    ],
    "path": "/es6/babel/@babel/runtime.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Array.prototype.forEach",
    "headers": [],
    "path": "/es6/polyfill/array/array-prototype-forEach.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Array.prototype.reduce",
    "headers": [],
    "path": "/es6/polyfill/array/array-prototype-reduce.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "new 操作符",
    "headers": [],
    "path": "/es6/polyfill/object/new.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Object.assign",
    "headers": [],
    "path": "/es6/polyfill/object/object-assign.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Object.create",
    "headers": [],
    "path": "/es6/polyfill/object/object-create.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Promise.allSettled",
    "headers": [
      {
        "level": 2,
        "title": "题目描述",
        "slug": "题目描述",
        "link": "#题目描述",
        "children": [
          {
            "level": 3,
            "title": "出入参说明",
            "slug": "出入参说明",
            "link": "#出入参说明",
            "children": []
          },
          {
            "level": 3,
            "title": "使用示例",
            "slug": "使用示例",
            "link": "#使用示例",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "实现",
        "slug": "实现",
        "link": "#实现",
        "children": []
      }
    ],
    "path": "/es6/polyfill/promise/promise-allSettled.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Promise.race",
    "headers": [],
    "path": "/es6/polyfill/promise/promise-race.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "String.prototype.padStart",
    "headers": [
      {
        "level": 2,
        "title": "题目描述",
        "slug": "题目描述",
        "link": "#题目描述",
        "children": []
      },
      {
        "level": 2,
        "title": "实现",
        "slug": "实现",
        "link": "#实现",
        "children": []
      }
    ],
    "path": "/es6/polyfill/string/padStart.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "样式",
    "headers": [
      {
        "level": 2,
        "title": "注意事项",
        "slug": "注意事项",
        "link": "#注意事项",
        "children": []
      },
      {
        "level": 2,
        "title": "功能实现",
        "slug": "功能实现",
        "link": "#功能实现",
        "children": []
      },
      {
        "level": 2,
        "title": "尺寸适配",
        "slug": "尺寸适配",
        "link": "#尺寸适配",
        "children": []
      }
    ],
    "path": "/front-end-engineering/development-skills/h5/css-style.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "注意事项",
    "headers": [
      {
        "level": 2,
        "title": "实现阶段",
        "slug": "实现阶段",
        "link": "#实现阶段",
        "children": [
          {
            "level": 3,
            "title": "金额",
            "slug": "金额",
            "link": "#金额",
            "children": []
          },
          {
            "level": 3,
            "title": "控制按钮点击频率/事件回调调用频率",
            "slug": "控制按钮点击频率-事件回调调用频率",
            "link": "#控制按钮点击频率-事件回调调用频率",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "活动类项目注意事项",
        "slug": "活动类项目注意事项",
        "link": "#活动类项目注意事项",
        "children": [
          {
            "level": 3,
            "title": "活动阶段变更",
            "slug": "活动阶段变更",
            "link": "#活动阶段变更",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "业务监控",
        "slug": "业务监控",
        "link": "#业务监控",
        "children": []
      },
      {
        "level": 2,
        "title": "纯前端实现最佳实践",
        "slug": "纯前端实现最佳实践",
        "link": "#纯前端实现最佳实践",
        "children": []
      },
      {
        "level": 2,
        "title": "性能优化",
        "slug": "性能优化",
        "link": "#性能优化",
        "children": []
      },
      {
        "level": 2,
        "title": "坑",
        "slug": "坑",
        "link": "#坑",
        "children": []
      }
    ],
    "path": "/front-end-engineering/development-skills/h5/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "本地 Mock 数据",
    "headers": [],
    "path": "/front-end-engineering/development-skills/h5/local-mock.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CodeSandbox",
    "headers": [
      {
        "level": 2,
        "title": "入门文章",
        "slug": "入门文章",
        "link": "#入门文章",
        "children": [
          {
            "level": 3,
            "title": "背景知识",
            "slug": "背景知识",
            "link": "#背景知识",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "依赖加载",
        "slug": "依赖加载",
        "link": "#依赖加载",
        "children": []
      }
    ],
    "path": "/front-end-engineering/environment/ide/code-sandbox.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "VSCode",
    "headers": [
      {
        "level": 2,
        "title": "JavaScript 配置",
        "slug": "javascript-配置",
        "link": "#javascript-配置",
        "children": [
          {
            "level": 3,
            "title": "使用 webpack alias",
            "slug": "使用-webpack-alias",
            "link": "#使用-webpack-alias",
            "children": []
          },
          {
            "level": 3,
            "title": "monorepo 架构子应用里 vue 文件内 Vetur 报错",
            "slug": "monorepo-架构子应用里-vue-文件内-vetur-报错",
            "link": "#monorepo-架构子应用里-vue-文件内-vetur-报错",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "扩展",
        "slug": "扩展",
        "link": "#扩展",
        "children": [
          {
            "level": 3,
            "title": "ESLint",
            "slug": "eslint",
            "link": "#eslint",
            "children": []
          },
          {
            "level": 3,
            "title": "Vetur",
            "slug": "vetur",
            "link": "#vetur",
            "children": []
          },
          {
            "level": 3,
            "title": "快速收起 node_modules",
            "slug": "快速收起-node-modules",
            "link": "#快速收起-node-modules",
            "children": []
          },
          {
            "level": 3,
            "title": "行内显示错误信息",
            "slug": "行内显示错误信息",
            "link": "#行内显示错误信息",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/environment/ide/vscode.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Node API",
    "headers": [
      {
        "level": 2,
        "title": "http.createServer 和 http.Server 的区别",
        "slug": "http-createserver-和-http-server-的区别",
        "link": "#http-createserver-和-http-server-的区别",
        "children": []
      },
      {
        "level": 2,
        "title": "process.cwd 与 __dirname 的区别",
        "slug": "process-cwd-与-dirname-的区别",
        "link": "#process-cwd-与-dirname-的区别",
        "children": [
          {
            "level": 3,
            "title": "在 test-project 目录下执行",
            "slug": "在-test-project-目录下执行",
            "link": "#在-test-project-目录下执行",
            "children": []
          },
          {
            "level": 3,
            "title": "在 src 目录下执行",
            "slug": "在-src-目录下执行",
            "link": "#在-src-目录下执行",
            "children": []
          },
          {
            "level": 3,
            "title": "结论",
            "slug": "结论",
            "link": "#结论",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/development-skills/nodejs/api.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CommonJS 规范及实现",
    "headers": [
      {
        "level": 2,
        "title": "包规范的实现 - NPM",
        "slug": "包规范的实现-npm",
        "link": "#包规范的实现-npm",
        "children": [
          {
            "level": 3,
            "title": "CommonJS 包规范的目录",
            "slug": "commonjs-包规范的目录",
            "link": "#commonjs-包规范的目录",
            "children": []
          },
          {
            "level": 3,
            "title": "安装依赖包",
            "slug": "安装依赖包",
            "link": "#安装依赖包",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "模块规范的实现",
        "slug": "模块规范的实现",
        "link": "#模块规范的实现",
        "children": [
          {
            "level": 3,
            "title": "自定义模块的路径分析及文件定位",
            "slug": "自定义模块的路径分析及文件定位",
            "link": "#自定义模块的路径分析及文件定位",
            "children": []
          },
          {
            "level": 3,
            "title": "require.resolve",
            "slug": "require-resolve",
            "link": "#require-resolve",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/development-skills/nodejs/commonjs.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Node",
    "headers": [
      {
        "level": 2,
        "title": "事件循环",
        "slug": "事件循环",
        "link": "#事件循环",
        "children": [
          {
            "level": 3,
            "title": "观察者",
            "slug": "观察者",
            "link": "#观察者",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Node 定时器",
        "slug": "node-定时器",
        "link": "#node-定时器",
        "children": []
      },
      {
        "level": 2,
        "title": "服务稳定性指标",
        "slug": "服务稳定性指标",
        "link": "#服务稳定性指标",
        "children": []
      }
    ],
    "path": "/front-end-engineering/development-skills/nodejs/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Node.js API",
    "headers": [
      {
        "level": 2,
        "title": "vm 模块",
        "slug": "vm-模块",
        "link": "#vm-模块",
        "children": [
          {
            "level": 3,
            "title": "沙箱逃逸",
            "slug": "沙箱逃逸",
            "link": "#沙箱逃逸",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/development-skills/nodejs/node-api.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "PM2",
    "headers": [
      {
        "level": 2,
        "title": "实践功能",
        "slug": "实践功能",
        "link": "#实践功能",
        "children": [
          {
            "level": 3,
            "title": "运行不同版本的 Node",
            "slug": "运行不同版本的-node",
            "link": "#运行不同版本的-node",
            "children": []
          },
          {
            "level": 3,
            "title": "杀掉 PM2 守护进程",
            "slug": "杀掉-pm2-守护进程",
            "link": "#杀掉-pm2-守护进程",
            "children": []
          },
          {
            "level": 3,
            "title": "PM2 崩溃后重新启动所有进程",
            "slug": "pm2-崩溃后重新启动所有进程",
            "link": "#pm2-崩溃后重新启动所有进程",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "常用命令",
        "slug": "常用命令",
        "link": "#常用命令",
        "children": [
          {
            "level": 3,
            "title": "安装 PM2",
            "slug": "安装-pm2",
            "link": "#安装-pm2",
            "children": []
          },
          {
            "level": 3,
            "title": "开启/重启进程",
            "slug": "开启-重启进程",
            "link": "#开启-重启进程",
            "children": []
          },
          {
            "level": 3,
            "title": "停止、删除进程",
            "slug": "停止、删除进程",
            "link": "#停止、删除进程",
            "children": []
          },
          {
            "level": 3,
            "title": "显示进程列表",
            "slug": "显示进程列表",
            "link": "#显示进程列表",
            "children": []
          },
          {
            "level": 3,
            "title": "显示进程详细信息",
            "slug": "显示进程详细信息",
            "link": "#显示进程详细信息",
            "children": []
          },
          {
            "level": 3,
            "title": "访问实时日志",
            "slug": "访问实时日志",
            "link": "#访问实时日志",
            "children": []
          },
          {
            "level": 3,
            "title": "显示环境",
            "slug": "显示环境",
            "link": "#显示环境",
            "children": []
          },
          {
            "level": 3,
            "title": "从 boot 启动 PM2",
            "slug": "从-boot-启动-pm2",
            "link": "#从-boot-启动-pm2",
            "children": []
          },
          {
            "level": 3,
            "title": "Reset Restart Counters",
            "slug": "reset-restart-counters",
            "link": "#reset-restart-counters",
            "children": []
          },
          {
            "level": 3,
            "title": "监控",
            "slug": "监控",
            "link": "#监控",
            "children": []
          },
          {
            "level": 3,
            "title": "Dump all process data",
            "slug": "dump-all-process-data",
            "link": "#dump-all-process-data",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "进程管理",
        "slug": "进程管理",
        "link": "#进程管理",
        "children": [
          {
            "level": 3,
            "title": "进程列表",
            "slug": "进程列表",
            "link": "#进程列表",
            "children": []
          },
          {
            "level": 3,
            "title": "保存/恢复进程列表",
            "slug": "保存-恢复进程列表",
            "link": "#保存-恢复进程列表",
            "children": []
          },
          {
            "level": 3,
            "title": "管理任何类型的应用",
            "slug": "管理任何类型的应用",
            "link": "#管理任何类型的应用",
            "children": []
          },
          {
            "level": 3,
            "title": "本地监控",
            "slug": "本地监控",
            "link": "#本地监控",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "生态系统文件",
        "slug": "生态系统文件",
        "link": "#生态系统文件",
        "children": [
          {
            "level": 3,
            "title": "生成默认生态系统文件",
            "slug": "生成默认生态系统文件",
            "link": "#生成默认生态系统文件",
            "children": []
          },
          {
            "level": 3,
            "title": "启动所有应用",
            "slug": "启动所有应用",
            "link": "#启动所有应用",
            "children": []
          },
          {
            "level": 3,
            "title": "仅启动单个应用",
            "slug": "仅启动单个应用",
            "link": "#仅启动单个应用",
            "children": []
          },
          {
            "level": 3,
            "title": "更新生态系统文件",
            "slug": "更新生态系统文件",
            "link": "#更新生态系统文件",
            "children": []
          },
          {
            "level": 3,
            "title": "自定义生态系统文件",
            "slug": "自定义生态系统文件",
            "link": "#自定义生态系统文件",
            "children": []
          },
          {
            "level": 3,
            "title": "环境变量",
            "slug": "环境变量",
            "link": "#环境变量",
            "children": []
          },
          {
            "level": 3,
            "title": "指定应用的端口",
            "slug": "指定应用的端口",
            "link": "#指定应用的端口",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "集群模式 & 热重载",
        "slug": "集群模式-热重载",
        "link": "#集群模式-热重载",
        "children": [
          {
            "level": 3,
            "title": "无状态应用",
            "slug": "无状态应用",
            "link": "#无状态应用",
            "children": []
          },
          {
            "level": 3,
            "title": "无间断式重载",
            "slug": "无间断式重载",
            "link": "#无间断式重载",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "watch & 重启（restart）",
        "slug": "watch-重启-restart",
        "link": "#watch-重启-restart",
        "children": []
      },
      {
        "level": 2,
        "title": "重启策略",
        "slug": "重启策略",
        "link": "#重启策略",
        "children": [
          {
            "level": 3,
            "title": "指数级的重启时延",
            "slug": "指数级的重启时延",
            "link": "#指数级的重启时延",
            "children": []
          },
          {
            "level": 3,
            "title": "固定重启时延",
            "slug": "固定重启时延",
            "link": "#固定重启时延",
            "children": []
          },
          {
            "level": 3,
            "title": "禁用自动重启",
            "slug": "禁用自动重启",
            "link": "#禁用自动重启",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "日志管理",
        "slug": "日志管理",
        "link": "#日志管理",
        "children": [
          {
            "level": 3,
            "title": "访问日志",
            "slug": "访问日志",
            "link": "#访问日志",
            "children": []
          },
          {
            "level": 3,
            "title": "日志文件配置",
            "slug": "日志文件配置",
            "link": "#日志文件配置",
            "children": []
          },
          {
            "level": 3,
            "title": "合并日志",
            "slug": "合并日志",
            "link": "#合并日志",
            "children": []
          },
          {
            "level": 3,
            "title": "禁用日志",
            "slug": "禁用日志",
            "link": "#禁用日志",
            "children": []
          },
          {
            "level": 3,
            "title": "日志格式",
            "slug": "日志格式",
            "link": "#日志格式",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "startup 钩子",
        "slug": "startup-钩子",
        "link": "#startup-钩子",
        "children": [
          {
            "level": 3,
            "title": "安装",
            "slug": "安装",
            "link": "#安装",
            "children": []
          },
          {
            "level": 3,
            "title": "保存进程列表",
            "slug": "保存进程列表",
            "link": "#保存进程列表",
            "children": []
          },
          {
            "level": 3,
            "title": "禁用 startup 系统",
            "slug": "禁用-startup-系统",
            "link": "#禁用-startup-系统",
            "children": []
          },
          {
            "level": 3,
            "title": "用户授权",
            "slug": "用户授权",
            "link": "#用户授权",
            "children": []
          },
          {
            "level": 3,
            "title": "更新 startup 钩子",
            "slug": "更新-startup-钩子",
            "link": "#更新-startup-钩子",
            "children": []
          },
          {
            "level": 3,
            "title": "兼容性",
            "slug": "兼容性",
            "link": "#兼容性",
            "children": []
          },
          {
            "level": 3,
            "title": "Under the hoodlink",
            "slug": "under-the-hoodlink",
            "link": "#under-the-hoodlink",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "入口点",
        "slug": "入口点",
        "link": "#入口点",
        "children": []
      },
      {
        "level": 2,
        "title": "内存阈值，自动重载",
        "slug": "内存阈值-自动重载",
        "link": "#内存阈值-自动重载",
        "children": []
      },
      {
        "level": 2,
        "title": "升级 PM2",
        "slug": "升级-pm2",
        "link": "#升级-pm2",
        "children": []
      },
      {
        "level": 2,
        "title": "Source Map 支持",
        "slug": "source-map-支持",
        "link": "#source-map-支持",
        "children": [
          {
            "level": 3,
            "title": "检查异常",
            "slug": "检查异常",
            "link": "#检查异常",
            "children": []
          },
          {
            "level": 3,
            "title": "禁用 Source Map",
            "slug": "禁用-source-map",
            "link": "#禁用-source-map",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "transpilers 转译器",
        "slug": "transpilers-转译器",
        "link": "#transpilers-转译器",
        "children": []
      },
      {
        "level": 2,
        "title": "以编程方式使用 PM2",
        "slug": "以编程方式使用-pm2",
        "link": "#以编程方式使用-pm2",
        "children": [
          {
            "level": 3,
            "title": "简单示例",
            "slug": "简单示例",
            "link": "#简单示例",
            "children": []
          },
          {
            "level": 3,
            "title": "编程 API",
            "slug": "编程-api",
            "link": "#编程-api",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "使用 SSH 部署",
        "slug": "使用-ssh-部署",
        "link": "#使用-ssh-部署",
        "children": [
          {
            "level": 3,
            "title": "安装",
            "slug": "安装-1",
            "link": "#安装-1",
            "children": []
          },
          {
            "level": 3,
            "title": "部署选项",
            "slug": "部署选项",
            "link": "#部署选项",
            "children": []
          },
          {
            "level": 3,
            "title": "强制部署",
            "slug": "强制部署",
            "link": "#强制部署",
            "children": []
          },
          {
            "level": 3,
            "title": "考虑事项",
            "slug": "考虑事项",
            "link": "#考虑事项",
            "children": []
          },
          {
            "level": 3,
            "title": "SSH 克隆错误",
            "slug": "ssh-克隆错误",
            "link": "#ssh-克隆错误",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "优雅关闭",
        "slug": "优雅关闭",
        "link": "#优雅关闭",
        "children": [
          {
            "level": 3,
            "title": "优雅地关闭",
            "slug": "优雅地关闭",
            "link": "#优雅地关闭",
            "children": []
          },
          {
            "level": 3,
            "title": "超时 kill",
            "slug": "超时-kill",
            "link": "#超时-kill",
            "children": []
          },
          {
            "level": 3,
            "title": "优雅地启动",
            "slug": "优雅地启动",
            "link": "#优雅地启动",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "多个 PM2",
        "slug": "多个-pm2",
        "link": "#多个-pm2",
        "children": []
      },
      {
        "level": 2,
        "title": "开发工具",
        "slug": "开发工具",
        "link": "#开发工具",
        "children": [
          {
            "level": 3,
            "title": "监测重启",
            "slug": "监测重启",
            "link": "#监测重启",
            "children": []
          },
          {
            "level": 3,
            "title": "基于 HTTP 提供静态文件服务",
            "slug": "基于-http-提供静态文件服务",
            "link": "#基于-http-提供静态文件服务",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "最佳实践 - 环境变量",
        "slug": "最佳实践-环境变量",
        "link": "#最佳实践-环境变量",
        "children": [
          {
            "level": 3,
            "title": "CLI 方式",
            "slug": "cli-方式",
            "link": "#cli-方式",
            "children": []
          },
          {
            "level": 3,
            "title": "生态系统文件方式",
            "slug": "生态系统文件方式",
            "link": "#生态系统文件方式",
            "children": []
          },
          {
            "level": 3,
            "title": "好的实践：NODE_ENV 变量",
            "slug": "好的实践-node-env-变量",
            "link": "#好的实践-node-env-变量",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "集成 - 云服务器提供商",
        "slug": "集成-云服务器提供商",
        "link": "#集成-云服务器提供商",
        "children": []
      },
      {
        "level": 2,
        "title": "【思考】Node.js 应用线上部署",
        "slug": "【思考】node-js-应用线上部署",
        "link": "#【思考】node-js-应用线上部署",
        "children": [
          {
            "level": 3,
            "title": "不使用 PM2",
            "slug": "不使用-pm2",
            "link": "#不使用-pm2",
            "children": []
          },
          {
            "level": 3,
            "title": "使用 PM2 的 reload",
            "slug": "使用-pm2-的-reload",
            "link": "#使用-pm2-的-reload",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/development-skills/nodejs/pm2.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Node Server",
    "headers": [
      {
        "level": 2,
        "title": "后端服务器接口探活",
        "slug": "后端服务器接口探活",
        "link": "#后端服务器接口探活",
        "children": []
      },
      {
        "level": 2,
        "title": "禁止缓存",
        "slug": "禁止缓存",
        "link": "#禁止缓存",
        "children": []
      },
      {
        "level": 2,
        "title": "设备 ID",
        "slug": "设备-id",
        "link": "#设备-id",
        "children": [
          {
            "level": 3,
            "title": "Android/iOS",
            "slug": "android-ios",
            "link": "#android-ios",
            "children": []
          },
          {
            "level": 3,
            "title": "WEB h5",
            "slug": "web-h5",
            "link": "#web-h5",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/development-skills/nodejs/server.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "语义化版本",
    "headers": [
      {
        "level": 2,
        "title": "基本原则",
        "slug": "基本原则",
        "link": "#基本原则",
        "children": []
      },
      {
        "level": 2,
        "title": "语义化版本",
        "slug": "语义化版本-1",
        "link": "#语义化版本-1",
        "children": [
          {
            "level": 3,
            "title": "包的初始化版本",
            "slug": "包的初始化版本",
            "link": "#包的初始化版本",
            "children": []
          },
          {
            "level": 3,
            "title": "pre release 版本",
            "slug": "pre-release-版本",
            "link": "#pre-release-版本",
            "children": []
          },
          {
            "level": 3,
            "title": "已发布包如何增加版本号",
            "slug": "已发布包如何增加版本号",
            "link": "#已发布包如何增加版本号",
            "children": []
          },
          {
            "level": 3,
            "title": "package.json 里如何指定版本更新类型",
            "slug": "package-json-里如何指定版本更新类型",
            "link": "#package-json-里如何指定版本更新类型",
            "children": []
          },
          {
            "level": 3,
            "title": "参考",
            "slug": "参考",
            "link": "#参考",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "发版规范",
        "slug": "发版规范",
        "link": "#发版规范",
        "children": [
          {
            "level": 3,
            "title": "npm version 命令",
            "slug": "npm-version-命令",
            "link": "#npm-version-命令",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/semantic-version.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Monorepo",
    "headers": [
      {
        "level": 2,
        "title": "Lerna",
        "slug": "lerna",
        "link": "#lerna",
        "children": []
      },
      {
        "level": 2,
        "title": "Yarn Workspaces",
        "slug": "yarn-workspaces",
        "link": "#yarn-workspaces",
        "children": [
          {
            "level": 3,
            "title": "Workspaces 的依赖安装",
            "slug": "workspaces-的依赖安装",
            "link": "#workspaces-的依赖安装",
            "children": []
          },
          {
            "level": 3,
            "title": "Workspaces 的发布问题",
            "slug": "workspaces-的发布问题",
            "link": "#workspaces-的发布问题",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "wsrun",
        "slug": "wsrun",
        "link": "#wsrun",
        "children": []
      }
    ],
    "path": "/front-end-engineering/environment/repository/monorepo.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "自动化测试",
    "headers": [
      {
        "level": 2,
        "title": "UI 自动化测试",
        "slug": "ui-自动化测试",
        "link": "#ui-自动化测试",
        "children": [
          {
            "level": 3,
            "title": "业务痛点",
            "slug": "业务痛点",
            "link": "#业务痛点",
            "children": []
          },
          {
            "level": 3,
            "title": "技术方案",
            "slug": "技术方案",
            "link": "#技术方案",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "接口自动化测试",
        "slug": "接口自动化测试",
        "link": "#接口自动化测试",
        "children": []
      }
    ],
    "path": "/front-end-engineering/frontend-stability-construction/engineering-construction/automated-testing.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "7. 工程建设：稳定性的基石",
    "headers": [
      {
        "level": 2,
        "title": "实验环境",
        "slug": "实验环境",
        "link": "#实验环境",
        "children": [
          {
            "level": 3,
            "title": "环境配置",
            "slug": "环境配置",
            "link": "#环境配置",
            "children": []
          },
          {
            "level": 3,
            "title": "兼容性测试",
            "slug": "兼容性测试",
            "link": "#兼容性测试",
            "children": []
          },
          {
            "level": 3,
            "title": "性能测试",
            "slug": "性能测试",
            "link": "#性能测试",
            "children": []
          },
          {
            "level": 3,
            "title": "回归测试",
            "slug": "回归测试",
            "link": "#回归测试",
            "children": []
          },
          {
            "level": 3,
            "title": "质量评估",
            "slug": "质量评估",
            "link": "#质量评估",
            "children": []
          },
          {
            "level": 3,
            "title": "总结",
            "slug": "总结",
            "link": "#总结",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "CI/CD",
        "slug": "ci-cd",
        "link": "#ci-cd",
        "children": []
      },
      {
        "level": 2,
        "title": "自动化测试",
        "slug": "自动化测试",
        "link": "#自动化测试",
        "children": []
      }
    ],
    "path": "/front-end-engineering/frontend-stability-construction/engineering-construction/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "2. 全链路监控：稳定性的守护者",
    "headers": [
      {
        "level": 2,
        "title": "全链路监控项",
        "slug": "全链路监控项",
        "link": "#全链路监控项",
        "children": [
          {
            "level": 3,
            "title": "请求追踪",
            "slug": "请求追踪",
            "link": "#请求追踪",
            "children": []
          },
          {
            "level": 3,
            "title": "接口监控",
            "slug": "接口监控",
            "link": "#接口监控",
            "children": []
          },
          {
            "level": 3,
            "title": "网络监控",
            "slug": "网络监控",
            "link": "#网络监控",
            "children": []
          },
          {
            "level": 3,
            "title": "服务监控",
            "slug": "服务监控",
            "link": "#服务监控",
            "children": []
          },
          {
            "level": 3,
            "title": "业务监控",
            "slug": "业务监控",
            "link": "#业务监控",
            "children": []
          },
          {
            "level": 3,
            "title": "智能关联",
            "slug": "智能关联",
            "link": "#智能关联",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "构建全链路监控系统",
        "slug": "构建全链路监控系统",
        "link": "#构建全链路监控系统",
        "children": [
          {
            "level": 3,
            "title": "需求调研与方案设计",
            "slug": "需求调研与方案设计",
            "link": "#需求调研与方案设计",
            "children": []
          },
          {
            "level": 3,
            "title": "监控 SDK  开发",
            "slug": "监控-sdk-开发",
            "link": "#监控-sdk-开发",
            "children": []
          },
          {
            "level": 3,
            "title": "搭建日志和监控服务",
            "slug": "搭建日志和监控服务",
            "link": "#搭建日志和监控服务",
            "children": []
          },
          {
            "level": 3,
            "title": "可视化展示搭建",
            "slug": "可视化展示搭建",
            "link": "#可视化展示搭建",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/frontend-stability-construction/full-link-monitoring/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CDN 容灾",
    "headers": [
      {
        "level": 2,
        "title": "目标",
        "slug": "目标",
        "link": "#目标",
        "children": []
      }
    ],
    "path": "/front-end-engineering/frontend-stability-construction/high-availability-architecture/cdn-disaster-tolerance.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "3. 高可用架构：稳定性的核心",
    "headers": [
      {
        "level": 2,
        "title": "请求冗余",
        "slug": "请求冗余",
        "link": "#请求冗余",
        "children": []
      },
      {
        "level": 2,
        "title": "服务降级",
        "slug": "服务降级",
        "link": "#服务降级",
        "children": []
      },
      {
        "level": 2,
        "title": "灾备切换",
        "slug": "灾备切换",
        "link": "#灾备切换",
        "children": []
      },
      {
        "level": 2,
        "title": "前端限流",
        "slug": "前端限流",
        "link": "#前端限流",
        "children": []
      },
      {
        "level": 2,
        "title": "离线化方案",
        "slug": "离线化方案",
        "link": "#离线化方案",
        "children": []
      },
      {
        "level": 2,
        "title": "故障隔离",
        "slug": "故障隔离",
        "link": "#故障隔离",
        "children": []
      },
      {
        "level": 2,
        "title": "后端容错",
        "slug": "后端容错",
        "link": "#后端容错",
        "children": []
      },
      {
        "level": 2,
        "title": "模块化与组件化",
        "slug": "模块化与组件化",
        "link": "#模块化与组件化",
        "children": []
      }
    ],
    "path": "/front-end-engineering/frontend-stability-construction/high-availability-architecture/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "1. 可观测体系：稳定性的前提",
    "headers": [
      {
        "level": 2,
        "title": "监控指标体系",
        "slug": "监控指标体系",
        "link": "#监控指标体系",
        "children": [
          {
            "level": 3,
            "title": "用户体验相关",
            "slug": "用户体验相关",
            "link": "#用户体验相关",
            "children": []
          },
          {
            "level": 3,
            "title": "页面健康相关",
            "slug": "页面健康相关",
            "link": "#页面健康相关",
            "children": []
          },
          {
            "level": 3,
            "title": "业务转化相关",
            "slug": "业务转化相关",
            "link": "#业务转化相关",
            "children": []
          },
          {
            "level": 3,
            "title": "其他正常指标",
            "slug": "其他正常指标",
            "link": "#其他正常指标",
            "children": []
          },
          {
            "level": 3,
            "title": "指标维度说明",
            "slug": "指标维度说明",
            "link": "#指标维度说明",
            "children": []
          },
          {
            "level": 3,
            "title": "指标另一种分类",
            "slug": "指标另一种分类",
            "link": "#指标另一种分类",
            "children": []
          },
          {
            "level": 3,
            "title": "总结",
            "slug": "总结",
            "link": "#总结",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "监控阶段",
        "slug": "监控阶段",
        "link": "#监控阶段",
        "children": []
      },
      {
        "level": 2,
        "title": "监控策略",
        "slug": "监控策略",
        "link": "#监控策略",
        "children": []
      }
    ],
    "path": "/front-end-engineering/frontend-stability-construction/observable-system/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "6. 流程机制：稳定性的保障",
    "headers": [
      {
        "level": 2,
        "title": "前端质量周洞察",
        "slug": "前端质量周洞察",
        "link": "#前端质量周洞察",
        "children": []
      },
      {
        "level": 2,
        "title": "灰度发布",
        "slug": "灰度发布",
        "link": "#灰度发布",
        "children": []
      },
      {
        "level": 2,
        "title": "故障应急机制",
        "slug": "故障应急机制",
        "link": "#故障应急机制",
        "children": []
      }
    ],
    "path": "/front-end-engineering/frontend-stability-construction/processs-mechanism/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "4. 性能管理：稳定性的保证",
    "headers": [
      {
        "level": 2,
        "title": "性能指标",
        "slug": "性能指标",
        "link": "#性能指标",
        "children": []
      },
      {
        "level": 2,
        "title": "性能优化",
        "slug": "性能优化",
        "link": "#性能优化",
        "children": [
          {
            "level": 3,
            "title": "资源优化",
            "slug": "资源优化",
            "link": "#资源优化",
            "children": []
          },
          {
            "level": 3,
            "title": "代码优化",
            "slug": "代码优化",
            "link": "#代码优化",
            "children": []
          },
          {
            "level": 3,
            "title": "渲染优化",
            "slug": "渲染优化",
            "link": "#渲染优化",
            "children": []
          },
          {
            "level": 3,
            "title": "网络优化",
            "slug": "网络优化",
            "link": "#网络优化",
            "children": []
          },
          {
            "level": 3,
            "title": "异步加载",
            "slug": "异步加载",
            "link": "#异步加载",
            "children": []
          },
          {
            "level": 3,
            "title": "交互优化",
            "slug": "交互优化",
            "link": "#交互优化",
            "children": []
          },
          {
            "level": 3,
            "title": "兼容性和健壮性",
            "slug": "兼容性和健壮性",
            "link": "#兼容性和健壮性",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/frontend-stability-construction/performance/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "5. 风险治理：稳定性的屏障",
    "headers": [
      {
        "level": 2,
        "title": "告警管理",
        "slug": "告警管理",
        "link": "#告警管理",
        "children": []
      },
      {
        "level": 2,
        "title": "风险冒泡",
        "slug": "风险冒泡",
        "link": "#风险冒泡",
        "children": []
      }
    ],
    "path": "/front-end-engineering/frontend-stability-construction/risk-management/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Rollup",
    "headers": [
      {
        "level": 2,
        "title": "特性",
        "slug": "特性",
        "link": "#特性",
        "children": []
      },
      {
        "level": 2,
        "title": "常用的插件",
        "slug": "常用的插件",
        "link": "#常用的插件",
        "children": [
          {
            "level": 3,
            "title": "rollup-plugin-node-resolve",
            "slug": "rollup-plugin-node-resolve",
            "link": "#rollup-plugin-node-resolve",
            "children": []
          },
          {
            "level": 3,
            "title": "rollup-plugin-commonjs",
            "slug": "rollup-plugin-commonjs",
            "link": "#rollup-plugin-commonjs",
            "children": []
          },
          {
            "level": 3,
            "title": "rollup-plugin-babel",
            "slug": "rollup-plugin-babel",
            "link": "#rollup-plugin-babel",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "完整配置",
        "slug": "完整配置",
        "link": "#完整配置",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/build/rollup.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Source Map",
    "headers": [
      {
        "level": 2,
        "title": "标准",
        "slug": "标准",
        "link": "#标准",
        "children": []
      },
      {
        "level": 2,
        "title": "结构",
        "slug": "结构",
        "link": "#结构",
        "children": [
          {
            "level": 3,
            "title": "Base VLQ 编码是如何让 Source Map 文件尽量小的？",
            "slug": "base-vlq-编码是如何让-source-map-文件尽量小的",
            "link": "#base-vlq-编码是如何让-source-map-文件尽量小的",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "前提知识",
        "slug": "前提知识",
        "link": "#前提知识",
        "children": []
      },
      {
        "level": 2,
        "title": "疑问",
        "slug": "疑问",
        "link": "#疑问",
        "children": [
          {
            "level": 3,
            "title": "Source Map 文件是否影响网页性能？",
            "slug": "source-map-文件是否影响网页性能",
            "link": "#source-map-文件是否影响网页性能",
            "children": []
          },
          {
            "level": 3,
            "title": "浏览器如何知道源文件与 Source Map 文件的映射关系？",
            "slug": "浏览器如何知道源文件与-source-map-文件的映射关系",
            "link": "#浏览器如何知道源文件与-source-map-文件的映射关系",
            "children": []
          },
          {
            "level": 3,
            "title": "",
            "slug": "",
            "link": "#",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/tools/build/source-map.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Changelog",
    "headers": [
      {
        "level": 2,
        "title": "conventional-changelog-cli 自动生成日志",
        "slug": "conventional-changelog-cli-自动生成日志",
        "link": "#conventional-changelog-cli-自动生成日志",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/publish/changelog.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Axios",
    "headers": [
      {
        "level": 2,
        "title": "源码分析",
        "slug": "源码分析",
        "link": "#源码分析",
        "children": [
          {
            "level": 3,
            "title": "拦截器的实现",
            "slug": "拦截器的实现",
            "link": "#拦截器的实现",
            "children": []
          },
          {
            "level": 3,
            "title": "适配器的实现",
            "slug": "适配器的实现",
            "link": "#适配器的实现",
            "children": []
          },
          {
            "level": 3,
            "title": "取消请求",
            "slug": "取消请求",
            "link": "#取消请求",
            "children": []
          },
          {
            "level": 3,
            "title": "防御 CSRF 攻击",
            "slug": "防御-csrf-攻击",
            "link": "#防御-csrf-攻击",
            "children": []
          },
          {
            "level": 3,
            "title": "错误处理",
            "slug": "错误处理",
            "link": "#错误处理",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/tools/runtime/axios.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Nest.js",
    "headers": [
      {
        "level": 2,
        "title": "生命周期",
        "slug": "生命周期",
        "link": "#生命周期",
        "children": []
      }
    ],
    "path": "/full-stack/backend/nestjs/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "ClickHouse",
    "headers": [
      {
        "level": 2,
        "title": "常用函数",
        "slug": "常用函数",
        "link": "#常用函数",
        "children": [
          {
            "level": 3,
            "title": "URL 操作",
            "slug": "url-操作",
            "link": "#url-操作",
            "children": []
          },
          {
            "level": 3,
            "title": "JSON 操作",
            "slug": "json-操作",
            "link": "#json-操作",
            "children": []
          },
          {
            "level": 3,
            "title": "字符串方法",
            "slug": "字符串方法",
            "link": "#字符串方法",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "常用语法",
        "slug": "常用语法",
        "link": "#常用语法",
        "children": [
          {
            "level": 3,
            "title": "CASE WHEN",
            "slug": "case-when",
            "link": "#case-when",
            "children": []
          },
          {
            "level": 3,
            "title": "WITH",
            "slug": "with",
            "link": "#with",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "常用场景",
        "slug": "常用场景",
        "link": "#常用场景",
        "children": [
          {
            "level": 3,
            "title": "成功率",
            "slug": "成功率",
            "link": "#成功率",
            "children": []
          },
          {
            "level": 3,
            "title": "今日昨日对比",
            "slug": "今日昨日对比",
            "link": "#今日昨日对比",
            "children": []
          },
          {
            "level": 3,
            "title": "今日昨日成功率报警",
            "slug": "今日昨日成功率报警",
            "link": "#今日昨日成功率报警",
            "children": []
          },
          {
            "level": 3,
            "title": "最近两小时新出现的 JS 错误影响的用户数",
            "slug": "最近两小时新出现的-js-错误影响的用户数",
            "link": "#最近两小时新出现的-js-错误影响的用户数",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "坑",
        "slug": "坑",
        "link": "#坑",
        "children": [
          {
            "level": 3,
            "title": "公司的 Grafana 里使用 ClickHouse 时不支持 JOIN 子查询有别名",
            "slug": "公司的-grafana-里使用-clickhouse-时不支持-join-子查询有别名",
            "link": "#公司的-grafana-里使用-clickhouse-时不支持-join-子查询有别名",
            "children": []
          }
        ]
      }
    ],
    "path": "/full-stack/data-management/data-observability/clickhouse.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "SQL",
    "headers": [
      {
        "level": 2,
        "title": "SQL 语法",
        "slug": "sql-语法",
        "link": "#sql-语法",
        "children": [
          {
            "level": 3,
            "title": "连接查询",
            "slug": "连接查询",
            "link": "#连接查询",
            "children": []
          }
        ]
      }
    ],
    "path": "/full-stack/data-management/data-observability/sql.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Kafka",
    "headers": [
      {
        "level": 2,
        "title": "专用术语",
        "slug": "专用术语",
        "link": "#专用术语",
        "children": []
      },
      {
        "level": 2,
        "title": "Partition",
        "slug": "partition",
        "link": "#partition",
        "children": [
          {
            "level": 3,
            "title": "分区规则",
            "slug": "分区规则",
            "link": "#分区规则",
            "children": []
          },
          {
            "level": 3,
            "title": "Replication",
            "slug": "replication",
            "link": "#replication",
            "children": []
          },
          {
            "level": 3,
            "title": "Partition 与 Replication 放置策略",
            "slug": "partition-与-replication-放置策略",
            "link": "#partition-与-replication-放置策略",
            "children": []
          },
          {
            "level": 3,
            "title": "Replication 同步策略",
            "slug": "replication-同步策略",
            "link": "#replication-同步策略",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Broker",
        "slug": "broker",
        "link": "#broker",
        "children": [
          {
            "level": 3,
            "title": "Broker 可用性判断",
            "slug": "broker-可用性判断",
            "link": "#broker-可用性判断",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Consumer/Consumer Group",
        "slug": "consumer-consumer-group",
        "link": "#consumer-consumer-group",
        "children": []
      },
      {
        "level": 2,
        "title": "Kafka 生产过程",
        "slug": "kafka-生产过程",
        "link": "#kafka-生产过程",
        "children": []
      },
      {
        "level": 2,
        "title": "Kafka 消费过程",
        "slug": "kafka-消费过程",
        "link": "#kafka-消费过程",
        "children": []
      },
      {
        "level": 2,
        "title": "Kafka 文件存储机制",
        "slug": "kafka-文件存储机制",
        "link": "#kafka-文件存储机制",
        "children": [
          {
            "level": 3,
            "title": "message 物理结构",
            "slug": "message-物理结构",
            "link": "#message-物理结构",
            "children": []
          },
          {
            "level": 3,
            "title": "数据删除策略",
            "slug": "数据删除策略",
            "link": "#数据删除策略",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/full-stack/data-management/kafka/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Docker",
    "headers": [
      {
        "level": 2,
        "title": "构建镜像",
        "slug": "构建镜像",
        "link": "#构建镜像",
        "children": [
          {
            "level": 3,
            "title": "指令",
            "slug": "指令",
            "link": "#指令",
            "children": []
          }
        ]
      }
    ],
    "path": "/full-stack/operating-system/docker/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "GIT",
    "headers": [
      {
        "level": 2,
        "title": "git 文件夹名称/文件名称 不区分大小写",
        "slug": "git-文件夹名称-文件名称-不区分大小写",
        "link": "#git-文件夹名称-文件名称-不区分大小写",
        "children": []
      }
    ],
    "path": "/full-stack/operating-system/git/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Git 命令",
    "headers": [
      {
        "level": 2,
        "title": "设置账号信息",
        "slug": "设置账号信息",
        "link": "#设置账号信息",
        "children": []
      },
      {
        "level": 2,
        "title": "分支",
        "slug": "分支",
        "link": "#分支",
        "children": [
          {
            "level": 3,
            "title": "创建分支",
            "slug": "创建分支",
            "link": "#创建分支",
            "children": []
          },
          {
            "level": 3,
            "title": "检出分支",
            "slug": "检出分支",
            "link": "#检出分支",
            "children": []
          },
          {
            "level": 3,
            "title": "创建分支并检出",
            "slug": "创建分支并检出",
            "link": "#创建分支并检出",
            "children": []
          },
          {
            "level": 3,
            "title": "合并分支",
            "slug": "合并分支",
            "link": "#合并分支",
            "children": []
          },
          {
            "level": 3,
            "title": "删除分支",
            "slug": "删除分支",
            "link": "#删除分支",
            "children": []
          },
          {
            "level": 3,
            "title": "查看分支",
            "slug": "查看分支",
            "link": "#查看分支",
            "children": []
          },
          {
            "level": 3,
            "title": "查找丢失的 commit 或 branch",
            "slug": "查找丢失的-commit-或-branch",
            "link": "#查找丢失的-commit-或-branch",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "远程仓库",
        "slug": "远程仓库",
        "link": "#远程仓库",
        "children": [
          {
            "level": 3,
            "title": "查看",
            "slug": "查看",
            "link": "#查看",
            "children": []
          },
          {
            "level": 3,
            "title": "添加",
            "slug": "添加",
            "link": "#添加",
            "children": []
          },
          {
            "level": 3,
            "title": "重命名",
            "slug": "重命名",
            "link": "#重命名",
            "children": []
          },
          {
            "level": 3,
            "title": "移除",
            "slug": "移除",
            "link": "#移除",
            "children": []
          },
          {
            "level": 3,
            "title": "抓取远程仓库数据",
            "slug": "抓取远程仓库数据",
            "link": "#抓取远程仓库数据",
            "children": []
          },
          {
            "level": 3,
            "title": "合并远程分支",
            "slug": "合并远程分支",
            "link": "#合并远程分支",
            "children": []
          },
          {
            "level": 3,
            "title": "创建并检出远程分支的本地分支",
            "slug": "创建并检出远程分支的本地分支",
            "link": "#创建并检出远程分支的本地分支",
            "children": []
          },
          {
            "level": 3,
            "title": "推送分支",
            "slug": "推送分支",
            "link": "#推送分支",
            "children": []
          },
          {
            "level": 3,
            "title": "追踪分支",
            "slug": "追踪分支",
            "link": "#追踪分支",
            "children": []
          },
          {
            "level": 3,
            "title": "拉取远程分支",
            "slug": "拉取远程分支",
            "link": "#拉取远程分支",
            "children": []
          },
          {
            "level": 3,
            "title": "删除远程分支",
            "slug": "删除远程分支",
            "link": "#删除远程分支",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "变基",
        "slug": "变基",
        "link": "#变基",
        "children": [
          {
            "level": 3,
            "title": "风险",
            "slug": "风险",
            "link": "#风险",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "储藏",
        "slug": "储藏",
        "link": "#储藏",
        "children": [
          {
            "level": 3,
            "title": "储藏文件",
            "slug": "储藏文件",
            "link": "#储藏文件",
            "children": []
          },
          {
            "level": 3,
            "title": "查看储藏",
            "slug": "查看储藏",
            "link": "#查看储藏",
            "children": []
          },
          {
            "level": 3,
            "title": "应用储藏",
            "slug": "应用储藏",
            "link": "#应用储藏",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "清理工作目录",
        "slug": "清理工作目录",
        "link": "#清理工作目录",
        "children": []
      },
      {
        "level": 2,
        "title": "检查修改、撤销操作",
        "slug": "检查修改、撤销操作",
        "link": "#检查修改、撤销操作",
        "children": [
          {
            "level": 3,
            "title": "检查修改",
            "slug": "检查修改",
            "link": "#检查修改",
            "children": []
          },
          {
            "level": 3,
            "title": "撤销操作",
            "slug": "撤销操作",
            "link": "#撤销操作",
            "children": []
          }
        ]
      }
    ],
    "path": "/full-stack/operating-system/git/git-command.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Git commit 规范",
    "headers": [
      {
        "level": 2,
        "title": "格式",
        "slug": "格式",
        "link": "#格式",
        "children": [
          {
            "level": 3,
            "title": "Header",
            "slug": "header",
            "link": "#header",
            "children": []
          },
          {
            "level": 3,
            "title": "Body",
            "slug": "body",
            "link": "#body",
            "children": []
          },
          {
            "level": 3,
            "title": "Footer",
            "slug": "footer",
            "link": "#footer",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "自动化验证提交信息",
        "slug": "自动化验证提交信息",
        "link": "#自动化验证提交信息",
        "children": []
      }
    ],
    "path": "/full-stack/operating-system/git/git-commit-guidelines.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Gitlab",
    "headers": [
      {
        "level": 2,
        "title": "git/github/gitlab",
        "slug": "git-github-gitlab",
        "link": "#git-github-gitlab",
        "children": []
      },
      {
        "level": 2,
        "title": "使用 gitlab 为什么要生成公钥和私钥？",
        "slug": "使用-gitlab-为什么要生成公钥和私钥",
        "link": "#使用-gitlab-为什么要生成公钥和私钥",
        "children": []
      },
      {
        "level": 2,
        "title": "生成并设置SSH Key",
        "slug": "生成并设置ssh-key",
        "link": "#生成并设置ssh-key",
        "children": [
          {
            "level": 3,
            "title": "步骤1. 检查是否已经存在 SSH Key",
            "slug": "步骤1-检查是否已经存在-ssh-key",
            "link": "#步骤1-检查是否已经存在-ssh-key",
            "children": []
          },
          {
            "level": 3,
            "title": "步骤2. 生成 SSH Key",
            "slug": "步骤2-生成-ssh-key",
            "link": "#步骤2-生成-ssh-key",
            "children": []
          },
          {
            "level": 3,
            "title": "步骤3. 将 SSH Key 的公钥添加到 gitlab/github 中",
            "slug": "步骤3-将-ssh-key-的公钥添加到-gitlab-github-中",
            "link": "#步骤3-将-ssh-key-的公钥添加到-gitlab-github-中",
            "children": []
          }
        ]
      }
    ],
    "path": "/full-stack/operating-system/git/gitlab.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CLI",
    "headers": [
      {
        "level": 2,
        "title": "知识点",
        "slug": "知识点",
        "link": "#知识点",
        "children": [
          {
            "level": 3,
            "title": "命令行 -- 与 - 的区别",
            "slug": "命令行-与-的区别",
            "link": "#命令行-与-的区别",
            "children": []
          },
          {
            "level": 3,
            "title": "用户默认目录",
            "slug": "用户默认目录",
            "link": "#用户默认目录",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "常用命令行工具",
        "slug": "常用命令行工具",
        "link": "#常用命令行工具",
        "children": [
          {
            "level": 3,
            "title": "unrar",
            "slug": "unrar",
            "link": "#unrar",
            "children": []
          },
          {
            "level": 3,
            "title": "rsync",
            "slug": "rsync",
            "link": "#rsync",
            "children": []
          }
        ]
      }
    ],
    "path": "/full-stack/operating-system/linux/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "环境变量",
    "headers": [
      {
        "level": 2,
        "title": "查看环境变量",
        "slug": "查看环境变量",
        "link": "#查看环境变量",
        "children": []
      },
      {
        "level": 2,
        "title": "设置环境变量",
        "slug": "设置环境变量",
        "link": "#设置环境变量",
        "children": []
      },
      {
        "level": 2,
        "title": "PATH 变量",
        "slug": "path-变量",
        "link": "#path-变量",
        "children": []
      }
    ],
    "path": "/full-stack/operating-system/linux/environment-variables.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "glob 匹配模式",
    "headers": [
      {
        "level": 2,
        "title": "语法",
        "slug": "语法",
        "link": "#语法",
        "children": []
      },
      {
        "level": 2,
        "title": "Unix",
        "slug": "unix",
        "link": "#unix",
        "children": []
      },
      {
        "level": 2,
        "title": "文件/文件夹匹配",
        "slug": "文件-文件夹匹配",
        "link": "#文件-文件夹匹配",
        "children": []
      }
    ],
    "path": "/full-stack/operating-system/linux/glob.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Linux 命令",
    "headers": [
      {
        "level": 2,
        "title": "查看端口的使用情况",
        "slug": "查看端口的使用情况",
        "link": "#查看端口的使用情况",
        "children": [
          {
            "level": 3,
            "title": "查看特定端口是否被占用",
            "slug": "查看特定端口是否被占用",
            "link": "#查看特定端口是否被占用",
            "children": []
          },
          {
            "level": 3,
            "title": "查看端口使用情况",
            "slug": "查看端口使用情况",
            "link": "#查看端口使用情况",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "pwd 显示工作目录",
        "slug": "pwd-显示工作目录",
        "link": "#pwd-显示工作目录",
        "children": []
      },
      {
        "level": 2,
        "title": "mkdir：创建目录",
        "slug": "mkdir-创建目录",
        "link": "#mkdir-创建目录",
        "children": []
      },
      {
        "level": 2,
        "title": "rm：删除文件、目录",
        "slug": "rm-删除文件、目录",
        "link": "#rm-删除文件、目录",
        "children": []
      },
      {
        "level": 2,
        "title": "cat：查看文件",
        "slug": "cat-查看文件",
        "link": "#cat-查看文件",
        "children": []
      },
      {
        "level": 2,
        "title": "cp：复制文件",
        "slug": "cp-复制文件",
        "link": "#cp-复制文件",
        "children": []
      },
      {
        "level": 2,
        "title": "mv 移动、重命名文件",
        "slug": "mv-移动、重命名文件",
        "link": "#mv-移动、重命名文件",
        "children": []
      },
      {
        "level": 2,
        "title": "vi",
        "slug": "vi",
        "link": "#vi",
        "children": []
      },
      {
        "level": 2,
        "title": "仅查看文件",
        "slug": "仅查看文件",
        "link": "#仅查看文件",
        "children": []
      },
      {
        "level": 2,
        "title": "修改文件",
        "slug": "修改文件",
        "link": "#修改文件",
        "children": []
      },
      {
        "level": 2,
        "title": "rm 删除文件",
        "slug": "rm-删除文件",
        "link": "#rm-删除文件",
        "children": []
      },
      {
        "level": 2,
        "title": "命令别名",
        "slug": "命令别名",
        "link": "#命令别名",
        "children": [
          {
            "level": 3,
            "title": "设置命令的别名",
            "slug": "设置命令的别名",
            "link": "#设置命令的别名",
            "children": []
          },
          {
            "level": 3,
            "title": "清除别名",
            "slug": "清除别名",
            "link": "#清除别名",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "type 命令",
        "slug": "type-命令",
        "link": "#type-命令",
        "children": []
      },
      {
        "level": 2,
        "title": "grep 搜索",
        "slug": "grep-搜索",
        "link": "#grep-搜索",
        "children": []
      },
      {
        "level": 2,
        "title": "netstat",
        "slug": "netstat",
        "link": "#netstat",
        "children": []
      }
    ],
    "path": "/full-stack/operating-system/linux/linux-command.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Shell 脚本",
    "headers": [
      {
        "level": 2,
        "title": "常用代码",
        "slug": "常用代码",
        "link": "#常用代码",
        "children": []
      }
    ],
    "path": "/full-stack/operating-system/linux/shell.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Nginx",
    "headers": [
      {
        "level": 2,
        "title": "基本操作",
        "slug": "基本操作",
        "link": "#基本操作",
        "children": [
          {
            "level": 3,
            "title": "MAC 下安装 nginx",
            "slug": "mac-下安装-nginx",
            "link": "#mac-下安装-nginx",
            "children": []
          },
          {
            "level": 3,
            "title": "查找 nginx 配置文件路径",
            "slug": "查找-nginx-配置文件路径",
            "link": "#查找-nginx-配置文件路径",
            "children": []
          },
          {
            "level": 3,
            "title": "查看 nginx 监听的端口",
            "slug": "查看-nginx-监听的端口",
            "link": "#查看-nginx-监听的端口",
            "children": []
          },
          {
            "level": 3,
            "title": "nginx 基本命令",
            "slug": "nginx-基本命令",
            "link": "#nginx-基本命令",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "模块",
        "slug": "模块",
        "link": "#模块",
        "children": [
          {
            "level": 3,
            "title": "core functionality",
            "slug": "core-functionality",
            "link": "#core-functionality",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "健康检查",
        "slug": "健康检查",
        "link": "#健康检查",
        "children": [
          {
            "level": 3,
            "title": "被动检查模式",
            "slug": "被动检查模式",
            "link": "#被动检查模式",
            "children": []
          },
          {
            "level": 3,
            "title": "主动检查模式",
            "slug": "主动检查模式",
            "link": "#主动检查模式",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Nginx 错误码",
        "slug": "nginx-错误码",
        "link": "#nginx-错误码",
        "children": []
      }
    ],
    "path": "/full-stack/software/nginx/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "nginx.conf",
    "headers": [
      {
        "level": 2,
        "title": "配置示例",
        "slug": "配置示例",
        "link": "#配置示例",
        "children": [
          {
            "level": 3,
            "title": "全局块",
            "slug": "全局块",
            "link": "#全局块",
            "children": []
          },
          {
            "level": 3,
            "title": "events 块",
            "slug": "events-块",
            "link": "#events-块",
            "children": []
          },
          {
            "level": 3,
            "title": "http 块",
            "slug": "http-块",
            "link": "#http-块",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "模块",
        "slug": "模块",
        "link": "#模块",
        "children": [
          {
            "level": 3,
            "title": "Core functionality",
            "slug": "core-functionality",
            "link": "#core-functionality",
            "children": []
          },
          {
            "level": 3,
            "title": "ngx_http_core_module",
            "slug": "ngx-http-core-module",
            "link": "#ngx-http-core-module",
            "children": []
          },
          {
            "level": 3,
            "title": "upstream 模块",
            "slug": "upstream-模块",
            "link": "#upstream-模块",
            "children": []
          },
          {
            "level": 3,
            "title": "ngx_http_index_module",
            "slug": "ngx-http-index-module",
            "link": "#ngx-http-index-module",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/full-stack/software/nginx/nginx-conf.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "ngx_http_proxy_module 模块",
    "headers": [
      {
        "level": 2,
        "title": "指令",
        "slug": "指令",
        "link": "#指令",
        "children": [
          {
            "level": 3,
            "title": "proxy_pass",
            "slug": "proxy-pass",
            "link": "#proxy-pass",
            "children": []
          },
          {
            "level": 3,
            "title": "proxy_set_header",
            "slug": "proxy-set-header",
            "link": "#proxy-set-header",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "内嵌变量",
        "slug": "内嵌变量",
        "link": "#内嵌变量",
        "children": []
      }
    ],
    "path": "/full-stack/software/nginx/ngx_http_proxy_module.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "ngx_http_upstream_module 模块",
    "headers": [
      {
        "level": 2,
        "title": "配置示例",
        "slug": "配置示例",
        "link": "#配置示例",
        "children": []
      },
      {
        "level": 2,
        "title": "指令",
        "slug": "指令",
        "link": "#指令",
        "children": [
          {
            "level": 3,
            "title": "upstream",
            "slug": "upstream",
            "link": "#upstream",
            "children": []
          },
          {
            "level": 3,
            "title": "server",
            "slug": "server",
            "link": "#server",
            "children": []
          },
          {
            "level": 3,
            "title": "hash",
            "slug": "hash",
            "link": "#hash",
            "children": []
          },
          {
            "level": 3,
            "title": "ip_hash",
            "slug": "ip-hash",
            "link": "#ip-hash",
            "children": []
          }
        ]
      }
    ],
    "path": "/full-stack/software/nginx/ngx_http_upstream_module.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Nginx 实践",
    "headers": [
      {
        "level": 2,
        "title": "Vue MPA 项目配置 Nginx",
        "slug": "vue-mpa-项目配置-nginx",
        "link": "#vue-mpa-项目配置-nginx",
        "children": [
          {
            "level": 3,
            "title": "try_files",
            "slug": "try-files",
            "link": "#try-files",
            "children": []
          },
          {
            "level": 3,
            "title": "index",
            "slug": "index",
            "link": "#index",
            "children": []
          }
        ]
      }
    ],
    "path": "/full-stack/software/nginx/practices.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "IFC",
    "headers": [
      {
        "level": 2,
        "title": "术语及对应英文",
        "slug": "术语及对应英文",
        "link": "#术语及对应英文",
        "children": []
      },
      {
        "level": 2,
        "title": "行内元素",
        "slug": "行内元素",
        "link": "#行内元素",
        "children": [
          {
            "level": 3,
            "title": "非替换元素",
            "slug": "非替换元素",
            "link": "#非替换元素",
            "children": []
          },
          {
            "level": 3,
            "title": "可替换行内元素",
            "slug": "可替换行内元素",
            "link": "#可替换行内元素",
            "children": []
          },
          {
            "level": 3,
            "title": "关于 baseline",
            "slug": "关于-baseline",
            "link": "#关于-baseline",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "IFC 的产生",
        "slug": "ifc-的产生",
        "link": "#ifc-的产生",
        "children": []
      },
      {
        "level": 2,
        "title": "IFC 的作用",
        "slug": "ifc-的作用",
        "link": "#ifc-的作用",
        "children": []
      },
      {
        "level": 2,
        "title": "IFC 布局规则",
        "slug": "ifc-布局规则",
        "link": "#ifc-布局规则",
        "children": [
          {
            "level": 3,
            "title": "要点概述",
            "slug": "要点概述",
            "link": "#要点概述",
            "children": []
          },
          {
            "level": 3,
            "title": "行框、行内框",
            "slug": "行框、行内框",
            "link": "#行框、行内框",
            "children": []
          },
          {
            "level": 3,
            "title": "行内元素的一些计算",
            "slug": "行内元素的一些计算",
            "link": "#行内元素的一些计算",
            "children": []
          },
          {
            "level": 3,
            "title": "块级元素内容高度的确定",
            "slug": "块级元素内容高度的确定",
            "link": "#块级元素内容高度的确定",
            "children": []
          },
          {
            "level": 3,
            "title": "行框基线的确定",
            "slug": "行框基线的确定",
            "link": "#行框基线的确定",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/layouts/ifc/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "border-image",
    "headers": [
      {
        "level": 2,
        "title": "学习文档",
        "slug": "学习文档",
        "link": "#学习文档",
        "children": []
      },
      {
        "level": 2,
        "title": "边框渐变",
        "slug": "边框渐变",
        "link": "#边框渐变",
        "children": [
          {
            "level": 3,
            "title": "实现方式一：border-image",
            "slug": "实现方式一-border-image",
            "link": "#实现方式一-border-image",
            "children": []
          },
          {
            "level": 3,
            "title": "实现方式二：background*2",
            "slug": "实现方式二-background-2",
            "link": "#实现方式二-background-2",
            "children": []
          },
          {
            "level": 3,
            "title": "效果演示",
            "slug": "效果演示",
            "link": "#效果演示",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/topics/border/border-image.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "flex 布局",
    "headers": [
      {
        "level": 2,
        "title": "flex 父容器宽度无法自适应子元素宽度",
        "slug": "flex-父容器宽度无法自适应子元素宽度",
        "link": "#flex-父容器宽度无法自适应子元素宽度",
        "children": []
      },
      {
        "level": 2,
        "title": "flex布局最后一行列表左对齐",
        "slug": "flex布局最后一行列表左对齐",
        "link": "#flex布局最后一行列表左对齐",
        "children": []
      }
    ],
    "path": "/css/topics/flex/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "斐波那契数列",
    "headers": [
      {
        "level": 2,
        "title": "递归 + 缓存",
        "slug": "递归-缓存",
        "link": "#递归-缓存",
        "children": []
      },
      {
        "level": 2,
        "title": "动态规划",
        "slug": "动态规划",
        "link": "#动态规划",
        "children": []
      },
      {
        "level": 2,
        "title": "矩阵快速幂",
        "slug": "矩阵快速幂",
        "link": "#矩阵快速幂",
        "children": []
      }
    ],
    "path": "/interview/algorithm/others/fibonacci-sequence.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】二分查找",
    "headers": [],
    "path": "/interview/algorithm/interview/binary-search.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "算法",
    "headers": [],
    "path": "/interview/algorithm/interview/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级】求二叉树所有节点个数",
    "headers": [],
    "path": "/interview/algorithm/interview/the-all-nodes-of-binary-tree.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效",
    "headers": [],
    "path": "/interview/algorithm/interview/the-self-closing-string.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "排序算法对比",
    "headers": [],
    "path": "/interview/algorithm/sorting-algorithm/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】事件代理",
    "headers": [],
    "path": "/interview/browser/dom/event-delegation.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级】ul 翻转",
    "headers": [
      {
        "level": 2,
        "title": "参考答案",
        "slug": "参考答案",
        "link": "#参考答案",
        "children": []
      }
    ],
    "path": "/interview/browser/dom/flip-ul.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【高级】回答问题，说明属性（DOM Property）和特性（HTML Attribute）的区别与联系",
    "headers": [],
    "path": "/interview/browser/dom/the-difference-between-dom-property-and-html-attribute.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级】如何实现内容高度不够时 footer 吸底的效果",
    "headers": [
      {
        "level": 2,
        "title": "参考答案",
        "slug": "参考答案",
        "link": "#参考答案",
        "children": [
          {
            "level": 3,
            "title": "方案一：min-height + absolute",
            "slug": "方案一-min-height-absolute",
            "link": "#方案一-min-height-absolute",
            "children": []
          },
          {
            "level": 3,
            "title": "方案二：flexbox",
            "slug": "方案二-flexbox",
            "link": "#方案二-flexbox",
            "children": []
          },
          {
            "level": 3,
            "title": "方案三：min-height + calc",
            "slug": "方案三-min-height-calc",
            "link": "#方案三-min-height-calc",
            "children": []
          }
        ]
      }
    ],
    "path": "/interview/css/layout/footer-attach-to-the-bottom.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级】有如下 DOM 结构，要求仅补充 style 中的部分实现布局要求",
    "headers": [],
    "path": "/interview/css/layout/two-columns-layout.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】加/不加 position 属性，分别如何显示？",
    "headers": [
      {
        "level": 2,
        "title": "题目",
        "slug": "题目",
        "link": "#题目",
        "children": []
      },
      {
        "level": 2,
        "title": "参考答案",
        "slug": "参考答案",
        "link": "#参考答案",
        "children": []
      }
    ],
    "path": "/interview/css/position/position-question-1.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级-好题】one、two 哪个 div 在 z 轴的上面",
    "headers": [
      {
        "level": 2,
        "title": "题目",
        "slug": "题目",
        "link": "#题目",
        "children": []
      },
      {
        "level": 2,
        "title": "参考答案",
        "slug": "参考答案",
        "link": "#参考答案",
        "children": []
      }
    ],
    "path": "/interview/css/position/position-question-2.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "堆",
    "headers": [
      {
        "level": 2,
        "title": "堆的实现",
        "slug": "堆的实现",
        "link": "#堆的实现",
        "children": [
          {
            "level": 3,
            "title": "堆的类定义",
            "slug": "堆的类定义",
            "link": "#堆的类定义",
            "children": []
          },
          {
            "level": 3,
            "title": "堆的实现源码",
            "slug": "堆的实现源码",
            "link": "#堆的实现源码",
            "children": []
          },
          {
            "level": 3,
            "title": "复杂度分析",
            "slug": "复杂度分析",
            "link": "#复杂度分析",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "大顶堆和小顶堆",
        "slug": "大顶堆和小顶堆",
        "link": "#大顶堆和小顶堆",
        "children": []
      },
      {
        "level": 2,
        "title": "应用",
        "slug": "应用",
        "link": "#应用",
        "children": [
          {
            "level": 3,
            "title": "获取无序数组里第 K 大的数",
            "slug": "获取无序数组里第-k-大的数",
            "link": "#获取无序数组里第-k-大的数",
            "children": []
          }
        ]
      }
    ],
    "path": "/interview/data-structure/heap/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】用两个栈，实现一个队列",
    "headers": [],
    "path": "/interview/data-structure/stack-queue/implement-queue-with-two-stacks.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "栈和队列",
    "headers": [],
    "path": "/interview/data-structure/stack-queue/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "JavaScript 框架/库",
    "headers": [],
    "path": "/interview/javascript/javascript-libs/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vue",
    "headers": [
      {
        "level": 2,
        "title": "【初级】v-if 和 v-show 的区别和应用场景",
        "slug": "【初级】v-if-和-v-show-的区别和应用场景",
        "link": "#【初级】v-if-和-v-show-的区别和应用场景",
        "children": []
      },
      {
        "level": 2,
        "title": "【中级】Vue 的依赖收集",
        "slug": "【中级】vue-的依赖收集",
        "link": "#【中级】vue-的依赖收集",
        "children": []
      },
      {
        "level": 2,
        "title": "【中级】nextTick 是如何实现的？数据响应式变化时，为什么要使用 nextTick？",
        "slug": "【中级】nexttick-是如何实现的-数据响应式变化时-为什么要使用-nexttick",
        "link": "#【中级】nexttick-是如何实现的-数据响应式变化时-为什么要使用-nexttick",
        "children": []
      },
      {
        "level": 2,
        "title": "【中级】Vue 2.x的响应式是怎么做的？这种做法有什么缺点？",
        "slug": "【中级】vue-2-x的响应式是怎么做的-这种做法有什么缺点",
        "link": "#【中级】vue-2-x的响应式是怎么做的-这种做法有什么缺点",
        "children": []
      },
      {
        "level": 2,
        "title": "【中级】renderWatcher",
        "slug": "【中级】renderwatcher",
        "link": "#【中级】renderwatcher",
        "children": []
      }
    ],
    "path": "/interview/javascript/javascript-libs/vue.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "调试",
    "headers": [
      {
        "level": 2,
        "title": "APP 内",
        "slug": "app-内",
        "link": "#app-内",
        "children": [
          {
            "level": 3,
            "title": "微信",
            "slug": "微信",
            "link": "#微信",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Chrome 调试",
        "slug": "chrome-调试",
        "link": "#chrome-调试",
        "children": [
          {
            "level": 3,
            "title": "远程调试",
            "slug": "远程调试",
            "link": "#远程调试",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Charles",
        "slug": "charles",
        "link": "#charles",
        "children": [
          {
            "level": 3,
            "title": "iOS 安装证书",
            "slug": "ios-安装证书",
            "link": "#ios-安装证书",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "浏览器控制台",
        "slug": "浏览器控制台",
        "link": "#浏览器控制台",
        "children": [
          {
            "level": 3,
            "title": "$ 符号",
            "slug": "符号",
            "link": "#符号",
            "children": []
          },
          {
            "level": 3,
            "title": "事件相关",
            "slug": "事件相关",
            "link": "#事件相关",
            "children": []
          },
          {
            "level": 3,
            "title": "debugger",
            "slug": "debugger",
            "link": "#debugger",
            "children": []
          },
          {
            "level": 3,
            "title": "断点调试",
            "slug": "断点调试",
            "link": "#断点调试",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/js/error-handling/debug/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "数组",
    "headers": [
      {
        "level": 2,
        "title": "类数组",
        "slug": "类数组",
        "link": "#类数组",
        "children": []
      }
    ],
    "path": "/js/data-types/array/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Date",
    "headers": [
      {
        "level": 2,
        "title": "已知年月，计算该月天数",
        "slug": "已知年月-计算该月天数",
        "link": "#已知年月-计算该月天数",
        "children": []
      }
    ],
    "path": "/js/data-types/date/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "函数",
    "headers": [
      {
        "level": 2,
        "title": "立即执行的函数表达式",
        "slug": "立即执行的函数表达式",
        "link": "#立即执行的函数表达式",
        "children": []
      },
      {
        "level": 2,
        "title": "应用",
        "slug": "应用",
        "link": "#应用",
        "children": [
          {
            "level": 3,
            "title": "将函数伪装成 Native 函数",
            "slug": "将函数伪装成-native-函数",
            "link": "#将函数伪装成-native-函数",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/data-types/function/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Number",
    "headers": [
      {
        "level": 2,
        "title": "精度问题",
        "slug": "精度问题",
        "link": "#精度问题",
        "children": [
          {
            "level": 3,
            "title": "parseInt(0.0000008) === 8",
            "slug": "parseint-0-0000008-8",
            "link": "#parseint-0-0000008-8",
            "children": []
          },
          {
            "level": 3,
            "title": "0.1 + 0.2 = 0.3",
            "slug": "_0-1-0-2-0-3",
            "link": "#_0-1-0-2-0-3",
            "children": []
          },
          {
            "level": 3,
            "title": "toFixed 的结果不精确",
            "slug": "tofixed-的结果不精确",
            "link": "#tofixed-的结果不精确",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "关于 3.toString()",
        "slug": "关于-3-tostring",
        "link": "#关于-3-tostring",
        "children": []
      }
    ],
    "path": "/js/data-types/number/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "JavaScript 关于 IEEE 754 双精度浮点数的实现",
    "headers": [
      {
        "level": 2,
        "title": "简介",
        "slug": "简介",
        "link": "#简介",
        "children": []
      },
      {
        "level": 2,
        "title": "【存储误差】双精度浮点数的存储",
        "slug": "【存储误差】双精度浮点数的存储",
        "link": "#【存储误差】双精度浮点数的存储",
        "children": [
          {
            "level": 3,
            "title": "科学计数法",
            "slug": "科学计数法",
            "link": "#科学计数法",
            "children": []
          },
          {
            "level": 3,
            "title": "符号位",
            "slug": "符号位",
            "link": "#符号位",
            "children": []
          },
          {
            "level": 3,
            "title": "指数位",
            "slug": "指数位",
            "link": "#指数位",
            "children": []
          },
          {
            "level": 3,
            "title": "尾数位",
            "slug": "尾数位",
            "link": "#尾数位",
            "children": []
          },
          {
            "level": 3,
            "title": "总结",
            "slug": "总结",
            "link": "#总结",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "【计算误差】",
        "slug": "【计算误差】",
        "link": "#【计算误差】",
        "children": [
          {
            "level": 3,
            "title": "安全整数",
            "slug": "安全整数",
            "link": "#安全整数",
            "children": []
          },
          {
            "level": 3,
            "title": "小数",
            "slug": "小数",
            "link": "#小数",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "【显示误差】IEEE 754是按照什么规则来实现双精度浮点数的截断显示的？",
        "slug": "【显示误差】ieee-754是按照什么规则来实现双精度浮点数的截断显示的",
        "link": "#【显示误差】ieee-754是按照什么规则来实现双精度浮点数的截断显示的",
        "children": []
      },
      {
        "level": 2,
        "title": "解决方案",
        "slug": "解决方案",
        "link": "#解决方案",
        "children": [
          {
            "level": 3,
            "title": "数据展示类",
            "slug": "数据展示类",
            "link": "#数据展示类",
            "children": []
          },
          {
            "level": 3,
            "title": "数据运算类",
            "slug": "数据运算类",
            "link": "#数据运算类",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/js/data-types/number/floating.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "对象",
    "headers": [
      {
        "level": 2,
        "title": "属性的可枚举性",
        "slug": "属性的可枚举性",
        "link": "#属性的可枚举性",
        "children": []
      },
      {
        "level": 2,
        "title": "属性的遍历",
        "slug": "属性的遍历",
        "link": "#属性的遍历",
        "children": [
          {
            "level": 3,
            "title": "遍历方法",
            "slug": "遍历方法",
            "link": "#遍历方法",
            "children": []
          },
          {
            "level": 3,
            "title": "遍历顺序",
            "slug": "遍历顺序",
            "link": "#遍历顺序",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "对象的方法是特殊的属性",
        "slug": "对象的方法是特殊的属性",
        "link": "#对象的方法是特殊的属性",
        "children": []
      }
    ],
    "path": "/js/data-types/object/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "类",
    "headers": [
      {
        "level": 2,
        "title": "面向对象",
        "slug": "面向对象",
        "link": "#面向对象",
        "children": []
      }
    ],
    "path": "/js/data-types/object/class.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "正则表达式",
    "headers": [
      {
        "level": 2,
        "title": "正则方法",
        "slug": "正则方法",
        "link": "#正则方法",
        "children": [
          {
            "level": 3,
            "title": "字符串的正则方法",
            "slug": "字符串的正则方法",
            "link": "#字符串的正则方法",
            "children": []
          },
          {
            "level": 3,
            "title": "正则表达式的字符串方法",
            "slug": "正则表达式的字符串方法",
            "link": "#正则表达式的字符串方法",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "实例",
        "slug": "实例",
        "link": "#实例",
        "children": [
          {
            "level": 3,
            "title": "千分位表示法",
            "slug": "千分位表示法",
            "link": "#千分位表示法",
            "children": []
          },
          {
            "level": 3,
            "title": "千分位表示法（带小数）",
            "slug": "千分位表示法-带小数",
            "link": "#千分位表示法-带小数",
            "children": []
          },
          {
            "level": 3,
            "title": "去掉小数点后面多余的 0",
            "slug": "去掉小数点后面多余的-0",
            "link": "#去掉小数点后面多余的-0",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/data-types/reg-exp/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "字符串",
    "headers": [
      {
        "level": 2,
        "title": "如何打出行分隔符",
        "slug": "如何打出行分隔符",
        "link": "#如何打出行分隔符",
        "children": []
      }
    ],
    "path": "/js/data-types/string/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Unicode",
    "headers": [
      {
        "level": 2,
        "title": "常用 Unicode 字符",
        "slug": "常用-unicode-字符",
        "link": "#常用-unicode-字符",
        "children": []
      },
      {
        "level": 2,
        "title": "其他字符",
        "slug": "其他字符",
        "link": "#其他字符",
        "children": [
          {
            "level": 3,
            "title": "零宽度字符",
            "slug": "零宽度字符",
            "link": "#零宽度字符",
            "children": []
          }
        ]
      }
    ],
    "path": "/js/data-types/string/unicode.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "异步组件",
    "headers": [
      {
        "level": 2,
        "title": "异步组件的几种形式",
        "slug": "异步组件的几种形式",
        "link": "#异步组件的几种形式",
        "children": []
      },
      {
        "level": 2,
        "title": "处理异步组件",
        "slug": "处理异步组件",
        "link": "#处理异步组件",
        "children": [
          {
            "level": 3,
            "title": "resolveAsyncComponent",
            "slug": "resolveasynccomponent",
            "link": "#resolveasynccomponent",
            "children": []
          },
          {
            "level": 3,
            "title": "异步占位注释 Vnode",
            "slug": "异步占位注释-vnode",
            "link": "#异步占位注释-vnode",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "总结",
        "slug": "总结",
        "link": "#总结",
        "children": []
      }
    ],
    "path": "/vue/source-study/component/async-component.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "组件继承：Vue.extend",
    "headers": [
      {
        "level": 2,
        "title": "props 和 computed 的便捷访问",
        "slug": "props-和-computed-的便捷访问",
        "link": "#props-和-computed-的便捷访问",
        "children": [
          {
            "level": 3,
            "title": "继承的 props",
            "slug": "继承的-props",
            "link": "#继承的-props",
            "children": []
          },
          {
            "level": 3,
            "title": "继承的 computed",
            "slug": "继承的-computed",
            "link": "#继承的-computed",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/component/extend.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "函数式组件",
    "headers": [
      {
        "level": 2,
        "title": "函数式组件与普通组件的区别",
        "slug": "函数式组件与普通组件的区别",
        "link": "#函数式组件与普通组件的区别",
        "children": []
      },
      {
        "level": 2,
        "title": "创建函数式组件的 VNode",
        "slug": "创建函数式组件的-vnode",
        "link": "#创建函数式组件的-vnode",
        "children": []
      }
    ],
    "path": "/vue/source-study/component/functional-component.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "合并配置",
    "headers": [
      {
        "level": 2,
        "title": "根组件 VS 子组件",
        "slug": "根组件-vs-子组件",
        "link": "#根组件-vs-子组件",
        "children": [
          {
            "level": 3,
            "title": "根组件",
            "slug": "根组件",
            "link": "#根组件",
            "children": []
          },
          {
            "level": 3,
            "title": "子组件",
            "slug": "子组件",
            "link": "#子组件",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "不同选项的合并策略",
        "slug": "不同选项的合并策略",
        "link": "#不同选项的合并策略",
        "children": [
          {
            "level": 3,
            "title": "data、provide 选项",
            "slug": "data、provide-选项",
            "link": "#data、provide-选项",
            "children": []
          },
          {
            "level": 3,
            "title": "生命周期钩子函数",
            "slug": "生命周期钩子函数",
            "link": "#生命周期钩子函数",
            "children": []
          },
          {
            "level": 3,
            "title": "资源选项（component、directive、filter）",
            "slug": "资源选项-component、directive、filter",
            "link": "#资源选项-component、directive、filter",
            "children": []
          },
          {
            "level": 3,
            "title": "watch",
            "slug": "watch",
            "link": "#watch",
            "children": []
          },
          {
            "level": 3,
            "title": "props、methods、inject、computed 选项",
            "slug": "props、methods、inject、computed-选项",
            "link": "#props、methods、inject、computed-选项",
            "children": []
          },
          {
            "level": 3,
            "title": "默认合并策略",
            "slug": "默认合并策略",
            "link": "#默认合并策略",
            "children": []
          },
          {
            "level": 3,
            "title": "（开发模式）el、propsData 选项",
            "slug": "开发模式-el、propsdata-选项",
            "link": "#开发模式-el、propsdata-选项",
            "children": []
          },
          {
            "level": 3,
            "title": "将 config 挂载在 Vue 上",
            "slug": "将-config-挂载在-vue-上",
            "link": "#将-config-挂载在-vue-上",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/component/options.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "组件注册",
    "headers": [
      {
        "level": 2,
        "title": "全局组件",
        "slug": "全局组件",
        "link": "#全局组件",
        "children": []
      },
      {
        "level": 2,
        "title": "局部注册",
        "slug": "局部注册",
        "link": "#局部注册",
        "children": []
      },
      {
        "level": 2,
        "title": "组件配置合并",
        "slug": "组件配置合并",
        "link": "#组件配置合并",
        "children": []
      },
      {
        "level": 2,
        "title": "获取组件定义",
        "slug": "获取组件定义",
        "link": "#获取组件定义",
        "children": []
      }
    ],
    "path": "/vue/source-study/component/register.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "编译概览",
    "headers": [
      {
        "level": 2,
        "title": "编译流程",
        "slug": "编译流程",
        "link": "#编译流程",
        "children": []
      },
      {
        "level": 2,
        "title": "编译入口",
        "slug": "编译入口",
        "link": "#编译入口",
        "children": [
          {
            "level": 3,
            "title": "Vue.prototype.$mount",
            "slug": "vue-prototype-mount",
            "link": "#vue-prototype-mount",
            "children": []
          },
          {
            "level": 3,
            "title": "compileToFunctions",
            "slug": "compiletofunctions",
            "link": "#compiletofunctions",
            "children": []
          },
          {
            "level": 3,
            "title": "编译器生成器",
            "slug": "编译器生成器",
            "link": "#编译器生成器",
            "children": []
          },
          {
            "level": 3,
            "title": "创建编译器生成器",
            "slug": "创建编译器生成器",
            "link": "#创建编译器生成器",
            "children": []
          },
          {
            "level": 3,
            "title": "createCompileToFunctionFn",
            "slug": "createcompiletofunctionfn",
            "link": "#createcompiletofunctionfn",
            "children": []
          },
          {
            "level": 3,
            "title": "编译入口总结",
            "slug": "编译入口总结",
            "link": "#编译入口总结",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/compile/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "核心编译",
    "headers": [
      {
        "level": 2,
        "title": "解析模板字符串，创建 AST",
        "slug": "解析模板字符串-创建-ast",
        "link": "#解析模板字符串-创建-ast",
        "children": []
      },
      {
        "level": 2,
        "title": "标记 AST Tree 里可优化的节点",
        "slug": "标记-ast-tree-里可优化的节点",
        "link": "#标记-ast-tree-里可优化的节点",
        "children": []
      },
      {
        "level": 2,
        "title": "生成 render 函数",
        "slug": "生成-render-函数",
        "link": "#生成-render-函数",
        "children": []
      },
      {
        "level": 2,
        "title": "options 对象",
        "slug": "options-对象",
        "link": "#options-对象",
        "children": []
      }
    ],
    "path": "/vue/source-study/compile/base-compile.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "生成 render 函数",
    "headers": [
      {
        "level": 2,
        "title": "generate 函数",
        "slug": "generate-函数",
        "link": "#generate-函数",
        "children": [
          {
            "level": 3,
            "title": "CodegenState 和 options",
            "slug": "codegenstate-和-options",
            "link": "#codegenstate-和-options",
            "children": []
          },
          {
            "level": 3,
            "title": "genElement 函数",
            "slug": "genelement-函数",
            "link": "#genelement-函数",
            "children": []
          },
          {
            "level": 3,
            "title": "genElement 函数的预处理",
            "slug": "genelement-函数的预处理",
            "link": "#genelement-函数的预处理",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/compile/codegen.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "编译流程",
    "headers": [
      {
        "level": 2,
        "title": "compileToFunctions",
        "slug": "compiletofunctions",
        "link": "#compiletofunctions",
        "children": [
          {
            "level": 3,
            "title": "compile",
            "slug": "compile",
            "link": "#compile",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/compile/compile-process.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "优化 AST 树",
    "headers": [
      {
        "level": 2,
        "title": "optimize 函数",
        "slug": "optimize-函数",
        "link": "#optimize-函数",
        "children": []
      },
      {
        "level": 2,
        "title": "markStatic",
        "slug": "markstatic",
        "link": "#markstatic",
        "children": []
      },
      {
        "level": 2,
        "title": "markStaticRoots",
        "slug": "markstaticroots",
        "link": "#markstaticroots",
        "children": []
      }
    ],
    "path": "/vue/source-study/compile/optimize.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "解析模板字符串",
    "headers": [
      {
        "level": 2,
        "title": "parseHTML",
        "slug": "parsehtml",
        "link": "#parsehtml",
        "children": []
      },
      {
        "level": 2,
        "title": "示例",
        "slug": "示例",
        "link": "#示例",
        "children": []
      },
      {
        "level": 2,
        "title": "源码",
        "slug": "源码",
        "link": "#源码",
        "children": []
      }
    ],
    "path": "/vue/source-study/compile/parse-html.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "创建 AST",
    "headers": [
      {
        "level": 2,
        "title": "parse 函数结构",
        "slug": "parse-函数结构",
        "link": "#parse-函数结构",
        "children": []
      },
      {
        "level": 2,
        "title": "parseHTML",
        "slug": "parsehtml",
        "link": "#parsehtml",
        "children": []
      },
      {
        "level": 2,
        "title": "parse 处理",
        "slug": "parse-处理",
        "link": "#parse-处理",
        "children": [
          {
            "level": 3,
            "title": "start",
            "slug": "start",
            "link": "#start",
            "children": []
          },
          {
            "level": 3,
            "title": "end",
            "slug": "end",
            "link": "#end",
            "children": []
          },
          {
            "level": 3,
            "title": "chars",
            "slug": "chars",
            "link": "#chars",
            "children": []
          },
          {
            "level": 3,
            "title": "comment",
            "slug": "comment",
            "link": "#comment",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/compile/parse.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "组件实例化",
    "headers": [
      {
        "level": 2,
        "title": "根组件的实例化 VS 普通组件实例化",
        "slug": "根组件的实例化-vs-普通组件实例化",
        "link": "#根组件的实例化-vs-普通组件实例化",
        "children": []
      }
    ],
    "path": "/vue/source-study/instance/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "创建组件实例",
    "headers": [
      {
        "level": 2,
        "title": "Vue.prototype._init",
        "slug": "vue-prototype-init",
        "link": "#vue-prototype-init",
        "children": []
      },
      {
        "level": 2,
        "title": "Vue.prototype.$mount",
        "slug": "vue-prototype-mount",
        "link": "#vue-prototype-mount",
        "children": []
      },
      {
        "level": 2,
        "title": "Vue.prototype._render",
        "slug": "vue-prototype-render",
        "link": "#vue-prototype-render",
        "children": []
      },
      {
        "level": 2,
        "title": "Vue.prototype._update",
        "slug": "vue-prototype-update",
        "link": "#vue-prototype-update",
        "children": []
      }
    ],
    "path": "/vue/source-study/instance/create.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "指令",
    "headers": [
      {
        "level": 2,
        "title": "v-model",
        "slug": "v-model",
        "link": "#v-model",
        "children": [
          {
            "level": 3,
            "title": "自定义组件 v-model",
            "slug": "自定义组件-v-model",
            "link": "#自定义组件-v-model",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/instance/directives.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "事件监听器",
    "headers": [
      {
        "level": 2,
        "title": "模板编译",
        "slug": "模板编译",
        "link": "#模板编译",
        "children": []
      },
      {
        "level": 2,
        "title": "组件自定义事件",
        "slug": "组件自定义事件",
        "link": "#组件自定义事件",
        "children": [
          {
            "level": 3,
            "title": "eventsMixin",
            "slug": "eventsmixin",
            "link": "#eventsmixin",
            "children": []
          },
          {
            "level": 3,
            "title": "添加自定义事件",
            "slug": "添加自定义事件",
            "link": "#添加自定义事件",
            "children": []
          },
          {
            "level": 3,
            "title": "更新自定义事件",
            "slug": "更新自定义事件",
            "link": "#更新自定义事件",
            "children": []
          },
          {
            "level": 3,
            "title": "发布自定义事件",
            "slug": "发布自定义事件",
            "link": "#发布自定义事件",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "原生事件",
        "slug": "原生事件",
        "link": "#原生事件",
        "children": [
          {
            "level": 3,
            "title": "添加原生事件",
            "slug": "添加原生事件",
            "link": "#添加原生事件",
            "children": []
          },
          {
            "level": 3,
            "title": "更新原生事件",
            "slug": "更新原生事件",
            "link": "#更新原生事件",
            "children": []
          },
          {
            "level": 3,
            "title": "原生事件模块",
            "slug": "原生事件模块",
            "link": "#原生事件模块",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "总结",
        "slug": "总结",
        "link": "#总结",
        "children": []
      }
    ],
    "path": "/vue/source-study/instance/events.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vue.use",
    "headers": [
      {
        "level": 2,
        "title": "为什么直接通过 script 标签引用插件就不需要调用 Vue.use",
        "slug": "为什么直接通过-script-标签引用插件就不需要调用-vue-use",
        "link": "#为什么直接通过-script-标签引用插件就不需要调用-vue-use",
        "children": []
      }
    ],
    "path": "/vue/source-study/global-api/use.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Observer",
    "headers": [
      {
        "level": 2,
        "title": "响应式对象/属性",
        "slug": "响应式对象-属性",
        "link": "#响应式对象-属性",
        "children": [
          {
            "level": 3,
            "title": "observe",
            "slug": "observe",
            "link": "#observe",
            "children": []
          },
          {
            "level": 3,
            "title": "Observer 类",
            "slug": "observer-类",
            "link": "#observer-类",
            "children": []
          },
          {
            "level": 3,
            "title": "defineReactive",
            "slug": "definereactive",
            "link": "#definereactive",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "释疑",
        "slug": "释疑",
        "link": "#释疑",
        "children": [
          {
            "level": 3,
            "title": "Watcher 为什么要知道它有哪些依赖呢？",
            "slug": "watcher-为什么要知道它有哪些依赖呢",
            "link": "#watcher-为什么要知道它有哪些依赖呢",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/observer/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "数组的响应式限制",
    "headers": [
      {
        "level": 2,
        "title": "数组的 length",
        "slug": "数组的-length",
        "link": "#数组的-length",
        "children": []
      },
      {
        "level": 2,
        "title": "数组项",
        "slug": "数组项",
        "link": "#数组项",
        "children": []
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      }
    ],
    "path": "/vue/source-study/observer/array-observe-limit.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "依赖收集",
    "headers": [
      {
        "level": 2,
        "title": "属性的依赖收集",
        "slug": "属性的依赖收集",
        "link": "#属性的依赖收集",
        "children": []
      },
      {
        "level": 2,
        "title": "属性的值的依赖收集",
        "slug": "属性的值的依赖收集",
        "link": "#属性的值的依赖收集",
        "children": []
      },
      {
        "level": 2,
        "title": "总结",
        "slug": "总结",
        "link": "#总结",
        "children": []
      }
    ],
    "path": "/vue/source-study/observer/dep-collection.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Dep",
    "headers": [
      {
        "level": 2,
        "title": "Dep 类",
        "slug": "dep-类",
        "link": "#dep-类",
        "children": []
      }
    ],
    "path": "/vue/source-study/observer/dep.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "通知更新",
    "headers": [
      {
        "level": 2,
        "title": "值类型",
        "slug": "值类型",
        "link": "#值类型",
        "children": []
      },
      {
        "level": 2,
        "title": "引用类型",
        "slug": "引用类型",
        "link": "#引用类型",
        "children": [
          {
            "level": 3,
            "title": "Object.defineProperty 的不足",
            "slug": "object-defineproperty-的不足",
            "link": "#object-defineproperty-的不足",
            "children": []
          },
          {
            "level": 3,
            "title": "对象添加/删除属性，数组添加/删除元素",
            "slug": "对象添加-删除属性-数组添加-删除元素",
            "link": "#对象添加-删除属性-数组添加-删除元素",
            "children": []
          },
          {
            "level": 3,
            "title": "数组变异方法",
            "slug": "数组变异方法",
            "link": "#数组变异方法",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/observer/notify-update.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "scheduler",
    "headers": [
      {
        "level": 2,
        "title": "同步计算 VS 异步队列",
        "slug": "同步计算-vs-异步队列",
        "link": "#同步计算-vs-异步队列",
        "children": []
      },
      {
        "level": 2,
        "title": "调度器(Scheduler)",
        "slug": "调度器-scheduler",
        "link": "#调度器-scheduler",
        "children": [
          {
            "level": 3,
            "title": "queueWatcher",
            "slug": "queuewatcher",
            "link": "#queuewatcher",
            "children": []
          },
          {
            "level": 3,
            "title": "flushSchedulerQueue",
            "slug": "flushschedulerqueue",
            "link": "#flushschedulerqueue",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/observer/scheduler.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Watcher",
    "headers": [
      {
        "level": 2,
        "title": "源码",
        "slug": "源码",
        "link": "#源码",
        "children": []
      },
      {
        "level": 2,
        "title": "释疑",
        "slug": "释疑",
        "link": "#释疑",
        "children": [
          {
            "level": 3,
            "title": "哪些情况下会产生 Watcher？",
            "slug": "哪些情况下会产生-watcher",
            "link": "#哪些情况下会产生-watcher",
            "children": []
          },
          {
            "level": 3,
            "title": "Watcher 实例的 deps / newDeps，有什么区别？",
            "slug": "watcher-实例的-deps-newdeps-有什么区别",
            "link": "#watcher-实例的-deps-newdeps-有什么区别",
            "children": []
          },
          {
            "level": 3,
            "title": "watcher 是如何实现 deep: true 深度监听的？",
            "slug": "watcher-是如何实现-deep-true-深度监听的",
            "link": "#watcher-是如何实现-deep-true-深度监听的",
            "children": []
          },
          {
            "level": 3,
            "title": "哪些情况下 watcher 的回调函数会执行？",
            "slug": "哪些情况下-watcher-的回调函数会执行",
            "link": "#哪些情况下-watcher-的回调函数会执行",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/observer/watcher.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vue SSR",
    "headers": [
      {
        "level": 2,
        "title": "SSR 的优势和劣势",
        "slug": "ssr-的优势和劣势",
        "link": "#ssr-的优势和劣势",
        "children": []
      },
      {
        "level": 2,
        "title": "学习记录",
        "slug": "学习记录",
        "link": "#学习记录",
        "children": [
          {
            "level": 3,
            "title": "createBundleRenderer",
            "slug": "createbundlerenderer",
            "link": "#createbundlerenderer",
            "children": []
          },
          {
            "level": 3,
            "title": "服务器端的入口文件",
            "slug": "服务器端的入口文件",
            "link": "#服务器端的入口文件",
            "children": []
          },
          {
            "level": 3,
            "title": "vuex-router-sync",
            "slug": "vuex-router-sync",
            "link": "#vuex-router-sync",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/ssr/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "客户端激活",
    "headers": [
      {
        "level": 2,
        "title": "SSR 的 patch",
        "slug": "ssr-的-patch",
        "link": "#ssr-的-patch",
        "children": []
      }
    ],
    "path": "/vue/source-study/ssr/hydrate.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "vue-server-renderer",
    "headers": [
      {
        "level": 2,
        "title": "createRenderer",
        "slug": "createrenderer",
        "link": "#createrenderer",
        "children": []
      }
    ],
    "path": "/vue/source-study/ssr/vue-server-renderer.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "生命周期钩子事件 hook events",
    "headers": [
      {
        "level": 2,
        "title": "背景",
        "slug": "背景",
        "link": "#背景",
        "children": []
      },
      {
        "level": 2,
        "title": "生命周期钩子事件源码",
        "slug": "生命周期钩子事件源码",
        "link": "#生命周期钩子事件源码",
        "children": []
      },
      {
        "level": 2,
        "title": "参考",
        "slug": "参考",
        "link": "#参考",
        "children": []
      }
    ],
    "path": "/vue/source-study/util/lifecycle-hook-event.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "nextTick",
    "headers": [
      {
        "level": 2,
        "title": "nextTick 函数",
        "slug": "nexttick-函数",
        "link": "#nexttick-函数",
        "children": [
          {
            "level": 3,
            "title": "macroTimerFunc / microTimerFunc",
            "slug": "macrotimerfunc-microtimerfunc",
            "link": "#macrotimerfunc-microtimerfunc",
            "children": []
          },
          {
            "level": 3,
            "title": "flushCallbacks",
            "slug": "flushcallbacks",
            "link": "#flushcallbacks",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "withMacroTask",
        "slug": "withmacrotask",
        "link": "#withmacrotask",
        "children": []
      },
      {
        "level": 2,
        "title": "Vue.nextTick / vm.$nextTick",
        "slug": "vue-nexttick-vm-nexttick",
        "link": "#vue-nexttick-vm-nexttick",
        "children": []
      },
      {
        "level": 2,
        "title": "释疑",
        "slug": "释疑",
        "link": "#释疑",
        "children": [
          {
            "level": 3,
            "title": "为什么不在 nextTick 里直接执行 cb，而要先压入 callbacks 里？",
            "slug": "为什么不在-nexttick-里直接执行-cb-而要先压入-callbacks-里",
            "link": "#为什么不在-nexttick-里直接执行-cb-而要先压入-callbacks-里",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/util/next-tick.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "概览",
    "headers": [
      {
        "level": 2,
        "title": "名词解释",
        "slug": "名词解释",
        "link": "#名词解释",
        "children": [
          {
            "level": 3,
            "title": "组件占位 VNode 与 组件渲染 VNode",
            "slug": "组件占位-vnode-与-组件渲染-vnode",
            "link": "#组件占位-vnode-与-组件渲染-vnode",
            "children": []
          },
          {
            "level": 3,
            "title": "连续嵌套组件",
            "slug": "连续嵌套组件",
            "link": "#连续嵌套组件",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "数据来源及关系梳理",
        "slug": "数据来源及关系梳理",
        "link": "#数据来源及关系梳理",
        "children": [
          {
            "level": 3,
            "title": "vm.$options.parent、vm.$parent、vnode.parent",
            "slug": "vm-options-parent、vm-parent、vnode-parent",
            "link": "#vm-options-parent、vm-parent、vnode-parent",
            "children": []
          },
          {
            "level": 3,
            "title": "vm._vnode、vm.$vnode",
            "slug": "vm-vnode、vm-vnode",
            "link": "#vm-vnode、vm-vnode",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "释疑",
        "slug": "释疑",
        "link": "#释疑",
        "children": [
          {
            "level": 3,
            "title": "模板里使用了 vm 上不存在的方法或属性时的报错，是如何实现的？",
            "slug": "模板里使用了-vm-上不存在的方法或属性时的报错-是如何实现的",
            "link": "#模板里使用了-vm-上不存在的方法或属性时的报错-是如何实现的",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/vdom/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "创建子组件实例",
    "headers": [
      {
        "level": 2,
        "title": "createComponent",
        "slug": "createcomponent",
        "link": "#createcomponent",
        "children": [
          {
            "level": 3,
            "title": "vnode.data.hook.init",
            "slug": "vnode-data-hook-init",
            "link": "#vnode-data-hook-init",
            "children": []
          },
          {
            "level": 3,
            "title": "initComponent",
            "slug": "initcomponent",
            "link": "#initcomponent",
            "children": []
          },
          {
            "level": 3,
            "title": "组件 DOM Tree 插入到父元素",
            "slug": "组件-dom-tree-插入到父元素",
            "link": "#组件-dom-tree-插入到父元素",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/vdom/child-component-create.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "patch 辅助函数",
    "headers": [
      {
        "level": 2,
        "title": "VNode/DOM 操作相关",
        "slug": "vnode-dom-操作相关",
        "link": "#vnode-dom-操作相关",
        "children": [
          {
            "level": 3,
            "title": "sameVnode",
            "slug": "samevnode",
            "link": "#samevnode",
            "children": []
          },
          {
            "level": 3,
            "title": "removeVnodes：移除子 VNode 及其 DOM 元素节点",
            "slug": "removevnodes-移除子-vnode-及其-dom-元素节点",
            "link": "#removevnodes-移除子-vnode-及其-dom-元素节点",
            "children": []
          },
          {
            "level": 3,
            "title": "removeAndInvokeRemoveHook：移除 VNode 对应的 DOM 元素节点",
            "slug": "removeandinvokeremovehook-移除-vnode-对应的-dom-元素节点",
            "link": "#removeandinvokeremovehook-移除-vnode-对应的-dom-元素节点",
            "children": []
          },
          {
            "level": 3,
            "title": "removeNode：移除 DOM 元素节点",
            "slug": "removenode-移除-dom-元素节点",
            "link": "#removenode-移除-dom-元素节点",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "钩子函数",
        "slug": "钩子函数",
        "link": "#钩子函数",
        "children": [
          {
            "level": 3,
            "title": "invokeCreateHooks",
            "slug": "invokecreatehooks",
            "link": "#invokecreatehooks",
            "children": []
          },
          {
            "level": 3,
            "title": "invokeDestroyHook：销毁 VNode",
            "slug": "invokedestroyhook-销毁-vnode",
            "link": "#invokedestroyhook-销毁-vnode",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/vdom/patch-fn.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "修补 VNode",
    "headers": [
      {
        "level": 2,
        "title": "修补子组件",
        "slug": "修补子组件",
        "link": "#修补子组件",
        "children": []
      },
      {
        "level": 2,
        "title": "修补子 VNode",
        "slug": "修补子-vnode",
        "link": "#修补子-vnode",
        "children": []
      },
      {
        "level": 2,
        "title": "TODO: 等待学习 slot 之后，需要重新审视一下子组件里有 slot 时的情况",
        "slug": "todo-等待学习-slot-之后-需要重新审视一下子组件里有-slot-时的情况",
        "link": "#todo-等待学习-slot-之后-需要重新审视一下子组件里有-slot-时的情况",
        "children": []
      }
    ],
    "path": "/vue/source-study/vdom/patch-vnode.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "patch 函数",
    "headers": [
      {
        "level": 2,
        "title": "Vue.prototype._update",
        "slug": "vue-prototype-update",
        "link": "#vue-prototype-update",
        "children": []
      },
      {
        "level": 2,
        "title": "Vue.prototype.patch",
        "slug": "vue-prototype-patch",
        "link": "#vue-prototype-patch",
        "children": []
      },
      {
        "level": 2,
        "title": "createPatchFunction",
        "slug": "createpatchfunction",
        "link": "#createpatchfunction",
        "children": [
          {
            "level": 3,
            "title": "合并各模块的钩子函数",
            "slug": "合并各模块的钩子函数",
            "link": "#合并各模块的钩子函数",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "patch",
        "slug": "patch",
        "link": "#patch",
        "children": [
          {
            "level": 3,
            "title": "根组件首次 patch && 组件新旧渲染 VNode 不能 patch 的情况",
            "slug": "根组件首次-patch-组件新旧渲染-vnode-不能-patch-的情况",
            "link": "#根组件首次-patch-组件新旧渲染-vnode-不能-patch-的情况",
            "children": []
          },
          {
            "level": 3,
            "title": "组件更新",
            "slug": "组件更新",
            "link": "#组件更新",
            "children": []
          },
          {
            "level": 3,
            "title": "组件销毁",
            "slug": "组件销毁",
            "link": "#组件销毁",
            "children": []
          },
          {
            "level": 3,
            "title": "返回 vnode.elm",
            "slug": "返回-vnode-elm",
            "link": "#返回-vnode-elm",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "createElm",
        "slug": "createelm",
        "link": "#createelm",
        "children": [
          {
            "level": 3,
            "title": "创建组件实例",
            "slug": "创建组件实例",
            "link": "#创建组件实例",
            "children": []
          },
          {
            "level": 3,
            "title": "创建 DOM 节点",
            "slug": "创建-dom-节点",
            "link": "#创建-dom-节点",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "释疑",
        "slug": "释疑",
        "link": "#释疑",
        "children": [
          {
            "level": 3,
            "title": "insertedVnodeQueue 的作用",
            "slug": "insertedvnodequeue-的作用",
            "link": "#insertedvnodequeue-的作用",
            "children": []
          },
          {
            "level": 3,
            "title": "钩子函数的执行顺序",
            "slug": "钩子函数的执行顺序",
            "link": "#钩子函数的执行顺序",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/vdom/patch.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "创建 VNode Tree",
    "headers": [
      {
        "level": 2,
        "title": "Vue.prototype._render",
        "slug": "vue-prototype-render",
        "link": "#vue-prototype-render",
        "children": []
      },
      {
        "level": 2,
        "title": "createElement：创建节点的 VNode",
        "slug": "createelement-创建节点的-vnode",
        "link": "#createelement-创建节点的-vnode",
        "children": [
          {
            "level": 3,
            "title": "规范化子 VNode",
            "slug": "规范化子-vnode",
            "link": "#规范化子-vnode",
            "children": []
          },
          {
            "level": 3,
            "title": "创建 VNode",
            "slug": "创建-vnode",
            "link": "#创建-vnode",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/vdom/vnode-tree-create.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "vue-router 原理",
    "headers": [
      {
        "level": 2,
        "title": "history 变化机制",
        "slug": "history-变化机制",
        "link": "#history-变化机制",
        "children": [
          {
            "level": 3,
            "title": "新增历史记录",
            "slug": "新增历史记录",
            "link": "#新增历史记录",
            "children": []
          },
          {
            "level": 3,
            "title": "历史记录不变的情况",
            "slug": "历史记录不变的情况",
            "link": "#历史记录不变的情况",
            "children": []
          },
          {
            "level": 3,
            "title": "历史记录栈的更改",
            "slug": "历史记录栈的更改",
            "link": "#历史记录栈的更改",
            "children": []
          },
          {
            "level": 3,
            "title": "历史记录栈的销毁",
            "slug": "历史记录栈的销毁",
            "link": "#历史记录栈的销毁",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "SPA（Single Page Web Application）",
        "slug": "spa-single-page-web-application",
        "link": "#spa-single-page-web-application",
        "children": [
          {
            "level": 3,
            "title": "优点",
            "slug": "优点",
            "link": "#优点",
            "children": []
          },
          {
            "level": 3,
            "title": "缺点",
            "slug": "缺点",
            "link": "#缺点",
            "children": []
          },
          {
            "level": 3,
            "title": "url 路径里的 #!",
            "slug": "url-路径里的",
            "link": "#url-路径里的",
            "children": []
          },
          {
            "level": 3,
            "title": "SPA 实现原理",
            "slug": "spa-实现原理",
            "link": "#spa-实现原理",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "父子路由切换显示",
        "slug": "父子路由切换显示",
        "link": "#父子路由切换显示",
        "children": [
          {
            "level": 3,
            "title": "需求说明",
            "slug": "需求说明",
            "link": "#需求说明",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "解决方法",
        "slug": "解决方法",
        "link": "#解决方法",
        "children": []
      },
      {
        "level": 2,
        "title": "异步路由-处理加载状态/加载失败",
        "slug": "异步路由-处理加载状态-加载失败",
        "link": "#异步路由-处理加载状态-加载失败",
        "children": []
      }
    ],
    "path": "/vue/vue-series/vue-router/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Scoped CSS",
    "headers": [
      {
        "level": 2,
        "title": "使用",
        "slug": "使用",
        "link": "#使用",
        "children": []
      },
      {
        "level": 2,
        "title": "渲染规则",
        "slug": "渲染规则",
        "link": "#渲染规则",
        "children": []
      },
      {
        "level": 2,
        "title": "深度作用选择器",
        "slug": "深度作用选择器",
        "link": "#深度作用选择器",
        "children": [
          {
            "level": 3,
            "title": "问题的产生",
            "slug": "问题的产生",
            "link": "#问题的产生",
            "children": []
          },
          {
            "level": 3,
            "title": "解决方案",
            "slug": "解决方案",
            "link": "#解决方案",
            "children": []
          },
          {
            "level": 3,
            "title": "其他情况",
            "slug": "其他情况",
            "link": "#其他情况",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "最佳实践",
        "slug": "最佳实践",
        "link": "#最佳实践",
        "children": []
      }
    ],
    "path": "/vue/vue-series/vuejs/scoped-css.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "北京",
    "headers": [
      {
        "level": 2,
        "title": "地铁",
        "slug": "地铁",
        "link": "#地铁",
        "children": []
      },
      {
        "level": 2,
        "title": "可考虑楼盘",
        "slug": "可考虑楼盘",
        "link": "#可考虑楼盘",
        "children": []
      },
      {
        "level": 2,
        "title": "海淀",
        "slug": "海淀",
        "link": "#海淀",
        "children": [
          {
            "level": 3,
            "title": "海淀区规划",
            "slug": "海淀区规划",
            "link": "#海淀区规划",
            "children": []
          },
          {
            "level": 3,
            "title": "入学政策",
            "slug": "入学政策",
            "link": "#入学政策",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "昌平",
        "slug": "昌平",
        "link": "#昌平",
        "children": [
          {
            "level": 3,
            "title": "昌平区规划",
            "slug": "昌平区规划",
            "link": "#昌平区规划",
            "children": []
          }
        ]
      }
    ],
    "path": "/wander/house/beijing/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vuex 源码学习",
    "headers": [
      {
        "level": 2,
        "title": "源码注释",
        "slug": "源码注释",
        "link": "#源码注释",
        "children": []
      },
      {
        "level": 2,
        "title": "实现细节",
        "slug": "实现细节",
        "link": "#实现细节",
        "children": [
          {
            "level": 3,
            "title": "store.state/getters 为什么是响应式的？",
            "slug": "store-state-getters-为什么是响应式的",
            "link": "#store-state-getters-为什么是响应式的",
            "children": []
          },
          {
            "level": 3,
            "title": "模块的上下文对象 context",
            "slug": "模块的上下文对象-context",
            "link": "#模块的上下文对象-context",
            "children": []
          },
          {
            "level": 3,
            "title": "模块的局部 state/getters 为什么要实时获取？",
            "slug": "模块的局部-state-getters-为什么要实时获取",
            "link": "#模块的局部-state-getters-为什么要实时获取",
            "children": []
          },
          {
            "level": 3,
            "title": "调用 getter 时可以传入额外参数",
            "slug": "调用-getter-时可以传入额外参数",
            "link": "#调用-getter-时可以传入额外参数",
            "children": []
          },
          {
            "level": 3,
            "title": "在带命名空间的模块注册全局 action",
            "slug": "在带命名空间的模块注册全局-action",
            "link": "#在带命名空间的模块注册全局-action",
            "children": []
          },
          {
            "level": 3,
            "title": "action 回调函数的结果，会处理成 Promise 对象",
            "slug": "action-回调函数的结果-会处理成-promise-对象",
            "link": "#action-回调函数的结果-会处理成-promise-对象",
            "children": []
          },
          {
            "level": 3,
            "title": "严格模式",
            "slug": "严格模式",
            "link": "#严格模式",
            "children": []
          },
          {
            "level": 3,
            "title": "命名空间的副作用",
            "slug": "命名空间的副作用",
            "link": "#命名空间的副作用",
            "children": []
          },
          {
            "level": 3,
            "title": "createNamespacedHelpers、mapState/mapMutation/mapAction",
            "slug": "createnamespacedhelpers、mapstate-mapmutation-mapaction",
            "link": "#createnamespacedhelpers、mapstate-mapmutation-mapaction",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "最佳实践",
        "slug": "最佳实践",
        "link": "#最佳实践",
        "children": [
          {
            "level": 3,
            "title": "模块的 mutation/action 里不要用 this",
            "slug": "模块的-mutation-action-里不要用-this",
            "link": "#模块的-mutation-action-里不要用-this",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/vue-series/vuex/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "vuex 里在 action 里提交 mutation 之后可以立即同步获取到最新的 state 吗",
    "headers": [
      {
        "level": 2,
        "title": "背景",
        "slug": "背景",
        "link": "#背景",
        "children": []
      }
    ],
    "path": "/vue/vue-series/vuex/get-state-after-mutation.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vuex registerModule 里的坑",
    "headers": [
      {
        "level": 2,
        "title": "问题描述",
        "slug": "问题描述",
        "link": "#问题描述",
        "children": []
      },
      {
        "level": 2,
        "title": "问题追踪",
        "slug": "问题追踪",
        "link": "#问题追踪",
        "children": []
      }
    ],
    "path": "/vue/vue-series/vuex/register-module.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "优雅地重置 Vuex 子模块的 State",
    "headers": [],
    "path": "/vue/vue-series/vuex/reset-child-module-state.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "万象悦府",
    "headers": [
      {
        "level": 2,
        "title": "楼盘 & 户型",
        "slug": "楼盘-户型",
        "link": "#楼盘-户型",
        "children": [
          {
            "level": 3,
            "title": "小区",
            "slug": "小区",
            "link": "#小区",
            "children": []
          },
          {
            "level": 3,
            "title": "户型",
            "slug": "户型",
            "link": "#户型",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "交通",
        "slug": "交通",
        "link": "#交通",
        "children": []
      },
      {
        "level": 2,
        "title": "教育配套",
        "slug": "教育配套",
        "link": "#教育配套",
        "children": []
      },
      {
        "level": 2,
        "title": "商业配套",
        "slug": "商业配套",
        "link": "#商业配套",
        "children": []
      },
      {
        "level": 2,
        "title": "医疗配套",
        "slug": "医疗配套",
        "link": "#医疗配套",
        "children": []
      },
      {
        "level": 2,
        "title": "缺点",
        "slug": "缺点",
        "link": "#缺点",
        "children": []
      }
    ],
    "path": "/wander/house/wanxiangyuefu/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "西山锦绣府",
    "headers": [
      {
        "level": 2,
        "title": "楼盘基本信息",
        "slug": "楼盘基本信息",
        "link": "#楼盘基本信息",
        "children": [
          {
            "level": 3,
            "title": "楼盘动态",
            "slug": "楼盘动态",
            "link": "#楼盘动态",
            "children": []
          },
          {
            "level": 3,
            "title": "楼盘开发计划",
            "slug": "楼盘开发计划",
            "link": "#楼盘开发计划",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "优势",
        "slug": "优势",
        "link": "#优势",
        "children": [
          {
            "level": 3,
            "title": "区域",
            "slug": "区域",
            "link": "#区域",
            "children": []
          },
          {
            "level": 3,
            "title": "交通",
            "slug": "交通",
            "link": "#交通",
            "children": []
          },
          {
            "level": 3,
            "title": "户型",
            "slug": "户型",
            "link": "#户型",
            "children": []
          },
          {
            "level": 3,
            "title": "周边配套",
            "slug": "周边配套",
            "link": "#周边配套",
            "children": []
          },
          {
            "level": 3,
            "title": "周边二手房价格",
            "slug": "周边二手房价格",
            "link": "#周边二手房价格",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "劣势",
        "slug": "劣势",
        "link": "#劣势",
        "children": []
      }
    ],
    "path": "/wander/house/xishanjinxiufu/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "科学上网",
    "headers": [
      {
        "level": 2,
        "title": "谷歌云 SSR",
        "slug": "谷歌云-ssr",
        "link": "#谷歌云-ssr",
        "children": [
          {
            "level": 3,
            "title": "第一步，注册谷歌云账号",
            "slug": "第一步-注册谷歌云账号",
            "link": "#第一步-注册谷歌云账号",
            "children": []
          },
          {
            "level": 3,
            "title": "第二步，配置谷歌云代理服务器",
            "slug": "第二步-配置谷歌云代理服务器",
            "link": "#第二步-配置谷歌云代理服务器",
            "children": []
          },
          {
            "level": 3,
            "title": "第三步，配置电脑/手机",
            "slug": "第三步-配置电脑-手机",
            "link": "#第三步-配置电脑-手机",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "美国区域的 Apple ID",
        "slug": "美国区域的-apple-id",
        "link": "#美国区域的-apple-id",
        "children": []
      }
    ],
    "path": "/wander/others/ssr/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "中海丽春湖墅",
    "headers": [
      {
        "level": 2,
        "title": "优势",
        "slug": "优势",
        "link": "#优势",
        "children": [
          {
            "level": 3,
            "title": "楼盘",
            "slug": "楼盘",
            "link": "#楼盘",
            "children": []
          },
          {
            "level": 3,
            "title": "交通",
            "slug": "交通",
            "link": "#交通",
            "children": []
          },
          {
            "level": 3,
            "title": "教育",
            "slug": "教育",
            "link": "#教育",
            "children": []
          },
          {
            "level": 3,
            "title": "自然环境",
            "slug": "自然环境",
            "link": "#自然环境",
            "children": []
          },
          {
            "level": 3,
            "title": "配套商业",
            "slug": "配套商业",
            "link": "#配套商业",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "劣势",
        "slug": "劣势",
        "link": "#劣势",
        "children": []
      }
    ],
    "path": "/wander/house/zhonghailichunhushu/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CSS3-Circle-Diffusion",
    "headers": [],
    "path": "/code-snippet/practices/css/1-%E5%9C%86%E5%9C%88%E5%A3%B0%E6%B3%A2%E6%89%A9%E6%95%A3%E6%95%88%E6%9E%9C/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CSS3-Hover",
    "headers": [],
    "path": "/code-snippet/practices/css/2-%E9%BC%A0%E6%A0%87%E6%82%AC%E5%81%9C%E6%95%88%E6%9E%9C/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CSS3-Loading",
    "headers": [],
    "path": "/code-snippet/practices/css/3-%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%95%88%E6%9E%9C/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "CSS-Bread-Crumbs",
    "headers": [],
    "path": "/code-snippet/practices/css/4-%E9%9D%A2%E5%8C%85%E5%B1%91/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "simple-radius-menu",
    "headers": [],
    "path": "/code-snippet/practices/css/6-%E5%BE%84%E5%90%91%E5%8A%A8%E7%94%BB%E8%8F%9C%E5%8D%95/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "image-clipping",
    "headers": [],
    "path": "/code-snippet/practices/js/%E5%9B%BE%E7%89%87%E8%A3%81%E5%89%AA/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "simple-calculator",
    "headers": [],
    "path": "/code-snippet/practices/js/%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97%E5%99%A8/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "simple-drag",
    "headers": [],
    "path": "/code-snippet/practices/js/%E7%AE%80%E5%8D%95%E6%8B%96%E6%8B%BD%E5%8A%9F%E8%83%BD/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Koa",
    "headers": [
      {
        "level": 2,
        "title": "简单实现",
        "slug": "简单实现",
        "link": "#简单实现",
        "children": [
          {
            "level": 3,
            "title": "1.x 中间件简单实现",
            "slug": "_1-x-中间件简单实现",
            "link": "#_1-x-中间件简单实现",
            "children": []
          },
          {
            "level": 3,
            "title": "2.x 中间件简单实现",
            "slug": "_2-x-中间件简单实现",
            "link": "#_2-x-中间件简单实现",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/development-skills/nodejs/koa/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "pnpm",
    "headers": [
      {
        "level": 2,
        "title": "包管理器主要关注的问题",
        "slug": "包管理器主要关注的问题",
        "link": "#包管理器主要关注的问题",
        "children": []
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      },
      {
        "level": 2,
        "title": "软链与硬链",
        "slug": "软链与硬链",
        "link": "#软链与硬链",
        "children": [
          {
            "level": 3,
            "title": "区别",
            "slug": "区别",
            "link": "#区别",
            "children": []
          },
          {
            "level": 3,
            "title": "在 pnpm 里的作用",
            "slug": "在-pnpm-里的作用",
            "link": "#在-pnpm-里的作用",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "pnpm 存在的问题",
        "slug": "pnpm-存在的问题",
        "link": "#pnpm-存在的问题",
        "children": []
      },
      {
        "level": 2,
        "title": "待解决",
        "slug": "待解决",
        "link": "#待解决",
        "children": [
          {
            "level": 3,
            "title": "pnpm 对 peer dependencies 为什么有不一样的处理？",
            "slug": "pnpm-对-peer-dependencies-为什么有不一样的处理",
            "link": "#pnpm-对-peer-dependencies-为什么有不一样的处理",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/pnpm/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "npm",
    "headers": [
      {
        "level": 2,
        "title": "tag",
        "slug": "tag",
        "link": "#tag",
        "children": []
      },
      {
        "level": 2,
        "title": "npm 包管理原理",
        "slug": "npm-包管理原理",
        "link": "#npm-包管理原理",
        "children": []
      },
      {
        "level": 2,
        "title": "问题汇总",
        "slug": "问题汇总",
        "link": "#问题汇总",
        "children": [
          {
            "level": 3,
            "title": "修改 registry 后 package-lock.json 里的 resolved 没更新",
            "slug": "修改-registry-后-package-lock-json-里的-resolved-没更新",
            "link": "#修改-registry-后-package-lock-json-里的-resolved-没更新",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/npm/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "npm 命令",
    "headers": [
      {
        "level": 2,
        "title": "npm config 命令",
        "slug": "npm-config-命令",
        "link": "#npm-config-命令",
        "children": [
          {
            "level": 3,
            "title": "npm config set",
            "slug": "npm-config-set",
            "link": "#npm-config-set",
            "children": []
          },
          {
            "level": 3,
            "title": "npm config get",
            "slug": "npm-config-get",
            "link": "#npm-config-get",
            "children": []
          },
          {
            "level": 3,
            "title": "npm config delete",
            "slug": "npm-config-delete",
            "link": "#npm-config-delete",
            "children": []
          },
          {
            "level": 3,
            "title": "npm config list",
            "slug": "npm-config-list",
            "link": "#npm-config-list",
            "children": []
          },
          {
            "level": 3,
            "title": "npm config edit",
            "slug": "npm-config-edit",
            "link": "#npm-config-edit",
            "children": []
          },
          {
            "level": 3,
            "title": "npm set/get",
            "slug": "npm-set-get",
            "link": "#npm-set-get",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "npm dist-tag",
        "slug": "npm-dist-tag",
        "link": "#npm-dist-tag",
        "children": [
          {
            "level": 3,
            "title": "查看包的发布 tag",
            "slug": "查看包的发布-tag",
            "link": "#查看包的发布-tag",
            "children": []
          },
          {
            "level": 3,
            "title": "添加包的发布 tag",
            "slug": "添加包的发布-tag",
            "link": "#添加包的发布-tag",
            "children": []
          },
          {
            "level": 3,
            "title": "删除包的发布 tag",
            "slug": "删除包的发布-tag",
            "link": "#删除包的发布-tag",
            "children": []
          },
          {
            "level": 3,
            "title": "删除已发布包的指定版本",
            "slug": "删除已发布包的指定版本",
            "link": "#删除已发布包的指定版本",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "npm view",
        "slug": "npm-view",
        "link": "#npm-view",
        "children": [
          {
            "level": 3,
            "title": "npm view package@version",
            "slug": "npm-view-package-version",
            "link": "#npm-view-package-version",
            "children": []
          },
          {
            "level": 3,
            "title": "npm view package versions",
            "slug": "npm-view-package-versions",
            "link": "#npm-view-package-versions",
            "children": []
          },
          {
            "level": 3,
            "title": "npm view package repository.url",
            "slug": "npm-view-package-repository-url",
            "link": "#npm-view-package-repository-url",
            "children": []
          },
          {
            "level": 3,
            "title": "npm view package --json",
            "slug": "npm-view-package-json",
            "link": "#npm-view-package-json",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "npm link",
        "slug": "npm-link",
        "link": "#npm-link",
        "children": []
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/npm/npm-command.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "npm-config",
    "headers": [
      {
        "level": 2,
        "title": "描述",
        "slug": "描述",
        "link": "#描述",
        "children": []
      },
      {
        "level": 2,
        "title": "命令行标记",
        "slug": "命令行标记",
        "link": "#命令行标记",
        "children": []
      },
      {
        "level": 2,
        "title": "环境变量",
        "slug": "环境变量",
        "link": "#环境变量",
        "children": []
      },
      {
        "level": 2,
        "title": "npmrc 文件",
        "slug": "npmrc-文件",
        "link": "#npmrc-文件",
        "children": []
      },
      {
        "level": 2,
        "title": "默认配置",
        "slug": "默认配置",
        "link": "#默认配置",
        "children": []
      },
      {
        "level": 2,
        "title": "简写以及一些其他的 CLI 细节",
        "slug": "简写以及一些其他的-cli-细节",
        "link": "#简写以及一些其他的-cli-细节",
        "children": []
      },
      {
        "level": 2,
        "title": "每个包的配置设置",
        "slug": "每个包的配置设置",
        "link": "#每个包的配置设置",
        "children": []
      },
      {
        "level": 2,
        "title": "各项配置",
        "slug": "各项配置",
        "link": "#各项配置",
        "children": []
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/npm/npm-config.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "npm-scripts",
    "headers": [
      {
        "level": 2,
        "title": "描述",
        "slug": "描述",
        "link": "#描述",
        "children": []
      },
      {
        "level": 2,
        "title": "prepublish 和 prepare",
        "slug": "prepublish-和-prepare",
        "link": "#prepublish-和-prepare",
        "children": [
          {
            "level": 3,
            "title": "废弃说明",
            "slug": "废弃说明",
            "link": "#废弃说明",
            "children": []
          },
          {
            "level": 3,
            "title": "使用示例",
            "slug": "使用示例",
            "link": "#使用示例",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "默认值",
        "slug": "默认值",
        "link": "#默认值",
        "children": []
      },
      {
        "level": 2,
        "title": "用户",
        "slug": "用户",
        "link": "#用户",
        "children": []
      },
      {
        "level": 2,
        "title": "环境",
        "slug": "环境",
        "link": "#环境",
        "children": [
          {
            "level": 3,
            "title": "path",
            "slug": "path",
            "link": "#path",
            "children": []
          },
          {
            "level": 3,
            "title": "package.json 变量",
            "slug": "package-json-变量",
            "link": "#package-json-变量",
            "children": []
          },
          {
            "level": 3,
            "title": "配置",
            "slug": "配置",
            "link": "#配置",
            "children": []
          },
          {
            "level": 3,
            "title": "特殊: package.json 里的 config 对象",
            "slug": "特殊-package-json-里的-config-对象",
            "link": "#特殊-package-json-里的-config-对象",
            "children": []
          },
          {
            "level": 3,
            "title": "生命周期事件",
            "slug": "生命周期事件",
            "link": "#生命周期事件",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "示例",
        "slug": "示例",
        "link": "#示例",
        "children": []
      },
      {
        "level": 2,
        "title": "退出",
        "slug": "退出",
        "link": "#退出",
        "children": []
      },
      {
        "level": 2,
        "title": "钩子脚本",
        "slug": "钩子脚本",
        "link": "#钩子脚本",
        "children": []
      },
      {
        "level": 2,
        "title": "最佳实践",
        "slug": "最佳实践",
        "link": "#最佳实践",
        "children": []
      },
      {
        "level": 2,
        "title": "补充知识",
        "slug": "补充知识",
        "link": "#补充知识",
        "children": [
          {
            "level": 3,
            "title": "npm run",
            "slug": "npm-run",
            "link": "#npm-run",
            "children": []
          },
          {
            "level": 3,
            "title": "npm run env",
            "slug": "npm-run-env",
            "link": "#npm-run-env",
            "children": []
          },
          {
            "level": 3,
            "title": "npm scripts 参数",
            "slug": "npm-scripts-参数",
            "link": "#npm-scripts-参数",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/npm/npm-scripts.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "npmrc",
    "headers": [
      {
        "level": 2,
        "title": "描述",
        "slug": "描述",
        "link": "#描述",
        "children": []
      },
      {
        "level": 2,
        "title": "文件",
        "slug": "文件",
        "link": "#文件",
        "children": []
      },
      {
        "level": 2,
        "title": "注释",
        "slug": "注释",
        "link": "#注释",
        "children": []
      },
      {
        "level": 2,
        "title": "每个项目的配置文件",
        "slug": "每个项目的配置文件",
        "link": "#每个项目的配置文件",
        "children": []
      },
      {
        "level": 2,
        "title": "每个用户的配置文件",
        "slug": "每个用户的配置文件",
        "link": "#每个用户的配置文件",
        "children": []
      },
      {
        "level": 2,
        "title": "全局配置文件",
        "slug": "全局配置文件",
        "link": "#全局配置文件",
        "children": []
      },
      {
        "level": 2,
        "title": "内置的配置文件",
        "slug": "内置的配置文件",
        "link": "#内置的配置文件",
        "children": []
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/npm/npmrc.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "package-lock.json",
    "headers": [
      {
        "level": 2,
        "title": "关于 package-lock.json，你需要知道的一些事情",
        "slug": "关于-package-lock-json-你需要知道的一些事情",
        "link": "#关于-package-lock-json-你需要知道的一些事情",
        "children": []
      },
      {
        "level": 2,
        "title": "npm 5.0.0 以后的版本变化",
        "slug": "npm-5-0-0-以后的版本变化",
        "link": "#npm-5-0-0-以后的版本变化",
        "children": []
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/npm/package-lock.json.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "package.json",
    "headers": [
      {
        "level": 2,
        "title": "version",
        "slug": "version",
        "link": "#version",
        "children": [
          {
            "level": 3,
            "title": "语义化版本",
            "slug": "语义化版本",
            "link": "#语义化版本",
            "children": []
          },
          {
            "level": 3,
            "title": "npm 包发布时修改版本号",
            "slug": "npm-包发布时修改版本号",
            "link": "#npm-包发布时修改版本号",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "scripts",
        "slug": "scripts",
        "link": "#scripts",
        "children": [
          {
            "level": 3,
            "title": "scripts 里的参数传递",
            "slug": "scripts-里的参数传递",
            "link": "#scripts-里的参数传递",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "bin",
        "slug": "bin",
        "link": "#bin",
        "children": [
          {
            "level": 3,
            "title": "全局安装的 bin",
            "slug": "全局安装的-bin",
            "link": "#全局安装的-bin",
            "children": []
          },
          {
            "level": 3,
            "title": "局部安装的 bin",
            "slug": "局部安装的-bin",
            "link": "#局部安装的-bin",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "module",
        "slug": "module",
        "link": "#module",
        "children": []
      },
      {
        "level": 2,
        "title": "dependencies",
        "slug": "dependencies",
        "link": "#dependencies",
        "children": [
          {
            "level": 3,
            "title": "使用本地路径",
            "slug": "使用本地路径",
            "link": "#使用本地路径",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/npm/package.json.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "第三方工具",
    "headers": [
      {
        "level": 2,
        "title": "监控文件变化",
        "slug": "监控文件变化",
        "link": "#监控文件变化",
        "children": [
          {
            "level": 3,
            "title": "chokidar 监控文件变化",
            "slug": "chokidar-监控文件变化",
            "link": "#chokidar-监控文件变化",
            "children": []
          },
          {
            "level": 3,
            "title": "nodemon 监控文件变化重启应用",
            "slug": "nodemon-监控文件变化重启应用",
            "link": "#nodemon-监控文件变化重启应用",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "网络请求",
        "slug": "网络请求",
        "link": "#网络请求",
        "children": [
          {
            "level": 3,
            "title": "axios-curlirize 将请求显示为 CURL",
            "slug": "axios-curlirize-将请求显示为-curl",
            "link": "#axios-curlirize-将请求显示为-curl",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "library 里常用的工具库",
        "slug": "library-里常用的工具库",
        "link": "#library-里常用的工具库",
        "children": [
          {
            "level": 3,
            "title": "Inquirer.js",
            "slug": "inquirer-js",
            "link": "#inquirer-js",
            "children": []
          },
          {
            "level": 3,
            "title": "Commander.js",
            "slug": "commander-js",
            "link": "#commander-js",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "其他",
        "slug": "其他",
        "link": "#其他",
        "children": [
          {
            "level": 3,
            "title": "require-all",
            "slug": "require-all",
            "link": "#require-all",
            "children": []
          },
          {
            "level": 3,
            "title": "etag",
            "slug": "etag",
            "link": "#etag",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "depcheck",
        "slug": "depcheck",
        "link": "#depcheck",
        "children": []
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/third-party-packages/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "koa 相关包",
    "headers": [
      {
        "level": 2,
        "title": "koa2-connect",
        "slug": "koa2-connect",
        "link": "#koa2-connect",
        "children": []
      },
      {
        "level": 2,
        "title": "koa-send、koa-static",
        "slug": "koa-send、koa-static",
        "link": "#koa-send、koa-static",
        "children": []
      },
      {
        "level": 2,
        "title": "koa-socket-2",
        "slug": "koa-socket-2",
        "link": "#koa-socket-2",
        "children": []
      },
      {
        "level": 2,
        "title": "koa-json",
        "slug": "koa-json",
        "link": "#koa-json",
        "children": []
      },
      {
        "level": 2,
        "title": "koa-onerror",
        "slug": "koa-onerror",
        "link": "#koa-onerror",
        "children": []
      },
      {
        "level": 2,
        "title": "koa-bodyparser",
        "slug": "koa-bodyparser",
        "link": "#koa-bodyparser",
        "children": []
      },
      {
        "level": 2,
        "title": "koa-router",
        "slug": "koa-router",
        "link": "#koa-router",
        "children": []
      },
      {
        "level": 2,
        "title": "koa-views",
        "slug": "koa-views",
        "link": "#koa-views",
        "children": []
      },
      {
        "level": 2,
        "title": "koa-proxy",
        "slug": "koa-proxy",
        "link": "#koa-proxy",
        "children": []
      },
      {
        "level": 2,
        "title": "koa-logger",
        "slug": "koa-logger",
        "link": "#koa-logger",
        "children": []
      }
    ],
    "path": "/front-end-engineering/environment/package-manager/third-party-packages/koa.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Webpack 核心概念",
    "headers": [
      {
        "level": 2,
        "title": "优秀文章",
        "slug": "优秀文章",
        "link": "#优秀文章",
        "children": []
      },
      {
        "level": 2,
        "title": "插件",
        "slug": "插件",
        "link": "#插件",
        "children": [
          {
            "level": 3,
            "title": "分析依赖关系",
            "slug": "分析依赖关系",
            "link": "#分析依赖关系",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "概念名词",
        "slug": "概念名词",
        "link": "#概念名词",
        "children": [
          {
            "level": 3,
            "title": "module、chunk、bundle、asset",
            "slug": "module、chunk、bundle、asset",
            "link": "#module、chunk、bundle、asset",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "容易忽视的点",
        "slug": "容易忽视的点",
        "link": "#容易忽视的点",
        "children": [
          {
            "level": 3,
            "title": "loader",
            "slug": "loader",
            "link": "#loader",
            "children": []
          },
          {
            "level": 3,
            "title": "plugin",
            "slug": "plugin",
            "link": "#plugin",
            "children": []
          },
          {
            "level": 3,
            "title": "HMR 模块热替换",
            "slug": "hmr-模块热替换",
            "link": "#hmr-模块热替换",
            "children": []
          },
          {
            "level": 3,
            "title": "模块",
            "slug": "模块",
            "link": "#模块",
            "children": []
          },
          {
            "level": 3,
            "title": "chunk",
            "slug": "chunk",
            "link": "#chunk",
            "children": []
          },
          {
            "level": 3,
            "title": "Tree Shaking",
            "slug": "tree-shaking",
            "link": "#tree-shaking",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "优化",
        "slug": "优化",
        "link": "#优化",
        "children": [
          {
            "level": 3,
            "title": "配置优化",
            "slug": "配置优化",
            "link": "#配置优化",
            "children": []
          },
          {
            "level": 3,
            "title": "代码优化",
            "slug": "代码优化",
            "link": "#代码优化",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/tools/build/webpack/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Webpack runtime 简单分析",
    "headers": [
      {
        "level": 2,
        "title": "示例项目源码",
        "slug": "示例项目源码",
        "link": "#示例项目源码",
        "children": [
          {
            "level": 3,
            "title": "配置文件 webpack.config.js",
            "slug": "配置文件-webpack-config-js",
            "link": "#配置文件-webpack-config-js",
            "children": []
          },
          {
            "level": 3,
            "title": "入口文件 index.js",
            "slug": "入口文件-index-js",
            "link": "#入口文件-index-js",
            "children": []
          },
          {
            "level": 3,
            "title": "模块 a.js",
            "slug": "模块-a-js",
            "link": "#模块-a-js",
            "children": []
          },
          {
            "level": 3,
            "title": "模块 b.js",
            "slug": "模块-b-js",
            "link": "#模块-b-js",
            "children": []
          },
          {
            "level": 3,
            "title": "模块 c.js",
            "slug": "模块-c-js",
            "link": "#模块-c-js",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "产出文件及结构分析",
        "slug": "产出文件及结构分析",
        "link": "#产出文件及结构分析",
        "children": [
          {
            "level": 3,
            "title": "html",
            "slug": "html",
            "link": "#html",
            "children": []
          },
          {
            "level": 3,
            "title": "runtime bundle",
            "slug": "runtime-bundle",
            "link": "#runtime-bundle",
            "children": []
          },
          {
            "level": 3,
            "title": "非 runtime 的 bundle",
            "slug": "非-runtime-的-bundle",
            "link": "#非-runtime-的-bundle",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "分析",
        "slug": "分析",
        "link": "#分析",
        "children": [
          {
            "level": 3,
            "title": "代码生成",
            "slug": "代码生成",
            "link": "#代码生成",
            "children": []
          },
          {
            "level": 3,
            "title": "执行过程",
            "slug": "执行过程",
            "link": "#执行过程",
            "children": []
          },
          {
            "level": 3,
            "title": "总结",
            "slug": "总结",
            "link": "#总结",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "疑难点",
        "slug": "疑难点",
        "link": "#疑难点",
        "children": [
          {
            "level": 3,
            "title": '为什么要保留原 window["webpackJsonp"].push 的引用',
            "slug": "为什么要保留原-window-webpackjsonp-push-的引用",
            "link": "#为什么要保留原-window-webpackjsonp-push-的引用",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/tools/build/webpack/webpack-runtime.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "TODO",
    "headers": [
      {
        "level": 2,
        "title": "需要明白的配置",
        "slug": "需要明白的配置",
        "link": "#需要明白的配置",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/build/webpack/webpack-todo.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Webpack 4: import() and CommonJs",
    "headers": [
      {
        "level": 2,
        "title": "A3 and B3: import(ESM)",
        "slug": "a3-and-b3-import-esm",
        "link": "#a3-and-b3-import-esm",
        "children": []
      },
      {
        "level": 2,
        "title": "A1: import(CJS)",
        "slug": "a1-import-cjs",
        "link": "#a1-import-cjs",
        "children": []
      },
      {
        "level": 2,
        "title": "B1: import(CJS).mjs",
        "slug": "b1-import-cjs-mjs",
        "link": "#b1-import-cjs-mjs",
        "children": []
      },
      {
        "level": 2,
        "title": "A2: import(transpiled-ESM)",
        "slug": "a2-import-transpiled-esm",
        "link": "#a2-import-transpiled-esm",
        "children": []
      },
      {
        "level": 2,
        "title": "B2: import(transpiled-ESM).mjs",
        "slug": "b2-import-transpiled-esm-mjs",
        "link": "#b2-import-transpiled-esm-mjs",
        "children": []
      },
      {
        "level": 2,
        "title": "A4 and B4: import(json)",
        "slug": "a4-and-b4-import-json",
        "link": "#a4-and-b4-import-json",
        "children": []
      },
      {
        "level": 2,
        "title": "总结",
        "slug": "总结",
        "link": "#总结",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/build/webpack/webpack4-import.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "JavaScript 命名规范",
    "headers": [
      {
        "level": 2,
        "title": "变量",
        "slug": "变量",
        "link": "#变量",
        "children": []
      },
      {
        "level": 2,
        "title": "常量",
        "slug": "常量",
        "link": "#常量",
        "children": []
      },
      {
        "level": 2,
        "title": "函数/方法命名",
        "slug": "函数-方法命名",
        "link": "#函数-方法命名",
        "children": []
      },
      {
        "level": 2,
        "title": "类/构造函数",
        "slug": "类-构造函数",
        "link": "#类-构造函数",
        "children": [
          {
            "level": 3,
            "title": "类的成员",
            "slug": "类的成员",
            "link": "#类的成员",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Vue 命名规范",
        "slug": "vue-命名规范",
        "link": "#vue-命名规范",
        "children": []
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/style-guide/naming-conventions/js.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "命名参考",
    "headers": [
      {
        "level": 2,
        "title": "业务逻辑",
        "slug": "业务逻辑",
        "link": "#业务逻辑",
        "children": [
          {
            "level": 3,
            "title": "奖励",
            "slug": "奖励",
            "link": "#奖励",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "符号",
        "slug": "符号",
        "link": "#符号",
        "children": []
      },
      {
        "level": 2,
        "title": "命名方式",
        "slug": "命名方式",
        "link": "#命名方式",
        "children": []
      },
      {
        "level": 2,
        "title": "其他",
        "slug": "其他",
        "link": "#其他",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/style-guide/naming-conventions/naming-references.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "8 盒模型",
    "headers": [
      {
        "level": 2,
        "title": "8.1 盒尺寸",
        "slug": "_8-1-盒尺寸",
        "link": "#_8-1-盒尺寸",
        "children": []
      },
      {
        "level": 2,
        "title": "8.3 外边距属性",
        "slug": "_8-3-外边距属性",
        "link": "#_8-3-外边距属性",
        "children": [
          {
            "level": 3,
            "title": "8.3.1 外边距折叠",
            "slug": "_8-3-1-外边距折叠",
            "link": "#_8-3-1-外边距折叠",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "8.4 内边距属性",
        "slug": "_8-4-内边距属性",
        "link": "#_8-4-内边距属性",
        "children": []
      }
    ],
    "path": "/css/css-spec/css2.2/8-box-model/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "9 视觉格式化模型",
    "headers": [
      {
        "level": 2,
        "title": "9.1 介绍",
        "slug": "_9-1-介绍",
        "link": "#_9-1-介绍",
        "children": [
          {
            "level": 3,
            "title": "9.1.1 视口",
            "slug": "_9-1-1-视口",
            "link": "#_9-1-1-视口",
            "children": []
          },
          {
            "level": 3,
            "title": "9.1.2 包含块",
            "slug": "_9-1-2-包含块",
            "link": "#_9-1-2-包含块",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "9.2 控制盒的生成",
        "slug": "_9-2-控制盒的生成",
        "link": "#_9-2-控制盒的生成",
        "children": [
          {
            "level": 3,
            "title": "9.2.1 块级元素和块盒",
            "slug": "_9-2-1-块级元素和块盒",
            "link": "#_9-2-1-块级元素和块盒",
            "children": []
          },
          {
            "level": 3,
            "title": "9.2.2 行内级元素和行内盒",
            "slug": "_9-2-2-行内级元素和行内盒",
            "link": "#_9-2-2-行内级元素和行内盒",
            "children": []
          },
          {
            "level": 3,
            "title": "9.2.3 Run-in boxes",
            "slug": "_9-2-3-run-in-boxes",
            "link": "#_9-2-3-run-in-boxes",
            "children": []
          },
          {
            "level": 3,
            "title": "9.2.4 display 属性",
            "slug": "_9-2-4-display-属性",
            "link": "#_9-2-4-display-属性",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "9.3 定位方案",
        "slug": "_9-3-定位方案",
        "link": "#_9-3-定位方案",
        "children": [
          {
            "level": 3,
            "title": "9.3.1 设置 position 属性来选择定位方案",
            "slug": "_9-3-1-设置-position-属性来选择定位方案",
            "link": "#_9-3-1-设置-position-属性来选择定位方案",
            "children": []
          },
          {
            "level": 3,
            "title": "盒子的偏移，top/right/bottom/left",
            "slug": "盒子的偏移-top-right-bottom-left",
            "link": "#盒子的偏移-top-right-bottom-left",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "9.4 常规流",
        "slug": "_9-4-常规流",
        "link": "#_9-4-常规流",
        "children": [
          {
            "level": 3,
            "title": "9.4.1 BFC",
            "slug": "_9-4-1-bfc",
            "link": "#_9-4-1-bfc",
            "children": []
          },
          {
            "level": 3,
            "title": "9.4.2 IFC",
            "slug": "_9-4-2-ifc",
            "link": "#_9-4-2-ifc",
            "children": []
          },
          {
            "level": 3,
            "title": "9.4.3 相对定位",
            "slug": "_9-4-3-相对定位",
            "link": "#_9-4-3-相对定位",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "9.5 浮动",
        "slug": "_9-5-浮动",
        "link": "#_9-5-浮动",
        "children": [
          {
            "level": 3,
            "title": "9.5.1 float 属性",
            "slug": "_9-5-1-float-属性",
            "link": "#_9-5-1-float-属性",
            "children": []
          },
          {
            "level": 3,
            "title": "9.5.2 控制浮动旁边的流: clear 属性",
            "slug": "_9-5-2-控制浮动旁边的流-clear-属性",
            "link": "#_9-5-2-控制浮动旁边的流-clear-属性",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "9.6 绝对定位",
        "slug": "_9-6-绝对定位",
        "link": "#_9-6-绝对定位",
        "children": [
          {
            "level": 3,
            "title": "9.6.1 固定定位",
            "slug": "_9-6-1-固定定位",
            "link": "#_9-6-1-固定定位",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "9.7 display、position、float 之间的关系",
        "slug": "_9-7-display、position、float-之间的关系",
        "link": "#_9-7-display、position、float-之间的关系",
        "children": []
      },
      {
        "level": 2,
        "title": "9.8 常规流、浮动、绝对定位的对比",
        "slug": "_9-8-常规流、浮动、绝对定位的对比",
        "link": "#_9-8-常规流、浮动、绝对定位的对比",
        "children": [
          {
            "level": 3,
            "title": "9.8.1 常规流",
            "slug": "_9-8-1-常规流",
            "link": "#_9-8-1-常规流",
            "children": []
          },
          {
            "level": 3,
            "title": "9.8.2 相对定位",
            "slug": "_9-8-2-相对定位",
            "link": "#_9-8-2-相对定位",
            "children": []
          },
          {
            "level": 3,
            "title": "9.8.3 \b浮动盒子",
            "slug": "_9-8-3-浮动盒子",
            "link": "#_9-8-3-浮动盒子",
            "children": []
          },
          {
            "level": 3,
            "title": "9.8.4 绝对定位",
            "slug": "_9-8-4-绝对定位",
            "link": "#_9-8-4-绝对定位",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "9.9 层级展示",
        "slug": "_9-9-层级展示",
        "link": "#_9-9-层级展示",
        "children": [
          {
            "level": 3,
            "title": "9.9.1 指定堆叠层级: z-index 属性",
            "slug": "_9-9-1-指定堆叠层级-z-index-属性",
            "link": "#_9-9-1-指定堆叠层级-z-index-属性",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "9.10 文本方向: direction 和 unicode-bidi 属性",
        "slug": "_9-10-文本方向-direction-和-unicode-bidi-属性",
        "link": "#_9-10-文本方向-direction-和-unicode-bidi-属性",
        "children": []
      }
    ],
    "path": "/css/css-spec/css2.2/9-visual-formatting-model/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "flex 布局下 img 显示问题",
    "headers": [
      {
        "level": 2,
        "title": "问题",
        "slug": "问题",
        "link": "#问题",
        "children": []
      },
      {
        "level": 2,
        "title": "解决方案",
        "slug": "解决方案",
        "link": "#解决方案",
        "children": [
          {
            "level": 3,
            "title": "确定宽度",
            "slug": "确定宽度",
            "link": "#确定宽度",
            "children": []
          },
          {
            "level": 3,
            "title": "align-items",
            "slug": "align-items",
            "link": "#align-items",
            "children": []
          },
          {
            "level": 3,
            "title": "确定高度",
            "slug": "确定高度",
            "link": "#确定高度",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/topics/flex/flex-image/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "文本换行和省略",
    "headers": [
      {
        "level": 2,
        "title": "文本换行",
        "slug": "文本换行",
        "link": "#文本换行",
        "children": [
          {
            "level": 3,
            "title": "单词换行（word-wrap）",
            "slug": "单词换行-word-wrap",
            "link": "#单词换行-word-wrap",
            "children": []
          },
          {
            "level": 3,
            "title": "单词折断（word-break）",
            "slug": "单词折断-word-break",
            "link": "#单词折断-word-break",
            "children": []
          },
          {
            "level": 3,
            "title": "换行示例",
            "slug": "换行示例",
            "link": "#换行示例",
            "children": []
          },
          {
            "level": 3,
            "title": "Reference",
            "slug": "reference",
            "link": "#reference",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "文本省略",
        "slug": "文本省略",
        "link": "#文本省略",
        "children": [
          {
            "level": 3,
            "title": "省略示例",
            "slug": "省略示例",
            "link": "#省略示例",
            "children": []
          }
        ]
      }
    ],
    "path": "/css/topics/text/text-wrap-and-ellipsis/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "二分搜索",
    "headers": [
      {
        "level": 2,
        "title": "关注点",
        "slug": "关注点",
        "link": "#关注点",
        "children": [
          {
            "level": 3,
            "title": "搜索区间",
            "slug": "搜索区间",
            "link": "#搜索区间",
            "children": []
          },
          {
            "level": 3,
            "title": "明确新的 left/right",
            "slug": "明确新的-left-right",
            "link": "#明确新的-left-right",
            "children": []
          },
          {
            "level": 3,
            "title": "循环判断条件",
            "slug": "循环判断条件",
            "link": "#循环判断条件",
            "children": []
          },
          {
            "level": 3,
            "title": "返回 left/right",
            "slug": "返回-left-right",
            "link": "#返回-left-right",
            "children": []
          },
          {
            "level": 3,
            "title": "mid 是上取整还是下取整",
            "slug": "mid-是上取整还是下取整",
            "link": "#mid-是上取整还是下取整",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      }
    ],
    "path": "/interview/algorithm/others/binary-search/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "LeetCode - 数组中的第K个最大元素",
    "headers": [
      {
        "level": 2,
        "title": "【Medium】获取第 K 大的数",
        "slug": "【medium】获取第-k-大的数",
        "link": "#【medium】获取第-k-大的数",
        "children": []
      }
    ],
    "path": "/interview/algorithm/interview/leetcode/kth-largest-element-in-an-array.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "LeetCode - 将数组分成和相等的三个部分",
    "headers": [
      {
        "level": 2,
        "title": "1 【中级-LeetCode Easy】将数组分成和相等的三个部分",
        "slug": "_1-【中级-leetcode-easy】将数组分成和相等的三个部分",
        "link": "#_1-【中级-leetcode-easy】将数组分成和相等的三个部分",
        "children": []
      },
      {
        "level": 2,
        "title": "2 【中级】划分数组",
        "slug": "_2-【中级】划分数组",
        "link": "#_2-【中级】划分数组",
        "children": []
      }
    ],
    "path": "/interview/algorithm/interview/leetcode/partition-array-into-three-parts-with-equal-sum.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "冒泡排序",
    "headers": [
      {
        "level": 2,
        "title": "示意图",
        "slug": "示意图",
        "link": "#示意图",
        "children": []
      },
      {
        "level": 2,
        "title": "实现",
        "slug": "实现",
        "link": "#实现",
        "children": []
      },
      {
        "level": 2,
        "title": "分析",
        "slug": "分析",
        "link": "#分析",
        "children": [
          {
            "level": 3,
            "title": "优化",
            "slug": "优化",
            "link": "#优化",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/interview/algorithm/sorting-algorithm/bubble-sort/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "插入排序",
    "headers": [
      {
        "level": 2,
        "title": "示意图",
        "slug": "示意图",
        "link": "#示意图",
        "children": []
      },
      {
        "level": 2,
        "title": "实现",
        "slug": "实现",
        "link": "#实现",
        "children": []
      },
      {
        "level": 2,
        "title": "分析",
        "slug": "分析",
        "link": "#分析",
        "children": []
      },
      {
        "level": 2,
        "title": "优化",
        "slug": "优化",
        "link": "#优化",
        "children": [
          {
            "level": 3,
            "title": "二分法插入排序",
            "slug": "二分法插入排序",
            "link": "#二分法插入排序",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/interview/algorithm/sorting-algorithm/insertion-sort/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "归并排序",
    "headers": [
      {
        "level": 2,
        "title": "示意图",
        "slug": "示意图",
        "link": "#示意图",
        "children": []
      },
      {
        "level": 2,
        "title": "实现",
        "slug": "实现",
        "link": "#实现",
        "children": []
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/interview/algorithm/sorting-algorithm/merge-sort/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "快速排序",
    "headers": [
      {
        "level": 2,
        "title": "示意图",
        "slug": "示意图",
        "link": "#示意图",
        "children": []
      },
      {
        "level": 2,
        "title": "实现",
        "slug": "实现",
        "link": "#实现",
        "children": []
      },
      {
        "level": 2,
        "title": "复杂度分析",
        "slug": "复杂度分析",
        "link": "#复杂度分析",
        "children": [
          {
            "level": 3,
            "title": "时间复杂度",
            "slug": "时间复杂度",
            "link": "#时间复杂度",
            "children": []
          },
          {
            "level": 3,
            "title": "空间复杂度",
            "slug": "空间复杂度",
            "link": "#空间复杂度",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/interview/algorithm/sorting-algorithm/quick-sort/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "选择排序",
    "headers": [
      {
        "level": 2,
        "title": "示意图",
        "slug": "示意图",
        "link": "#示意图",
        "children": []
      },
      {
        "level": 2,
        "title": "实现",
        "slug": "实现",
        "link": "#实现",
        "children": []
      },
      {
        "level": 2,
        "title": "分析",
        "slug": "分析",
        "link": "#分析",
        "children": []
      },
      {
        "level": 2,
        "title": "Reference",
        "slug": "reference",
        "link": "#reference",
        "children": []
      }
    ],
    "path": "/interview/algorithm/sorting-algorithm/selection-sort/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【高级】随机生成一个合法的 css 颜色值，比如 #c1c1c1",
    "headers": [
      {
        "level": 2,
        "title": "方式一：遍历生成每一组数字",
        "slug": "方式一-遍历生成每一组数字",
        "link": "#方式一-遍历生成每一组数字",
        "children": []
      },
      {
        "level": 2,
        "title": "方式二：生成 6 位随机数",
        "slug": "方式二-生成-6-位随机数",
        "link": "#方式二-生成-6-位随机数",
        "children": []
      }
    ],
    "path": "/interview/javascript/coding/basic-api-usage/create-a-random-valid-hex-color.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "基础 API 使用",
    "headers": [
      {
        "level": 2,
        "title": "数组",
        "slug": "数组",
        "link": "#数组",
        "children": []
      },
      {
        "level": 2,
        "title": "事件循环",
        "slug": "事件循环",
        "link": "#事件循环",
        "children": []
      },
      {
        "level": 2,
        "title": "Polyfill",
        "slug": "polyfill",
        "link": "#polyfill",
        "children": []
      },
      {
        "level": 2,
        "title": "ES6",
        "slug": "es6",
        "link": "#es6",
        "children": []
      },
      {
        "level": 2,
        "title": "其他",
        "slug": "其他",
        "link": "#其他",
        "children": []
      }
    ],
    "path": "/interview/javascript/coding/basic-api-usage/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】颜色转换，rgbToHex",
    "headers": [],
    "path": "/interview/javascript/coding/basic-api-usage/rgb-to-hex.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】变量命名风格转换",
    "headers": [
      {
        "level": 2,
        "title": "【初级】将连字符命名转换成小驼峰命名",
        "slug": "【初级】将连字符命名转换成小驼峰命名",
        "link": "#【初级】将连字符命名转换成小驼峰命名",
        "children": []
      },
      {
        "level": 2,
        "title": "将小驼峰命名转换成连字符命名",
        "slug": "将小驼峰命名转换成连字符命名",
        "link": "#将小驼峰命名转换成连字符命名",
        "children": []
      }
    ],
    "path": "/interview/javascript/coding/basic-api-usage/variable-naming-style.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【高级】深拷贝",
    "headers": [
      {
        "level": 2,
        "title": "手写深拷贝方法，要考虑到非基本类型情况，比如正则、方法等？",
        "slug": "手写深拷贝方法-要考虑到非基本类型情况-比如正则、方法等",
        "link": "#手写深拷贝方法-要考虑到非基本类型情况-比如正则、方法等",
        "children": []
      }
    ],
    "path": "/interview/javascript/coding/program-design/deep-clone.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【高级】EventEmitter",
    "headers": [
      {
        "level": 2,
        "title": "实现 EventEmitter 类，需要实现on, off, once, emit几个方法",
        "slug": "实现-eventemitter-类-需要实现on-off-once-emit几个方法",
        "link": "#实现-eventemitter-类-需要实现on-off-once-emit几个方法",
        "children": []
      }
    ],
    "path": "/interview/javascript/coding/program-design/event-emitter.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "程序设计",
    "headers": [],
    "path": "/interview/javascript/coding/program-design/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【高级】最大并发请求控制",
    "headers": [
      {
        "level": 2,
        "title": "实现一个createRequest方法（假设浏览器允许无限多的并行请求）实现最大并发请求量控制。调用形式如下图，最后实现效果如图：",
        "slug": "实现一个createrequest方法-假设浏览器允许无限多的并行请求-实现最大并发请求量控制。调用形式如下图-最后实现效果如图",
        "link": "#实现一个createrequest方法-假设浏览器允许无限多的并行请求-实现最大并发请求量控制。调用形式如下图-最后实现效果如图",
        "children": []
      }
    ],
    "path": "/interview/javascript/coding/program-design/max-parallel-request-count-control.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "数据类型",
    "headers": [],
    "path": "/interview/javascript/foundation/data-type/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】函数参数值传递问题",
    "headers": [],
    "path": "/interview/javascript/foundation/data-type/the-value-of-the-params-passed-to-function.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】typeof",
    "headers": [],
    "path": "/interview/javascript/foundation/data-type/typeof.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "执行上下文",
    "headers": [
      {
        "level": 2,
        "title": "变量",
        "slug": "变量",
        "link": "#变量",
        "children": []
      },
      {
        "level": 2,
        "title": "闭包",
        "slug": "闭包",
        "link": "#闭包",
        "children": []
      },
      {
        "level": 2,
        "title": "作用域",
        "slug": "作用域",
        "link": "#作用域",
        "children": []
      },
      {
        "level": 2,
        "title": "调用栈",
        "slug": "调用栈",
        "link": "#调用栈",
        "children": []
      },
      {
        "level": 2,
        "title": "原型",
        "slug": "原型",
        "link": "#原型",
        "children": []
      },
      {
        "level": 2,
        "title": "new",
        "slug": "new",
        "link": "#new",
        "children": []
      },
      {
        "level": 2,
        "title": "this",
        "slug": "this",
        "link": "#this",
        "children": []
      }
    ],
    "path": "/interview/javascript/foundation/execution-context/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "执行机制",
    "headers": [
      {
        "level": 2,
        "title": "事件循环",
        "slug": "事件循环",
        "link": "#事件循环",
        "children": []
      }
    ],
    "path": "/interview/javascript/foundation/execution-mechanism/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "防抖和节流",
    "headers": [
      {
        "level": 2,
        "title": "参考文档",
        "slug": "参考文档",
        "link": "#参考文档",
        "children": []
      },
      {
        "level": 2,
        "title": "防抖",
        "slug": "防抖",
        "link": "#防抖",
        "children": [
          {
            "level": 3,
            "title": "简单实现",
            "slug": "简单实现",
            "link": "#简单实现",
            "children": []
          },
          {
            "level": 3,
            "title": "underscore.debounce",
            "slug": "underscore-debounce",
            "link": "#underscore-debounce",
            "children": []
          },
          {
            "level": 3,
            "title": "lodash.debounce",
            "slug": "lodash-debounce",
            "link": "#lodash-debounce",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "节流",
        "slug": "节流",
        "link": "#节流",
        "children": [
          {
            "level": 3,
            "title": "简单实现",
            "slug": "简单实现-1",
            "link": "#简单实现-1",
            "children": []
          },
          {
            "level": 3,
            "title": "underscore.throttle",
            "slug": "underscore-throttle",
            "link": "#underscore-throttle",
            "children": []
          },
          {
            "level": 3,
            "title": "lodash.throttle",
            "slug": "lodash-throttle",
            "link": "#lodash-throttle",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "requestAnimationFrame",
        "slug": "requestanimationframe",
        "link": "#requestanimationframe",
        "children": []
      }
    ],
    "path": "/interview/javascript/performance-optimization/debounce-throttle/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "console.log(event)",
    "headers": [
      {
        "level": 2,
        "title": "event 对象",
        "slug": "event-对象",
        "link": "#event-对象",
        "children": []
      },
      {
        "level": 2,
        "title": "console.log()",
        "slug": "console-log",
        "link": "#console-log",
        "children": []
      },
      {
        "level": 2,
        "title": "解疑",
        "slug": "解疑",
        "link": "#解疑",
        "children": []
      },
      {
        "level": 2,
        "title": "如何隐藏 console.log 打印信息时的源文件名称和行号？",
        "slug": "如何隐藏-console-log-打印信息时的源文件名称和行号",
        "link": "#如何隐藏-console-log-打印信息时的源文件名称和行号",
        "children": []
      }
    ],
    "path": "/js/error-handling/debug/console/console-log-event.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "console",
    "headers": [
      {
        "level": 2,
        "title": "console.log 对象引用",
        "slug": "console-log-对象引用",
        "link": "#console-log-对象引用",
        "children": []
      },
      {
        "level": 2,
        "title": "console.assert()",
        "slug": "console-assert",
        "link": "#console-assert",
        "children": []
      },
      {
        "level": 2,
        "title": "console.count()",
        "slug": "console-count",
        "link": "#console-count",
        "children": []
      },
      {
        "level": 2,
        "title": "console.table",
        "slug": "console-table",
        "link": "#console-table",
        "children": []
      },
      {
        "level": 2,
        "title": "console.trace",
        "slug": "console-trace",
        "link": "#console-trace",
        "children": []
      },
      {
        "level": 2,
        "title": "使用 CSS 定制 console",
        "slug": "使用-css-定制-console",
        "link": "#使用-css-定制-console",
        "children": []
      },
      {
        "level": 2,
        "title": "使用 console.time() 和 console.timeEnd() 对循环做基准测试",
        "slug": "使用-console-time-和-console-timeend-对循环做基准测试",
        "link": "#使用-console-time-和-console-timeend-对循环做基准测试",
        "children": []
      },
      {
        "level": 2,
        "title": "console 中使用 debug()",
        "slug": "console-中使用-debug",
        "link": "#console-中使用-debug",
        "children": []
      },
      {
        "level": 2,
        "title": "监控特定函数调用及参数",
        "slug": "监控特定函数调用及参数",
        "link": "#监控特定函数调用及参数",
        "children": []
      }
    ],
    "path": "/js/error-handling/debug/console/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "概览",
    "headers": [
      {
        "level": 2,
        "title": "代码生成阶段往 AST 上增加的属性",
        "slug": "代码生成阶段往-ast-上增加的属性",
        "link": "#代码生成阶段往-ast-上增加的属性",
        "children": [
          {
            "level": 3,
            "title": "v-model 指令",
            "slug": "v-model-指令",
            "link": "#v-model-指令",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/compile/topics/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "event",
    "headers": [
      {
        "level": 2,
        "title": "parse 阶段",
        "slug": "parse-阶段",
        "link": "#parse-阶段",
        "children": [
          {
            "level": 3,
            "title": "processAttrs",
            "slug": "processattrs",
            "link": "#processattrs",
            "children": []
          },
          {
            "level": 3,
            "title": "addHandler",
            "slug": "addhandler",
            "link": "#addhandler",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "generate 阶段",
        "slug": "generate-阶段",
        "link": "#generate-阶段",
        "children": [
          {
            "level": 3,
            "title": "genData",
            "slug": "gendata",
            "link": "#gendata",
            "children": []
          },
          {
            "level": 3,
            "title": "genHandlers",
            "slug": "genhandlers",
            "link": "#genhandlers",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/compile/topics/event.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "插槽",
    "headers": [
      {
        "level": 2,
        "title": "常规插槽 VS 作用域插槽",
        "slug": "常规插槽-vs-作用域插槽",
        "link": "#常规插槽-vs-作用域插槽",
        "children": [
          {
            "level": 3,
            "title": "插槽的作用域",
            "slug": "插槽的作用域",
            "link": "#插槽的作用域",
            "children": []
          },
          {
            "level": 3,
            "title": "插槽 VNode 的生成方式",
            "slug": "插槽-vnode-的生成方式",
            "link": "#插槽-vnode-的生成方式",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "创建 AST 时处理插槽",
        "slug": "创建-ast-时处理插槽",
        "link": "#创建-ast-时处理插槽",
        "children": [
          {
            "level": 3,
            "title": "processSlotContent 处理插槽内容",
            "slug": "processslotcontent-处理插槽内容",
            "link": "#processslotcontent-处理插槽内容",
            "children": []
          },
          {
            "level": 3,
            "title": "processSlotOutlet 处理插槽标签",
            "slug": "processslotoutlet-处理插槽标签",
            "link": "#processslotoutlet-处理插槽标签",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "生成 render 函数及运行时阶段",
        "slug": "生成-render-函数及运行时阶段",
        "link": "#生成-render-函数及运行时阶段",
        "children": [
          {
            "level": 3,
            "title": "插槽内容数据对象上的 scopedSlots",
            "slug": "插槽内容数据对象上的-scopedslots",
            "link": "#插槽内容数据对象上的-scopedslots",
            "children": []
          },
          {
            "level": 3,
            "title": "genSlot 生成插槽标签的代码",
            "slug": "genslot-生成插槽标签的代码",
            "link": "#genslot-生成插槽标签的代码",
            "children": []
          },
          {
            "level": 3,
            "title": "运行时生成插槽内容的 VNode",
            "slug": "运行时生成插槽内容的-vnode",
            "link": "#运行时生成插槽内容的-vnode",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "示例",
        "slug": "示例",
        "link": "#示例",
        "children": [
          {
            "level": 3,
            "title": "父组件",
            "slug": "父组件",
            "link": "#父组件",
            "children": []
          },
          {
            "level": 3,
            "title": "子组件",
            "slug": "子组件",
            "link": "#子组件",
            "children": []
          },
          {
            "level": 3,
            "title": "父组件的 render 函数",
            "slug": "父组件的-render-函数",
            "link": "#父组件的-render-函数",
            "children": []
          },
          {
            "level": 3,
            "title": "子组件的 render 函数",
            "slug": "子组件的-render-函数",
            "link": "#子组件的-render-函数",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/compile/topics/slot.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "v-model",
    "headers": [
      {
        "level": 2,
        "title": "编译阶段",
        "slug": "编译阶段",
        "link": "#编译阶段",
        "children": [
          {
            "level": 3,
            "title": "processAttrs",
            "slug": "processattrs",
            "link": "#processattrs",
            "children": []
          },
          {
            "level": 3,
            "title": "addDirective",
            "slug": "adddirective",
            "link": "#adddirective",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "代码生成阶段",
        "slug": "代码生成阶段",
        "link": "#代码生成阶段",
        "children": [
          {
            "level": 3,
            "title": "genData",
            "slug": "gendata",
            "link": "#gendata",
            "children": []
          },
          {
            "level": 3,
            "title": "genDirectives",
            "slug": "gendirectives",
            "link": "#gendirectives",
            "children": []
          },
          {
            "level": 3,
            "title": "生成 v-model 指令代码",
            "slug": "生成-v-model-指令代码",
            "link": "#生成-v-model-指令代码",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "运行时阶段",
        "slug": "运行时阶段",
        "link": "#运行时阶段",
        "children": [
          {
            "level": 3,
            "title": "组件的 v-model",
            "slug": "组件的-v-model",
            "link": "#组件的-v-model",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "总结",
        "slug": "总结",
        "link": "#总结",
        "children": []
      }
    ],
    "path": "/vue/source-study/compile/topics/v-model.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "状态数据初始化",
    "headers": [
      {
        "level": 2,
        "title": "initState",
        "slug": "initstate",
        "link": "#initstate",
        "children": []
      },
      {
        "level": 2,
        "title": "proxy",
        "slug": "proxy",
        "link": "#proxy",
        "children": []
      }
    ],
    "path": "/vue/source-study/instance/state/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "计算属性",
    "headers": [
      {
        "level": 2,
        "title": "初始化计算属性",
        "slug": "初始化计算属性",
        "link": "#初始化计算属性",
        "children": []
      },
      {
        "level": 2,
        "title": "创建计算属性 Watcher",
        "slug": "创建计算属性-watcher",
        "link": "#创建计算属性-watcher",
        "children": []
      },
      {
        "level": 2,
        "title": "访问计算属性",
        "slug": "访问计算属性",
        "link": "#访问计算属性",
        "children": []
      },
      {
        "level": 2,
        "title": "惰性求值 lazy: true",
        "slug": "惰性求值-lazy-true",
        "link": "#惰性求值-lazy-true",
        "children": []
      },
      {
        "level": 2,
        "title": "计算属性 getter 的参数",
        "slug": "计算属性-getter-的参数",
        "link": "#计算属性-getter-的参数",
        "children": []
      },
      {
        "level": 2,
        "title": "Dep.target 收集计算属性的依赖",
        "slug": "dep-target-收集计算属性的依赖",
        "link": "#dep-target-收集计算属性的依赖",
        "children": []
      },
      {
        "level": 2,
        "title": "组件实例独有的计算属性 VS 组件继承的计算属性",
        "slug": "组件实例独有的计算属性-vs-组件继承的计算属性",
        "link": "#组件实例独有的计算属性-vs-组件继承的计算属性",
        "children": []
      },
      {
        "level": 2,
        "title": "释疑",
        "slug": "释疑",
        "link": "#释疑",
        "children": [
          {
            "level": 3,
            "title": "为什么访问计算属性时，要实时计算？",
            "slug": "为什么访问计算属性时-要实时计算",
            "link": "#为什么访问计算属性时-要实时计算",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/instance/state/computed.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "data",
    "headers": [
      {
        "level": 2,
        "title": "initData",
        "slug": "initdata",
        "link": "#initdata",
        "children": []
      }
    ],
    "path": "/vue/source-study/instance/state/data.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "methods",
    "headers": [
      {
        "level": 2,
        "title": "initMethods",
        "slug": "initmethods",
        "link": "#initmethods",
        "children": []
      }
    ],
    "path": "/vue/source-study/instance/state/methods.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "props",
    "headers": [
      {
        "level": 2,
        "title": "提取 propsData",
        "slug": "提取-propsdata",
        "link": "#提取-propsdata",
        "children": [
          {
            "level": 3,
            "title": "extractPropsFromVNodeData",
            "slug": "extractpropsfromvnodedata",
            "link": "#extractpropsfromvnodedata",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "initProps",
        "slug": "initprops",
        "link": "#initprops",
        "children": [
          {
            "level": 3,
            "title": "prop 挂载到 vm 上便捷访问",
            "slug": "prop-挂载到-vm-上便捷访问",
            "link": "#prop-挂载到-vm-上便捷访问",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "prop 的校验与求值",
        "slug": "prop-的校验与求值",
        "link": "#prop-的校验与求值",
        "children": [
          {
            "level": 3,
            "title": "Boolean 类型特殊处理",
            "slug": "boolean-类型特殊处理",
            "link": "#boolean-类型特殊处理",
            "children": []
          },
          {
            "level": 3,
            "title": "获取默认值 && 创建观察者对象",
            "slug": "获取默认值-创建观察者对象",
            "link": "#获取默认值-创建观察者对象",
            "children": []
          },
          {
            "level": 3,
            "title": "验证",
            "slug": "验证",
            "link": "#验证",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "释疑",
        "slug": "释疑",
        "link": "#释疑",
        "children": [
          {
            "level": 3,
            "title": "initProps 函数里的 defineReactive(props, key, value) 和 validateProp 函数里 observe(value) 有什么区别？",
            "slug": "initprops-函数里的-definereactive-props-key-value-和-validateprop-函数里-observe-value-有什么区别",
            "link": "#initprops-函数里的-definereactive-props-key-value-和-validateprop-函数里-observe-value-有什么区别",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/instance/state/props.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "watch",
    "headers": [
      {
        "level": 2,
        "title": "initWatch",
        "slug": "initwatch",
        "link": "#initwatch",
        "children": []
      },
      {
        "level": 2,
        "title": "vm.$watch()",
        "slug": "vm-watch",
        "link": "#vm-watch",
        "children": []
      }
    ],
    "path": "/vue/source-study/instance/state/watch.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "功能模块的钩子函数",
    "headers": [
      {
        "level": 2,
        "title": "钩子函数的来源",
        "slug": "钩子函数的来源",
        "link": "#钩子函数的来源",
        "children": []
      },
      {
        "level": 2,
        "title": "钩子函数的合并",
        "slug": "钩子函数的合并",
        "link": "#钩子函数的合并",
        "children": []
      },
      {
        "level": 2,
        "title": "钩子函数的调用时机",
        "slug": "钩子函数的调用时机",
        "link": "#钩子函数的调用时机",
        "children": [
          {
            "level": 3,
            "title": "create 钩子",
            "slug": "create-钩子",
            "link": "#create-钩子",
            "children": []
          },
          {
            "level": 3,
            "title": "update 钩子",
            "slug": "update-钩子",
            "link": "#update-钩子",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "其他说明",
        "slug": "其他说明",
        "link": "#其他说明",
        "children": [
          {
            "level": 3,
            "title": "钩子函数参数",
            "slug": "钩子函数参数",
            "link": "#钩子函数参数",
            "children": []
          },
          {
            "level": 3,
            "title": "DOM 操作的节点",
            "slug": "dom-操作的节点",
            "link": "#dom-操作的节点",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "各模块详解",
        "slug": "各模块详解",
        "link": "#各模块详解",
        "children": [
          {
            "level": 3,
            "title": "events 模块",
            "slug": "events-模块",
            "link": "#events-模块",
            "children": []
          },
          {
            "level": 3,
            "title": "class 模块",
            "slug": "class-模块",
            "link": "#class-模块",
            "children": []
          },
          {
            "level": 3,
            "title": "style 模块",
            "slug": "style-模块",
            "link": "#style-模块",
            "children": []
          },
          {
            "level": 3,
            "title": "attrs 模块",
            "slug": "attrs-模块",
            "link": "#attrs-模块",
            "children": []
          },
          {
            "level": 3,
            "title": "dom-props 模块",
            "slug": "dom-props-模块",
            "link": "#dom-props-模块",
            "children": []
          },
          {
            "level": 3,
            "title": "transition 模块",
            "slug": "transition-模块",
            "link": "#transition-模块",
            "children": []
          },
          {
            "level": 3,
            "title": "ref 模块",
            "slug": "ref-模块",
            "link": "#ref-模块",
            "children": []
          },
          {
            "level": 3,
            "title": "directives 模块",
            "slug": "directives-模块",
            "link": "#directives-模块",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/vdom/patch-modules/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "attrs",
    "headers": [
      {
        "level": 2,
        "title": "更新 attrs",
        "slug": "更新-attrs",
        "link": "#更新-attrs",
        "children": []
      }
    ],
    "path": "/vue/source-study/vdom/patch-modules/attrs.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "class 模块",
    "headers": [
      {
        "level": 2,
        "title": "更新 class",
        "slug": "更新-class",
        "link": "#更新-class",
        "children": []
      },
      {
        "level": 2,
        "title": "基于 VNode 生成 class 字符串",
        "slug": "基于-vnode-生成-class-字符串",
        "link": "#基于-vnode-生成-class-字符串",
        "children": []
      },
      {
        "level": 2,
        "title": "疑惑",
        "slug": "疑惑",
        "link": "#疑惑",
        "children": [
          {
            "level": 3,
            "title": "为什么不对最终合并的 class 字符串里的各个 class 进行去重？",
            "slug": "为什么不对最终合并的-class-字符串里的各个-class-进行去重",
            "link": "#为什么不对最终合并的-class-字符串里的各个-class-进行去重",
            "children": []
          }
        ]
      }
    ],
    "path": "/vue/source-study/vdom/patch-modules/class.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "dom-props 模块",
    "headers": [
      {
        "level": 2,
        "title": "更新 property",
        "slug": "更新-property",
        "link": "#更新-property",
        "children": []
      }
    ],
    "path": "/vue/source-study/vdom/patch-modules/dom-props.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "ref 模块",
    "headers": [
      {
        "level": 2,
        "title": "注册 ref",
        "slug": "注册-ref",
        "link": "#注册-ref",
        "children": []
      }
    ],
    "path": "/vue/source-study/vdom/patch-modules/ref.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "style 模块",
    "headers": [
      {
        "level": 2,
        "title": "更新 style",
        "slug": "更新-style",
        "link": "#更新-style",
        "children": []
      }
    ],
    "path": "/vue/source-study/vdom/patch-modules/style.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "组件的 DOM Tree 是如何插入到父元素上的？",
    "headers": [
      {
        "level": 2,
        "title": "vnode.elm 的确定",
        "slug": "vnode-elm-的确定",
        "link": "#vnode-elm-的确定",
        "children": [
          {
            "level": 3,
            "title": "DOM 节点类型的 VNode",
            "slug": "dom-节点类型的-vnode",
            "link": "#dom-节点类型的-vnode",
            "children": []
          },
          {
            "level": 3,
            "title": "组件占位 VNode",
            "slug": "组件占位-vnode",
            "link": "#组件占位-vnode",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "parentElm 的确定",
        "slug": "parentelm-的确定",
        "link": "#parentelm-的确定",
        "children": [
          {
            "level": 3,
            "title": "组件的父节点是 DOM 元素节点",
            "slug": "组件的父节点是-dom-元素节点",
            "link": "#组件的父节点是-dom-元素节点",
            "children": []
          },
          {
            "level": 3,
            "title": "根组件",
            "slug": "根组件",
            "link": "#根组件",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "连续嵌套组件",
        "slug": "连续嵌套组件",
        "link": "#连续嵌套组件",
        "children": []
      }
    ],
    "path": "/vue/source-study/vdom/topics/dom-binding.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "rem 组件",
    "headers": [
      {
        "level": 2,
        "title": "组件说明",
        "slug": "组件说明",
        "link": "#组件说明",
        "children": []
      },
      {
        "level": 2,
        "title": "组件功能说明",
        "slug": "组件功能说明",
        "link": "#组件功能说明",
        "children": []
      },
      {
        "level": 2,
        "title": "使用方式",
        "slug": "使用方式",
        "link": "#使用方式",
        "children": []
      }
    ],
    "path": "/code-snippet/practices/css/%E6%A0%B9%E6%8D%AE%E5%85%84%E5%BC%9F%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%B0%E9%87%8F%E6%9D%A5%E8%AE%BE%E7%BD%AE%E6%A0%B7%E5%BC%8F/rem/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "cross-env 跨平台设置环境变量",
    "headers": [],
    "path": "/front-end-engineering/environment/package-manager/third-party-packages/package-env-management/cross-env.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "npx 调用局部安装的模块",
    "headers": [],
    "path": "/front-end-engineering/environment/package-manager/third-party-packages/package-env-management/npx.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "nrm 管理 npm registry",
    "headers": [],
    "path": "/front-end-engineering/environment/package-manager/third-party-packages/package-env-management/nrm.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "nvm 管理 Node.js 版本",
    "headers": [],
    "path": "/front-end-engineering/environment/package-manager/third-party-packages/package-env-management/nvm.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "第三方配置工具",
    "headers": [
      {
        "level": 2,
        "title": "webpack-merge",
        "slug": "webpack-merge",
        "link": "#webpack-merge",
        "children": []
      },
      {
        "level": 2,
        "title": "webpack-chain",
        "slug": "webpack-chain",
        "link": "#webpack-chain",
        "children": []
      },
      {
        "level": 2,
        "title": "vue.config.js",
        "slug": "vue-config-js",
        "link": "#vue-config-js",
        "children": [
          {
            "level": 3,
            "title": "configureWebpack",
            "slug": "configurewebpack",
            "link": "#configurewebpack",
            "children": []
          },
          {
            "level": 3,
            "title": "chainWebpack",
            "slug": "chainwebpack",
            "link": "#chainwebpack",
            "children": []
          },
          {
            "level": 3,
            "title": "配置合并优先级",
            "slug": "配置合并优先级",
            "link": "#配置合并优先级",
            "children": []
          },
          {
            "level": 3,
            "title": "常用配置说明",
            "slug": "常用配置说明",
            "link": "#常用配置说明",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/tools/build/webpack/config/config-tools.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "dead code",
    "headers": [
      {
        "level": 2,
        "title": "生产环境打包时，去掉 vConsole",
        "slug": "生产环境打包时-去掉-vconsole",
        "link": "#生产环境打包时-去掉-vconsole",
        "children": [
          {
            "level": 3,
            "title": "背景",
            "slug": "背景",
            "link": "#背景",
            "children": []
          },
          {
            "level": 3,
            "title": "解决方案",
            "slug": "解决方案",
            "link": "#解决方案",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/tools/build/webpack/config/dead-code.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Webpack 配置实践",
    "headers": [
      {
        "level": 2,
        "title": "splitChunks",
        "slug": "splitchunks",
        "link": "#splitchunks",
        "children": [
          {
            "level": 3,
            "title": "默认配置",
            "slug": "默认配置",
            "link": "#默认配置",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/tools/build/webpack/config/practical-config.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "完整 webpack.config.js 配置",
    "headers": [
      {
        "level": 2,
        "title": "导出对象",
        "slug": "导出对象",
        "link": "#导出对象",
        "children": [
          {
            "level": 3,
            "title": "output",
            "slug": "output",
            "link": "#output",
            "children": []
          },
          {
            "level": 3,
            "title": "module 模块",
            "slug": "module-模块",
            "link": "#module-模块",
            "children": []
          },
          {
            "level": 3,
            "title": "optimization 优化",
            "slug": "optimization-优化",
            "link": "#optimization-优化",
            "children": []
          },
          {
            "level": 3,
            "title": "devServer 开发服务器",
            "slug": "devserver-开发服务器",
            "link": "#devserver-开发服务器",
            "children": []
          },
          {
            "level": 3,
            "title": "resolve 与 resolveLoader",
            "slug": "resolve-与-resolveloader",
            "link": "#resolve-与-resolveloader",
            "children": []
          },
          {
            "level": 3,
            "title": "stats",
            "slug": "stats",
            "link": "#stats",
            "children": []
          },
          {
            "level": 3,
            "title": "文件名模板字符串",
            "slug": "文件名模板字符串",
            "link": "#文件名模板字符串",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "其他导出类型",
        "slug": "其他导出类型",
        "link": "#其他导出类型",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/build/webpack/config/whole-config.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Tapable",
    "headers": [
      {
        "level": 2,
        "title": "系列文章",
        "slug": "系列文章",
        "link": "#系列文章",
        "children": [
          {
            "level": 3,
            "title": "tapable 官网 README 翻译",
            "slug": "tapable-官网-readme-翻译",
            "link": "#tapable-官网-readme-翻译",
            "children": []
          },
          {
            "level": 3,
            "title": "tapable 实现",
            "slug": "tapable-实现",
            "link": "#tapable-实现",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "详细使用",
        "slug": "详细使用",
        "link": "#详细使用",
        "children": [
          {
            "level": 3,
            "title": "注册插件及触发钩子",
            "slug": "注册插件及触发钩子",
            "link": "#注册插件及触发钩子",
            "children": []
          },
          {
            "level": 3,
            "title": "触发钩子",
            "slug": "触发钩子",
            "link": "#触发钩子",
            "children": []
          },
          {
            "level": 3,
            "title": "触发钩子时的返回值及后续操作",
            "slug": "触发钩子时的返回值及后续操作",
            "link": "#触发钩子时的返回值及后续操作",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/tools/build/webpack/tapable/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Tapable README.md",
    "headers": [
      {
        "level": 2,
        "title": "安装",
        "slug": "安装",
        "link": "#安装",
        "children": []
      },
      {
        "level": 2,
        "title": "使用",
        "slug": "使用",
        "link": "#使用",
        "children": []
      },
      {
        "level": 2,
        "title": "钩子类型",
        "slug": "钩子类型",
        "link": "#钩子类型",
        "children": []
      },
      {
        "level": 2,
        "title": "拦截器",
        "slug": "拦截器",
        "link": "#拦截器",
        "children": []
      },
      {
        "level": 2,
        "title": "上下文对象",
        "slug": "上下文对象",
        "link": "#上下文对象",
        "children": []
      },
      {
        "level": 2,
        "title": "HookMap",
        "slug": "hookmap",
        "link": "#hookmap",
        "children": []
      },
      {
        "level": 2,
        "title": "Hook/HookMap 接口",
        "slug": "hook-hookmap-接口",
        "link": "#hook-hookmap-接口",
        "children": []
      },
      {
        "level": 2,
        "title": "MultiHook",
        "slug": "multihook",
        "link": "#multihook",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/build/webpack/tapable/tapable-readme.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "ESLint - 与 Prettier 的集成",
    "headers": [
      {
        "level": 2,
        "title": "Prettier 简介",
        "slug": "prettier-简介",
        "link": "#prettier-简介",
        "children": [
          {
            "level": 3,
            "title": "为什么使用 Prettier",
            "slug": "为什么使用-prettier",
            "link": "#为什么使用-prettier",
            "children": []
          },
          {
            "level": 3,
            "title": "Prettier 与 Linters",
            "slug": "prettier-与-linters",
            "link": "#prettier-与-linters",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "eslint-config-prettier",
        "slug": "eslint-config-prettier",
        "link": "#eslint-config-prettier",
        "children": []
      },
      {
        "level": 2,
        "title": "eslint-plugin-prettier",
        "slug": "eslint-plugin-prettier",
        "link": "#eslint-plugin-prettier",
        "children": []
      },
      {
        "level": 2,
        "title": "eslint-config-prettier 和 eslint-plugin-prettier 的集成",
        "slug": "eslint-config-prettier-和-eslint-plugin-prettier-的集成",
        "link": "#eslint-config-prettier-和-eslint-plugin-prettier-的集成",
        "children": []
      },
      {
        "level": 2,
        "title": "推荐配置",
        "slug": "推荐配置",
        "link": "#推荐配置",
        "children": [
          {
            "level": 3,
            "title": "安装依赖",
            "slug": "安装依赖",
            "link": "#安装依赖",
            "children": []
          },
          {
            "level": 3,
            "title": "配置 .eslintrc.*",
            "slug": "配置-eslintrc",
            "link": "#配置-eslintrc",
            "children": []
          },
          {
            "level": 3,
            "title": "配置 Prettier 规则",
            "slug": "配置-prettier-规则",
            "link": "#配置-prettier-规则",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "集成其他 ESLint 插件",
        "slug": "集成其他-eslint-插件",
        "link": "#集成其他-eslint-插件",
        "children": []
      },
      {
        "level": 2,
        "title": "VS Code 配置",
        "slug": "vs-code-配置",
        "link": "#vs-code-配置",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/style-guide/code-formatter/eslint/eslint-prettier.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "ESLint - VSCode 配置",
    "headers": [
      {
        "level": 2,
        "title": "安装 ESLint 扩展",
        "slug": "安装-eslint-扩展",
        "link": "#安装-eslint-扩展",
        "children": []
      },
      {
        "level": 2,
        "title": "User Setting 添加配置",
        "slug": "user-setting-添加配置",
        "link": "#user-setting-添加配置",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/style-guide/code-formatter/eslint/eslint-vscode.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "ESLint - Vue 项目配置",
    "headers": [
      {
        "level": 2,
        "title": "安装依赖",
        "slug": "安装依赖",
        "link": "#安装依赖",
        "children": []
      },
      {
        "level": 2,
        "title": ".eslintrc 配置",
        "slug": "eslintrc-配置",
        "link": "#eslintrc-配置",
        "children": [
          {
            "level": 3,
            "title": "plugin:vue/recommended 隐含的配置",
            "slug": "plugin-vue-recommended-隐含的配置",
            "link": "#plugin-vue-recommended-隐含的配置",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "命令行运行",
        "slug": "命令行运行",
        "link": "#命令行运行",
        "children": []
      }
    ],
    "path": "/front-end-engineering/tools/style-guide/code-formatter/eslint/eslint-vue.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "如何开发自定义的 ESLint 规则",
    "headers": [
      {
        "level": 2,
        "title": "创建插件和规则",
        "slug": "创建插件和规则",
        "link": "#创建插件和规则",
        "children": []
      },
      {
        "level": 2,
        "title": "如何写规则",
        "slug": "如何写规则",
        "link": "#如何写规则",
        "children": [
          {
            "level": 3,
            "title": "meta 规则的元数据",
            "slug": "meta-规则的元数据",
            "link": "#meta-规则的元数据",
            "children": []
          },
          {
            "level": 3,
            "title": "create 函数及参数 context",
            "slug": "create-函数及参数-context",
            "link": "#create-函数及参数-context",
            "children": []
          },
          {
            "level": 3,
            "title": "context.report 报告错误、修复及建议",
            "slug": "context-report-报告错误、修复及建议",
            "link": "#context-report-报告错误、修复及建议",
            "children": []
          },
          {
            "level": 3,
            "title": "访问传递给规则的选项",
            "slug": "访问传递给规则的选项",
            "link": "#访问传递给规则的选项",
            "children": []
          },
          {
            "level": 3,
            "title": "访问源代码",
            "slug": "访问源代码",
            "link": "#访问源代码",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/tools/style-guide/code-formatter/eslint/how-to-write-a-custom-eslint-rule.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "ESLint",
    "headers": [
      {
        "level": 2,
        "title": "规则",
        "slug": "规则",
        "link": "#规则",
        "children": [
          {
            "level": 3,
            "title": "规则配置",
            "slug": "规则配置",
            "link": "#规则配置",
            "children": []
          },
          {
            "level": 3,
            "title": "行内方式关闭规则",
            "slug": "行内方式关闭规则",
            "link": "#行内方式关闭规则",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "ESLint 插件和配置",
        "slug": "eslint-插件和配置",
        "link": "#eslint-插件和配置",
        "children": [
          {
            "level": 3,
            "title": "Vue 相关",
            "slug": "vue-相关",
            "link": "#vue-相关",
            "children": []
          },
          {
            "level": 3,
            "title": "与 Prettier 的集成",
            "slug": "与-prettier-的集成",
            "link": "#与-prettier-的集成",
            "children": []
          }
        ]
      },
      {
        "level": 2,
        "title": "集成",
        "slug": "集成",
        "link": "#集成",
        "children": [
          {
            "level": 3,
            "title": "源码控制",
            "slug": "源码控制",
            "link": "#源码控制",
            "children": []
          }
        ]
      }
    ],
    "path": "/front-end-engineering/tools/style-guide/code-formatter/eslint/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】数组去重",
    "headers": [],
    "path": "/interview/javascript/coding/basic-api-usage/array-operation/array-elements-deduplication.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级】将数组扁平化并去除其中重复部分数据，得到一个升序且不重复的数组",
    "headers": [],
    "path": "/interview/javascript/coding/basic-api-usage/array-operation/flat-array-elements-and-deduplicate.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级】合并有序数组",
    "headers": [
      {
        "level": 2,
        "title": "参考答案",
        "slug": "参考答案",
        "link": "#参考答案",
        "children": []
      }
    ],
    "path": "/interview/javascript/coding/basic-api-usage/array-operation/merge-sorted-array.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "考察 Proxy 应用：以同步的方式实现事件监听",
    "headers": [
      {
        "level": 2,
        "title": "题目描述",
        "slug": "题目描述",
        "link": "#题目描述",
        "children": []
      },
      {
        "level": 2,
        "title": "实现效果",
        "slug": "实现效果",
        "link": "#实现效果",
        "children": []
      },
      {
        "level": 2,
        "title": "实现代码",
        "slug": "实现代码",
        "link": "#实现代码",
        "children": []
      }
    ],
    "path": "/interview/javascript/coding/basic-api-usage/es6/synchronous-event-listener-with-proxy.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级-好题】周期执行某个函数n次",
    "headers": [],
    "path": "/interview/javascript/coding/basic-api-usage/event-loop/repeat-invoke-functions-with-times.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级】实现 Array.prototype.flat 方法",
    "headers": [],
    "path": "/interview/javascript/coding/basic-api-usage/polyfill/array-prototype-flat.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【高级】实现 Promise.race/allSettled 方法的 polyfill",
    "headers": [
      {
        "level": 2,
        "title": "【高级】实现 String.prototype.padStart 方法的 polyfill",
        "slug": "【高级】实现-string-prototype-padstart-方法的-polyfill",
        "link": "#【高级】实现-string-prototype-padstart-方法的-polyfill",
        "children": []
      }
    ],
    "path": "/interview/javascript/coding/basic-api-usage/polyfill/promise-race-and-allsettled.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级，可进阶高级】调用栈溢出问题",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/call-stack/function-call-stack.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【中级】原型、继承输出题",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/prototype/prototype-extend-input.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】原型链输出题",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/prototype/prototype-input.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】原型、构造函数、实例 之间的关系？",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/prototype/the-relationship-between-and-constructor-prototype.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】简述闭包的概念，输出结果",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/closure/closure-input.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【高级-好题】修改闭包对象",
    "headers": [
      {
        "level": 2,
        "title": "题目描述",
        "slug": "题目描述",
        "link": "#题目描述",
        "children": [
          {
            "level": 3,
            "title": "实现误区",
            "slug": "实现误区",
            "link": "#实现误区",
            "children": []
          },
          {
            "level": 3,
            "title": "解题思路",
            "slug": "解题思路",
            "link": "#解题思路",
            "children": []
          },
          {
            "level": 3,
            "title": "如何不让外部修改闭包对象？",
            "slug": "如何不让外部修改闭包对象",
            "link": "#如何不让外部修改闭包对象",
            "children": []
          }
        ]
      }
    ],
    "path": "/interview/javascript/foundation/execution-context/closure/modify-closure.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "new 操作符",
    "headers": [
      {
        "level": 2,
        "title": "【初级】考查 new 操作符，输出结果",
        "slug": "【初级】考查-new-操作符-输出结果",
        "link": "#【初级】考查-new-操作符-输出结果",
        "children": []
      },
      {
        "level": 2,
        "title": "【中级】模拟new的实现",
        "slug": "【中级】模拟new的实现",
        "link": "#【中级】模拟new的实现",
        "children": []
      }
    ],
    "path": "/interview/javascript/foundation/execution-context/new/new-operator.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】JS 中有几种类型的作用域？如何形成？",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/scope/concept.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】作用域输出题",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/scope/var-scope.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】this 指向输出题",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/this/this-input.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】变量提升",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/variables/variable-promotion.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "【初级】事件循环输出题",
    "headers": [
      {
        "level": 2,
        "title": "【初级】事件循环：输出结果",
        "slug": "【初级】事件循环-输出结果",
        "link": "#【初级】事件循环-输出结果",
        "children": []
      },
      {
        "level": 2,
        "title": "【初级】事件循环：输出结果，说明原因",
        "slug": "【初级】事件循环-输出结果-说明原因",
        "link": "#【初级】事件循环-输出结果-说明原因",
        "children": []
      }
    ],
    "path": "/interview/javascript/foundation/execution-mechanism/event-loop/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "",
    "headers": [],
    "path": "/404.html",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "React",
    "headers": [],
    "path": "/react/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Wander",
    "headers": [],
    "path": "/wander/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Articles",
    "headers": [],
    "path": "/articles/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vue Components",
    "headers": [],
    "path": "/code-snippet/vue-components/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Browser",
    "headers": [],
    "path": "/browser-env/browser/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Browser Env",
    "headers": [],
    "path": "/browser-env/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Html Dom",
    "headers": [],
    "path": "/browser-env/html-dom/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Hybrid",
    "headers": [],
    "path": "/browser-env/hybrid/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Network",
    "headers": [],
    "path": "/browser-env/network/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Unclassified",
    "headers": [],
    "path": "/browser-env/unclassified/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Front End Engineering",
    "headers": [],
    "path": "/front-end-engineering/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Data Management",
    "headers": [],
    "path": "/full-stack/data-management/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Design Patterns",
    "headers": [],
    "path": "/full-stack/design-patterns/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Others",
    "headers": [],
    "path": "/full-stack/others/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Css",
    "headers": [],
    "path": "/css/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Preprocessor",
    "headers": [],
    "path": "/css/preprocessor/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Skills",
    "headers": [],
    "path": "/css/skills/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Tools",
    "headers": [],
    "path": "/css/tools/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Topics",
    "headers": [],
    "path": "/css/topics/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Viewport",
    "headers": [],
    "path": "/css/viewport/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Unclassified",
    "headers": [],
    "path": "/css/unclassified/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Data Structure",
    "headers": [],
    "path": "/interview/data-structure/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Topic",
    "headers": [],
    "path": "/interview/topic/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Js",
    "headers": [],
    "path": "/js/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Mini Program",
    "headers": [],
    "path": "/mini-program/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Usage",
    "headers": [],
    "path": "/typescript/usage/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vue",
    "headers": [],
    "path": "/vue/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Reactivity",
    "headers": [],
    "path": "/vue3/reactivity/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Others",
    "headers": [],
    "path": "/wander/others/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Browser Env",
    "headers": [],
    "path": "/code-snippet/browser-env/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Browser",
    "headers": [],
    "path": "/code-snippet/js/browser/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Utils",
    "headers": [],
    "path": "/code-snippet/js/utils/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Attributes Properties",
    "headers": [],
    "path": "/browser-env/html-dom/attributes-properties/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vendor App",
    "headers": [],
    "path": "/browser-env/vendor-app/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "@babel",
    "headers": [],
    "path": "/es6/babel/@babel/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Array",
    "headers": [],
    "path": "/es6/polyfill/array/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Polyfill",
    "headers": [],
    "path": "/es6/polyfill/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Object",
    "headers": [],
    "path": "/es6/polyfill/object/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Promise",
    "headers": [],
    "path": "/es6/polyfill/promise/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "String",
    "headers": [],
    "path": "/es6/polyfill/string/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Development Skills",
    "headers": [],
    "path": "/front-end-engineering/development-skills/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Ide",
    "headers": [],
    "path": "/front-end-engineering/environment/ide/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Environment",
    "headers": [],
    "path": "/front-end-engineering/environment/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Package Manager",
    "headers": [],
    "path": "/front-end-engineering/environment/package-manager/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Repository",
    "headers": [],
    "path": "/front-end-engineering/environment/repository/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Build",
    "headers": [],
    "path": "/front-end-engineering/tools/build/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Tools",
    "headers": [],
    "path": "/front-end-engineering/tools/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Publish",
    "headers": [],
    "path": "/front-end-engineering/tools/publish/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Runtime",
    "headers": [],
    "path": "/front-end-engineering/tools/runtime/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Backend",
    "headers": [],
    "path": "/full-stack/backend/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Data Observability",
    "headers": [],
    "path": "/full-stack/data-management/data-observability/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Operating System",
    "headers": [],
    "path": "/full-stack/operating-system/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Software",
    "headers": [],
    "path": "/full-stack/software/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Border",
    "headers": [],
    "path": "/css/topics/border/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Others",
    "headers": [],
    "path": "/interview/algorithm/others/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Algorithm",
    "headers": [],
    "path": "/interview/algorithm/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Dom",
    "headers": [],
    "path": "/interview/browser/dom/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Layout",
    "headers": [],
    "path": "/interview/css/layout/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Position",
    "headers": [],
    "path": "/interview/css/position/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Component",
    "headers": [],
    "path": "/vue/source-study/component/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Global Api",
    "headers": [],
    "path": "/vue/source-study/global-api/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Util",
    "headers": [],
    "path": "/vue/source-study/util/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vue Series",
    "headers": [],
    "path": "/vue/vue-series/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Vuejs",
    "headers": [],
    "path": "/vue/vue-series/vuejs/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Css",
    "headers": [],
    "path": "/code-snippet/practices/css/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Practices",
    "headers": [],
    "path": "/code-snippet/practices/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Js",
    "headers": [],
    "path": "/code-snippet/practices/js/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Naming Conventions",
    "headers": [],
    "path": "/front-end-engineering/tools/style-guide/naming-conventions/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Style Guide",
    "headers": [],
    "path": "/front-end-engineering/tools/style-guide/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Css2.2",
    "headers": [],
    "path": "/css/css-spec/css2.2/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Css Spec",
    "headers": [],
    "path": "/css/css-spec/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Text",
    "headers": [],
    "path": "/css/topics/text/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Leetcode",
    "headers": [],
    "path": "/interview/algorithm/interview/leetcode/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Coding",
    "headers": [],
    "path": "/interview/javascript/coding/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Foundation",
    "headers": [],
    "path": "/interview/javascript/foundation/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Performance Optimization",
    "headers": [],
    "path": "/interview/javascript/performance-optimization/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Topics",
    "headers": [],
    "path": "/vue/source-study/vdom/topics/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "根据兄弟元素的数量来设置样式",
    "headers": [],
    "path": "/code-snippet/practices/css/%E6%A0%B9%E6%8D%AE%E5%85%84%E5%BC%9F%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%B0%E9%87%8F%E6%9D%A5%E8%AE%BE%E7%BD%AE%E6%A0%B7%E5%BC%8F/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Package Env Management",
    "headers": [],
    "path": "/front-end-engineering/environment/package-manager/third-party-packages/package-env-management/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Config",
    "headers": [],
    "path": "/front-end-engineering/tools/build/webpack/config/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Code Formatter",
    "headers": [],
    "path": "/front-end-engineering/tools/style-guide/code-formatter/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Array Operation",
    "headers": [],
    "path": "/interview/javascript/coding/basic-api-usage/array-operation/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Es6",
    "headers": [],
    "path": "/interview/javascript/coding/basic-api-usage/es6/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Event Loop",
    "headers": [],
    "path": "/interview/javascript/coding/basic-api-usage/event-loop/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Polyfill",
    "headers": [],
    "path": "/interview/javascript/coding/basic-api-usage/polyfill/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Call Stack",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/call-stack/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Prototype",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/prototype/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Closure",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/closure/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "New",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/new/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Scope",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/scope/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "This",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/this/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "Variables",
    "headers": [],
    "path": "/interview/javascript/foundation/execution-context/variables/",
    "pathLocale": "/",
    "extraFields": []
  }
];
const searchIndex = ref(SEARCH_INDEX);
const useSearchIndex = () => searchIndex;
const useSearchSuggestions = ({ searchIndex: searchIndex2, routeLocale, query, maxSuggestions: maxSuggestions2 }) => {
  const localeSearchIndex = computed(() => searchIndex2.value.filter((item) => item.pathLocale === routeLocale.value));
  return computed(() => {
    const searchStr = query.value.trim().toLowerCase();
    if (!searchStr)
      return [];
    const suggestions = [];
    const matchPageHeader = (searchIndexItem, header) => {
      if (isQueryMatched(searchStr, [header.title])) {
        suggestions.push({
          link: `${searchIndexItem.path}#${header.slug}`,
          title: searchIndexItem.title,
          header: header.title
        });
      }
      for (const child of header.children) {
        if (suggestions.length >= maxSuggestions2.value) {
          return;
        }
        matchPageHeader(searchIndexItem, child);
      }
    };
    for (const searchIndexItem of localeSearchIndex.value) {
      if (suggestions.length >= maxSuggestions2.value) {
        break;
      }
      if (isQueryMatched(searchStr, [
        searchIndexItem.title,
        ...searchIndexItem.extraFields
      ])) {
        suggestions.push({
          link: searchIndexItem.path,
          title: searchIndexItem.title
        });
        continue;
      }
      for (const header of searchIndexItem.headers) {
        if (suggestions.length >= maxSuggestions2.value) {
          break;
        }
        matchPageHeader(searchIndexItem, header);
      }
    }
    return suggestions;
  });
};
const useSuggestionsFocus = (suggestions) => {
  const focusIndex = ref(0);
  const focusNext = () => {
    if (focusIndex.value < suggestions.value.length - 1) {
      focusIndex.value += 1;
    } else {
      focusIndex.value = 0;
    }
  };
  const focusPrev = () => {
    if (focusIndex.value > 0) {
      focusIndex.value -= 1;
    } else {
      focusIndex.value = suggestions.value.length - 1;
    }
  };
  return {
    focusIndex,
    focusNext,
    focusPrev
  };
};
const SearchBox = /* @__PURE__ */ defineComponent({
  name: "SearchBox",
  props: {
    locales: {
      type: Object,
      default: () => ({})
    },
    hotKeys: {
      type: Array,
      default: () => []
    },
    maxSuggestions: {
      type: Number,
      default: 5
    }
  },
  setup(props) {
    const { locales: locales2, hotKeys: hotKeys2, maxSuggestions: maxSuggestions2 } = toRefs(props);
    const router = useRouter();
    const routeLocale = useRouteLocale();
    const searchIndex2 = useSearchIndex();
    const input = ref(null);
    const isActive = ref(false);
    const query = ref("");
    const locale = computed(() => locales2.value[routeLocale.value] ?? {});
    const suggestions = useSearchSuggestions({
      searchIndex: searchIndex2,
      routeLocale,
      query,
      maxSuggestions: maxSuggestions2
    });
    const { focusIndex, focusNext, focusPrev } = useSuggestionsFocus(suggestions);
    useHotKeys({ input, hotKeys: hotKeys2 });
    const showSuggestions = computed(() => isActive.value && !!suggestions.value.length);
    const onArrowUp = () => {
      if (!showSuggestions.value) {
        return;
      }
      focusPrev();
    };
    const onArrowDown = () => {
      if (!showSuggestions.value) {
        return;
      }
      focusNext();
    };
    const goTo = (index) => {
      if (!showSuggestions.value) {
        return;
      }
      const suggestion = suggestions.value[index];
      if (suggestion)
        void router.push(suggestion.link).then(() => {
          query.value = "";
          focusIndex.value = 0;
        });
    };
    return () => h$1("form", {
      class: "search-box",
      role: "search"
    }, [
      h$1("input", {
        ref: input,
        type: "search",
        placeholder: locale.value.placeholder,
        autocomplete: "off",
        spellcheck: false,
        value: query.value,
        onFocus: () => {
          isActive.value = true;
        },
        onBlur: () => {
          isActive.value = false;
        },
        onInput: (event) => {
          query.value = event.target.value;
        },
        onKeydown: (event) => {
          switch (event.key) {
            case "ArrowUp": {
              onArrowUp();
              break;
            }
            case "ArrowDown": {
              onArrowDown();
              break;
            }
            case "Enter": {
              event.preventDefault();
              goTo(focusIndex.value);
              break;
            }
          }
        }
      }),
      showSuggestions.value && h$1("ul", {
        class: "suggestions",
        onMouseleave: () => {
          focusIndex.value = -1;
        }
      }, suggestions.value.map(({ link, title, header }, index) => h$1("li", {
        class: [
          "suggestion",
          {
            focus: focusIndex.value === index
          }
        ],
        onMouseenter: () => {
          focusIndex.value = index;
        },
        onMousedown: () => {
          goTo(index);
        }
      }, h$1("a", {
        href: link,
        onClick: (event) => {
          event.preventDefault();
        }
      }, [
        h$1("span", {
          class: "page-title"
        }, title),
        header && h$1("span", { class: "page-header" }, `> ${header}`)
      ]))))
    ]);
  }
});
var define_SEARCH_HOT_KEYS_default = ["s", "/"];
var define_SEARCH_LOCALES_default = {};
const locales$1 = define_SEARCH_LOCALES_default;
const hotKeys = define_SEARCH_HOT_KEYS_default;
const maxSuggestions = 10;
const config$4 = defineClientConfig({
  enhance({ app }) {
    app.component("SearchBox", (props) => h$1(SearchBox, {
      locales: locales$1,
      hotKeys,
      maxSuggestions,
      ...props
    }));
  }
});
const clientConfig12 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$4
}, Symbol.toStringTag, { value: "Module" }));
const clientConfig_3d202030 = {
  enhance: ({ app }) => {
    app.component("global-config", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./global-config-CGQv8cM5.js"), true ? __vite__mapDeps([548,1]) : void 0)));
    app.component("animation-effects-gradient-shadows", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./gradient-shadows-BrzVm63j.js"), true ? __vite__mapDeps([549,1]) : void 0)));
    app.component("animation-effects-scroll-element-fade-up", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./scroll-element-fade-up-D1Jkbrpw.js"), true ? __vite__mapDeps([550,1]) : void 0)));
    app.component("examples-border-image-linear-gradient", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./border-image-linear-gradient-BgXPUn8H.js"), true ? __vite__mapDeps([551,1]) : void 0)));
    app.component("animation-effects-animation-delay-ball-translate", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./ball-translate-BgM1xWLD.js"), true ? __vite__mapDeps([552,1]) : void 0)));
    app.component("animation-effects-animation-delay-give-scores", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./give-scores-DJ-TK6sq.js"), true ? __vite__mapDeps([553,1]) : void 0)));
    app.component("animation-effects-text-effects-overlap-text", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./overlap-text-DKb3x4tN.js"), true ? __vite__mapDeps([554,1]) : void 0)));
    app.component("animation-effects-text-effects-title-animations", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./title-animations-ClBdzcYt.js"), true ? __vite__mapDeps([555,1]) : void 0)));
    app.component("css-font-different-fon-family", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./different-fon-family-BLuvXV49.js"), true ? __vite__mapDeps([556,1]) : void 0)));
    app.component("browser-env-scroll-fastclick-bug", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./fastclick-bug-DlHv5lOB.js"), true ? __vite__mapDeps([557,1]) : void 0)));
    app.component("css-css-spec-margin-collapse-box-self", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./box-self-Copd0yF3.js"), true ? __vite__mapDeps([558,1]) : void 0)));
    app.component("css-css-spec-margin-collapse-complicated", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./complicated-CSBi5AqZ.js"), true ? __vite__mapDeps([559,1]) : void 0)));
    app.component("css-skills-dog-ear-first-solution", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./first-solution-Dvmo9HX0.js"), true ? __vite__mapDeps([560,1]) : void 0)));
    app.component("css-skills-dog-ear-fourth-solution", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./fourth-solution-DsskiDTB.js"), true ? __vite__mapDeps([561,1]) : void 0)));
    app.component("css-skills-dog-ear-second-solution", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./second-solution-DOrx_4wl.js"), true ? __vite__mapDeps([562,1]) : void 0)));
    app.component("css-skills-dog-ear-third-solution-2d", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./third-solution-2d-Cg2x3Am9.js"), true ? __vite__mapDeps([563,1]) : void 0)));
    app.component("css-skills-dog-ear-third-solution-3d", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./third-solution-3d-CiF5n887.js"), true ? __vite__mapDeps([564,1]) : void 0)));
    app.component("code-snippet-vue-components-common-popup-example", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./example-MhcdfJ6b.js"), true ? __vite__mapDeps([565,566,1]) : void 0)));
    app.component("code-snippet-vue-components-common-popup-index", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./index-BL2feH6j.js"), true ? __vite__mapDeps([566,1]) : void 0)));
    app.component("code-snippet-vue-components-base-marquee-example", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./example-DgLC7IBO.js"), true ? __vite__mapDeps([567,568,1]) : void 0)));
    app.component("code-snippet-vue-components-base-marquee-index", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./index-BFPkyeJ0.js"), true ? __vite__mapDeps([568,1]) : void 0)));
    app.component("browser-env-events-blur-stop-blur-after", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./stop-blur-after-A-OxBI7m.js"), true ? __vite__mapDeps([569,1]) : void 0)));
    app.component("browser-env-events-blur-stop-blur-before", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./stop-blur-before-Byry_zfc.js"), true ? __vite__mapDeps([570,1]) : void 0)));
    app.component("interview-css-self-fit-square-aspect-radio", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./aspect-radio-D5JYvqG7.js"), true ? __vite__mapDeps([571,1]) : void 0)));
    app.component("interview-javascript-coding-basic-api-usage-es6-synchronous-event-listener-with-proxy", /* @__PURE__ */ defineAsyncComponent(() => __vitePreload(() => import("./synchronous-event-listener-with-proxy-DPc-R-Dm.js"), true ? __vite__mapDeps([572,1]) : void 0)));
  }
};
const clientConfig13 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: clientConfig_3d202030
}, Symbol.toStringTag, { value: "Module" }));
const wait = (ms) => new Promise((resolve2) => {
  setTimeout(resolve2, ms);
});
const useLocaleConfig = (localesConfig) => {
  const routeLocale = useRouteLocale();
  return computed(() => localesConfig[routeLocale.value] ?? {});
};
/*!
 * watermark-js-plus v1.5.7
 * (c) 2022-2024 Michael Sun
 * Released under the MIT License.
 */
function styleInject(css, ref2) {
  if (ref2 === void 0) ref2 = {};
  var insertAt = ref2.insertAt;
  if (typeof document === "undefined") {
    return;
  }
  var head = document.head || document.getElementsByTagName("head")[0];
  var style = document.createElement("style");
  style.type = "text/css";
  if (insertAt === "top") {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}
var css_248z = "@keyframes watermark{0%{background-position:0 0}25%{background-position:100% 100%}50%{background-position:0 0}75%{background-position:100% -100%}to{background-position:0 0}}";
styleInject(css_248z);
var extendStatics = function(d2, b) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b2) {
    d3.__proto__ = b2;
  } || function(d3, b2) {
    for (var p2 in b2) if (Object.prototype.hasOwnProperty.call(b2, p2)) d3[p2] = b2[p2];
  };
  return extendStatics(d2, b);
};
function __extends(d2, b) {
  if (typeof b !== "function" && b !== null)
    throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d2, b);
  function __() {
    this.constructor = d2;
  }
  d2.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t) {
    for (var s2, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s2 = arguments[i2];
      for (var p2 in s2) if (Object.prototype.hasOwnProperty.call(s2, p2)) t[p2] = s2[p2];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __awaiter(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve2) {
      resolve2(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve2, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve2(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _2 = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g2;
  return g2 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g2[Symbol.iterator] = function() {
    return this;
  }), g2;
  function verb(n2) {
    return function(v) {
      return step([n2, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (g2 && (g2 = 0, op[0] && (_2 = 0)), _2) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _2.label++;
          return { value: op[1], done: false };
        case 5:
          _2.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _2.ops.pop();
          _2.trys.pop();
          continue;
        default:
          if (!(t = _2.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _2 = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _2.label = op[1];
            break;
          }
          if (op[0] === 6 && _2.label < t[1]) {
            _2.label = t[1];
            t = op;
            break;
          }
          if (t && _2.label < t[2]) {
            _2.label = t[2];
            _2.ops.push(op);
            break;
          }
          if (t[2]) _2.ops.pop();
          _2.trys.pop();
          continue;
      }
      op = body.call(thisArg, _2);
    } catch (e2) {
      op = [6, e2];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
var convertImage = function(canvas) {
  return canvas.toDataURL("image/png", 1);
};
var isFunction = function(value) {
  return typeof value === "function";
};
var isUndefined = function(value) {
  return value === void 0;
};
var isString = function(value) {
  return typeof value === "string";
};
var createSVGElement = function(tagName, attrs, namespaceURI) {
  if (attrs === void 0) {
    attrs = {};
  }
  if (namespaceURI === void 0) {
    namespaceURI = "http://www.w3.org/2000/svg";
  }
  var element = document.createElementNS(namespaceURI, tagName);
  for (var attr in attrs) {
    element.setAttribute(attr, attrs[attr]);
  }
  return element;
};
var getMultiLineData = function(ctx, text, maxWidth) {
  var result = [];
  var str = "";
  var word = "";
  for (var i2 = 0, len = text.length; i2 < len; i2++) {
    word = text.charAt(i2);
    if (word === "\n") {
      result.push(str);
      str = "";
      continue;
    }
    str += word;
    if (ctx.measureText(str).width > maxWidth) {
      result.push(str.substring(0, str.length - 1));
      str = "";
      i2--;
    }
  }
  result.push(str);
  return result;
};
var createCustomContentSVG = function(ctx, options) {
  return __awaiter(void 0, void 0, void 0, function() {
    var svgElement, bodyElement, rect, rectWidth, rectHeight, width, height, foreignObjectElement;
    var _a25;
    return __generator(this, function(_b25) {
      switch (_b25.label) {
        case 0:
          svgElement = createSVGElement("svg", {
            xmlns: "http://www.w3.org/2000/svg"
          });
          bodyElement = document.createElement("div");
          bodyElement.setAttribute("xmlns", "http://www.w3.org/1999/xhtml");
          bodyElement.style.cssText = "\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  font: ".concat(ctx.font, ";\n  color: ").concat(options.fontColor, ";\n");
          bodyElement.innerHTML = "<div class='rich-text-content'>".concat(options.content, "</div>");
          document.body.appendChild(bodyElement);
          return [4, convertImgToBase64(bodyElement)];
        case 1:
          _b25.sent();
          rect = (_a25 = bodyElement.querySelector(".rich-text-content")) === null || _a25 === void 0 ? void 0 : _a25.getBoundingClientRect();
          rectWidth = rect === null || rect === void 0 ? void 0 : rect.width;
          rectHeight = rect === null || rect === void 0 ? void 0 : rect.height;
          document.body.removeChild(bodyElement);
          width = options.richTextWidth || rectWidth || options.width;
          height = options.richTextHeight || rectHeight || options.height;
          svgElement.setAttribute("width", width.toString());
          svgElement.setAttribute("height", height.toString());
          foreignObjectElement = createSVGElement("foreignObject", {
            width: width.toString(),
            height: height.toString()
          });
          foreignObjectElement.appendChild(bodyElement);
          svgElement.appendChild(foreignObjectElement);
          return [2, {
            element: svgElement,
            width,
            height
          }];
      }
    });
  });
};
function convertImgToBase64(bodyElement) {
  return __awaiter(this, void 0, void 0, function() {
    var imgElements, _loop_1, _i, _a25, img;
    return __generator(this, function(_b25) {
      switch (_b25.label) {
        case 0:
          imgElements = bodyElement.querySelectorAll("img");
          _loop_1 = function(img2) {
            var src, response, blob_1, imgData, error_1;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  src = img2.getAttribute("src");
                  if (!src) return [3, 6];
                  _c.label = 1;
                case 1:
                  _c.trys.push([1, 5, , 6]);
                  return [4, fetch(src)];
                case 2:
                  response = _c.sent();
                  return [4, response.blob()];
                case 3:
                  blob_1 = _c.sent();
                  return [4, new Promise(function(resolve2, reject) {
                    var reader = new FileReader();
                    reader.onloadend = function() {
                      return resolve2(reader.result);
                    };
                    reader.onerror = reject;
                    reader.readAsDataURL(blob_1);
                  })];
                case 4:
                  imgData = _c.sent();
                  if (isString(imgData)) {
                    img2.setAttribute("src", imgData);
                  }
                  return [3, 6];
                case 5:
                  error_1 = _c.sent();
                  console.error("Error converting ".concat(src, " to base64:"), error_1);
                  return [3, 6];
                case 6:
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          };
          _i = 0, _a25 = Array.from(imgElements);
          _b25.label = 1;
        case 1:
          if (!(_i < _a25.length)) return [3, 4];
          img = _a25[_i];
          return [5, _loop_1(img)];
        case 2:
          _b25.sent();
          _b25.label = 3;
        case 3:
          _i++;
          return [3, 1];
        case 4:
          return [
            2
            /*return*/
          ];
      }
    });
  });
}
var convertSVGToImage = function(svg) {
  var richContent = svg.outerHTML.replace(/<(img|br|input|hr|embed)(.*?)>/g, "<$1$2/>").replace(/\n/g, "").replace(/\t/g, "").replace(/#/g, "%23");
  return "data:image/svg+xml;charset=utf-8,".concat(richContent);
};
var getValue = function(v1, v2) {
  if (isUndefined(v1)) {
    return v2;
  } else {
    return v1;
  }
};
var loadImage = function(url, width, height) {
  if (width === void 0) {
    width = void 0;
  }
  if (height === void 0) {
    height = void 0;
  }
  var image = new Image();
  image.setAttribute("crossOrigin", "Anonymous");
  !isUndefined(width) && (image.width = width);
  !isUndefined(height) && (image.height = height);
  image.src = url;
  return new Promise(function(resolve2) {
    image.onload = function() {
      resolve2(image);
    };
  });
};
var generateMatrix = function(rows, columns, value) {
  return Array.from({ length: rows }, function() {
    return new Array(columns).fill(value);
  });
};
var initialOptions = {
  width: 300,
  height: 300,
  rotate: 45,
  layout: "default",
  auxiliaryLine: false,
  translatePlacement: "middle",
  contentType: "text",
  content: "hello watermark-js-plus",
  textType: "fill",
  imageWidth: 0,
  imageHeight: 0,
  lineHeight: 30,
  zIndex: 2147483647,
  backgroundPosition: "0 0",
  backgroundRepeat: "repeat",
  fontSize: "20px",
  fontFamily: "sans-serif",
  fontStyle: "",
  fontVariant: "",
  fontColor: "#000",
  fontWeight: "normal",
  filter: "none",
  letterSpacing: "0px",
  wordSpacing: "0px",
  globalAlpha: 0.5,
  mode: "default",
  mutationObserve: true,
  monitorProtection: false,
  movable: false,
  parent: "body",
  onSuccess: function() {
  },
  onBeforeDestroy: function() {
  },
  onDestroyed: function() {
  },
  onObserveError: function() {
  }
};
var generateRecommendOptions = function(canvas, options, args) {
  var ctx = canvas.getContext("2d");
  if (ctx === null) {
    throw new Error("get context error");
  }
  ctx.font = "".concat(options.fontStyle, " ").concat(options.fontVariant, " ").concat(options.fontWeight, " ").concat(options.fontSize, " ").concat(options.fontFamily);
  ctx.filter = options.filter;
  ctx.letterSpacing = options.letterSpacing;
  ctx.wordSpacing = options.wordSpacing;
  if (options === null || options === void 0 ? void 0 : options.rotate) {
    options.rotate = (360 - options.rotate % 360) * (Math.PI / 180);
  }
  if (isUndefined(args.textRowMaxWidth)) {
    options.textRowMaxWidth = options.width;
  }
  var result = {
    image: {
      rect: {
        width: options.imageWidth,
        height: options.imageHeight
      },
      position: {
        x: 0,
        y: 0
      }
    },
    textLine: {
      data: [],
      yOffsetValue: 0
    },
    advancedStyleParams: {
      linear: {
        x0: 0,
        x1: 0
      },
      radial: {
        x0: 0,
        y0: 0,
        r0: 0,
        x1: 0,
        y1: 0,
        r1: 0
      },
      conic: {
        x: 0,
        y: 0,
        startAngle: 0
      },
      pattern: {}
    }
  };
  switch (options.contentType) {
    case "text":
      result.textLine.data = [options.content];
      break;
    case "multi-line-text":
      result.textLine.data = getMultiLineData(ctx, options.content, options.textRowMaxWidth);
      break;
  }
  var translateX = options.width / 2;
  var translateY = options.height / 2;
  var textBaseline = "middle";
  var textAlign = "center";
  if (!isUndefined(args === null || args === void 0 ? void 0 : args.translateX) && !isUndefined(args === null || args === void 0 ? void 0 : args.translateY)) {
    translateX = args === null || args === void 0 ? void 0 : args.translateX;
    translateY = args === null || args === void 0 ? void 0 : args.translateY;
    textBaseline = "top";
    textAlign = "left";
  } else {
    result.advancedStyleParams.linear.x0 = -options.width / 2;
    result.advancedStyleParams.linear.x1 = options.width / 2;
    result.advancedStyleParams.radial.r0 = 0;
    result.advancedStyleParams.radial.r1 = options.width / 2;
  }
  switch (args.translatePlacement) {
    case "top":
      translateX = options.width / 2;
      translateY = 0;
      textBaseline = "top";
      result.advancedStyleParams.linear.x0 = -options.width / 2;
      result.advancedStyleParams.linear.x1 = options.width / 2;
      result.advancedStyleParams.radial.y0 = result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.radial.y1 = result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.conic.y = result.textLine.data.length * options.lineHeight / 2;
      break;
    case "top-start":
      translateX = 0;
      translateY = 0;
      textBaseline = "top";
      textAlign = "start";
      result.advancedStyleParams.linear.x0 = 0;
      result.advancedStyleParams.linear.x1 = options.width;
      result.advancedStyleParams.radial.x0 = options.width / 2;
      result.advancedStyleParams.radial.y0 = result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.radial.x1 = options.width / 2;
      result.advancedStyleParams.radial.y1 = result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.conic.x = options.width / 2;
      result.advancedStyleParams.conic.y = result.textLine.data.length * options.lineHeight / 2;
      break;
    case "top-end":
      translateX = options.width;
      translateY = 0;
      textBaseline = "top";
      textAlign = "end";
      result.advancedStyleParams.linear.x0 = 0;
      result.advancedStyleParams.linear.x1 = -options.width;
      result.advancedStyleParams.radial.x0 = -options.width / 2;
      result.advancedStyleParams.radial.y0 = result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.radial.x1 = -options.width / 2;
      result.advancedStyleParams.radial.y1 = result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.conic.x = -options.width / 2;
      result.advancedStyleParams.conic.y = result.textLine.data.length * options.lineHeight / 2;
      break;
    case "bottom":
      translateX = options.width / 2;
      translateY = options.height;
      textBaseline = "bottom";
      result.advancedStyleParams.linear.x0 = -options.width / 2;
      result.advancedStyleParams.linear.x1 = options.width / 2;
      result.advancedStyleParams.radial.y0 = -result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.radial.y1 = -result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.conic.x = 0;
      result.advancedStyleParams.conic.y = -result.textLine.data.length * options.lineHeight / 2;
      break;
    case "bottom-start":
      translateX = 0;
      translateY = options.height;
      textBaseline = "bottom";
      textAlign = "start";
      result.advancedStyleParams.linear.x0 = 0;
      result.advancedStyleParams.linear.x1 = options.width;
      result.advancedStyleParams.radial.x0 = options.width / 2;
      result.advancedStyleParams.radial.y0 = -result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.radial.x1 = options.width / 2;
      result.advancedStyleParams.radial.y1 = -result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.conic.x = options.width / 2;
      result.advancedStyleParams.conic.y = -result.textLine.data.length * options.lineHeight / 2;
      break;
    case "bottom-end":
      translateX = options.width;
      translateY = options.height;
      textBaseline = "bottom";
      textAlign = "end";
      result.advancedStyleParams.linear.x0 = 0;
      result.advancedStyleParams.linear.x1 = -options.width;
      result.advancedStyleParams.radial.x0 = -options.width / 2;
      result.advancedStyleParams.radial.y0 = -result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.radial.x1 = -options.width / 2;
      result.advancedStyleParams.radial.y1 = -result.textLine.data.length * options.lineHeight / 2;
      result.advancedStyleParams.conic.x = -options.width / 2;
      result.advancedStyleParams.conic.y = -result.textLine.data.length * options.lineHeight / 2;
      break;
    case "left":
      translateX = 0;
      translateY = options.height / 2;
      textAlign = "start";
      result.advancedStyleParams.linear.x0 = 0;
      result.advancedStyleParams.linear.x1 = options.width;
      result.advancedStyleParams.radial.x0 = options.width / 2;
      result.advancedStyleParams.radial.x1 = options.width / 2;
      result.advancedStyleParams.conic.x = options.width / 2;
      result.advancedStyleParams.conic.y = 0;
      break;
    case "right":
      translateX = options.width;
      translateY = options.height / 2;
      textAlign = "end";
      result.advancedStyleParams.linear.x0 = 0;
      result.advancedStyleParams.linear.x1 = -options.width;
      result.advancedStyleParams.radial.x0 = -options.width / 2;
      result.advancedStyleParams.radial.x1 = -options.width / 2;
      result.advancedStyleParams.conic.x = -options.width / 2;
      result.advancedStyleParams.conic.y = 0;
      break;
  }
  options.translateX = translateX;
  options.translateY = translateY;
  isUndefined(args === null || args === void 0 ? void 0 : args.textBaseline) && (options.textBaseline = textBaseline);
  isUndefined(args === null || args === void 0 ? void 0 : args.textAlign) && (options.textAlign = textAlign);
  if (["text", "multi-line-text"].includes(options.contentType)) {
    switch (options.textBaseline) {
      case "middle":
        result.textLine.yOffsetValue = (result.textLine.data.length - 1) * options.lineHeight / 2;
        break;
      case "bottom":
      case "alphabetic":
      case "ideographic":
        result.textLine.yOffsetValue = (result.textLine.data.length - 1) * options.lineHeight + (options.lineHeight - parseInt(options.fontSize)) / 2;
        break;
      case "top":
      case "hanging":
        result.textLine.yOffsetValue = -options.lineHeight / 2 + parseInt(options.fontSize) / 2;
        break;
    }
  }
  return result;
};
var protection = function(need) {
  if (typeof window === "undefined") {
    return;
  }
  if (need) {
    Object.defineProperty(window, "MutationObserver", {
      writable: false,
      configurable: false
    });
    Object.defineProperty(window, "requestAnimationFrame", {
      writable: false,
      configurable: false
    });
  }
};
var WatermarkCanvas = (
  /** @class */
  function() {
    function WatermarkCanvas2(args, options) {
      this.props = args;
      this.options = options;
      this.canvas = WatermarkCanvas2.createCanvas(this.options.width, this.options.height);
      this.recommendOptions = generateRecommendOptions(this.canvas, this.options, this.props);
    }
    WatermarkCanvas2.createCanvas = function(width, height) {
      var _a25;
      var ratio = window.devicePixelRatio || 1;
      var canvas = document.createElement("canvas");
      canvas.width = width * ratio;
      canvas.height = height * ratio;
      canvas.style.width = "".concat(width, "px");
      canvas.style.height = "".concat(height, "px");
      (_a25 = canvas.getContext("2d")) === null || _a25 === void 0 ? void 0 : _a25.setTransform(ratio, 0, 0, ratio, 0, 0);
      return canvas;
    };
    WatermarkCanvas2.clearCanvas = function(canvas) {
      var ctx = canvas.getContext("2d");
      if (ctx === null) {
        throw new Error("get context error");
      }
      ctx.restore();
      ctx.resetTransform();
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      var ratio = window.devicePixelRatio || 1;
      ctx.setTransform(ratio, 0, 0, ratio, 0, 0);
    };
    WatermarkCanvas2.prototype.getCanvas = function() {
      return this.canvas;
    };
    WatermarkCanvas2.prototype.clear = function() {
      WatermarkCanvas2.clearCanvas(this.canvas);
    };
    WatermarkCanvas2.prototype.draw = function() {
      var _this = this;
      var ctx = this.canvas.getContext("2d");
      if (ctx === null) {
        throw new Error("get context error");
      }
      if (this.options.auxiliaryLine) {
        ctx.beginPath();
        ctx.rect(0, 0, this.options.width, this.options.height);
        ctx.lineWidth = 1;
        ctx.strokeStyle = "#000";
        ctx.stroke();
        ctx.closePath();
        ctx.beginPath();
        ctx.rect(this.options.translateX, this.options.translateY, 1, 1);
        ctx.lineWidth = 1;
        ctx.strokeStyle = "#f00";
        ctx.stroke();
        ctx.closePath();
      }
      this.setStyle(ctx);
      ctx.save();
      ctx.translate(this.options.translateX, this.options.translateY);
      ctx.rotate(this.options.rotate);
      return new Promise(function(resolve2) {
        switch (_this.options.contentType) {
          case "text":
            _this.drawText(ctx, resolve2);
            break;
          case "image":
            _this.drawImage(ctx, resolve2);
            break;
          case "multi-line-text":
            _this.drawMultiLineText(ctx, resolve2);
            break;
          case "rich-text":
            _this.drawRichText(ctx, resolve2);
            break;
        }
      });
    };
    WatermarkCanvas2.prototype.setStyle = function(ctx) {
      var _a25;
      var propName = "fillStyle";
      if (this.options.textType === "stroke") {
        propName = "strokeStyle";
      }
      var style = this.options.fontColor;
      if ((_a25 = this.options) === null || _a25 === void 0 ? void 0 : _a25.advancedStyle) {
        switch (this.options.advancedStyle.type) {
          case "linear":
            style = this.createLinearGradient(ctx);
            break;
          case "radial":
            style = this.createRadialGradient(ctx);
            break;
          case "conic":
            style = this.createConicGradient(ctx);
            break;
          case "pattern":
            style = this.createPattern(ctx);
            break;
        }
      }
      ctx[propName] && style && (ctx[propName] = style);
      this.options.textAlign && (ctx.textAlign = this.options.textAlign);
      this.options.textBaseline && (ctx.textBaseline = this.options.textBaseline);
      ctx.globalAlpha = this.options.globalAlpha;
      if (this.options.shadowStyle) {
        ctx.shadowBlur = getValue(this.options.shadowStyle.shadowBlur, 0);
        ctx.shadowColor = getValue(this.options.shadowStyle.shadowColor, "#00000000");
        ctx.shadowOffsetX = getValue(this.options.shadowStyle.shadowOffsetX, 0);
        ctx.shadowOffsetY = getValue(this.options.shadowStyle.shadowOffsetY, 0);
      }
      if (isFunction(this.options.extraDrawFunc)) {
        this.options.extraDrawFunc(ctx);
      }
    };
    WatermarkCanvas2.prototype.createLinearGradient = function(ctx) {
      var _a25, _b25, _c, _d, _e2, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
      var gradient = ctx.createLinearGradient(getValue((_c = (_b25 = (_a25 = this.options.advancedStyle) === null || _a25 === void 0 ? void 0 : _a25.params) === null || _b25 === void 0 ? void 0 : _b25.linear) === null || _c === void 0 ? void 0 : _c.x0, this.recommendOptions.advancedStyleParams.linear.x0), getValue((_f = (_e2 = (_d = this.options.advancedStyle) === null || _d === void 0 ? void 0 : _d.params) === null || _e2 === void 0 ? void 0 : _e2.linear) === null || _f === void 0 ? void 0 : _f.y0, 0), getValue((_j = (_h = (_g = this.options.advancedStyle) === null || _g === void 0 ? void 0 : _g.params) === null || _h === void 0 ? void 0 : _h.linear) === null || _j === void 0 ? void 0 : _j.x1, this.recommendOptions.advancedStyleParams.linear.x1), getValue((_m = (_l = (_k = this.options.advancedStyle) === null || _k === void 0 ? void 0 : _k.params) === null || _l === void 0 ? void 0 : _l.linear) === null || _m === void 0 ? void 0 : _m.y1, 0));
      (_q = (_p = (_o = this.options) === null || _o === void 0 ? void 0 : _o.advancedStyle) === null || _p === void 0 ? void 0 : _p.colorStops) === null || _q === void 0 ? void 0 : _q.forEach(function(item) {
        gradient.addColorStop(item.offset, item.color);
      });
      return gradient;
    };
    WatermarkCanvas2.prototype.createConicGradient = function(ctx) {
      var _a25, _b25, _c, _d, _e2, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
      var gradient = ctx.createConicGradient(getValue((_d = (_c = (_b25 = (_a25 = this.options) === null || _a25 === void 0 ? void 0 : _a25.advancedStyle) === null || _b25 === void 0 ? void 0 : _b25.params) === null || _c === void 0 ? void 0 : _c.conic) === null || _d === void 0 ? void 0 : _d.startAngle, 0), getValue((_h = (_g = (_f = (_e2 = this.options) === null || _e2 === void 0 ? void 0 : _e2.advancedStyle) === null || _f === void 0 ? void 0 : _f.params) === null || _g === void 0 ? void 0 : _g.conic) === null || _h === void 0 ? void 0 : _h.x, this.recommendOptions.advancedStyleParams.conic.x), getValue((_m = (_l = (_k = (_j = this.options) === null || _j === void 0 ? void 0 : _j.advancedStyle) === null || _k === void 0 ? void 0 : _k.params) === null || _l === void 0 ? void 0 : _l.conic) === null || _m === void 0 ? void 0 : _m.y, this.recommendOptions.advancedStyleParams.conic.y));
      (_q = (_p = (_o = this.options) === null || _o === void 0 ? void 0 : _o.advancedStyle) === null || _p === void 0 ? void 0 : _p.colorStops) === null || _q === void 0 ? void 0 : _q.forEach(function(item) {
        gradient.addColorStop(item.offset, item.color);
      });
      return gradient;
    };
    WatermarkCanvas2.prototype.createRadialGradient = function(ctx) {
      var _a25, _b25, _c, _d, _e2, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;
      var gradient = ctx.createRadialGradient(getValue((_d = (_c = (_b25 = (_a25 = this.options) === null || _a25 === void 0 ? void 0 : _a25.advancedStyle) === null || _b25 === void 0 ? void 0 : _b25.params) === null || _c === void 0 ? void 0 : _c.radial) === null || _d === void 0 ? void 0 : _d.x0, this.recommendOptions.advancedStyleParams.radial.x0), getValue((_h = (_g = (_f = (_e2 = this.options) === null || _e2 === void 0 ? void 0 : _e2.advancedStyle) === null || _f === void 0 ? void 0 : _f.params) === null || _g === void 0 ? void 0 : _g.radial) === null || _h === void 0 ? void 0 : _h.y0, this.recommendOptions.advancedStyleParams.radial.y0), getValue((_m = (_l = (_k = (_j = this.options) === null || _j === void 0 ? void 0 : _j.advancedStyle) === null || _k === void 0 ? void 0 : _k.params) === null || _l === void 0 ? void 0 : _l.radial) === null || _m === void 0 ? void 0 : _m.r0, this.recommendOptions.advancedStyleParams.radial.r0), getValue((_r = (_q = (_p = (_o = this.options) === null || _o === void 0 ? void 0 : _o.advancedStyle) === null || _p === void 0 ? void 0 : _p.params) === null || _q === void 0 ? void 0 : _q.radial) === null || _r === void 0 ? void 0 : _r.x1, this.recommendOptions.advancedStyleParams.radial.x1), getValue((_v = (_u = (_t = (_s = this.options) === null || _s === void 0 ? void 0 : _s.advancedStyle) === null || _t === void 0 ? void 0 : _t.params) === null || _u === void 0 ? void 0 : _u.radial) === null || _v === void 0 ? void 0 : _v.y1, this.recommendOptions.advancedStyleParams.radial.y1), getValue((_z = (_y = (_x = (_w = this.options) === null || _w === void 0 ? void 0 : _w.advancedStyle) === null || _x === void 0 ? void 0 : _x.params) === null || _y === void 0 ? void 0 : _y.radial) === null || _z === void 0 ? void 0 : _z.r1, this.recommendOptions.advancedStyleParams.radial.r1));
      (_2 = (_1 = (_0 = this.options) === null || _0 === void 0 ? void 0 : _0.advancedStyle) === null || _1 === void 0 ? void 0 : _1.colorStops) === null || _2 === void 0 ? void 0 : _2.forEach(function(item) {
        gradient.addColorStop(item.offset, item.color);
      });
      return gradient;
    };
    WatermarkCanvas2.prototype.createPattern = function(ctx) {
      var _a25, _b25, _c, _d, _e2, _f, _g, _h;
      return ctx.createPattern((_d = (_c = (_b25 = (_a25 = this.options) === null || _a25 === void 0 ? void 0 : _a25.advancedStyle) === null || _b25 === void 0 ? void 0 : _b25.params) === null || _c === void 0 ? void 0 : _c.pattern) === null || _d === void 0 ? void 0 : _d.image, ((_h = (_g = (_f = (_e2 = this.options) === null || _e2 === void 0 ? void 0 : _e2.advancedStyle) === null || _f === void 0 ? void 0 : _f.params) === null || _g === void 0 ? void 0 : _g.pattern) === null || _h === void 0 ? void 0 : _h.repetition) || "");
    };
    WatermarkCanvas2.prototype.setText = function(ctx, params) {
      var methodName = "fillText";
      if (this.options.textType === "stroke") {
        methodName = "strokeText";
      }
      ctx[methodName] && ctx[methodName](params.text, params.x, params.y, params.maxWidth);
    };
    WatermarkCanvas2.prototype.drawText = function(ctx, resolve2) {
      this.setText(ctx, {
        text: this.options.content,
        x: 0,
        y: 0 - this.recommendOptions.textLine.yOffsetValue,
        maxWidth: this.options.textRowMaxWidth || this.options.width
      });
      resolve2(ctx.canvas);
    };
    WatermarkCanvas2.prototype.drawImage = function(ctx, resolve2) {
      var _this = this;
      loadImage(this.options.image).then(function(image) {
        var _a25 = _this.getImageRect(image), imageWidth = _a25.width, imageHeight = _a25.height;
        var imagePosition = _this.getDrawImagePosition(imageWidth, imageHeight);
        ctx.drawImage(image, imagePosition.x, imagePosition.y, imageWidth, imageHeight);
        resolve2(ctx.canvas);
      });
    };
    WatermarkCanvas2.prototype.drawMultiLineText = function(ctx, resolve2) {
      var _this = this;
      var lines = this.recommendOptions.textLine.data;
      var yOffsetValue = this.recommendOptions.textLine.yOffsetValue;
      lines.forEach(function(text, index) {
        _this.setText(ctx, { text, x: 0, y: _this.options.lineHeight * index - yOffsetValue, maxWidth: _this.options.textRowMaxWidth || _this.options.width });
      });
      resolve2(ctx.canvas);
    };
    WatermarkCanvas2.prototype.drawRichText = function(ctx, resolve2) {
      return __awaiter(this, void 0, void 0, function() {
        var obj;
        var _this = this;
        return __generator(this, function(_a25) {
          switch (_a25.label) {
            case 0:
              return [4, createCustomContentSVG(ctx, this.options)];
            case 1:
              obj = _a25.sent();
              loadImage(convertSVGToImage(obj.element), obj.width, obj.height).then(function(image) {
                var imagePosition = _this.getDrawImagePosition(image.width, image.height);
                ctx.drawImage(image, imagePosition.x, imagePosition.y, image.width, image.height);
                resolve2(ctx.canvas);
              });
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    WatermarkCanvas2.prototype.getImageRect = function(image) {
      var rect = { width: this.options.imageWidth || 0, height: this.options.imageHeight || 0 };
      switch (true) {
        case (rect.width !== 0 && rect.height === 0):
          rect.height = rect.width * image.height / image.width;
          break;
        case (rect.width === 0 && rect.height !== 0):
          rect.width = rect.height * image.width / image.height;
          break;
        case (rect.width === 0 && rect.height === 0):
          rect.width = image.width;
          rect.height = image.height;
          break;
      }
      return rect;
    };
    WatermarkCanvas2.prototype.getDrawImagePosition = function(imageWidth, imageHeight) {
      var _a25, _b25;
      var result = {
        x: -imageWidth / 2,
        y: -imageHeight / 2
      };
      switch (this.options.translatePlacement) {
        case "top":
          result.x = -imageWidth / 2;
          result.y = 0;
          break;
        case "top-start":
          result.x = 0;
          result.y = 0;
          break;
        case "top-end":
          result.x = -imageWidth;
          result.y = 0;
          break;
        case "bottom":
          result.x = -imageWidth / 2;
          result.y = -imageHeight;
          break;
        case "bottom-start":
          result.x = 0;
          result.y = -imageHeight;
          break;
        case "bottom-end":
          result.x = -imageWidth;
          result.y = -imageHeight;
          break;
        case "left":
          result.x = 0;
          result.y = -imageHeight / 2;
          break;
        case "right":
          result.x = -imageWidth;
          result.y = -imageHeight / 2;
          break;
      }
      !isUndefined((_a25 = this.props) === null || _a25 === void 0 ? void 0 : _a25.translateX) && (result.x = 0);
      !isUndefined((_b25 = this.props) === null || _b25 === void 0 ? void 0 : _b25.translateY) && (result.y = 0);
      return result;
    };
    return WatermarkCanvas2;
  }()
);
var GridLayout = (
  /** @class */
  function() {
    function GridLayout2(args, partialCanvas) {
      var _a25, _b25, _c, _d;
      this.options = args;
      this.partialWidth = this.options.width;
      this.partialHeight = this.options.height;
      this.rows = ((_a25 = this.options.gridLayoutOptions) === null || _a25 === void 0 ? void 0 : _a25.rows) || 1;
      this.cols = ((_b25 = this.options.gridLayoutOptions) === null || _b25 === void 0 ? void 0 : _b25.cols) || 1;
      this.matrix = ((_c = this.options.gridLayoutOptions) === null || _c === void 0 ? void 0 : _c.matrix) || generateMatrix(this.rows, this.cols, 1);
      this.gap = ((_d = this.options.gridLayoutOptions) === null || _d === void 0 ? void 0 : _d.gap) || [0, 0];
      this.partialCanvas = partialCanvas;
    }
    GridLayout2.prototype.draw = function() {
      var _a25, _b25, _c, _d, _e2, _f, _g, _h;
      var layoutCanvas = WatermarkCanvas.createCanvas(((_a25 = this.options.gridLayoutOptions) === null || _a25 === void 0 ? void 0 : _a25.width) || this.partialWidth * this.cols + this.gap[0] * this.cols, ((_b25 = this.options.gridLayoutOptions) === null || _b25 === void 0 ? void 0 : _b25.height) || this.partialHeight * this.rows + this.gap[1] * this.rows);
      var layoutContext = layoutCanvas.getContext("2d");
      if ((_c = this.options.gridLayoutOptions) === null || _c === void 0 ? void 0 : _c.backgroundImage) {
        layoutContext === null || layoutContext === void 0 ? void 0 : layoutContext.drawImage((_d = this.options.gridLayoutOptions) === null || _d === void 0 ? void 0 : _d.backgroundImage, 0, 0, (_e2 = this.options.gridLayoutOptions) === null || _e2 === void 0 ? void 0 : _e2.width, (_f = this.options.gridLayoutOptions) === null || _f === void 0 ? void 0 : _f.height);
      }
      for (var rowIndex = 0; rowIndex < this.rows; rowIndex++) {
        for (var colIndex = 0; colIndex < this.cols; colIndex++) {
          if (!((_h = (_g = this.matrix) === null || _g === void 0 ? void 0 : _g[rowIndex]) === null || _h === void 0 ? void 0 : _h[colIndex])) {
            continue;
          }
          layoutContext === null || layoutContext === void 0 ? void 0 : layoutContext.drawImage(this.partialCanvas, this.partialWidth * colIndex + this.gap[0] * colIndex, this.partialHeight * rowIndex + this.gap[1] * rowIndex, this.partialWidth, this.partialHeight);
        }
      }
      return layoutCanvas;
    };
    return GridLayout2;
  }()
);
var renderLayout = function(options, partialCanvas) {
  switch (options.layout) {
    case "grid":
      return new GridLayout(options, partialCanvas).draw();
    default:
      return partialCanvas;
  }
};
var generateBackgroundSize = function(options) {
  var _a25, _b25, _c;
  switch (options.layout) {
    case "grid": {
      var cols = ((_a25 = options.gridLayoutOptions) === null || _a25 === void 0 ? void 0 : _a25.cols) || 1;
      var rows = ((_b25 = options.gridLayoutOptions) === null || _b25 === void 0 ? void 0 : _b25.rows) || 1;
      var gap = ((_c = options.gridLayoutOptions) === null || _c === void 0 ? void 0 : _c.gap) || [0, 0];
      return [
        options.width * cols + gap[0] * cols,
        options.height * rows + gap[1] * rows
      ];
    }
    default:
      return [
        options.width,
        options.height
      ];
  }
};
var Watermark = (
  /** @class */
  function() {
    function Watermark2(args) {
      if (args === void 0) {
        args = {};
      }
      this.parentElement = document.body;
      this.isCreating = false;
      this.props = args;
      this.options = __assign(__assign({}, initialOptions), args);
      this.changeParentElement(this.options.parent);
      this.watermarkCanvas = new WatermarkCanvas(this.props, this.options);
      protection(this.options.monitorProtection);
    }
    Watermark2.prototype.changeOptions = function() {
      return __awaiter(this, arguments, void 0, function(args, mode, redraw) {
        if (args === void 0) {
          args = {};
        }
        if (mode === void 0) {
          mode = "overwrite";
        }
        if (redraw === void 0) {
          redraw = true;
        }
        return __generator(this, function(_a25) {
          switch (_a25.label) {
            case 0:
              this.initConfigData(args, mode);
              protection(this.options.monitorProtection);
              if (!redraw) return [3, 2];
              this.remove();
              return [4, this.create()];
            case 1:
              _a25.sent();
              _a25.label = 2;
            case 2:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    Watermark2.prototype.create = function() {
      return __awaiter(this, void 0, void 0, function() {
        var firstDraw, image, watermarkInnerDom, parentElementType, backgroundSize;
        var _a25, _b25, _c, _d, _e2, _f, _g;
        return __generator(this, function(_h) {
          switch (_h.label) {
            case 0:
              if (this.isCreating) {
                return [
                  2
                  /*return*/
                ];
              }
              this.isCreating = true;
              if (!this.validateUnique()) {
                this.isCreating = false;
                return [
                  2
                  /*return*/
                ];
              }
              if (!this.validateContent()) {
                this.isCreating = false;
                return [
                  2
                  /*return*/
                ];
              }
              firstDraw = isUndefined(this.watermarkDom);
              return [4, (_a25 = this.watermarkCanvas) === null || _a25 === void 0 ? void 0 : _a25.draw()];
            case 1:
              _h.sent();
              this.layoutCanvas = renderLayout(this.options, (_b25 = this.watermarkCanvas) === null || _b25 === void 0 ? void 0 : _b25.getCanvas());
              image = convertImage(this.layoutCanvas);
              (_c = this.watermarkCanvas) === null || _c === void 0 ? void 0 : _c.clear();
              this.watermarkDom = document.createElement("div");
              watermarkInnerDom = document.createElement("div");
              this.watermarkDom.__WATERMARK__ = "watermark";
              this.watermarkDom.__WATERMARK__INSTANCE__ = this;
              parentElementType = this.checkParentElementType();
              this.watermarkDom.style.cssText = "\n      z-index:".concat(this.options.zIndex, "!important;display:block!important;visibility:visible!important;transform:none!important;scale:none!important;\n      ").concat(parentElementType === "custom" ? "top:0!important;bottom:0!important;left:0!important;right:0!important;height:100%!important;pointer-events:none!important;position:absolute!important;" : "position:relative!important;", "\n    ");
              backgroundSize = generateBackgroundSize(this.options);
              watermarkInnerDom.style.cssText = "\n      display:block!important;visibility:visible!important;pointer-events:none;top:0;bottom:0;left:0;right:0;transform:none!important;scale:none!important;\n      position:".concat(parentElementType === "root" ? "fixed" : "absolute", "!important;-webkit-print-color-adjust:exact!important;width:100%!important;height:100%!important;\n      z-index:").concat(this.options.zIndex, "!important;background-image:url(").concat(image, ")!important;background-repeat:").concat(this.options.backgroundRepeat, "!important;\n      background-size:").concat(backgroundSize[0], "px ").concat(backgroundSize[1], "px!important;background-position:").concat(this.options.backgroundPosition, ";\n      ").concat(this.options.movable ? "animation: 200s ease 0s infinite normal none running watermark !important;" : "", "\n    ");
              this.watermarkDom.appendChild(watermarkInnerDom);
              this.parentElement.appendChild(this.watermarkDom);
              if (this.options.mutationObserve) {
                try {
                  this.bindMutationObserve();
                } catch (e2) {
                  (_e2 = (_d = this.options).onObserveError) === null || _e2 === void 0 ? void 0 : _e2.call(_d);
                }
              }
              firstDraw && ((_g = (_f = this.options).onSuccess) === null || _g === void 0 ? void 0 : _g.call(_f));
              this.isCreating = false;
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    Watermark2.prototype.destroy = function() {
      this.remove();
      this.watermarkDom = void 0;
    };
    Watermark2.prototype.check = function() {
      return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function(_a25) {
          return [2, this.parentElement.contains(this.watermarkDom)];
        });
      });
    };
    Watermark2.prototype.remove = function() {
      var _a25, _b25, _c, _d, _e2, _f, _g, _h;
      (_b25 = (_a25 = this.options).onBeforeDestroy) === null || _b25 === void 0 ? void 0 : _b25.call(_a25);
      (_c = this.observer) === null || _c === void 0 ? void 0 : _c.disconnect();
      (_d = this.parentObserve) === null || _d === void 0 ? void 0 : _d.disconnect();
      this.unbindCheckWatermarkElementEvent();
      (_f = (_e2 = this.watermarkDom) === null || _e2 === void 0 ? void 0 : _e2.parentNode) === null || _f === void 0 ? void 0 : _f.removeChild(this.watermarkDom);
      (_h = (_g = this.options).onDestroyed) === null || _h === void 0 ? void 0 : _h.call(_g);
    };
    Watermark2.prototype.initConfigData = function(args, mode) {
      var _this = this;
      if (mode === void 0) {
        mode = "overwrite";
      }
      if (mode === "append") {
        Object.keys(args).forEach(function(key) {
          _this.props && (_this.props[key] = args[key]);
        });
      } else {
        this.props = args;
      }
      this.options = __assign(__assign({}, initialOptions), this.props);
      this.changeParentElement(this.options.parent);
      this.watermarkCanvas = new WatermarkCanvas(this.props, this.options);
    };
    Watermark2.prototype.changeParentElement = function(parent) {
      if (typeof parent === "string") {
        var parentElement = document.querySelector(parent);
        parentElement && (this.parentElement = parentElement);
      } else {
        this.parentElement = parent;
      }
      if (!this.parentElement) {
        console.error("[WatermarkJsPlus]: please pass a valid parent element.");
      }
    };
    Watermark2.prototype.validateUnique = function() {
      var result = true;
      Array.from(this.parentElement.childNodes).forEach(function(node) {
        if (!result) {
          return;
        }
        if (Object.hasOwnProperty.call(node, "__WATERMARK__")) {
          result = false;
        }
      });
      return result;
    };
    Watermark2.prototype.validateContent = function() {
      switch (this.options.contentType) {
        case "image":
          return Object.hasOwnProperty.call(this.options, "image");
        case "multi-line-text":
        case "rich-text":
        case "text":
          return this.options.content.length > 0;
      }
    };
    Watermark2.prototype.checkParentElementType = function() {
      if (["html", "body"].includes(this.parentElement.tagName.toLocaleLowerCase())) {
        return "root";
      }
      return "custom";
    };
    Watermark2.prototype.checkWatermarkElement = function() {
      return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function(_a25) {
          switch (_a25.label) {
            case 0:
              if (!!this.parentElement.contains(this.watermarkDom)) return [3, 2];
              this.remove();
              return [4, this.create()];
            case 1:
              _a25.sent();
              _a25.label = 2;
            case 2:
              this.bindCheckWatermarkElementEvent();
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    Watermark2.prototype.bindMutationObserve = function() {
      var _this = this;
      if (!this.watermarkDom) {
        return;
      }
      this.bindCheckWatermarkElementEvent();
      this.observer = new MutationObserver(function(mutationsList) {
        return __awaiter(_this, void 0, void 0, function() {
          return __generator(this, function(_a25) {
            switch (_a25.label) {
              case 0:
                if (!(mutationsList.length > 0)) return [3, 2];
                this.remove();
                return [4, this.create()];
              case 1:
                _a25.sent();
                _a25.label = 2;
              case 2:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      });
      this.observer.observe(this.watermarkDom, {
        attributes: true,
        // 属性的变动
        childList: true,
        // 子节点的变动（指新增，删除或者更改）
        subtree: true,
        // 布尔值，表示是否将该观察器应用于该节点的所有后代节点。
        characterData: true
        // 节点内容或节点文本的变动。
      });
      this.parentObserve = new MutationObserver(function(mutationsList) {
        return __awaiter(_this, void 0, void 0, function() {
          var _i, mutationsList_1, item;
          var _a25;
          return __generator(this, function(_b25) {
            switch (_b25.label) {
              case 0:
                _i = 0, mutationsList_1 = mutationsList;
                _b25.label = 1;
              case 1:
                if (!(_i < mutationsList_1.length)) return [3, 4];
                item = mutationsList_1[_i];
                if (!((item === null || item === void 0 ? void 0 : item.target) === this.watermarkDom || ((_a25 = item === null || item === void 0 ? void 0 : item.removedNodes) === null || _a25 === void 0 ? void 0 : _a25[0]) === this.watermarkDom || item.type === "childList" && item.target === this.parentElement && item.target.lastChild !== this.watermarkDom)) return [3, 3];
                this.remove();
                return [4, this.create()];
              case 2:
                _b25.sent();
                _b25.label = 3;
              case 3:
                _i++;
                return [3, 1];
              case 4:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      });
      this.parentObserve.observe(this.parentElement, {
        attributes: true,
        // 属性的变动
        childList: true,
        // 子节点的变动（指新增，删除或者更改）
        subtree: true,
        // 布尔值，表示是否将该观察器应用于该节点的所有后代节点。
        characterData: true
        // 节点内容或节点文本的变动。
      });
    };
    Watermark2.prototype.bindCheckWatermarkElementEvent = function() {
      this.unbindCheckWatermarkElementEvent();
      this.checkWatermarkElementRequestID = requestAnimationFrame(this.checkWatermarkElement.bind(this));
    };
    Watermark2.prototype.unbindCheckWatermarkElementEvent = function() {
      if (!isUndefined(this.checkWatermarkElementRequestID)) {
        cancelAnimationFrame(this.checkWatermarkElementRequestID);
      }
    };
    return Watermark2;
  }()
);
(function(_super) {
  __extends(BlindWatermark, _super);
  function BlindWatermark(props) {
    if (props === void 0) {
      props = {};
    }
    var defaultProps = {
      globalAlpha: 5e-3,
      mode: "blind"
    };
    return _super.call(this, __assign(__assign({}, props), defaultProps)) || this;
  }
  BlindWatermark.decode = function(props) {
    var _a25 = props.url, url = _a25 === void 0 ? "" : _a25, _b25 = props.fillColor, fillColor = _b25 === void 0 ? "#000" : _b25, _c = props.compositeOperation, compositeOperation = _c === void 0 ? "color-burn" : _c, _d = props.mode, mode = _d === void 0 ? "canvas" : _d, _e2 = props.compositeTimes, compositeTimes = _e2 === void 0 ? 3 : _e2, onSuccess = props.onSuccess;
    if (!url) {
      return;
    }
    if (mode === "canvas") {
      var img_1 = new Image();
      img_1.src = url;
      img_1.addEventListener("load", function() {
        var width = img_1.width, height = img_1.height;
        var canvas = WatermarkCanvas.createCanvas(width, height);
        var ctx = canvas.getContext("2d");
        if (!ctx) {
          throw new Error("get context error");
        }
        ctx.drawImage(img_1, 0, 0, width, height);
        ctx.globalCompositeOperation = compositeOperation;
        ctx.fillStyle = fillColor;
        for (var i2 = 0; i2 < compositeTimes; i2++) {
          ctx.fillRect(0, 0, width, height);
        }
        var resultImage = convertImage(canvas);
        if (isFunction(onSuccess)) {
          onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(resultImage);
        }
      });
    }
  };
  return BlindWatermark;
})(Watermark);
const setupWatermark = (options, enabled, delay2 = 500) => {
  const routePath = useRoutePath();
  const siteData2 = useSiteLocaleData();
  onMounted(() => {
    const watermark = new Watermark();
    const updateWaterMark = (watermarkOptions2) => {
      var _a25;
      const newOptions = {
        // set default text to site title
        content: siteData2.value.title,
        // set font color to make it readable both lightmode and darkmode
        fontColor: "#76747f",
        // default alpha of blind mode is 0.005 while default mode is 0.165
        globalAlpha: watermarkOptions2.mode === "blind" ? 5e-3 : 0.165,
        ...watermarkOptions2
      };
      if ((_a25 = newOptions.image) == null ? void 0 : _a25.startsWith("/")) {
        newOptions.image = withBase(newOptions.image);
      }
      if (toValue$1(enabled)) {
        void watermark.changeOptions(newOptions);
      }
    };
    watch([enabled, routePath], () => nextTick(() => {
      if (enabled.value) {
        void wait(delay2).then(() => {
          updateWaterMark(toValue$1(options));
        });
      } else {
        watermark.destroy();
      }
    }), { immediate: true });
    if (isRef$1(options))
      watch(options, updateWaterMark);
  });
};
const watermarkSymbol = Symbol("");
const watermarkOptions = ref({});
const useWatermarkOptions = (options) => {
  const globalOptions = inject(watermarkSymbol);
  const frontmatter = usePageFrontmatter();
  return computed(() => {
    const { watermark } = frontmatter.value;
    return {
      ...toValue$1(options),
      ...globalOptions.value,
      ...isPlainObject(watermark) ? watermark : {}
    };
  });
};
const injectWatermarkConfig = (app) => {
  app.provide(watermarkSymbol, watermarkOptions);
};
var define_WM_OPTIONS_default = { content: "风动之石的博客", globalAlpha: 0.1 };
const config$3 = defineClientConfig({
  enhance({ app }) {
    injectWatermarkConfig(app);
  },
  setup() {
    const frontmatter = usePageFrontmatter();
    const watermarkOptions2 = useWatermarkOptions(computed(() => {
      const { watermark } = frontmatter.value;
      return isPlainObject(watermark) ? {} : define_WM_OPTIONS_default;
    }));
    const enabled = computed(() => {
      const { watermark } = frontmatter.value;
      return Boolean(watermark ?? true);
    });
    setupWatermark(watermarkOptions2, enabled, 500);
  }
});
const clientConfig14 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$3
}, Symbol.toStringTag, { value: "Module" }));
const photoswipeOptions = ref({});
const photoswipeSymbol = Symbol("");
const usePhotoSwipeOptions = () => inject(photoswipeSymbol);
const injectPhotoSwipeConfig = (app) => {
  app.provide(photoswipeSymbol, photoswipeOptions);
};
const LOADING_ICON = '<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>';
const getImages = (selector2) => isString$2(selector2) ? Array.from(document.querySelectorAll(selector2)) : selector2.map((item) => Array.from(document.querySelectorAll(item))).flat();
const getImageElementInfo = (image) => new Promise((resolve2, reject) => {
  if (image.complete) {
    resolve2({
      type: "image",
      element: image,
      src: image.src,
      width: image.naturalWidth,
      height: image.naturalHeight,
      alt: image.alt,
      msrc: image.src
    });
  } else {
    image.onload = () => {
      resolve2(getImageElementInfo(image));
    };
    image.onerror = () => {
      reject();
    };
  }
});
const initPhotoSwipe = (photoSwipe, { download: download2 = true, fullscreen: fullscreen2 = true } = {}) => {
  photoSwipe.on("uiRegister", () => {
    photoSwipe.ui.registerElement({
      name: "bulletsIndicator",
      className: "photo-swipe-bullets-indicator",
      appendTo: "wrapper",
      onInit: (el) => {
        const bullets = [];
        let prevIndex = -1;
        for (let i2 = 0; i2 < photoSwipe.getNumItems(); i2++) {
          const bullet = document.createElement("div");
          bullet.className = "photo-swipe-bullet";
          bullet.onclick = (event) => {
            photoSwipe.goTo(bullets.indexOf(event.target));
          };
          bullets.push(bullet);
          el.appendChild(bullet);
        }
        photoSwipe.on("change", () => {
          if (prevIndex >= 0)
            bullets[prevIndex].classList.remove("active");
          bullets[photoSwipe.currIndex].classList.add("active");
          prevIndex = photoSwipe.currIndex;
        });
      }
    });
    if (fullscreen2) {
      const { isSupported: isSupported2, toggle } = useFullscreen();
      if (isSupported2.value)
        photoSwipe.ui.registerElement({
          name: "fullscreen",
          order: 7,
          isButton: true,
          html: '<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',
          onClick: () => {
            void toggle();
          }
        });
    }
    if (download2) {
      photoSwipe.ui.registerElement({
        name: "download",
        order: 8,
        isButton: true,
        tagName: "a",
        // SVG with outline
        html: {
          isCustomSVG: true,
          inner: '<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',
          outlineID: "pswp__icn-download"
        },
        onInit: (el) => {
          el.setAttribute("download", "");
          el.setAttribute("target", "_blank");
          el.setAttribute("rel", "noopener");
          photoSwipe.on("change", () => {
            el.setAttribute("href", photoSwipe.currSlide.data.src);
          });
        }
      });
    }
  });
};
const registerPhotoSwipe = (images, { scrollToClose: scrollToClose2 = true, download: download2 = true, fullscreen: fullscreen2 = true, ...photoSwipeOptions }) => __vitePreload(async () => {
  const { default: PhotoSwipe } = await import(
    /* webpackChunkName: "photo-swipe" */
    "./photoswipe.esm-Bp9IAFhl.js"
  );
  return { default: PhotoSwipe };
}, true ? [] : void 0).then(({ default: PhotoSwipe }) => {
  let currentPhotoSwipe = null;
  const dataSource = images.map((image) => ({
    html: LOADING_ICON,
    element: image,
    msrc: image.src
  }));
  images.forEach((image, index) => {
    const handler = () => {
      currentPhotoSwipe == null ? void 0 : currentPhotoSwipe.destroy();
      currentPhotoSwipe = new PhotoSwipe({
        preloaderDelay: 0,
        showHideAnimationType: "zoom",
        ...photoSwipeOptions,
        dataSource,
        index,
        ...scrollToClose2 ? { closeOnVerticalDrag: true, wheelToZoom: false } : {}
      });
      initPhotoSwipe(currentPhotoSwipe, { download: download2, fullscreen: fullscreen2 });
      currentPhotoSwipe.addFilter("thumbEl", () => image);
      currentPhotoSwipe.addFilter("placeholderSrc", () => image.src);
      currentPhotoSwipe.init();
    };
    if (!image.getAttribute("photo-swipe")) {
      image.style.cursor = "zoom-in";
      image.addEventListener("click", () => {
        handler();
      });
      image.addEventListener("keypress", ({ key }) => {
        if (key === "Enter")
          handler();
      });
      image.setAttribute("photo-swipe", "");
    }
    void getImageElementInfo(image).then((data) => {
      dataSource.splice(index, 1, data);
      currentPhotoSwipe == null ? void 0 : currentPhotoSwipe.refreshSlideContent(index);
    });
  });
  return scrollToClose2 ? useEventListener("wheel", () => {
    currentPhotoSwipe == null ? void 0 : currentPhotoSwipe.close();
  }) : () => {
  };
});
const usePhotoSwipe = ({ selector: selector2, locales: locales2, delay: delay2 = 500, download: download2 = true, fullscreen: fullscreen2 = true, scrollToClose: scrollToClose2 = true }) => {
  const photoSwipeOptions = usePhotoSwipeOptions();
  const locale = useLocaleConfig(locales2);
  const page = usePageData();
  const frontmatter = usePageFrontmatter();
  let destroy = null;
  const setupPhotoSwipe = () => {
    const { photoSwipe } = frontmatter.value;
    if (photoSwipe !== false)
      void nextTick().then(() => wait(delay2)).then(async () => {
        const imageSelector = isString$2(photoSwipe) ? photoSwipe : selector2;
        destroy = await registerPhotoSwipe(getImages(imageSelector), {
          ...photoSwipeOptions.value,
          ...locale.value,
          download: download2,
          fullscreen: fullscreen2,
          scrollToClose: scrollToClose2
        });
      });
  };
  onMounted(() => {
    setupPhotoSwipe();
    watch(() => [page.value.path, photoSwipeOptions.value], () => {
      destroy == null ? void 0 : destroy();
      setupPhotoSwipe();
    });
  });
  onUnmounted(() => {
    destroy == null ? void 0 : destroy();
  });
};
var define_PS_LOCALES_default = { "/": { closeTitle: "Close", downloadTitle: "Download Image", fullscreenTitle: "Switch to fullscreen", zoomTitle: "Zoom in/out", arrowPrevTitle: "Prev (Arrow Left)", arrowNextTitle: "Next (Arrow Right)" } };
const selector = "[vp-content] :not(a) > img:not([no-view])";
const locales = define_PS_LOCALES_default;
const delay = 800;
const download = true;
const fullscreen = true;
const scrollToClose = true;
const config$2 = defineClientConfig({
  enhance: ({ app }) => {
    injectPhotoSwipeConfig(app);
  },
  setup: () => {
    usePhotoSwipe({
      selector,
      delay,
      locales,
      download,
      fullscreen,
      scrollToClose
    });
  }
});
const clientConfig15 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$2
}, Symbol.toStringTag, { value: "Module" }));
var define_COPYRIGHT_LOCALES_default = { "/": { author: "Copyright by :author", license: "License under :license", link: ":link" } };
var define_COPYRIGHT_OPTIONS_default = { canonical: "", author: "风动之石", license: "", global: true, disableCopy: false, disableSelection: false, triggerLength: 10, maxLength: 0 };
const copyrightOptions = define_COPYRIGHT_OPTIONS_default;
const { canonical } = copyrightOptions;
const setupCopyright = () => {
  const frontmatter = usePageFrontmatter();
  const locale = useLocaleConfig(define_COPYRIGHT_LOCALES_default);
  const page = usePageData();
  const enabled = computed(() => Boolean(frontmatter.value.copy) || frontmatter.value.copy !== false && copyrightOptions.global);
  const copyOptions = computed(() => isPlainObject(frontmatter.value.copy) ? frontmatter.value.copy : null);
  const disableCopy = computed(() => {
    var _a25;
    return ((_a25 = copyOptions.value) == null ? void 0 : _a25.disableCopy) ?? copyrightOptions.disableCopy;
  });
  const disableSelection = computed(() => {
    var _a25;
    return enabled.value ? ((_a25 = copyOptions.value) == null ? void 0 : _a25.disableSelection) ?? copyrightOptions.disableSelection : false;
  });
  const maxLength = computed(() => {
    var _a25;
    return enabled.value ? ((_a25 = copyOptions.value) == null ? void 0 : _a25.maxLength) ?? copyrightOptions.maxLength : 0;
  });
  const triggerLength = computed(() => {
    var _a25;
    return ((_a25 = copyOptions.value) == null ? void 0 : _a25.triggerLength) ?? copyrightOptions.triggerLength;
  });
  const getLink = () => canonical ? `${removeEndingSlash(isLinkHttp(canonical) ? canonical : `https://${canonical}`)}${page.value.path}` : window.location.href;
  const getCopyrightContent = (authorInfo, licenseInfo) => {
    const { author, license, link } = locale.value;
    return [
      authorInfo ? author.replace(":author", authorInfo) : "",
      licenseInfo ? license.replace(":license", licenseInfo) : "",
      link.replace(":link", getLink())
    ].filter((item) => item).join("\n");
  };
  const getCopyright = () => {
    if (isString$2(page.value.copyright))
      return page.value.copyright.replace(":link", getLink());
    const { author, license } = page.value.copyright ?? {};
    return getCopyrightContent(author ?? copyrightOptions.author, license ?? copyrightOptions.license);
  };
  const onCopy = (event) => {
    const selection = getSelection();
    if (selection) {
      const textRange = selection.getRangeAt(0);
      if (enabled.value) {
        const textLength = textRange.toString().length;
        if (disableCopy.value || maxLength.value && textLength > maxLength.value) {
          event.preventDefault();
          return;
        }
        if (textLength >= triggerLength.value) {
          event.preventDefault();
          const copyright = getCopyright();
          const node = document.createElement("div");
          node.appendChild(selection.getRangeAt(0).cloneContents());
          if (event.clipboardData) {
            event.clipboardData.setData("text/html", `${node.innerHTML}<hr><div class="copyright">${copyright.replace(/\\n/g, "<br>")}</div>`);
            event.clipboardData.setData("text/plain", `${selection.getRangeAt(0).cloneContents().textContent || ""}
------
${copyright}`);
          }
        }
      }
    }
  };
  onMounted(() => {
    const appElement = document.querySelector("#app");
    useEventListener(appElement, "copy", onCopy);
    watchEffect(() => {
      appElement.style.userSelect = disableSelection.value ? "none" : "auto";
    });
  });
};
const config$1 = defineClientConfig({
  setup: () => {
    setupCopyright();
  }
});
const clientConfig16 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config$1
}, Symbol.toStringTag, { value: "Module" }));
const SHELL_RE = /language-(shellscript|shell|bash|sh|zsh)/;
const useCopyCode = ({ delay: delay2 = 500, duration = 2e3, locales: locales2, selector: selector2, showInMobile, ignoreSelector = [], transform }) => {
  const is419 = useMediaQuery("(max-width: 419px)");
  const enabled = computed(() => !is419.value || showInMobile);
  const locale = useLocaleConfig(locales2);
  const page = usePageData();
  const insertCopyButton = (codeBlockElement) => {
    var _a25;
    if (codeBlockElement.hasAttribute("copy-code"))
      return;
    const copyElement = document.createElement("button");
    copyElement.type = "button";
    copyElement.classList.add("vp-copy-code-button");
    copyElement.setAttribute("aria-label", locale.value.copy);
    copyElement.setAttribute("data-copied", locale.value.copied);
    (_a25 = codeBlockElement.parentElement) == null ? void 0 : _a25.insertBefore(copyElement, codeBlockElement);
    codeBlockElement.setAttribute("copy-code", "");
  };
  const appendCopyButton = async () => {
    document.body.classList.toggle("no-copy-code", !enabled.value);
    if (!enabled.value)
      return;
    await nextTick();
    await wait(delay2);
    document.querySelectorAll(selector2.join(",")).forEach(insertCopyButton);
  };
  watch(() => [page.value.path, enabled.value], appendCopyButton, {
    immediate: true
  });
  const { copy: copy2 } = useClipboard({ legacy: true });
  const timeoutIdMap = /* @__PURE__ */ new WeakMap();
  const copyContent = async (codeContainer, codeContent, button) => {
    const clone = codeContent.cloneNode(true);
    if (ignoreSelector.length) {
      clone.querySelectorAll(ignoreSelector.join(",")).forEach((node) => {
        node.remove();
      });
    }
    if (transform)
      transform(clone);
    let text = clone.textContent || "";
    if (SHELL_RE.test(codeContainer.className))
      text = text.replace(/^ *(\$|>) /gm, "");
    await copy2(text);
    if (duration <= 0)
      return;
    button.classList.add("copied");
    clearTimeout(timeoutIdMap.get(button));
    const timeoutId = setTimeout(() => {
      button.classList.remove("copied");
      button.blur();
      timeoutIdMap.delete(button);
    }, duration);
    timeoutIdMap.set(button, timeoutId);
  };
  useEventListener("click", (event) => {
    const el = event.target;
    if (enabled.value && el.matches('div[class*="language-"] > button.vp-copy-code-button')) {
      const codeContainer = el.parentElement;
      const preBlock = el.nextElementSibling;
      if (!codeContainer || !preBlock)
        return;
      void copyContent(codeContainer, preBlock, el);
    }
  });
};
var define_CC_IGNORE_SELECTOR_default = [];
var define_CC_LOCALES_default = { "/": { copy: "Copy code", copied: "Copied" } };
var define_CC_SELECTOR_default = ['[vp-content] div[class*="language-"] pre'];
const config = defineClientConfig({
  setup: () => {
    useCopyCode({
      selector: define_CC_SELECTOR_default,
      ignoreSelector: define_CC_IGNORE_SELECTOR_default,
      locales: define_CC_LOCALES_default,
      duration: 2e3,
      delay: 500,
      showInMobile: false
    });
  }
});
const clientConfig17 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: config
}, Symbol.toStringTag, { value: "Module" }));
const clientConfig18 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null
}, Symbol.toStringTag, { value: "Module" }));
const client = defineClientConfig({
  layouts: {}
});
const clientConfig19 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: client
}, Symbol.toStringTag, { value: "Module" }));
const clientConfigs = [
  clientConfig0,
  clientConfig1,
  clientConfig2,
  clientConfig3,
  clientConfig4,
  clientConfig5,
  clientConfig6,
  clientConfig7,
  clientConfig8,
  clientConfig9,
  clientConfig10,
  clientConfig11,
  clientConfig12,
  clientConfig13,
  clientConfig14,
  clientConfig15,
  clientConfig16,
  clientConfig17,
  clientConfig18,
  clientConfig19
].map((m2) => m2.default).filter(Boolean);
const siteData$1 = JSON.parse('{"base":"/","lang":"en-US","title":"风动之石的博客","description":"记录工作，记录生活","head":[["link",{"rel":"icon","href":"/images/logo.png"}]],"locales":{}}');
var siteData = shallowRef(siteData$1);
var historyCreator = createWebHistory;
var createVueRouter = () => {
  const router = createRouter({
    // it might be an issue of vue-router that have to remove the ending slash
    history: historyCreator(removeEndingSlash("/")),
    routes: [
      {
        name: "vuepress-route",
        path: "/:catchAll(.*)",
        components: {}
      }
    ],
    scrollBehavior: (to, _from, savedPosition) => {
      if (savedPosition) return savedPosition;
      if (to.hash) return { el: to.hash };
      return { top: 0 };
    }
  });
  router.beforeResolve(async (to, from) => {
    if (to.path !== from.path || from === START_LOCATION_NORMALIZED) {
      const route = resolveRoute(to.fullPath);
      if (route.path !== to.fullPath) {
        return route.path;
      }
      const pageChunk = await route.loader();
      to.meta = {
        // attach route meta
        ...route.meta,
        // attach page chunk route meta
        _pageChunk: pageChunk
      };
    } else if (to.path === from.path) {
      to.meta = from.meta;
    }
  });
  return router;
};
var setupGlobalComponents = (app) => {
  app.component("ClientOnly", ClientOnly);
  app.component("Content", Content);
  app.component("RouteLink", RouteLink);
};
var setupGlobalComputed = (app, router, clientConfigs2) => {
  const routePath = computed(() => router.currentRoute.value.path);
  const pageChunk = customRef((track2, trigger2) => ({
    get() {
      track2();
      return router.currentRoute.value.meta._pageChunk;
    },
    set(value) {
      router.currentRoute.value.meta._pageChunk = value;
      trigger2();
    }
  }));
  const layouts = computed(() => resolvers.resolveLayouts(clientConfigs2));
  const routeLocale = computed(
    () => resolvers.resolveRouteLocale(siteData.value.locales, routePath.value)
  );
  const siteLocaleData = computed(
    () => resolvers.resolveSiteLocaleData(siteData.value, routeLocale.value)
  );
  const pageComponent = computed(() => pageChunk.value.comp);
  const pageData = computed(() => pageChunk.value.data);
  const pageFrontmatter = computed(() => pageData.value.frontmatter);
  const pageHeadTitle = computed(
    () => resolvers.resolvePageHeadTitle(pageData.value, siteLocaleData.value)
  );
  const pageHead = computed(
    () => resolvers.resolvePageHead(
      pageHeadTitle.value,
      pageFrontmatter.value,
      siteLocaleData.value
    )
  );
  const pageLang = computed(
    () => resolvers.resolvePageLang(pageData.value, siteLocaleData.value)
  );
  const pageLayout = computed(
    () => resolvers.resolvePageLayout(pageData.value, layouts.value)
  );
  const clientData = {
    layouts,
    pageData,
    pageComponent,
    pageFrontmatter,
    pageHead,
    pageHeadTitle,
    pageLang,
    pageLayout,
    redirects,
    routeLocale,
    routePath,
    routes,
    siteData,
    siteLocaleData
  };
  app.provide(clientDataSymbol, clientData);
  Object.defineProperties(app.config.globalProperties, {
    $frontmatter: { get: () => pageFrontmatter.value },
    $head: { get: () => pageHead.value },
    $headTitle: { get: () => pageHeadTitle.value },
    $lang: { get: () => pageLang.value },
    $page: { get: () => pageData.value },
    $routeLocale: { get: () => routeLocale.value },
    $site: { get: () => siteData.value },
    $siteLocale: { get: () => siteLocaleData.value },
    $withBase: { get: () => withBase }
  });
  return clientData;
};
var queryHeadElement = ([
  tagName,
  attrs,
  content = ""
]) => {
  const attrsSelector = Object.entries(attrs).map(([key, value]) => {
    if (isString$2(value)) {
      return `[${key}=${JSON.stringify(value)}]`;
    }
    if (value) {
      return `[${key}]`;
    }
    return "";
  }).join("");
  const selector2 = `head > ${tagName}${attrsSelector}`;
  const headElements = Array.from(
    document.querySelectorAll(selector2)
  );
  const matchedHeadElement = headElements.find(
    (item) => item.innerText === content
  );
  return matchedHeadElement ?? null;
};
var createHeadElement = ([
  tagName,
  attrs,
  content
]) => {
  if (!isString$2(tagName)) {
    return null;
  }
  const headElement = document.createElement(tagName);
  if (isPlainObject(attrs)) {
    Object.entries(attrs).forEach(([key, value]) => {
      if (isString$2(value)) {
        headElement.setAttribute(key, value);
      } else if (value) {
        headElement.setAttribute(key, "");
      }
    });
  }
  if (isString$2(content)) {
    headElement.appendChild(document.createTextNode(content));
  }
  return headElement;
};
var setupUpdateHead = () => {
  const head = usePageHead();
  const lang = usePageLang();
  let managedHeadElements = [];
  const takeOverHeadElements = () => {
    head.value.forEach((item) => {
      const headElement = queryHeadElement(item);
      if (headElement) {
        managedHeadElements.push(headElement);
      }
    });
  };
  const generateHeadElements = () => {
    const result = [];
    head.value.forEach((item) => {
      const headElement = createHeadElement(item);
      if (headElement) {
        result.push(headElement);
      }
    });
    return result;
  };
  const updateHead = () => {
    document.documentElement.lang = lang.value;
    const newHeadElements = generateHeadElements();
    managedHeadElements.forEach((oldEl, oldIndex) => {
      const matchedIndex = newHeadElements.findIndex(
        (newEl) => oldEl.isEqualNode(newEl)
      );
      if (matchedIndex === -1) {
        oldEl.remove();
        delete managedHeadElements[oldIndex];
      } else {
        newHeadElements.splice(matchedIndex, 1);
      }
    });
    newHeadElements.forEach((el) => document.head.appendChild(el));
    managedHeadElements = [
      // filter out empty deleted items
      ...managedHeadElements.filter((item) => !!item),
      ...newHeadElements
    ];
  };
  provide(updateHeadSymbol, updateHead);
  onMounted(() => {
    {
      takeOverHeadElements();
    }
    watch(head, updateHead, { immediate: false });
  });
};
var appCreator = createSSRApp;
var createVueApp = async () => {
  var _a25;
  const app = appCreator({
    name: "Vuepress",
    setup() {
      var _a26;
      setupUpdateHead();
      for (const clientConfig of clientConfigs) {
        (_a26 = clientConfig.setup) == null ? void 0 : _a26.call(clientConfig);
      }
      const clientRootComponents = clientConfigs.flatMap(
        ({ rootComponents = [] }) => rootComponents.map((component) => h$1(component))
      );
      const pageLayout = usePageLayout();
      return () => [h$1(pageLayout.value), clientRootComponents];
    }
  });
  const router = createVueRouter();
  setupGlobalComponents(app);
  const globalComputed = setupGlobalComputed(app, router, clientConfigs);
  {
    const { setupDevtools } = await __vitePreload(async () => {
      const { setupDevtools: setupDevtools2 } = await import("./setupDevtools-7MC2TMWH-CyTun0lc.js");
      return { setupDevtools: setupDevtools2 };
    }, true ? [] : void 0);
    setupDevtools(app, globalComputed);
  }
  for (const clientConfig of clientConfigs) {
    await ((_a25 = clientConfig.enhance) == null ? void 0 : _a25.call(clientConfig, { app, router, siteData }));
  }
  app.use(router);
  return {
    app,
    router
  };
};
{
  void createVueApp().then(({ app, router }) => {
    void router.isReady().then(() => {
      app.mount("#app");
    });
  });
}
export {
  Fragment$1 as F,
  __vitePreload as _,
  createVNode as a,
  createStaticVNode as b,
  createElementBlock as c,
  createVueApp,
  createBaseVNode as d,
  withCtx as e,
  createTextVNode as f,
  defineComponent as g,
  ref as h,
  onMounted as i,
  createCommentVNode as j,
  withDirectives as k,
  renderList as l,
  renderSlot as m,
  normalizeClass as n,
  openBlock as o,
  createBlock as p,
  computed as q,
  resolveComponent as r,
  setupDevToolsPlugin as s,
  toDisplayString as t,
  vModelText as u,
  vShow as v,
  watch as w,
  withModifiers as x
};
