import { r as resolveComponent, c as createElementBlock, d as createBaseVNode, a as createVNode, e as withCtx, b as createStaticVNode, o as openBlock, f as createTextVNode } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _imports_0 = "/assets/add-sourcemap-plugin-f4MGFUEV.png";
const _imports_1 = "/assets/use-sourcemap-plugin-BfjIAV3s.png";
const _imports_2 = "/assets/upload-zip-parse-B-GZtu3R.png";
const _sfc_main = {};
const _hoisted_1 = { class: "table-of-contents" };
function _sfc_render(_ctx, _cache) {
  const _component_router_link = resolveComponent("router-link");
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[9] || (_cache[9] = createBaseVNode("h1", {
      id: "微信小程序-source-map-的使用及一键解析",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#微信小程序-source-map-的使用及一键解析"
      }, [
        createBaseVNode("span", null, "微信小程序 Source Map 的使用及一键解析")
      ])
    ], -1)),
    createBaseVNode("nav", _hoisted_1, [
      createBaseVNode("ul", null, [
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#背景介绍" }, {
            default: withCtx(() => _cache[0] || (_cache[0] = [
              createTextVNode("背景介绍")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#source-map" }, {
            default: withCtx(() => _cache[1] || (_cache[1] = [
              createTextVNode("Source Map")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#生成-source-map" }, {
                default: withCtx(() => _cache[2] || (_cache[2] = [
                  createTextVNode("生成 Source Map")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#获取-source-map" }, {
                default: withCtx(() => _cache[3] || (_cache[3] = [
                  createTextVNode("获取 Source Map")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#解析-source-map" }, {
                default: withCtx(() => _cache[4] || (_cache[4] = [
                  createTextVNode("解析 Source Map")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#一键解析" }, {
            default: withCtx(() => _cache[5] || (_cache[5] = [
              createTextVNode("一键解析")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#常见问题说明" }, {
                default: withCtx(() => _cache[6] || (_cache[6] = [
                  createTextVNode("常见问题说明")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#总结" }, {
            default: withCtx(() => _cache[7] || (_cache[7] = [
              createTextVNode("总结")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#参考文档" }, {
            default: withCtx(() => _cache[8] || (_cache[8] = [
              createTextVNode("参考文档")
            ])),
            _: 1
          })
        ])
      ])
    ]),
    _cache[10] || (_cache[10] = createStaticVNode('<h2 id="背景介绍" tabindex="-1"><a class="header-anchor" href="#背景介绍"><span>背景介绍</span></a></h2><p>在微信小程序后台的错误日志里或项目自己收集的错误日志里，经常会出现一些如下格式的错误堆栈信息:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Cannot</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> read</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> property</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;video&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> of</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> undefined</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">TypeError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Cannot</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> read</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> property</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;video&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> of</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> undefined</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">at</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">anonymous</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">https</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//usr/app-service.js:8534:329320)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">at</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">https</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//usr/app-service.js:8534:2420)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">at</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B;"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">https</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//usr/app-service.js:8534:1715)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">at</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> https</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//usr/app-service.js:8534:1440</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">at</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">https</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//usr/app-service.js:8534:1211)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">at</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">swiperChangeUpDown</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">https</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//usr/app-service.js:8534:328219)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">at</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">anonymous</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">https</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//usr/app-service.js:8534:327713)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">at</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">https</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//usr/app-service.js:8534:2420)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">at</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B;"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">https</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//usr/app-service.js:8534:1715)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以错误堆栈信息里的第 3 行为例，其显示错误发生在<code>app-service.js</code>文件的<code>8543</code>行<code>329320</code>列，但在我们的微信小程序的产出里并不存在类似的<code>app-service.js</code>文件。</p><p>实际上，在微信开发者工具或 CI 工具上传小程序项目时，会将项目里的<code>app.js</code>、各个页面的<code>js</code>文件等所有的 JS 文件编译并打包成一个 JS 文件（每个分包会单独打包成一个 JS 文件），这个文件就是<code>app-service.js</code>。</p><p>尽管有打包后的 JS 文件的报错位置，但想要定位到微信小程序源码里哪里报错，却依然比较困难。</p><h2 id="source-map" tabindex="-1"><a class="header-anchor" href="#source-map"><span>Source Map</span></a></h2><p>微信小程序为了开发者能够根据打包后的 JS 错误位置定位到源码里的错误位置，提供了 Source Map 支持。在开发者工具里若是开启了“ES6 转 ES5”（或“代码压缩”、“增强编译”），在上传代码时会生成<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/debug.html#source-map" target="_blank" rel="noopener noreferrer">Source Map</a>文件，方便定位错误位置。</p><p>小程序后台获取的 Source Map 压缩包解压后的结构如下：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>├── __APP__</span></span>\n<span class="line"><span>│   └── app-service.map.map</span></span>\n<span class="line"><span>├── __FULL__</span></span>\n<span class="line"><span>│   └── app-service.map.map</span></span>\n<span class="line"><span>├── sub-package-A</span></span>\n<span class="line"><span>│   └── app-service.map.map</span></span>\n<span class="line"><span>├── sub-package-B</span></span>\n<span class="line"><span>│   └── app-service.map.map</span></span>\n<span class="line"><span>└── ...</span></span>\n<span class="line"><span>    └── app-service.map.map</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中：</p><ul><li><code>__APP__/app-service.map.map</code>是小程序主包的 Source Map 文件</li><li><code>__FULL__/app-service.map.map</code>是小程序主包 + 分包合并在一起的 Source Map 文件</li><li>其他的是各个分包单独的 Source Map 文件，比如<code>sub-package-A/app-service.map.map</code>是<code>sub-package-A</code>分包的 Source Map 文件</li></ul><p>获取到 Source Map 文件并按照<a href="https://developers.weixin.qq.com/community/develop/article/doc/0008643aa54ce81d519ad84735b413" target="_blank" rel="noopener noreferrer">官方的 Source Map 使用方法</a>编写代码进行解析后，可以将<code>app-service.js</code>里的错误位置还原到上传之前的小程序代码。</p><p>然而，我第一次获得的小程序源码位置仍然不是我实际开发时的文件位置。对比解析得到的文件名称发现，我们是使用了小程序第三方开发框架<code>uni-app</code>并使用<code>Vue.js</code>来开发微信小程序的，而<code>uni-app</code>在生产环境打包时会将<code>Vue.js</code>开发的源码编译为经过压缩混淆的小程序代码，因此我们通过 Source Map 解析出的源码位置其实是<code>uni-app</code>编译产出的小程序代码的位置，而不是使用<code>Vue.js</code>编写的源码位置。</p><p>幸运的是，微信小程序针对这种“使用外部的编译脚本对源文件进行处理”的情况，也提供了解决方案，只需我们将第三方开发框架的源码在编译为小程序代码时生成的 Source Map 文件放置在小程序代码文件的相同目录下，开发者工具会读取、解析 Source Map 文件，并基于该 Source Map 文件在打包上传时生成最终的 Source Map 文件。</p><p>使用小程序第三方开发框架编译后产出的小程序代码目录：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>├── pages</span></span>\n<span class="line"><span>|   ├── index.js</span></span>\n<span class="line"><span>|   ├── index.json</span></span>\n<span class="line"><span>|   ├── index.wxml</span></span>\n<span class="line"><span>|   ├── index.wxss</span></span>\n<span class="line"><span>|   └── index.js.map</span></span>\n<span class="line"><span>├── app.js</span></span>\n<span class="line"><span>├── app.js.map</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过这样的方式产生的 Source Map 文件，就能将<code>app-service.js</code>里的错误位置映射到第三方开发框架的源码位置上。以下我将简单地描述如何配置项目来生成 Source Map 文件。</p><h3 id="生成-source-map" tabindex="-1"><a class="header-anchor" href="#生成-source-map"><span>生成 Source Map</span></a></h3><p>对于未使用小程序第三方框架而是采用原生的微信小程序语法开发的项目来说，只需要在<code>project.config.json</code>里配置开启“ES6 转 ES5”（或“代码压缩”、“增强编译”），这样在上传体验版时就会生成 Source Map 文件。</p><p><code>project.config.json</code>里相关配置如下：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;description&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;小程序项目配置文件&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;setting&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 以下三个配置，至少开启一项，上传代码时才能生成 Source Map</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;es6&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 是否启用 ES6 转 ES5</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;minified&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 上传代码时是否自动压缩</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;enhance&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 是否打开增强编译</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>针对使用了小程序第三方框架的项目，除了以上的<code>project.config.json</code>配置，还要配置第三方框架在生产环境打包时生成初始的 Source Map 文件。</p><p>以<code>uni-app</code>开发的项目来说，配置 Webpack 在生产环境打包时生成 Source Map 文件，并将该 Source Map 文件放置在与原先的 JS 文件同一目录下。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// vue.config.js</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // ...</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    configureWebpack</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> config</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">NODE_ENV</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;production&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">devtool</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;source-map&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">output</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sourceMapFilename</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;../&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">UNI_PLATFORM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/[name].js.map&#39;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取-source-map" tabindex="-1"><a class="header-anchor" href="#获取-source-map"><span>获取 Source Map</span></a></h3><p>目前有很多种方式获取 Source Map 文件：</p><ul><li>若是通过微信开发者工具上传小程序代码，在上传完成后可以下载 Source Map 压缩包</li><li>若是通过<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/ci.html" target="_blank" rel="noopener noreferrer">CI 工具</a>上传，可以在上传完成后调用<code>ci.getDevSourceMap</code>方法获取 Source Map 压缩包</li><li>此外，针对线上版小程序，可在“<a href="https://mp.weixin.qq.com/" target="_blank" rel="noopener noreferrer">微信小程序后台</a> --&gt; 开发管理 --&gt; 错误日志 --&gt; 错误内容”里下载</li></ul><h3 id="解析-source-map" tabindex="-1"><a class="header-anchor" href="#解析-source-map"><span>解析 Source Map</span></a></h3><p>目前微信小程序官方主要提供了两种解析 Source Map 的方式。</p><p>方式一：自行编写代码进行解析。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> fs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;fs&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SourceMapConsumer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;source-map&#39;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> originalPositionFor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">column</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> sourceMapFilePath</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Source Map 文件在硬盘里的位置&#39;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> sourceMapConsumer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SourceMapConsumer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">JSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">parse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">fs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">readFileSync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">sourceMapFilePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;utf8&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)))</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  sourceMapConsumer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">originalPositionFor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">      line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">      column</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   })</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">originalPositionFor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(出错的行，出错的列)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方式二：下载最新版的开发者工具，使用“菜单-设置-拓展设置-调试器插件”，添加“sourceMap 匹配调试”插件。</p><p><img src="' + _imports_0 + '" alt="添加 Source Map 插件" loading="lazy"><br><img src="' + _imports_1 + '" alt="使用 Source Map 插件" loading="lazy"></p><h2 id="一键解析" tabindex="-1"><a class="header-anchor" href="#一键解析"><span>一键解析</span></a></h2><p>官方提供的两种解析 Source Map 的方式，每次只能解析单个 Source Map 文件，每次解析过程为：</p><ol><li>获取错误堆栈每一行报错信息的文件名称及行列号</li><li>自行判断需要使用主包或是哪个分包的 Source Map 文件</li><li>手动上传选定的 Source Map 文件，输入行列号，进行解析</li></ol><p>这个过程在常规的错误堆栈日志都多达十来行的的情况下（正如文章开头所展示的），解析起来将会极其低效。</p><p>为了解决这个问题，我开发了一键解析 Source Map 的服务，可以一次性将错误堆栈里的所有报错信息全都解析出来。我们只需将整个 Source Map 压缩包上传，输入完整的错误堆栈日志，即可一键解析。</p><p>服务地址：<a href="https://blog.windstone.cc/tools/wechat-mini-program-sourcemap" target="_blank" rel="noopener noreferrer">微信小程序 Source Map 一键解析服务</a></p><figure><img src="' + _imports_2 + '" alt="上传 Source Map 压缩包进行一键解析" tabindex="0" loading="lazy"><figcaption>上传 Source Map 压缩包进行一键解析</figcaption></figure><h3 id="常见问题说明" tabindex="-1"><a class="header-anchor" href="#常见问题说明"><span>常见问题说明</span></a></h3><p>经常会有这样、那样的原因导致错误无法解析到源码上，比如:</p><ul><li>问题一: 解压下载的 Source Map 压缩包，打开其中任意一个 Source Map 文件，文件中的<code>mappings</code>字段里全是分号<code>;</code>。</li></ul><p>这个问题是最普遍的，其原因是在上传小程序项目时，没有开启“ES6 转 ES5”/“代码压缩”/“增强编译”，导致没有生成 Source Map，这也是下载的 Source Map 文件里的<code>mappings</code>字段里全是<code>;</code>的原因。解决方法是，“ES6 转 ES5”/“代码压缩”/“增强编译”这三个选项至少要开启一个，上传代码时才能生成 Source Map。</p><ul><li>问题二：<code>WAServiceMainContext.js</code>、<code>WASubContext.js</code>等文件里的错误无法解析出来。</li></ul><p><code>WAServiceMainContext.js</code>、<code>WASubContext.js</code>等文件都是微信小程序基础库里的文件，无法解析出来是正常的。Source Map 是我们小程序的业务代码在上传时生成的，自然只能解析出业务代码（<code>app-service.js</code>）产生的错误。当然，有时候基础库文件产生的错误，可能也是我们业务代码导致的，我们可以先解析 Source Map 定位到业务代码的错误位置，进而确定是什么原因导致的基础库文件报错。</p><ul><li>问题三：错误日志是未开启 Source Map 功能的线上版本代码产生的，Source Map 压缩包是开启 Source Map 后在开发者工具上传获得的。</li></ul><p>这种情况是错误日志与 Source Map 压缩包不配套导致的。使用解析服务时，若错误日志是从线上获取到的，则一定要使用开启了 Source Map 的线上对应版本的 Source Map 压缩包，小程序版本要完全一致。比如，错误日志是小程序版本 v1.1.1 产生的，则需要使用开启了 Source Map 功能的小程序版本 v1.1.1 对应的 Source Map 压缩包。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>微信小程序 Source Map 的使用对我们追查小程序线上报错起到了极其重要的作用，而 Source Map 一键解析服务则极大地提升了解析效率。目前 Source Map 一键解析服务仍处于逐步完善状态，非常欢迎大家试用。如有更好的优化建议或者遇到使用问题，欢迎在服务页面留言！</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2><ul><li><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/debug.html#Source%20Map" target="_blank" rel="noopener noreferrer">官方文档 - 小程序调试 - Source Map</a></li><li><a href="https://developers.weixin.qq.com/community/develop/article/doc/0008643aa54ce81d519ad84735b413" target="_blank" rel="noopener noreferrer">官方文档 - 微信开发者工具下载的 sourcemaps 怎么用</a></li></ul>', 53)),
    createVNode(_component_global_config)
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
const data = JSON.parse('{"path":"/articles/wechat-mini-program-sourcemap/","title":"微信小程序 Source Map 的使用及一键解析","lang":"en-US","frontmatter":{"description":"微信小程序 Source Map 的使用及一键解析 背景介绍 在微信小程序后台的错误日志里或项目自己收集的错误日志里，经常会出现一些如下格式的错误堆栈信息: 以错误堆栈信息里的第 3 行为例，其显示错误发生在app-service.js文件的8543行329320列，但在我们的微信小程序的产出里并不存在类似的app-service.js文件。 实际上，...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/articles/wechat-mini-program-sourcemap/"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"微信小程序 Source Map 的使用及一键解析"}],["meta",{"property":"og:description","content":"微信小程序 Source Map 的使用及一键解析 背景介绍 在微信小程序后台的错误日志里或项目自己收集的错误日志里，经常会出现一些如下格式的错误堆栈信息: 以错误堆栈信息里的第 3 行为例，其显示错误发生在app-service.js文件的8543行329320列，但在我们的微信小程序的产出里并不存在类似的app-service.js文件。 实际上，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2022-01-25T11:48:29.000Z"}],["meta",{"property":"article:modified_time","content":"2022-01-25T11:48:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"微信小程序 Source Map 的使用及一键解析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-01-25T11:48:29.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"背景介绍","slug":"背景介绍","link":"#背景介绍","children":[]},{"level":2,"title":"Source Map","slug":"source-map","link":"#source-map","children":[{"level":3,"title":"生成 Source Map","slug":"生成-source-map","link":"#生成-source-map","children":[]},{"level":3,"title":"获取 Source Map","slug":"获取-source-map","link":"#获取-source-map","children":[]},{"level":3,"title":"解析 Source Map","slug":"解析-source-map","link":"#解析-source-map","children":[]}]},{"level":2,"title":"一键解析","slug":"一键解析","link":"#一键解析","children":[{"level":3,"title":"常见问题说明","slug":"常见问题说明","link":"#常见问题说明","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1610467589000,"updatedTime":1643111309000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":5}]},"readingTime":{"minutes":8,"words":2400},"filePathRelative":"articles/wechat-mini-program-sourcemap/README.md","localizedDate":"January 13, 2021","autoDesc":true}');
export {
  index_html as comp,
  data
};
