import { r as resolveComponent, c as createElementBlock, d as createBaseVNode, a as createVNode, e as withCtx, b as createStaticVNode, o as openBlock, f as createTextVNode } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
const _hoisted_1 = { class: "table-of-contents" };
function _sfc_render(_ctx, _cache) {
  const _component_router_link = resolveComponent("router-link");
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[109] || (_cache[109] = createBaseVNode("h1", {
      id: "pm2",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#pm2"
      }, [
        createBaseVNode("span", null, "PM2")
      ])
    ], -1)),
    createBaseVNode("nav", _hoisted_1, [
      createBaseVNode("ul", null, [
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#实践功能" }, {
            default: withCtx(() => _cache[0] || (_cache[0] = [
              createTextVNode("实践功能")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#运行不同版本的-node" }, {
                default: withCtx(() => _cache[1] || (_cache[1] = [
                  createTextVNode("运行不同版本的 Node")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#杀掉-pm2-守护进程" }, {
                default: withCtx(() => _cache[2] || (_cache[2] = [
                  createTextVNode("杀掉 PM2 守护进程")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#pm2-崩溃后重新启动所有进程" }, {
                default: withCtx(() => _cache[3] || (_cache[3] = [
                  createTextVNode("PM2 崩溃后重新启动所有进程")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#常用命令" }, {
            default: withCtx(() => _cache[4] || (_cache[4] = [
              createTextVNode("常用命令")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#安装-pm2" }, {
                default: withCtx(() => _cache[5] || (_cache[5] = [
                  createTextVNode("安装 PM2")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#开启-重启进程" }, {
                default: withCtx(() => _cache[6] || (_cache[6] = [
                  createTextVNode("开启/重启进程")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#停止、删除进程" }, {
                default: withCtx(() => _cache[7] || (_cache[7] = [
                  createTextVNode("停止、删除进程")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#显示进程列表" }, {
                default: withCtx(() => _cache[8] || (_cache[8] = [
                  createTextVNode("显示进程列表")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#显示进程详细信息" }, {
                default: withCtx(() => _cache[9] || (_cache[9] = [
                  createTextVNode("显示进程详细信息")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#访问实时日志" }, {
                default: withCtx(() => _cache[10] || (_cache[10] = [
                  createTextVNode("访问实时日志")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#显示环境" }, {
                default: withCtx(() => _cache[11] || (_cache[11] = [
                  createTextVNode("显示环境")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#从-boot-启动-pm2" }, {
                default: withCtx(() => _cache[12] || (_cache[12] = [
                  createTextVNode("从 boot 启动 PM2")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#reset-restart-counters" }, {
                default: withCtx(() => _cache[13] || (_cache[13] = [
                  createTextVNode("Reset Restart Counters")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#监控" }, {
                default: withCtx(() => _cache[14] || (_cache[14] = [
                  createTextVNode("监控")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#dump-all-process-data" }, {
                default: withCtx(() => _cache[15] || (_cache[15] = [
                  createTextVNode("Dump all process data")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#进程管理" }, {
            default: withCtx(() => _cache[16] || (_cache[16] = [
              createTextVNode("进程管理")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#进程列表" }, {
                default: withCtx(() => _cache[17] || (_cache[17] = [
                  createTextVNode("进程列表")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#保存-恢复进程列表" }, {
                default: withCtx(() => _cache[18] || (_cache[18] = [
                  createTextVNode("保存/恢复进程列表")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#管理任何类型的应用" }, {
                default: withCtx(() => _cache[19] || (_cache[19] = [
                  createTextVNode("管理任何类型的应用")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#本地监控" }, {
                default: withCtx(() => _cache[20] || (_cache[20] = [
                  createTextVNode("本地监控")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#生态系统文件" }, {
            default: withCtx(() => _cache[21] || (_cache[21] = [
              createTextVNode("生态系统文件")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#生成默认生态系统文件" }, {
                default: withCtx(() => _cache[22] || (_cache[22] = [
                  createTextVNode("生成默认生态系统文件")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#启动所有应用" }, {
                default: withCtx(() => _cache[23] || (_cache[23] = [
                  createTextVNode("启动所有应用")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#仅启动单个应用" }, {
                default: withCtx(() => _cache[24] || (_cache[24] = [
                  createTextVNode("仅启动单个应用")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#更新生态系统文件" }, {
                default: withCtx(() => _cache[25] || (_cache[25] = [
                  createTextVNode("更新生态系统文件")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#自定义生态系统文件" }, {
                default: withCtx(() => _cache[26] || (_cache[26] = [
                  createTextVNode("自定义生态系统文件")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#环境变量" }, {
                default: withCtx(() => _cache[27] || (_cache[27] = [
                  createTextVNode("环境变量")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#指定应用的端口" }, {
                default: withCtx(() => _cache[28] || (_cache[28] = [
                  createTextVNode("指定应用的端口")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#集群模式-热重载" }, {
            default: withCtx(() => _cache[29] || (_cache[29] = [
              createTextVNode("集群模式 & 热重载")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#无状态应用" }, {
                default: withCtx(() => _cache[30] || (_cache[30] = [
                  createTextVNode("无状态应用")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#无间断式重载" }, {
                default: withCtx(() => _cache[31] || (_cache[31] = [
                  createTextVNode("无间断式重载")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#watch-重启-restart" }, {
            default: withCtx(() => _cache[32] || (_cache[32] = [
              createTextVNode("watch & 重启（restart）")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#重启策略" }, {
            default: withCtx(() => _cache[33] || (_cache[33] = [
              createTextVNode("重启策略")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#指数级的重启时延" }, {
                default: withCtx(() => _cache[34] || (_cache[34] = [
                  createTextVNode("指数级的重启时延")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#固定重启时延" }, {
                default: withCtx(() => _cache[35] || (_cache[35] = [
                  createTextVNode("固定重启时延")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#禁用自动重启" }, {
                default: withCtx(() => _cache[36] || (_cache[36] = [
                  createTextVNode("禁用自动重启")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#日志管理" }, {
            default: withCtx(() => _cache[37] || (_cache[37] = [
              createTextVNode("日志管理")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#访问日志" }, {
                default: withCtx(() => _cache[38] || (_cache[38] = [
                  createTextVNode("访问日志")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#实时日志" }, {
                    default: withCtx(() => _cache[39] || (_cache[39] = [
                      createTextVNode("实时日志")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#日志文件" }, {
                    default: withCtx(() => _cache[40] || (_cache[40] = [
                      createTextVNode("日志文件")
                    ])),
                    _: 1
                  })
                ])
              ])
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#日志文件配置" }, {
                default: withCtx(() => _cache[41] || (_cache[41] = [
                  createTextVNode("日志文件配置")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#分离日志" }, {
                    default: withCtx(() => _cache[42] || (_cache[42] = [
                      createTextVNode("分离日志")
                    ])),
                    _: 1
                  })
                ])
              ])
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#合并日志" }, {
                default: withCtx(() => _cache[43] || (_cache[43] = [
                  createTextVNode("合并日志")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#禁用日志" }, {
                default: withCtx(() => _cache[44] || (_cache[44] = [
                  createTextVNode("禁用日志")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#日志格式" }, {
                default: withCtx(() => _cache[45] || (_cache[45] = [
                  createTextVNode("日志格式")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#json" }, {
                    default: withCtx(() => _cache[46] || (_cache[46] = [
                      createTextVNode("JSON")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#时间戳" }, {
                    default: withCtx(() => _cache[47] || (_cache[47] = [
                      createTextVNode("时间戳")
                    ])),
                    _: 1
                  })
                ])
              ])
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#startup-钩子" }, {
            default: withCtx(() => _cache[48] || (_cache[48] = [
              createTextVNode("startup 钩子")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#安装" }, {
                default: withCtx(() => _cache[49] || (_cache[49] = [
                  createTextVNode("安装")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#保存进程列表" }, {
                default: withCtx(() => _cache[50] || (_cache[50] = [
                  createTextVNode("保存进程列表")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#禁用-startup-系统" }, {
                default: withCtx(() => _cache[51] || (_cache[51] = [
                  createTextVNode("禁用 startup 系统")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#用户授权" }, {
                default: withCtx(() => _cache[52] || (_cache[52] = [
                  createTextVNode("用户授权")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#更新-startup-钩子" }, {
                default: withCtx(() => _cache[53] || (_cache[53] = [
                  createTextVNode("更新 startup 钩子")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#兼容性" }, {
                default: withCtx(() => _cache[54] || (_cache[54] = [
                  createTextVNode("兼容性")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#under-the-hoodlink" }, {
                default: withCtx(() => _cache[55] || (_cache[55] = [
                  createTextVNode("Under the hoodlink")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#入口点" }, {
            default: withCtx(() => _cache[56] || (_cache[56] = [
              createTextVNode("入口点")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#内存阈值-自动重载" }, {
            default: withCtx(() => _cache[57] || (_cache[57] = [
              createTextVNode("内存阈值，自动重载")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#升级-pm2" }, {
            default: withCtx(() => _cache[58] || (_cache[58] = [
              createTextVNode("升级 PM2")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#source-map-支持" }, {
            default: withCtx(() => _cache[59] || (_cache[59] = [
              createTextVNode("Source Map 支持")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#检查异常" }, {
                default: withCtx(() => _cache[60] || (_cache[60] = [
                  createTextVNode("检查异常")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#禁用-source-map" }, {
                default: withCtx(() => _cache[61] || (_cache[61] = [
                  createTextVNode("禁用 Source Map")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#transpilers-转译器" }, {
            default: withCtx(() => _cache[62] || (_cache[62] = [
              createTextVNode("transpilers 转译器")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#以编程方式使用-pm2" }, {
            default: withCtx(() => _cache[63] || (_cache[63] = [
              createTextVNode("以编程方式使用 PM2")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#简单示例" }, {
                default: withCtx(() => _cache[64] || (_cache[64] = [
                  createTextVNode("简单示例")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#编程-api" }, {
                default: withCtx(() => _cache[65] || (_cache[65] = [
                  createTextVNode("编程 API")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-connect" }, {
                    default: withCtx(() => _cache[66] || (_cache[66] = [
                      createTextVNode("pm2.connect")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-disconnect" }, {
                    default: withCtx(() => _cache[67] || (_cache[67] = [
                      createTextVNode("pm2.disconnect()")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-killdaemon-errback" }, {
                    default: withCtx(() => _cache[68] || (_cache[68] = [
                      createTextVNode("pm2.killDaemon(errback)")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-start" }, {
                    default: withCtx(() => _cache[69] || (_cache[69] = [
                      createTextVNode("pm2.start")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-stop-restart-delete-reload" }, {
                    default: withCtx(() => _cache[70] || (_cache[70] = [
                      createTextVNode("pm2.stop/restart/delete/reload")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-describe-process-errback" }, {
                    default: withCtx(() => _cache[71] || (_cache[71] = [
                      createTextVNode("pm2.describe(process,errback)")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-list-errback" }, {
                    default: withCtx(() => _cache[72] || (_cache[72] = [
                      createTextVNode("pm2.list(errback)")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-dump-errback" }, {
                    default: withCtx(() => _cache[73] || (_cache[73] = [
                      createTextVNode("pm2.dump(errback)")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-startup-platform-errback" }, {
                    default: withCtx(() => _cache[74] || (_cache[74] = [
                      createTextVNode("pm2.startup(platform, errback)")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-flush-process-errback" }, {
                    default: withCtx(() => _cache[75] || (_cache[75] = [
                      createTextVNode("pm2.flush(process, errback)")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-reloadlogs-errback" }, {
                    default: withCtx(() => _cache[76] || (_cache[76] = [
                      createTextVNode("pm2.reloadLogs(errback)")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-launchbus-errback" }, {
                    default: withCtx(() => _cache[77] || (_cache[77] = [
                      createTextVNode("pm2.launchBus(errback)")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#pm2-sendsignaltoprocessname-signal-process-errback" }, {
                    default: withCtx(() => _cache[78] || (_cache[78] = [
                      createTextVNode("pm2.sendSignalToProcessName(signal, process, errback)")
                    ])),
                    _: 1
                  })
                ])
              ])
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#使用-ssh-部署" }, {
            default: withCtx(() => _cache[79] || (_cache[79] = [
              createTextVNode("使用 SSH 部署")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#安装-1" }, {
                default: withCtx(() => _cache[80] || (_cache[80] = [
                  createTextVNode("安装")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#ssh-设置" }, {
                    default: withCtx(() => _cache[81] || (_cache[81] = [
                      createTextVNode("SSH 设置")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#配置生态系统文件" }, {
                    default: withCtx(() => _cache[82] || (_cache[82] = [
                      createTextVNode("配置生态系统文件")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#setup" }, {
                    default: withCtx(() => _cache[83] || (_cache[83] = [
                      createTextVNode("Setup")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#deploy" }, {
                    default: withCtx(() => _cache[84] || (_cache[84] = [
                      createTextVNode("Deploy")
                    ])),
                    _: 1
                  })
                ])
              ])
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#部署选项" }, {
                default: withCtx(() => _cache[85] || (_cache[85] = [
                  createTextVNode("部署选项")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#强制部署" }, {
                default: withCtx(() => _cache[86] || (_cache[86] = [
                  createTextVNode("强制部署")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#考虑事项" }, {
                default: withCtx(() => _cache[87] || (_cache[87] = [
                  createTextVNode("考虑事项")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#ssh-克隆错误" }, {
                default: withCtx(() => _cache[88] || (_cache[88] = [
                  createTextVNode("SSH 克隆错误")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#优雅关闭" }, {
            default: withCtx(() => _cache[89] || (_cache[89] = [
              createTextVNode("优雅关闭")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#优雅地关闭" }, {
                default: withCtx(() => _cache[90] || (_cache[90] = [
                  createTextVNode("优雅地关闭")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#超时-kill" }, {
                default: withCtx(() => _cache[91] || (_cache[91] = [
                  createTextVNode("超时 kill")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#优雅地启动" }, {
                default: withCtx(() => _cache[92] || (_cache[92] = [
                  createTextVNode("优雅地启动")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#多个-pm2" }, {
            default: withCtx(() => _cache[93] || (_cache[93] = [
              createTextVNode("多个 PM2")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#开发工具" }, {
            default: withCtx(() => _cache[94] || (_cache[94] = [
              createTextVNode("开发工具")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#监测重启" }, {
                default: withCtx(() => _cache[95] || (_cache[95] = [
                  createTextVNode("监测重启")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#监测选项" }, {
                    default: withCtx(() => _cache[96] || (_cache[96] = [
                      createTextVNode("监测选项")
                    ])),
                    _: 1
                  })
                ]),
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#cli" }, {
                    default: withCtx(() => _cache[97] || (_cache[97] = [
                      createTextVNode("CLI")
                    ])),
                    _: 1
                  })
                ])
              ])
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#基于-http-提供静态文件服务" }, {
                default: withCtx(() => _cache[98] || (_cache[98] = [
                  createTextVNode("基于 HTTP 提供静态文件服务")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#最佳实践-环境变量" }, {
            default: withCtx(() => _cache[99] || (_cache[99] = [
              createTextVNode("最佳实践 - 环境变量")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#cli-方式" }, {
                default: withCtx(() => _cache[100] || (_cache[100] = [
                  createTextVNode("CLI 方式")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#生态系统文件方式" }, {
                default: withCtx(() => _cache[101] || (_cache[101] = [
                  createTextVNode("生态系统文件方式")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#好的实践-node-env-变量" }, {
                default: withCtx(() => _cache[102] || (_cache[102] = [
                  createTextVNode("好的实践：NODE_ENV 变量")
                ])),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#集成-云服务器提供商" }, {
            default: withCtx(() => _cache[103] || (_cache[103] = [
              createTextVNode("集成 - 云服务器提供商")
            ])),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_router_link, { to: "#【思考】node-js-应用线上部署" }, {
            default: withCtx(() => _cache[104] || (_cache[104] = [
              createTextVNode("【思考】Node.js 应用线上部署")
            ])),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#不使用-pm2" }, {
                default: withCtx(() => _cache[105] || (_cache[105] = [
                  createTextVNode("不使用 PM2")
                ])),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_router_link, { to: "#使用-pm2-的-reload" }, {
                default: withCtx(() => _cache[106] || (_cache[106] = [
                  createTextVNode("使用 PM2 的 reload")
                ])),
                _: 1
              }),
              createBaseVNode("ul", null, [
                createBaseVNode("li", null, [
                  createVNode(_component_router_link, { to: "#猜想" }, {
                    default: withCtx(() => _cache[107] || (_cache[107] = [
                      createTextVNode("猜想")
                    ])),
                    _: 1
                  }),
                  createBaseVNode("ul", null, [
                    createBaseVNode("li", null, [
                      createVNode(_component_router_link, { to: "#新旧版本的文件名称相同" }, {
                        default: withCtx(() => _cache[108] || (_cache[108] = [
                          createTextVNode("新旧版本的文件名称相同")
                        ])),
                        _: 1
                      })
                    ])
                  ])
                ])
              ])
            ])
          ])
        ])
      ])
    ]),
    _cache[110] || (_cache[110] = createStaticVNode('<p>Reference: <a href="https://pm2.io/doc/en/runtime/overview/" target="_blank" rel="noopener noreferrer">PM2 英文官网</a></p><h2 id="实践功能" tabindex="-1"><a class="header-anchor" href="#实践功能"><span>实践功能</span></a></h2><h3 id="运行不同版本的-node" tabindex="-1"><a class="header-anchor" href="#运行不同版本的-node"><span>运行不同版本的 Node</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">56000</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./server/app.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mina-admin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --interpreter=/opt/nvm/versions/node/v10.15.3/bin/node</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>添加<code>interpreter</code>参数，其值为 Node 版本所在位置</p><h3 id="杀掉-pm2-守护进程" tabindex="-1"><a class="header-anchor" href="#杀掉-pm2-守护进程"><span>杀掉 PM2 守护进程</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查找到</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aux</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PM2</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出：</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># web_ser+  7591  0.0  0.0 893708 33096 ?        Ssl  Mar23   0:06 PM2 v2.8.0: God Daemon (/home/web_server/.pm3)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># web_ser+ 25226  0.0  0.0 112664   972 pts/2    S+   22:02   0:00 grep --color=auto PM2</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># web_ser+ 43392  0.0  0.0 1211696 46544 ?       Ssl  20:40   0:03 PM2 v2.8.0: God Daemon (/home/web_server/.pm2)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 找到守护进程，kill 掉</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">kill</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -9</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 46544</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pm2-崩溃后重新启动所有进程" tabindex="-1"><a class="header-anchor" href="#pm2-崩溃后重新启动所有进程"><span>PM2 崩溃后重新启动所有进程</span></a></h3><p>PM2 崩溃后会导致原先所有项目进程都消失了，执行<code>pm2 ls</code>也看不到任务进程。</p><p>PM2 提供了启动脚本，可以将进程列表保存，在 PM2 预期/非预期重启之后，能够恢复之前保存的进程列表。详见: <a href="https://pm2.keymetrics.io/docs/usage/startup/" target="_blank" rel="noopener noreferrer">PM2 官网 - Startup Script Generator</a></p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取自动配置的启动脚本</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> startup</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 储存当前进程列表，存储在 ~/.pm2/dump.pm2 文件里</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 恢复之前（通过 pm2 save）保存的进程</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resurrect</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若是想在每次添加/删除进程后自动执行<code>pm2 save</code>，可以打开自动保存功能，详见<a href="https://segmentfault.com/a/1190000022585703" target="_blank" rel="noopener noreferrer">十个PM2中冷门但实用的功能</a></p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pm2:autodump</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h2><h3 id="安装-pm2" tabindex="-1"><a class="header-anchor" href="#安装-pm2"><span>安装 PM2</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pm2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="开启-重启进程" tabindex="-1"><a class="header-anchor" href="#开启-重启进程"><span>开启/重启进程</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 开启新的进程，并添加到进程列表里</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 开启进程，监控文件改变后重启</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --watch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [--ignore-watch </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重启进程，相当于先停止进程再开启进程，即是如下两条命令的合成：</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 1. pm2 stop app</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 2. pm2 start app</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重启并更新环境</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">NODE_ENV</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">production</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --update-env</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动应用，并设置应用的名称</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重启应用，更新应用名称</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;new-name&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="停止、删除进程" tabindex="-1"><a class="header-anchor" href="#停止、删除进程"><span>停止、删除进程</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 停止进程（杀掉进程，但是将其保留在进程列表里）</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 停止进程，并将其从进程列表里删除</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> delete</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="显示进程列表" tabindex="-1"><a class="header-anchor" href="#显示进程列表"><span>显示进程列表</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 显示进程列表</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 简写</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="显示进程详细信息" tabindex="-1"><a class="header-anchor" href="#显示进程详细信息"><span>显示进程详细信息</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="访问实时日志" tabindex="-1"><a class="header-anchor" href="#访问实时日志"><span>访问实时日志</span></a></h3><p>PS: 日志文件位于<code>~/.pm2/logs</code>目录</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 显示所有应用的日志</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 显示 app 应用的日志</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="显示环境" tabindex="-1"><a class="header-anchor" href="#显示环境"><span>显示环境</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 显示进程的环境</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pm_i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从-boot-启动-pm2" tabindex="-1"><a class="header-anchor" href="#从-boot-启动-pm2"><span>从 boot 启动 PM2</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> startup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="reset-restart-counters" tabindex="-1"><a class="header-anchor" href="#reset-restart-counters"><span>Reset Restart Counters</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="监控" tabindex="-1"><a class="header-anchor" href="#监控"><span>监控</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monitor</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="dump-all-process-data" tabindex="-1"><a class="header-anchor" href="#dump-all-process-data"><span>Dump all process data</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prettylist</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># or</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pm_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">app_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="进程管理" tabindex="-1"><a class="header-anchor" href="#进程管理"><span>进程管理</span></a></h2><p>PM2 是运行在后台的守护进程，负责管理你所有运行的进程。我们将学习到如何用 PM2 管理进程，且会发现一个核心的概念：进程列表。</p><h3 id="进程列表" tabindex="-1"><a class="header-anchor" href="#进程列表"><span>进程列表</span></a></h3><p>所有运行的应用都会注册在进程列表。可以用如下命令管理进程列表：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># start and add a process to your list</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># show your list</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># stop and delete a process from the list</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> delete</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当你使用<code>pm2 start app.js</code>命令时，以下操作将被执行：</p><ul><li><code>app</code>应用被注册到 PM2 的进程列表里</li><li><code>app</code>应用在后台启动</li></ul><p>进程列表里的默认名称是不带扩展名的脚本名称，比如通过<code>pm2 start app.js</code>注册的进程，进程名称为<code>app</code>。使用<code>--name</code>或<code>-n</code>选项来修改默认名称。</p><p>一旦注册在进程列表里之后，以后的所有操作都将使用进程名称来完成。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># kill the process but keep it in the process list</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># start the process again</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># both stop and start</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 一次可以指定多个应用</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app3</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 以正则方式一次指定多个应用</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /app/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="保存-恢复进程列表" tabindex="-1"><a class="header-anchor" href="#保存-恢复进程列表"><span>保存/恢复进程列表</span></a></h3><p>你可以保存或恢复你的进程列表，进程列表数据保存在<code>$HOME/.pm2/dump.pm2</code>文件里</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># save your list in hard disk memory</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># resurrect your list previously saved</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resurrect</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以设置一个<code>startup</code>钩子，当机器重启时，自动启动你的进程列表。</p><h3 id="管理任何类型的应用" tabindex="-1"><a class="header-anchor" href="#管理任何类型的应用"><span>管理任何类型的应用</span></a></h3><p>PM2 适用于其他编程语言，对应如下：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;.sh&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;bash&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;.py&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;python&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;.rb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ruby&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;.coffee&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;coffee&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;.php&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;php&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;.pl&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;perl&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;node&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若是没有扩展名，应用将当做二进制文件启动。</p><p>启动<code>python</code>脚本：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>若是你想要指定解释器的路径，可在生态系统文件里指定：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;script&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./script.py&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    interpreter</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/usr/bin/python&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="本地监控" tabindex="-1"><a class="header-anchor" href="#本地监控"><span>本地监控</span></a></h3><p>本地监控工具可以让你观察到 CPU 使用率，内存使用率，循环延迟<code>loop delay</code>，每个进程的请求信息</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可使用 PM2 Plus 在 WEB Dashboard 监控你的应用。</p><h2 id="生态系统文件" tabindex="-1"><a class="header-anchor" href="#生态系统文件"><span>生态系统文件</span></a></h2><p>当部署到多台服务器上或当需要使用多个 CLI 参数时，就需要一个更方便的方式来替换命令行来启动你的应用了。</p><p>生态系统文件的目的就是将应用所需的所有的选项和环境参数聚集在一起。</p><div class="hint-container tip"><p class="hint-container-title">重要提示</p><p>生态系统文件里的<code>apps</code>是个数组，数组里的每个对象，代表一个应用，因此，配置了生态系统文件，相当于配置了多个应用。</p></div><h3 id="生成默认生态系统文件" tabindex="-1"><a class="header-anchor" href="#生成默认生态系统文件"><span>生成默认生态系统文件</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行上面的命令，会生成一个默认的生态系统文件<code>ecosystem.config.js</code>，更多详细的配置可参考<a href="https://pm2.io/doc/en/runtime/reference/ecosystem-file/" target="_blank" rel="noopener noreferrer">Ecosystem File</a></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;app&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./app.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    env</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      NODE_ENV</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;development&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    env_production</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      NODE_ENV</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;production&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动所有应用" tabindex="-1"><a class="header-anchor" href="#启动所有应用"><span>启动所有应用</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行这个命令，你可以将<code>ecosystem.config.js</code>配置文件里<code>apps</code>里配置的所有应用启动并添加的进程列表里。</p><h3 id="仅启动单个应用" tabindex="-1"><a class="header-anchor" href="#仅启动单个应用"><span>仅启动单个应用</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --only</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="更新生态系统文件" tabindex="-1"><a class="header-anchor" href="#更新生态系统文件"><span>更新生态系统文件</span></a></h3><p>（这条为实验得出的结论）</p><p>若是更改了生态系统文件，需要如下命令使得新的生态系统文件生效。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart/reload</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但是这种方式只是在更改了<code>watch</code>、<code>log_date_format</code>之后可以生效（只实验了这两个选项）。</p><p>但是当修改<code>instances</code>后，无法通过这种方式生效，此时，只能通过<code>pm2 delete app</code>之后，再<code>pm2 start ecosystem.config.js</code>才能生效。</p><h3 id="自定义生态系统文件" tabindex="-1"><a class="header-anchor" href="#自定义生态系统文件"><span>自定义生态系统文件</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /path/to/my.ecosystem.config.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>你还可以创建自定义配置文件，位于其他目录，使用其他文件名称，最后如上调用即可。</p><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h3><p>配置文件里可以声明多个环境，每个环境里可以声明多个环境变量。环境名称必须是<code>env_&lt;enviroment-name&gt;</code>格式。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;app&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./app.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    env</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      NODE_ENV</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;production&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    env_development</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      NODE_ENV</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;development&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如，如上配置里，<code>app</code>进程可以以两种环境来启动，<code>development</code>环境和<code>production</code>环境。</p><p>若是想要以特定的环境来启动<code>app</code>应用，需要添加<code>--env</code>选项。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 不添加 --env 选项，默认使用 env 环境</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用 developent 环境</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> developent</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，一旦将进程添加到进程列表，进程的环境就不可改变了，即使重启应用。这种行为用以确保应用重启前后的一致性。</p><p>要是想强制更新环境，就必须使用<code>--update-env</code>选项：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 更新环境</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --update-env</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 切换环境</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> production</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --update-env</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="指定应用的端口" tabindex="-1"><a class="header-anchor" href="#指定应用的端口"><span>指定应用的端口</span></a></h3><p>PM2 的文档里没提到如何指定应用的端口，这里提供两种方式，都是在生态系统文件里配置的。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // apps 数组里的每一项，代表一个应用</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;koa-nuxt&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;server/index.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 方式一: 这种方式在生态系统文件里没有这个选项，可能是以前的版本遗留的功能</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      port</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8888</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      env</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 方式二：利用环境变量来配置，之后在应用里通过 process.env.PORT 获取</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        PORT</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8888</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="集群模式-热重载" tabindex="-1"><a class="header-anchor" href="#集群模式-热重载"><span>集群模式 &amp; 热重载</span></a></h2><p>PM2 内置的负载均衡器为网络类型的 Node.js 应用提供了基于所有可用的 CPU 之上的可伸缩功能，而无需任何代码上的修改。</p><p>若是要使用<code>cluster</code>模式开启进程，仅需传入<code>-i &lt;number-instances&gt;</code>选项，<code>&lt;number-instances&gt;</code>是需要使用的实例数。</p><p><code>&lt;number-instances&gt;</code>可以是：</p><ul><li>数字，为应用指定确定数量的实例</li><li>字符串<code>max</code>，为应用指定尽可能多的实例（根据可用 CPU 数量）</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 实例数为 4</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 自动检测可用的 CPU 的数量，并使用尽可能多的进程</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> max</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当<code>&lt;number-instances&gt;</code>传入数字时，还可以传入负数，若机器是 4 核，<code>pm2 start -i -1</code>将使用 3 个实例</p></div><h3 id="无状态应用" tabindex="-1"><a class="header-anchor" href="#无状态应用"><span>无状态应用</span></a></h3><p>若以<code>cluster</code>模式使用负载均衡器，需要确保应用没有内部状态。通常，内部状态是一些存储在进程里的本地数据，比如<code>WebSocket</code>连接的数组，或本地会话内容等。可使用 Redis 或其他一些数据库来替代这些内部状态数据来共享进程间的状态。</p><h3 id="无间断式重载" tabindex="-1"><a class="header-anchor" href="#无间断式重载"><span>无间断式重载</span></a></h3><p>若是使用<code>restart</code>命令，PM2 会先删掉进程再重启进程，这会在非常短暂的时间内导致服务不可用。</p><p>而若是使用<code>reload</code>命令，PM2 会一个接一个地重启所有进程，总是保持至少一个进程是在运行的。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重载 app 应用</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reload</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重载配置文件里的所有应用</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reload</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重载配置文件里的单个应用</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reload</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --only</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若是 PM2 的重载系统没能够重载你的应用，超时后将降级为<code>restart</code>。</p><h2 id="watch-重启-restart" tabindex="-1"><a class="header-anchor" href="#watch-重启-restart"><span>watch &amp; 重启（restart）</span></a></h2><p>当前目录或子目录下的文件改变时，PM2 可以自动重启（<code>restart</code>）应用。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --watch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>若是启用<code>--watch</code>选项，停止应用并不会停止<code>watch</code></p><ul><li><code>pm2 stop 0</code>将无法停止<code>watch</code></li><li><code>pm2 stop 0 --watch</code>可以停止<code>watch</code></li></ul><p>PS: 上面指令的<code>0</code>是应用 ID，因为启动应用时只有没设置<code>-i</code>选项，因此该应用只有一个实例，<code>0</code>即代表该实例。</p><p>执行<code>restart</code>命令并带有<code>--watch</code>选项，将切换检测，即原先<code>watch</code>开启将变为不开启，原先<code>watch</code>不开启将变为开启。</p><p>若是想<code>watch</code>特定的路径，则需使用配置文件。<code>watch</code>字段的取值可以是路径字符串，或者是路径字符串的数组，默认为<code>true</code>。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;app.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    watch</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;server&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;client&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Delay between restart</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    watch_delay</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    ignore_watch </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;node_modules&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;client/img&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    watch_options</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;followSymlinks&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>watch_options</code>是一对象，将替换传给<code>chokidar</code>的<code>options</code>。详情请查看<a href="https://github.com/paulmillr/chokidar#api" target="_blank" rel="noopener noreferrer"><code>chokidar</code>文档</a></p><p>PM2 传给<code>chokidar</code>的默认<code>options</code>是:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> watch_options</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  persistent    </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  ignoreInitial </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重启策略" tabindex="-1"><a class="header-anchor" href="#重启策略"><span>重启策略</span></a></h2><h3 id="指数级的重启时延" tabindex="-1"><a class="header-anchor" href="#指数级的重启时延"><span>指数级的重启时延</span></a></h3><p>PS: 仅在 PM2 &gt;= 3.2 可用</p><p>PM2 运行时实现了新的重启模式，可以使你的应用以一种更好的方式重启。当出现异常时（比如数据库关闭了），<code>exponential backoff restart</code>会慢慢增加重启的时间间隔，以减少数据或外部服务的压力，而不是像原先那样疯狂地重启你的应用。通过以下方式使用<code>exponential backoff restart</code>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># CLI 方式</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --exp-backoff-restart-delay=100</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 生态系统文件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;app.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  exp_backoff_restart_delay</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若配置了<code>--exp-backoff-restart-delay</code>选项，当应用出现崩溃时，你将可以见到新的应用在等待重启。</p><p>通过执行<code>pm2 logs</code>你可以见到重启时延是慢慢增加的：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PM2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">App</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [throw:0] will restart in 100ms</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PM2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">App</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [throw:0] exited with code [1] via signal [SIGINT]</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PM2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">App</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [throw:0] will restart in 150ms</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PM2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">App</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [throw:0] exited with code [1] via signal [SIGINT]</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PM2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">App</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [throw:0] will restart in 225ms</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如你所见，每次重启之间的时延都按指数级的增加，直到达到 15000ms 的最大时延。</p><p>当应用再度回到稳定状态时（正常运行且超过 30s 没有重启过），重启时延将自动重置为 0ms。</p><h3 id="固定重启时延" tabindex="-1"><a class="header-anchor" href="#固定重启时延"><span>固定重启时延</span></a></h3><p>PS: PM2 &gt;= 0.9 时，可用</p><p>你还可以使用<code>restart_delay</code>选项来设置固定的重启时延：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --restart-delay=3000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 生态系统文件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;app.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  restart_delay</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3000</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="禁用自动重启" tabindex="-1"><a class="header-anchor" href="#禁用自动重启"><span>禁用自动重启</span></a></h3><p>有时候，我们想仅执行脚本一次，且不想进程管理重启我们的脚本。</p><p>Simply running these scripts from bash would terminate the script in case the ssh-session is terminated and the script should not get restarted when it completes execution.</p><p>PM2 is perfect for such cases, providing robust monitoring and logging</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --no-autorestart</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="日志管理" tabindex="-1"><a class="header-anchor" href="#日志管理"><span>日志管理</span></a></h2><p>日志是实时可用的，并且存储到了硬盘里。你可以定制日志的格式以及日志文件创建的方式。</p><h3 id="访问日志" tabindex="-1"><a class="header-anchor" href="#访问日志"><span>访问日志</span></a></h3><h4 id="实时日志" tabindex="-1"><a class="header-anchor" href="#实时日志"><span>实时日志</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 所有应用的日志</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 仅 app 应用的日志</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="日志文件" tabindex="-1"><a class="header-anchor" href="#日志文件"><span>日志文件</span></a></h4><p>所有的日志默认存入<code>$HOME/.pm2/logs</code>。你可以使用<code>pm2 flush</code>清空所有应用日志。</p><h3 id="日志文件配置" tabindex="-1"><a class="header-anchor" href="#日志文件配置"><span>日志文件配置</span></a></h3><p>你可以为日志文件指定自定义的位置。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;app&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;app.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // output is only standard output (console.log)</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    output</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;./out.log&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // error is only error output (console.error)</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    error</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;./error.log&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // log combines output and error, disabled by default</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    log</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;./combined.outerr.log&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="分离日志" tabindex="-1"><a class="header-anchor" href="#分离日志"><span>分离日志</span></a></h4><p>若是你想将日志分离到多个文件而不是一个总的大的文件里，你可以使用<code>logrotate</code>。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pm2-logrotate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看<a href="https://github.com/keymetrics/pm2-logrotate" target="_blank" rel="noopener noreferrer">github - pm2-logrotate</a>学习如何配置。</p><h3 id="合并日志" tabindex="-1"><a class="header-anchor" href="#合并日志"><span>合并日志</span></a></h3><p><code>cluster</code>模式下，每一个实例都有其自己的日志文件。你可以使用合并选项将所有的日志聚集在单个文件里。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;app&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;app.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    output</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;./out.log&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    error</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;./error.log&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    log</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;./combined.outerr.log&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    merge_logs</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PS: 日志仍然会按类型分离到<code>output</code>/<code>error</code>/<code>log</code></p><h3 id="禁用日志" tabindex="-1"><a class="header-anchor" href="#禁用日志"><span>禁用日志</span></a></h3><p>你可以将<code>output</code>/<code>error</code>设为<code>/dev/null</code>来禁止日志。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;app&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;app.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    output</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/dev/null&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    error</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/dev/null&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="日志格式" tabindex="-1"><a class="header-anchor" href="#日志格式"><span>日志格式</span></a></h3><h4 id="json" tabindex="-1"><a class="header-anchor" href="#json"><span>JSON</span></a></h4><p>你可以以 JSON 格式输出日志，以输出<code>Hello World!</code>为例，最终输出到文件里的内容为：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;message&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello World!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;timestamp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2017-02-06T14:51:38.896Z&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;out&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;process_id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;app_name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;app&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要在生态系统文件里添加如下配置：<code>log_type: &#39;json&#39;</code></p><h4 id="时间戳" tabindex="-1"><a class="header-anchor" href="#时间戳"><span>时间戳</span></a></h4><p>你还可以在输出日志时仅添加时间戳，以输出<code>Hello World!</code>为例，最终输出到文件里的内容为：</p><p><code>12-02-2018: Hello World!</code></p><p>需要在生态系统文件里添加如下配置：<code>log_date_format: &#39;DD-MM-YYYY&#39;</code></p><p>时间戳的格式必须遵循<a href="https://momentjs.com/docs/#/parsing/string-format/" target="_blank" rel="noopener noreferrer">moment.js</a>的格式。</p><h2 id="startup-钩子" tabindex="-1"><a class="header-anchor" href="#startup-钩子"><span>startup 钩子</span></a></h2><p><code>startup</code>钩子的目的是保存你的进程列表，并在机器重启的时候恢复，即使这种重启不是期望的（比如说崩溃导致的重启）。</p><p>每一种操作系统都有指定的工具去处理<code>startup</code>钩子：PM2 提供了一种简单的方式来生成并配置它。</p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><p>执行以下命令，来检测你机器上可用的初始化系统，并生成一个配置文件。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> startup</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[PM2] Init System found: launchd</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[PM2] To setup the Startup Script, copy/paste the following command:</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PATH=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:/Users/wind-stone/.nvm/versions/node/v11.10.0/bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/wind-stone/.nvm/versions/node/v11.10.0/lib/node_modules/pm2/bin/pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> startup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> launchd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wind-stone</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --hp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/wind-stone</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复制并粘贴命令行里的输出，来设置你的<code>startup</code>钩子。</p><div class="hint-container warning"><p class="hint-container-title">警告</p><p>若是使用 NVM，升级 Node.js 会导致<code>pm2</code>的路径改变，你需要重新执行<code>startup</code>命令。</p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>你可以通过<code>--service-name &lt;name&gt;</code>选项，自定义<code>startup</code>脚本的服务名称。详见<a href="https://github.com/Unitech/pm2/pull/3213" target="_blank" rel="noopener noreferrer">#3213</a></p></div><h3 id="保存进程列表" tabindex="-1"><a class="header-anchor" href="#保存进程列表"><span>保存进程列表</span></a></h3><p>若是你之前保存过进程列表，<code>startup</code>钩子会自动加载进程列表。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 保存进程列表</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">警告</p><p>若是你删除了所有的进程，之后重启系统（或使用<code>pm2 update</code>），则系统将恢复你所有的进程（之前存储在<code>dump</code>文件里），这是为了防止<code>empty dump file</code>的 BUG。</p></div><p>若是你想创建空的<code>dump</code>文件，你应该执行：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cleartdump</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="禁用-startup-系统" tabindex="-1"><a class="header-anchor" href="#禁用-startup-系统"><span>禁用 startup 系统</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unstartup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="用户授权" tabindex="-1"><a class="header-anchor" href="#用户授权"><span>用户授权</span></a></h3><p>若是你想要<code>startup</code>钩子在其他用户下执行，使用<code>-u &lt;username&gt;</code>选项和<code>--hp &lt;user_home&gt;</code>选项：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> startup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ubuntu</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> www</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --hp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/ubuntu</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="更新-startup-钩子" tabindex="-1"><a class="header-anchor" href="#更新-startup-钩子"><span>更新 startup 钩子</span></a></h3><p>执行以下命令来升级<code>startup</code>钩子：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unstartup</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> startup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="兼容性" tabindex="-1"><a class="header-anchor" href="#兼容性"><span>兼容性</span></a></h3><p>支持的初始化系统有：</p><p><code>systemd</code>: Ubuntu &gt;= 16, CentOS &gt;= 7, Arch, Debian &gt;= 7<br><code>upstart</code>: Ubuntu &lt;= 14<br><code>launchd</code>: Darwin, MacOSx<br><code>openrc</code>: Gentoo Linux, Arch Linux<br><code>rcd</code>: FreeBSD<br><code>systemv</code>: Centos 6, Amazon Linux</p><p>你可以指定你使用的平台：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [startup | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unstartup]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [platform]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>平台可以是下面这些中的一种：</p><ul><li><code>ubuntu</code></li><li><code>ubuntu14</code></li><li><code>ubuntu12</code></li><li><code>centos</code></li><li><code>centos6</code></li><li><code>arch</code></li><li><code>oracle</code></li><li><code>amazon</code></li><li><code>macos</code></li><li><code>darwin</code></li><li><code>freebsd</code></li><li><code>systemd</code></li><li><code>systemv</code></li><li><code>upstart</code></li><li><code>launchd</code></li><li><code>rcd</code></li><li><code>openrc</code></li></ul><h3 id="under-the-hoodlink" tabindex="-1"><a class="header-anchor" href="#under-the-hoodlink"><span>Under the hoodlink</span></a></h3><ul><li><code>ubuntu</code> use <code>updaterc.d</code> and the script <code>lib/scripts/pm2-init.sh</code></li><li><code>centos</code>/<code>redhat</code> use <code>chkconfig</code> and the script <code>lib/scripts/pm2-init-centos.sh</code></li><li><code>gentoo</code> use <code>rc-update</code> and the script <code>lib/scripts/pm2</code></li><li><code>systemd</code> use <code>systemctl</code> and the script <code>lib/scripts/pm2.service</code></li><li><code>darwin</code> use <code>launchd</code> to load a specific <code>plist</code> to resurrect processes after reboot.</li></ul><h2 id="入口点" tabindex="-1"><a class="header-anchor" href="#入口点"><span>入口点</span></a></h2><h2 id="内存阈值-自动重载" tabindex="-1"><a class="header-anchor" href="#内存阈值-自动重载"><span>内存阈值，自动重载</span></a></h2><p>PM2 允许在内存到达指定的阈值后，重载<code>reload</code>应用（若不是<code>cluster</code>模式，则自动降级为重启<code>restart</code>）。</p><p>需要注意的是，PM2 内部负责检查内存的<code>worker</code>每 30s 重启一次，因此可能在应用达到内存阈值之后，还需要等一会儿才会自动重载应用。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 通过 CLI 设置最大内存阈值</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --max-memory-restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 300M</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 生态系统文件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;api&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;api.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    max_memory_restart</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;300M&#39;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PS: 单位可以是 K(ilobyte), M(egabyte), G(igabyte).</p><h2 id="升级-pm2" tabindex="-1"><a class="header-anchor" href="#升级-pm2"><span>升级 PM2</span></a></h2><p>升级 PM2 是相当简单的操作。升级<code>minor</code>/<code>patch</code>版本（即升级<code>x.y.z</code>中的<code>y</code>或<code>z</code>版本）不需要破坏任何环境。你只需：</p><ol><li>安装最新版的 PM2，<code>npm install pm2@latest -g</code></li><li>保存当前进程列表，杀掉以前的 PM2 守护进程，恢复进程列表，这几步仅需执行<code>pm2 update</code></li></ol><h2 id="source-map-支持" tabindex="-1"><a class="header-anchor" href="#source-map-支持"><span>Source Map 支持</span></a></h2><p>若是你使用<code>BabelJS</code>/<code>Typescript</code>，或其他 Javascript 超集语言，你可能已经发现：当发生异常时，错误堆栈追踪信息毫无用处。若是想要获得有用的信息，需要生成 Source Map 文件。</p><p>一旦 Source Map 文件生成之后，PM2 将自动发现并帮助你检查错误。若是你启动的应用（比如<code>app.js</code>）有与之对应的 Map 文件（比如<code>app.js.map</code>），PM2 将自动检查到 JS Source Map 文件。</p><h3 id="检查异常" tabindex="-1"><a class="header-anchor" href="#检查异常"><span>检查异常</span></a></h3><p>异常会被记录到应用的错误日志文件里，要想检查日志去发现异常，只需执行<code>pm2 logs app</code>。或者使用 PM2 Plus，当异常发生时获取邮件通知和异常分析。</p><h3 id="禁用-source-map" tabindex="-1"><a class="header-anchor" href="#禁用-source-map"><span>禁用 Source Map</span></a></h3><p>若是你不想要 PM2 去自动支持 JS Source Map，你可以使用<code>--disable-source-map</code>选项。（通过命令行或生态系统文件都可以）</p><h2 id="transpilers-转译器" tabindex="-1"><a class="header-anchor" href="#transpilers-转译器"><span>transpilers 转译器</span></a></h2><h2 id="以编程方式使用-pm2" tabindex="-1"><a class="header-anchor" href="#以编程方式使用-pm2"><span>以编程方式使用 PM2</span></a></h2><p>PM2 可以以编程方式使用，这意味着你可以将进程管理直接内嵌在你的代码里，创建进程，即使主脚本退出了，这些进程仍然存活。</p><h3 id="简单示例" tabindex="-1"><a class="header-anchor" href="#简单示例"><span>简单示例</span></a></h3><p>如下示例将展示，如何启动<code>app.js</code>，并传入一些配置属性。传入<code>pm2.start</code>方法的参数与在生态系统文件里声明的完全一样。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pm2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --save</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> pm2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;pm2&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">pm2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  pm2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;app.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }, (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">apps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    pm2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">disconnect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">throw</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  })</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">警告</p><p>若是你的脚本不自行退出，确保你在代码里手动调用了<code>pm2.disconnect()</code>。</p></div><h3 id="编程-api" tabindex="-1"><a class="header-anchor" href="#编程-api"><span>编程 API</span></a></h3><h4 id="pm2-connect" tabindex="-1"><a class="header-anchor" href="#pm2-connect"><span>pm2.connect</span></a></h4><p>-<code>pm2.connect(errback)</code>或<code>pm2.connect(noDaemonMode, errback)</code><br> - <code>noDaemonMode</code>: 默认为<code>true</code>。若是第一个参数传<code>true</code>，PM2 将不以守护进程的方式运行，在相关联的脚本退出后，PM2 也会结束。若是 PM2 已经在运行，你的脚本将链接到已存在的守护进程，但是一旦你的脚本进程退出，PM2 也会结束。<br> - <code>errback(error)</code>: 回调函数，完成创建 PM2 守护进程/连接到已有的 PM2 守护进程后执行</p><p>该命令要不连接到一个正在运行的 PM2 守护进程，要不创建一个新的 PM2 守护进程。一旦创建了，PM2 进程将持续运行，即使主脚本退出了。</p><h4 id="pm2-disconnect" tabindex="-1"><a class="header-anchor" href="#pm2-disconnect"><span>pm2.disconnect()</span></a></h4><p>断开与 PM2 守护进程的连接。</p><h4 id="pm2-killdaemon-errback" tabindex="-1"><a class="header-anchor" href="#pm2-killdaemon-errback"><span>pm2.killDaemon(errback)</span></a></h4><p>杀掉 PM2 守护进程（与<code>pm2 kill</code>相同）。需要注意：</p><ul><li>当 PM2 守护进程被杀掉时，它所有的进程都将被杀掉</li><li>即使在你杀掉守护进程之后，你仍然必须明确地与守护进程断开连接</li></ul><h4 id="pm2-start" tabindex="-1"><a class="header-anchor" href="#pm2-start"><span>pm2.start</span></a></h4><p><code>pm2.start</code>的调用方式有：</p><ul><li><code>pm2.start(options, errback)</code></li><li><code>pm2.start(jsonConfigFile, errback)</code></li><li><code>pm2.start(script, errback)</code></li><li><code>pm2.start(script, options, errback)</code></li><li><code>pm2.start(script, jsonConfigFile, errback)</code></li></ul><p>函数的参数说明如下：</p><ul><li><code>script</code>: 要运行脚本的路径</li><li><code>options</code>: 配置选项对象（官网没给出有哪些选项，囧..）</li><li><code>jsonConfigFile</code>: JSON 文件的路径，文件里的配置选项与<code>options</code>参数一样</li><li><code>errback(err,proc)</code>: 回调函数，<code>script</code>脚本开启之后调用，<code>proc</code>参数是<a href="https://github.com/soyuka/pm2-notify#templating" target="_blank" rel="noopener noreferrer">PM2 进程对象</a></li></ul><h4 id="pm2-stop-restart-delete-reload" tabindex="-1"><a class="header-anchor" href="#pm2-stop-restart-delete-reload"><span>pm2.stop/restart/delete/reload</span></a></h4><ul><li><code>pm2.stop(process, errback)</code></li><li><code>pm2.restart(process, errback)</code></li><li><code>pm2.delete(process, errback)</code></li><li><code>pm2.reload(process, errback)</code></li></ul><p>函数的参数说明如下：</p><ul><li><code>process</code>: 要操作的进程，其值可以是如下几种 <ul><li><code>pm2.start</code>的<code>options</code>里的<code>name</code></li><li>进程 ID</li><li><code>&quot;all&quot;</code>，表示所有的进程都应该重启</li></ul></li><li><code>errback(err, proc)</code></li></ul><h4 id="pm2-describe-process-errback" tabindex="-1"><a class="header-anchor" href="#pm2-describe-process-errback"><span>pm2.describe(process,errback)</span></a></h4><ul><li><code>errback(err, processDescription)</code></li><li><code>processDescription</code>: 进程信息对象，包含了属性如下: <ul><li><code>name</code>: 初始<code>start</code>命令里给定的名称</li><li><code>pid</code>: 进程的<code>pid</code></li><li><code>pm_id</code>: PM2 守护进程的<code>pid</code></li><li><code>monit</code>: 一个对象，包含： <ul><li><code>memory</code>: 进程正在使用的内存数量</li><li><code>cpu</code>: 此刻进程使用的 CPU 的百分比</li></ul></li><li><code>pm2_env</code>: 进程的环境里的路径变量列表，包含： <ul><li><code>pm_cwd</code>: 进程的工作目录</li><li><code>pm_out_log_path</code>: <code>stdout</code>日志文件路径</li><li><code>pm_err_log_path</code>: <code>stderr</code>日志文件路径</li><li><code>exec_interpreter</code>: 使用的解释器</li><li><code>pm_uptime</code>: 进程的正常运行时间</li><li><code>unstable_restarts</code>: 进程至今重启的次数</li><li><code>restart_time</code></li><li><code>status</code>: <code>&quot;online&quot;</code>/<code>&quot;stopping&quot;</code>/<code>&quot;stopped&quot;</code>/<code>&quot;launching&quot;</code>/<code>&quot;errored&quot;</code>/<code>&quot;one-launch-status&quot;</code></li><li><code>instances</code>: 运行的实例数</li><li><code>pm_exec_path</code>: 进程里运行的脚本的路径</li></ul></li></ul></li></ul><h4 id="pm2-list-errback" tabindex="-1"><a class="header-anchor" href="#pm2-list-errback"><span>pm2.list(errback)</span></a></h4><ul><li><code>errback(err, processDescriptionList)</code>: <code>processDescriptionList</code>参数是与<code>pm2.describe</code>里的<code>processDescription</code>对象的数组</li></ul><h4 id="pm2-dump-errback" tabindex="-1"><a class="header-anchor" href="#pm2-dump-errback"><span>pm2.dump(errback)</span></a></h4><ul><li><code>errback(err, result)</code></li></ul><h4 id="pm2-startup-platform-errback" tabindex="-1"><a class="header-anchor" href="#pm2-startup-platform-errback"><span>pm2.startup(platform, errback)</span></a></h4><ul><li><code>errback(err, result)</code></li></ul><h4 id="pm2-flush-process-errback" tabindex="-1"><a class="header-anchor" href="#pm2-flush-process-errback"><span>pm2.flush(process, errback)</span></a></h4><ul><li><code>errback(err, result)</code></li></ul><h4 id="pm2-reloadlogs-errback" tabindex="-1"><a class="header-anchor" href="#pm2-reloadlogs-errback"><span>pm2.reloadLogs(errback)</span></a></h4><p>Rotates the log files. The new log file will have a higher number in it (默认的格式是<code>${process.name}-${out|err}-${number}.log</code>).</p><ul><li><code>errback(err, result)</code></li></ul><h4 id="pm2-launchbus-errback" tabindex="-1"><a class="header-anchor" href="#pm2-launchbus-errback"><span>pm2.launchBus(errback)</span></a></h4><p>Opens a message bus.</p><ul><li><code>errback(err, bus)</code>: The bus will be an <a href="https://github.com/tj/axon#pubemitter--subemitter" target="_blank" rel="noopener noreferrer">Axon Sub Emitter</a> object used to listen to and send events.</li></ul><h4 id="pm2-sendsignaltoprocessname-signal-process-errback" tabindex="-1"><a class="header-anchor" href="#pm2-sendsignaltoprocessname-signal-process-errback"><span>pm2.sendSignalToProcessName(signal, process, errback)</span></a></h4><ul><li><code>errback(err, result)</code></li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// pm2-call.js:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">pm2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  pm2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sendDataToProcessId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    type</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;process:msg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    data</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      some</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      hello</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    id</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    topic</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;some topic&#39;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }, (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  })</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">pm2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">launchBus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">bus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  bus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;process:msg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">packet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    packet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">success</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">should</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">eql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    packet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pm_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">should</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">eql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">proc1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pm2_env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pm_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    done</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  })</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// pm2-app.js:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;message&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">packet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    type</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;process:msg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    data</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     success</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> })</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用-ssh-部署" tabindex="-1"><a class="header-anchor" href="#使用-ssh-部署"><span>使用 SSH 部署</span></a></h2><p>在许多部署的工作流里，常规的步骤包括使用 SSH 连接到多个服务器，<code>git pull</code>最新的版本，之后重载应用。</p><p>PM2 部署工具的目的就是自动完成这些任务。</p><p>你仅需设置（数组形式的）远程主机、<code>pre-deploy</code>/<code>post-deploy</code>命令行操作，就可以了。</p><h3 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1"><span>安装</span></a></h3><h4 id="ssh-设置" tabindex="-1"><a class="header-anchor" href="#ssh-设置"><span>SSH 设置</span></a></h4><p>确保在你的本地机器上有公钥：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 生成 SSH 公钥/私钥 对</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-keygen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rsa</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将公钥复制到（要部署的）服务器上，该命令详细内容请见：https://www.ssh.com/ssh/copy-id</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-copy-id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node@myserver.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置生态系统文件" tabindex="-1"><a class="header-anchor" href="#配置生态系统文件"><span>配置生态系统文件</span></a></h4><p>你首先要做的就是在生态系统文件里配置所有必须的信息：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;app&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;app.js&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  deploy</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // production 是环境名称</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    production</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // （本地的）SSH 公钥的路径，默认是 $HOME/.ssh</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      key</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;~/.ssh/google_compute_engine&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // SSH user</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      user</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;cxl_windstone&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 要部署到的服务器列表</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      host</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;35.220.249.163&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 要部署到的服务器的路径，注意：请保持该文件夹里无文件，PM2 部署时会填充文件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      path</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/home/cxl_windstone/node-projects/koa-nuxt&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // SSH options with no command-line flag, see &#39;man ssh&#39;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // can be either a single string or an array of strings</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      ssh_options</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;StrictHostKeyChecking=no&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // git 仓库信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // git 远程仓库名称/分支</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      ref</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;origin/master&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // git 远程仓库地址</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      repo</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;git@github.com:wind-stone/koa-nuxt.git&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 命令或脚本路径，将在本地机器上执行</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;pre-setup&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;echo  pre-setup 1111111111&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 命令或脚本路径，将在本地机器上执行，比较将配置放在 shared 目录等</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;post-setup&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;echo post-setup 22222222222&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // pre-deploy action</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;pre-deploy-local&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;echo pre-deploy-local 333333333&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // post-deploy action，将在服务器上执行</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &#39;post-deploy&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;npm install&#39;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="setup" tabindex="-1"><a class="header-anchor" href="#setup"><span>Setup</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> production</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> setup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行以上命令，完成首次部署，并将文件填入远程服务器路径文件夹下。</p><p>执行此命令后，服务器上的<code>koa-nuxt</code>文件夹下会存在三个文件夹：</p><ul><li><code>source</code>: 项目的源代码，从远程仓库拉取的</li><li><code>current</code>: 指向<code>source</code>目录，貌似目前没什么用</li><li><code>shared</code><ul><li><code>pids</code></li><li><code>logs</code></li></ul></li></ul><p>详情请见：</p><ul><li><a href="https://stackoverflow.com/questions/49068667/pm2-deploy-folder-structure-how-to-use-configure" target="_blank" rel="noopener noreferrer">PM2 deploy folder structure - how to use / configure</a></li><li></li></ul><h4 id="deploy" tabindex="-1"><a class="header-anchor" href="#deploy"><span>Deploy</span></a></h4><p>这里是一些实用的命令：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 1. Setup deployment at remote location</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> production</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> setup</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 2. 部署</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> production</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Update remote version</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> production</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Revert to -1 deployment</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> production</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> revert</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># execute a command on remote servers</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> production</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;pm2 reload all&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="部署选项" tabindex="-1"><a class="header-anchor" href="#部署选项"><span>部署选项</span></a></h3><p>执行<code>pm2 deploy help</code>显示部署帮助。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">configuration_fil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">environmen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">t&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">comman</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Commands:</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    setup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> setup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commands</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">               update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> latest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> release</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    revert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [n]           revert to [n]th last deployment or 1</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    curr[ent]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            output</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> current</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> release</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    prev[ious]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           output</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> previous</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> release</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    exec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt;       </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">execute</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> given</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    list</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 list</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> previous</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commits</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [ref]                </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ref], the </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ref&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> setting, or latest tag</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="强制部署" tabindex="-1"><a class="header-anchor" href="#强制部署"><span>强制部署</span></a></h3><p>你可能会遇到以下信息：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">--&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Deploying</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> to</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> dev</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> environment</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">--&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> host</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 192.168</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.1.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">XX</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  push</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> your</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> changes</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> before</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> deploying</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Deploy</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> failed</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这意味着你本地有一些修改没有推送到仓库里，并且由于部署脚步会通过<code>git pull</code>来获取不在你服务器上的修改内容。</p><p>若是你想要部署但不需要推送任何数据，你可以添加<code>--force</code>选项：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.json</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> production</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --force</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="考虑事项" tabindex="-1"><a class="header-anchor" href="#考虑事项"><span>考虑事项</span></a></h3><ul><li>你可以通过使用<code>--force</code>选项来跳过本地修改的检测</li><li>确保你的远程服务器有权限克隆远程仓库</li><li>你可以基于你想要部署的环境，声明特定的环境变量。比如若是为<code>production</code>环境声明环境变量，添加<code>env_production: { hello: &#39;world&#39; }</code>来声明变量</li><li>你可以将<code>apps</code>和<code>deploy</code>内嵌在<code>package.json</code>文件里（而不一定要使用生态系统文件）</li></ul><h3 id="ssh-克隆错误" tabindex="-1"><a class="header-anchor" href="#ssh-克隆错误"><span>SSH 克隆错误</span></a></h3><p>绝大多数情况下，这些错误是由 PM2 没有正确的<code>key</code>（公钥）去克隆远程仓库导致的。你需要确保在以下的每一步里，<code>key</code>都是可用的。</p><ol><li>若你确定你的<code>key</code>是正确的，尝试在目标服务器上执行<code>git clone your_repo.git</code>。若是成功，继续下一步；否则，请确保你的<code>key</code>存储在服务器上以及你的<code>git account</code>上（就是 github/gitlab 里的吧？）</li><li><code>ssh-copy-id</code>默认会复制名为<code>id_rsa</code>的公钥文件。如果这不是正确的公钥文件，执行<code>ssh-copy-id -i path/to/my/key your_username@server.com</code>将你的公钥添加到（服务器上的）<code>~/.ssh/authorized_keys</code>文件里</li><li>若是你获得了如下的错误：</li></ol><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Deploying</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> production</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> environment</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> host</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mysite.com</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ○</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hook</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pre-setup</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ○</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> running</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> setup</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ○</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cloning</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git@github.com:user/repo.git</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Cloning</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> into</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/var/www/app/source&#39;...</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Permission</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> denied</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (publickey).</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fatal:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Could</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> read</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> repository.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Please</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sure</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> you</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> have</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> correct</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> access</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rights</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> that</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> repository</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exists.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">**Failed to clone**</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> failed</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可能需要创建一个 SSH 配置文件。这肯定能确保正确的 SSH 公钥被用于你想要克隆的任何给定仓库。详见<a href="https://gist.github.com/Protosac/c3fb459b1a942f161f23556f61a67d66" target="_blank" rel="noopener noreferrer">示例</a></p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ~/.ssh/config</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Host</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> alias</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    HostName</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> myserver.com</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    User</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> username</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    IdentityFile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh/mykey</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Usage: `ssh alias`</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Alternative: `ssh -i ~/.ssh/mykey username@myserver.com`</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Host</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deployment</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    HostName</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    User</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> username</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    IdentityFile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh/github_rsa</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Usage:</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># git@deployment:username/anyrepo.git</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># This is for cloning any repo that uses that IdentityFile. This is a good way to make sure that your remote cloning commands use the appropriate key</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="优雅关闭" tabindex="-1"><a class="header-anchor" href="#优雅关闭"><span>优雅关闭</span></a></h2><p>你的应用在整个生命周期里可能会多次重启，比如说部署，更严重一些的，比如应用崩溃。</p><p>但是在应用重启过程中，用户可能会遇到两种问题：</p><ul><li>服务关闭期，服务器返回<code>503 Service Unavailable</code>的相应（服务器能接收到请求，但是无法处理）</li><li>请求失败，若请求时是在重启期间进来的（服务器无法接收到请求）</li></ul><p>服务关闭期，可以通过 PM2 的<code>cluster</code>模式和<code>reload</code>操作来避免。</p><p>请求失败，可以通过优雅地关闭和重启来避免。</p><p>这个指南会介绍如何去实现。</p><h3 id="优雅地关闭" tabindex="-1"><a class="header-anchor" href="#优雅地关闭"><span>优雅地关闭</span></a></h3><p>若想做到优雅关闭，应用必须做到下面 5 步：</p><ol><li>监听 PM2 停止<code>stop</code>进程时发出的通知（以便于进一步停止应用）</li><li>PM2 的负载均衡器停止为该应用接收请求</li><li>完成所有正在进行中的请求</li><li>释放所有资源（数据库，队列）</li><li><code>exit</code>退出</li></ol><p>我们以如下<code>express</code>的应用为例（此处的应用就是<code>express</code>启动的一个服务器）：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> app</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> express</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> port</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ||</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8000</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">req</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Hello world&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) })</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> server</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;http&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">listen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Express server listening on port &#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 1. 监听 PM2 的 SIGINT 信号，该信号是 PM2 停止（stop）进程时发出的</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;SIGINT&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;SIGINT signal received.&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 2. 应用（HTTP 服务器）停止接收请求</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 3. 并完成正在进行中的请求</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // PS: 调用 server.close(fn) 会让服务器停止接收新的连接，并维持已有的链接。这个方法是异步的，服务器最终在所有的连接都结束后会关闭，并且服务器会发布 close 事件，回调函数 fn 在监听到 close 事件时被调用。</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">      console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">      process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 4. 关闭数据库连接比如 mongoose，以成功状态码 0 退出进程</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    mongoose</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">      console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Mongoose connection disconnected&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 5. 退出</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">      process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    })</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  })</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="超时-kill" tabindex="-1"><a class="header-anchor" href="#超时-kill"><span>超时 kill</span></a></h3><p>PM2 默认会等待<code>1600ms</code>，若应用没有自行退出进程，PM2 会发出<code>SIGKILL</code>信号。（PS: <code>SIGKILL</code>是发送给一个进程来导致它立即终止的信号）</p><p>可以在生态系统文件里修改这个默认值，单位是<code>ms</code>。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;app&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./app.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    kill_timeout</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="优雅地启动" tabindex="-1"><a class="header-anchor" href="#优雅地启动"><span>优雅地启动</span></a></h3><p>你的应用经常需要在连接到数据库或其他资源之后，才能接收 HTTP 请求。你的应用必须经过以下 3 步来避免错误：</p><ol><li>打开数据库连接</li><li>开始监听某端口</li><li>通知 PM2，应用已经 Ready</li></ol><p>首先，在生态配置文件里启用<code>ready</code>信号</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;api&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./api.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    wait_ready</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    listen_timeout</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }],</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PS: PM2 默认在<code>3000ms</code>以后认为你的应用已经<code>ready</code>，可通过<code>listen_timeout</code>修改这个默认值。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> app</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> express</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> port</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ||</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8000</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">req</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Hello world&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) })</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> server</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;http&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 1. 打开数据库连接</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">mongoose</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;mongodb://mongosA:27501,mongosB:27501&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 2. 开始监听端口</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">listen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Express server listening on port &#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 3. 通知 PM2，应用已经 Ready</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ready&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  })</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多个-pm2" tabindex="-1"><a class="header-anchor" href="#多个-pm2"><span>多个 PM2</span></a></h2><p>若是想要在一个用户下运行多个 PM2 实例，你需要覆盖环境变量<code>PM2_HOME</code>。设置<code>PM2_HOME</code>将改变 PM2 的配置文件夹，比如套接字通讯（<code>$HOME/.pm2/pub.sock</code>和<code>$HOME/.pm2/rpc.sock</code>），默认日志所在位置的路径等等。</p><p>执行 PM2 的命令时，加上<code>PM2_HOME</code>环境变量：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PM2_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/tmp/.pm2</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo.js</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PM2_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/tmp/.pm3</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开发工具" tabindex="-1"><a class="header-anchor" href="#开发工具"><span>开发工具</span></a></h2><p>PM2 带有两个开发工具，可以在开发阶段帮助到你：监测重启模式、静态文件服务器。</p><h3 id="监测重启" tabindex="-1"><a class="header-anchor" href="#监测重启"><span>监测重启</span></a></h3><p>监测重启模式，将监测当前目录下的文件更改，进而重新启动应用。</p><p>生态系统文件里作如下配置，将启动该模式：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;app&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./app.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    watch</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意，监测重启模式将硬重启，不会发送<code>SIGINT</code>信号。</p></div><h4 id="监测选项" tabindex="-1"><a class="header-anchor" href="#监测选项"><span>监测选项</span></a></h4><p>你可以使用高级选项来指定监测或忽略的路径。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;app&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./app.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    watch</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>watch</code>: 路径字符串或路径字符串的数组，若设置成<code>true</code>，将监测当前目录</li><li><code>ignore_watch</code>: 路径字符串或路径字符串的数组，传给 PM2 的依赖<code>chokidar</code>作为<code>glob</code>匹配或正则表达式</li><li><code>watch_options</code>: 选项对象，传给 PM2 的依赖<code>chokidar</code>（PM2 使用的默认选项是，<code>persistent</code>和<code>ignoreInitial</code>设置为<code>true</code>）</li></ul><p>当在 NFS 设备上工作时，你只需设置<code>usePolling: true</code>，详细描述在<a href="https://github.com/paulmillr/chokidar/issues/242" target="_blank" rel="noopener noreferrer">this chokidar issue</a></p><h4 id="cli" tabindex="-1"><a class="header-anchor" href="#cli"><span>CLI</span></a></h4><p>CLI 里，可通过<code>pm2 start app.js --watch</code>启用监测模式。</p><p>需要注意，当<code>--watch</code>启用后，你必须使用<code>pm2 stop --watch app</code>来停止进程，因为简单的停止方式<code>pm2 stop app</code>不会停止监测。</p><h3 id="基于-http-提供静态文件服务" tabindex="-1"><a class="header-anchor" href="#基于-http-提供静态文件服务"><span>基于 HTTP 提供静态文件服务</span></a></h3><p>PM2 可以基于 HTTP 提供静态文件服务，就像前端应用一样。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> serve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">por</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">t&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>默认的路径是当前目录，默认的端口是<code>8080</code>，因此你可以直接使用<code>pm2 serve</code>。</p><p>在生态系统文件里，可以配置路径和端口号。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 静态文件服务进程</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;static-file&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;serve&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      env</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        PM2_SERVE_PATH</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        PM2_SERVE_PORT</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8080</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>静态文件服务启动时会另起一个进程，因此在配置时，也要<code>apps</code>新增一个配置对象，而不是在已有的其他应用的<code>env</code>里配置<code>PM2_SERVE_PATH</code>和<code>PM2_SERVE_PORT</code>。</p></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>所有其他 PM2 的选项依旧可用。</p></div><h2 id="最佳实践-环境变量" tabindex="-1"><a class="header-anchor" href="#最佳实践-环境变量"><span>最佳实践 - 环境变量</span></a></h2><p>环境变量是可以在 Node.js 应用之外设置的特殊变量，这对使得你的应用在外部可配置这一点来说，尤其有用。比如云服务器提供商想要改变你应用的监听端口，或者你想要启用冗长的日志但不想写入代码里。</p><h3 id="cli-方式" tabindex="-1"><a class="header-anchor" href="#cli-方式"><span>CLI 方式</span></a></h3><p>通过 CLI，环境是保守的，这意味着，当你想运行不同进程管理的操作时（比如<code>restart</code>/<code>reload</code>/<code>stop</code>/<code>start</code>），新的环境变量不会更新到你的应用里。</p><p>可通过 CLI 设置环境变量：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ENV_VAR</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">value</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>若更新环境变量，你必须在<code>restart</code>/<code>reload</code>命令后追加<code>--update-env</code>选项：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ENV_VAR</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">somethingnew</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --update-env</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="生态系统文件方式" tabindex="-1"><a class="header-anchor" href="#生态系统文件方式"><span>生态系统文件方式</span></a></h3><p>无论何时你修改生态系统文件，环境变量都会被更新。</p><p>通过生态系统文件设置默认环境变量，你只需在<code>env</code>属性下声明即可。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  apps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;app&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    script</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./app.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    env</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      NODE_ENV</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;development&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    env_production</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      NODE_ENV</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;production&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后，启动：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以看到，在生态系统文件里，还有<code>env_production</code>的配置。若是你想使用<code>env_production</code>环境而不是默认环境，你只需传入<code>--env &lt;env_name&gt;</code>选项：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> production</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>生态系统文件里的<code>env_production</code>是<code>env_*</code>形式的正则表达式，使用 CLI <code>-- env *</code>调用时你可以设置任何值。</p></div><p>If you are using Ecosystem file to manage your application environment variables under the env: attribute, the updated ones will always be updated on pm2 &lt;restart/reload&gt; app.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart/reload</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ecosystem.config.js</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [--env </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">production]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="好的实践-node-env-变量" tabindex="-1"><a class="header-anchor" href="#好的实践-node-env-变量"><span>好的实践：NODE_ENV 变量</span></a></h3><p>按照 Node.js 的惯例，<code>NODE_ENV</code>环境变量指定了应用运行时的环境，通常值会是<code>development</code>或<code>production</code>。</p><p>比如，按照<code>express</code>的文档，将<code>NODE_ENV</code>设为<code>&quot;production&quot;</code>将会开启以下 3 项功能来提升性能：</p><ul><li>缓存视图模板</li><li>缓存 CSS 扩展创建的 CSS 文件</li><li>生成更少的冗长错误日志</li></ul><h2 id="集成-云服务器提供商" tabindex="-1"><a class="header-anchor" href="#集成-云服务器提供商"><span>集成 - 云服务器提供商</span></a></h2><p>若是你使用云服务器，你可能发现你无法使用命令行来启动你的 Node.js 应用。</p><p>在这种情况下，PM2 必须作为依赖添加到你的项目里，并随着启动脚本执行。</p><ol><li>准备好你的应用 <ul><li>创建并配置好你的生态系统文件</li><li>安装 PM2 作为你项目的依赖，<code>npm install pm2</code></li><li>按若下修改你项目<code>package.json</code>文件里的<code>start</code>脚本</li></ul></li><li>部署应用：你可以像常规 Node.js 项目一样，将你的应用部署到云服务器上</li></ol><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;scripts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;start&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;pm2-runtime start ecosystem.config.js --env production&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="【思考】node-js-应用线上部署" tabindex="-1"><a class="header-anchor" href="#【思考】node-js-应用线上部署"><span>【思考】Node.js 应用线上部署</span></a></h2><h3 id="不使用-pm2" tabindex="-1"><a class="header-anchor" href="#不使用-pm2"><span>不使用 PM2</span></a></h3><p>若是不使用 PM2 来部署应用，则在上线时，需要重启应用（即先关闭应用，再启动应用），这必须会导致重启期间的一小段<code>downtime</code>，期间用户无法正常访问应用。</p><p>针对这种情况，一般会配合 Nginx 的健康检查来实现应用的<code>0-seconds downtime</code>，即应用不会存在<code>downtime</code>。若 Nginx 使用主动健康检查，一般会要求应用提供一接口，用于 Nginx 定期访问接口，若发现接口返回失败超过一定次数，则认为该服务器不可用，则在一段时间内将不会分发流量到该服务器上。这段时间过后，Nginx 会再次访问接口，若是可用，则将恢复分发流量到该服务器。</p><p>利用 Nginx 的健康检查功能，应用在重新部署时，会先通过脚本将应用的健康检查接口置为不可用状态，在延时一定时间后（在此期间，Nginx 会多次请求接口，并判断出该服务器不可用，不再分发流量到服务器上），才开始关闭应用，紧接着启动应用。应用启动后，当 Nginx 经过一段时间再次请求接口，发现接口可用，将会恢复分发流量了。</p><p>因此，配合 Nginx 的健康检查，即使不使用 PM2，也能实现应用的<code>0-seconds downtime</code>上线。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>以上这种方式，仅限应用部署在多台服务器的情况下，当单台服务器不可用时，Nginx 会将流量分发到其他服务器上。</p></div><h3 id="使用-pm2-的-reload" tabindex="-1"><a class="header-anchor" href="#使用-pm2-的-reload"><span>使用 PM2 的 reload</span></a></h3><p>若是使用 PM2 的<code>reload</code>命令，可直接实现应用的<code>0-seconds downtime</code>。其原理类似于 Nginx 的健康检查，只不过 PM2 内部实现了类似于 Nginx 的健康检查和负载均衡的功能。</p><h4 id="猜想" tabindex="-1"><a class="header-anchor" href="#猜想"><span>猜想</span></a></h4><p>（以下内容是使用<code>reload</code>时，我关于新旧版本文件变化的猜测，未经过证实）</p><p>上线系统都会区分每次打包的版本，在上线之前都会将旧版本的文件保存起来，方便回滚，再用新版本代替旧版本，完成应用的更新。（应该是增量更新吧？）</p><p>新版本的文件有两种情况：</p><ul><li>新旧版本的文件名称相同，新版本的文件会覆盖旧版本的文件</li><li>新旧版本的文件名称不同，增量更新，仅增加新的文件</li></ul><p>新版本的文件覆盖/添加好之后，上线系统会执行命令，让应用重启，以使用新版本。</p><h5 id="新旧版本的文件名称相同" tabindex="-1"><a class="header-anchor" href="#新旧版本的文件名称相同"><span>新旧版本的文件名称相同</span></a></h5><p>若新旧版本的文件名称是相同，存在以下两种情况：</p><ul><li>文件是被实时读取的。这种情况下，在应用重启之前，新文件就可能已经被使用了。</li><li>文件在应用启动时被读取到内存。这种情况下，即使新文件覆盖了旧文件，应用在重启之前，还是会使用旧文件（因为是被读取到内存中，不会实时从文件系统读取），在应用重启之后，新文件被读取到内存里。</li></ul>', 408)),
    createVNode(_component_global_config)
  ]);
}
const pm2_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "pm2.html.vue"]]);
const data = JSON.parse('{"path":"/front-end-engineering/development-skills/nodejs/pm2.html","title":"PM2","lang":"en-US","frontmatter":{"description":"PM2 Reference: PM2 英文官网 实践功能 运行不同版本的 Node 添加interpreter参数，其值为 Node 版本所在位置 杀掉 PM2 守护进程 PM2 崩溃后重新启动所有进程 PM2 崩溃后会导致原先所有项目进程都消失了，执行pm2 ls也看不到任务进程。 PM2 提供了启动脚本，可以将进程列表保存，在 PM2 预期/非预期...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/front-end-engineering/development-skills/nodejs/pm2.html"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"PM2"}],["meta",{"property":"og:description","content":"PM2 Reference: PM2 英文官网 实践功能 运行不同版本的 Node 添加interpreter参数，其值为 Node 版本所在位置 杀掉 PM2 守护进程 PM2 崩溃后重新启动所有进程 PM2 崩溃后会导致原先所有项目进程都消失了，执行pm2 ls也看不到任务进程。 PM2 提供了启动脚本，可以将进程列表保存，在 PM2 预期/非预期..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-31T12:47:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-31T12:47:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PM2\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-31T12:47:00.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"实践功能","slug":"实践功能","link":"#实践功能","children":[{"level":3,"title":"运行不同版本的 Node","slug":"运行不同版本的-node","link":"#运行不同版本的-node","children":[]},{"level":3,"title":"杀掉 PM2 守护进程","slug":"杀掉-pm2-守护进程","link":"#杀掉-pm2-守护进程","children":[]},{"level":3,"title":"PM2 崩溃后重新启动所有进程","slug":"pm2-崩溃后重新启动所有进程","link":"#pm2-崩溃后重新启动所有进程","children":[]}]},{"level":2,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[{"level":3,"title":"安装 PM2","slug":"安装-pm2","link":"#安装-pm2","children":[]},{"level":3,"title":"开启/重启进程","slug":"开启-重启进程","link":"#开启-重启进程","children":[]},{"level":3,"title":"停止、删除进程","slug":"停止、删除进程","link":"#停止、删除进程","children":[]},{"level":3,"title":"显示进程列表","slug":"显示进程列表","link":"#显示进程列表","children":[]},{"level":3,"title":"显示进程详细信息","slug":"显示进程详细信息","link":"#显示进程详细信息","children":[]},{"level":3,"title":"访问实时日志","slug":"访问实时日志","link":"#访问实时日志","children":[]},{"level":3,"title":"显示环境","slug":"显示环境","link":"#显示环境","children":[]},{"level":3,"title":"从 boot 启动 PM2","slug":"从-boot-启动-pm2","link":"#从-boot-启动-pm2","children":[]},{"level":3,"title":"Reset Restart Counters","slug":"reset-restart-counters","link":"#reset-restart-counters","children":[]},{"level":3,"title":"监控","slug":"监控","link":"#监控","children":[]},{"level":3,"title":"Dump all process data","slug":"dump-all-process-data","link":"#dump-all-process-data","children":[]}]},{"level":2,"title":"进程管理","slug":"进程管理","link":"#进程管理","children":[{"level":3,"title":"进程列表","slug":"进程列表","link":"#进程列表","children":[]},{"level":3,"title":"保存/恢复进程列表","slug":"保存-恢复进程列表","link":"#保存-恢复进程列表","children":[]},{"level":3,"title":"管理任何类型的应用","slug":"管理任何类型的应用","link":"#管理任何类型的应用","children":[]},{"level":3,"title":"本地监控","slug":"本地监控","link":"#本地监控","children":[]}]},{"level":2,"title":"生态系统文件","slug":"生态系统文件","link":"#生态系统文件","children":[{"level":3,"title":"生成默认生态系统文件","slug":"生成默认生态系统文件","link":"#生成默认生态系统文件","children":[]},{"level":3,"title":"启动所有应用","slug":"启动所有应用","link":"#启动所有应用","children":[]},{"level":3,"title":"仅启动单个应用","slug":"仅启动单个应用","link":"#仅启动单个应用","children":[]},{"level":3,"title":"更新生态系统文件","slug":"更新生态系统文件","link":"#更新生态系统文件","children":[]},{"level":3,"title":"自定义生态系统文件","slug":"自定义生态系统文件","link":"#自定义生态系统文件","children":[]},{"level":3,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[]},{"level":3,"title":"指定应用的端口","slug":"指定应用的端口","link":"#指定应用的端口","children":[]}]},{"level":2,"title":"集群模式 & 热重载","slug":"集群模式-热重载","link":"#集群模式-热重载","children":[{"level":3,"title":"无状态应用","slug":"无状态应用","link":"#无状态应用","children":[]},{"level":3,"title":"无间断式重载","slug":"无间断式重载","link":"#无间断式重载","children":[]}]},{"level":2,"title":"watch & 重启（restart）","slug":"watch-重启-restart","link":"#watch-重启-restart","children":[]},{"level":2,"title":"重启策略","slug":"重启策略","link":"#重启策略","children":[{"level":3,"title":"指数级的重启时延","slug":"指数级的重启时延","link":"#指数级的重启时延","children":[]},{"level":3,"title":"固定重启时延","slug":"固定重启时延","link":"#固定重启时延","children":[]},{"level":3,"title":"禁用自动重启","slug":"禁用自动重启","link":"#禁用自动重启","children":[]}]},{"level":2,"title":"日志管理","slug":"日志管理","link":"#日志管理","children":[{"level":3,"title":"访问日志","slug":"访问日志","link":"#访问日志","children":[]},{"level":3,"title":"日志文件配置","slug":"日志文件配置","link":"#日志文件配置","children":[]},{"level":3,"title":"合并日志","slug":"合并日志","link":"#合并日志","children":[]},{"level":3,"title":"禁用日志","slug":"禁用日志","link":"#禁用日志","children":[]},{"level":3,"title":"日志格式","slug":"日志格式","link":"#日志格式","children":[]}]},{"level":2,"title":"startup 钩子","slug":"startup-钩子","link":"#startup-钩子","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"保存进程列表","slug":"保存进程列表","link":"#保存进程列表","children":[]},{"level":3,"title":"禁用 startup 系统","slug":"禁用-startup-系统","link":"#禁用-startup-系统","children":[]},{"level":3,"title":"用户授权","slug":"用户授权","link":"#用户授权","children":[]},{"level":3,"title":"更新 startup 钩子","slug":"更新-startup-钩子","link":"#更新-startup-钩子","children":[]},{"level":3,"title":"兼容性","slug":"兼容性","link":"#兼容性","children":[]},{"level":3,"title":"Under the hoodlink","slug":"under-the-hoodlink","link":"#under-the-hoodlink","children":[]}]},{"level":2,"title":"入口点","slug":"入口点","link":"#入口点","children":[]},{"level":2,"title":"内存阈值，自动重载","slug":"内存阈值-自动重载","link":"#内存阈值-自动重载","children":[]},{"level":2,"title":"升级 PM2","slug":"升级-pm2","link":"#升级-pm2","children":[]},{"level":2,"title":"Source Map 支持","slug":"source-map-支持","link":"#source-map-支持","children":[{"level":3,"title":"检查异常","slug":"检查异常","link":"#检查异常","children":[]},{"level":3,"title":"禁用 Source Map","slug":"禁用-source-map","link":"#禁用-source-map","children":[]}]},{"level":2,"title":"transpilers 转译器","slug":"transpilers-转译器","link":"#transpilers-转译器","children":[]},{"level":2,"title":"以编程方式使用 PM2","slug":"以编程方式使用-pm2","link":"#以编程方式使用-pm2","children":[{"level":3,"title":"简单示例","slug":"简单示例","link":"#简单示例","children":[]},{"level":3,"title":"编程 API","slug":"编程-api","link":"#编程-api","children":[]}]},{"level":2,"title":"使用 SSH 部署","slug":"使用-ssh-部署","link":"#使用-ssh-部署","children":[{"level":3,"title":"安装","slug":"安装-1","link":"#安装-1","children":[]},{"level":3,"title":"部署选项","slug":"部署选项","link":"#部署选项","children":[]},{"level":3,"title":"强制部署","slug":"强制部署","link":"#强制部署","children":[]},{"level":3,"title":"考虑事项","slug":"考虑事项","link":"#考虑事项","children":[]},{"level":3,"title":"SSH 克隆错误","slug":"ssh-克隆错误","link":"#ssh-克隆错误","children":[]}]},{"level":2,"title":"优雅关闭","slug":"优雅关闭","link":"#优雅关闭","children":[{"level":3,"title":"优雅地关闭","slug":"优雅地关闭","link":"#优雅地关闭","children":[]},{"level":3,"title":"超时 kill","slug":"超时-kill","link":"#超时-kill","children":[]},{"level":3,"title":"优雅地启动","slug":"优雅地启动","link":"#优雅地启动","children":[]}]},{"level":2,"title":"多个 PM2","slug":"多个-pm2","link":"#多个-pm2","children":[]},{"level":2,"title":"开发工具","slug":"开发工具","link":"#开发工具","children":[{"level":3,"title":"监测重启","slug":"监测重启","link":"#监测重启","children":[]},{"level":3,"title":"基于 HTTP 提供静态文件服务","slug":"基于-http-提供静态文件服务","link":"#基于-http-提供静态文件服务","children":[]}]},{"level":2,"title":"最佳实践 - 环境变量","slug":"最佳实践-环境变量","link":"#最佳实践-环境变量","children":[{"level":3,"title":"CLI 方式","slug":"cli-方式","link":"#cli-方式","children":[]},{"level":3,"title":"生态系统文件方式","slug":"生态系统文件方式","link":"#生态系统文件方式","children":[]},{"level":3,"title":"好的实践：NODE_ENV 变量","slug":"好的实践-node-env-变量","link":"#好的实践-node-env-变量","children":[]}]},{"level":2,"title":"集成 - 云服务器提供商","slug":"集成-云服务器提供商","link":"#集成-云服务器提供商","children":[]},{"level":2,"title":"【思考】Node.js 应用线上部署","slug":"【思考】node-js-应用线上部署","link":"#【思考】node-js-应用线上部署","children":[{"level":3,"title":"不使用 PM2","slug":"不使用-pm2","link":"#不使用-pm2","children":[]},{"level":3,"title":"使用 PM2 的 reload","slug":"使用-pm2-的-reload","link":"#使用-pm2-的-reload","children":[]}]}],"git":{"createdTime":1552296876000,"updatedTime":1730378820000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":1}]},"readingTime":{"minutes":31.9,"words":9571},"filePathRelative":"front-end-engineering/development-skills/nodejs/pm2.md","localizedDate":"March 11, 2019","autoDesc":true}');
export {
  pm2_html as comp,
  data
};
