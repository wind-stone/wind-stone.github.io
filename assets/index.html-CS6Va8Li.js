import { r as resolveComponent, c as createElementBlock, b as createStaticVNode, a as createVNode, o as openBlock } from "./app-DNVdkGQA.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper-1tPrXgE0.js";
const _sfc_main = {};
function _sfc_render(_ctx, _cache) {
  const _component_global_config = resolveComponent("global-config");
  return openBlock(), createElementBlock("div", null, [
    _cache[0] || (_cache[0] = createStaticVNode('<h1 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm"><span>pnpm</span></a></h1><h2 id="包管理器主要关注的问题" tabindex="-1"><a class="header-anchor" href="#包管理器主要关注的问题"><span>包管理器主要关注的问题</span></a></h2><ul><li>减少同包同版本的依赖被多次安装，减少磁盘空间占用，加快安装速度</li><li>Windows 存在<a href="https://learn.microsoft.com/zh-cn/windows/win32/fileio/maximum-file-path-limitation?tabs=cmd" target="_blank" rel="noopener noreferrer">最大路径长度限制</a>，最长为 260 个字符（Windows 10 版本 1607 及更高版本中可修改）</li><li>解决“幽灵依赖”问题，未在<code>dependencies</code>里声明的包，不可以在代码里直接<code>import</code></li><li>解决“依赖分身”问题</li></ul><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2><ul><li><a href="https://juejin.cn/post/7127295203177676837" target="_blank" rel="noopener noreferrer">pnpm 是凭什么对 npm 和 yarn 降维打击的</a></li><li><a href="https://juejin.cn/post/7044807973868142622" target="_blank" rel="noopener noreferrer">包管理器 pnpm 中的软链与硬链</a></li><li><a href="https://zhuanlan.zhihu.com/p/353208988" target="_blank" rel="noopener noreferrer">NPM 中的 phatom 与 doppelgangers 问题</a>，说明什么是幽灵依赖和依赖分身</li></ul><h2 id="软链与硬链" tabindex="-1"><a class="header-anchor" href="#软链与硬链"><span>软链与硬链</span></a></h2><h3 id="区别" tabindex="-1"><a class="header-anchor" href="#区别"><span>区别</span></a></h3><p>在执行过程中，软链的文件路径和软链实际地址是不匹配的。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// &lt;root&gt;/index.js</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cwd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">__filename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建 link 文件夹</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建 index.js 的一个软链</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.js</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link/index-sl.js</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建 index.js 的一个硬链</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">roo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">t&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/index.js</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">roo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">t&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/link/index-hl.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.js</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt;root&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt;root&gt;/index.js</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link/index-sl.js</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt;root&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt;root&gt;/index-hl.js</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link/index-hl.js</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt;root&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt;root&gt;/link/index-hl.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分别执行<code>index.js</code>及它的软链<code>index-sl.js</code>和硬链<code>index-hl.js</code>可以发现，软链的<code>__filename</code>显示的是源文件<code>index.js</code>的文件地址。</p><h3 id="在-pnpm-里的作用" tabindex="-1"><a class="header-anchor" href="#在-pnpm-里的作用"><span>在 pnpm 里的作用</span></a></h3><p>软链在 pnpm 里（结合着依赖查找规则）主要是</p><ul><li>解决幽灵依赖的问题，只有项目<code>package.json</code>的<code>dependencies</code>里显示声明的依赖，才会出现在<code>&lt;root&gt;/node_modules</code>里，且该目录下的文件夹都是软链。</li><li>解决依赖的 npm 包路径过长的问题。根据软链的特性，npm 包路径的长度最长也就是<code>.pnpm/&lt;packagename&gt;@&lt;version&gt;/node_modules/&lt;packagename&gt;</code>。</li></ul><p>硬链在 pnpm 里主要是为了：</p><ul><li>实现文件复用，保证相同的包不会被重复下载。</li></ul><h2 id="pnpm-存在的问题" tabindex="-1"><a class="header-anchor" href="#pnpm-存在的问题"><span>pnpm 存在的问题</span></a></h2><h2 id="待解决" tabindex="-1"><a class="header-anchor" href="#待解决"><span>待解决</span></a></h2><h3 id="pnpm-对-peer-dependencies-为什么有不一样的处理" tabindex="-1"><a class="header-anchor" href="#pnpm-对-peer-dependencies-为什么有不一样的处理"><span>pnpm 对 peer dependencies 为什么有不一样的处理？</span></a></h3>', 20)),
    createVNode(_component_global_config)
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
const data = JSON.parse('{"path":"/front-end-engineering/environment/package-manager/pnpm/","title":"pnpm","lang":"en-US","frontmatter":{"description":"pnpm 包管理器主要关注的问题 减少同包同版本的依赖被多次安装，减少磁盘空间占用，加快安装速度 Windows 存在最大路径长度限制，最长为 260 个字符（Windows 10 版本 1607 及更高版本中可修改） 解决“幽灵依赖”问题，未在dependencies里声明的包，不可以在代码里直接import 解决“依赖分身”问题 参考文档 pnpm...","head":[["meta",{"property":"og:url","content":"https://blog.windstone.cc/front-end-engineering/environment/package-manager/pnpm/"}],["meta",{"property":"og:site_name","content":"风动之石的博客"}],["meta",{"property":"og:title","content":"pnpm"}],["meta",{"property":"og:description","content":"pnpm 包管理器主要关注的问题 减少同包同版本的依赖被多次安装，减少磁盘空间占用，加快安装速度 Windows 存在最大路径长度限制，最长为 260 个字符（Windows 10 版本 1607 及更高版本中可修改） 解决“幽灵依赖”问题，未在dependencies里声明的包，不可以在代码里直接import 解决“依赖分身”问题 参考文档 pnpm..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-31T12:47:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-31T12:47:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pnpm\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-31T12:47:00.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"包管理器主要关注的问题","slug":"包管理器主要关注的问题","link":"#包管理器主要关注的问题","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]},{"level":2,"title":"软链与硬链","slug":"软链与硬链","link":"#软链与硬链","children":[{"level":3,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":3,"title":"在 pnpm 里的作用","slug":"在-pnpm-里的作用","link":"#在-pnpm-里的作用","children":[]}]},{"level":2,"title":"pnpm 存在的问题","slug":"pnpm-存在的问题","link":"#pnpm-存在的问题","children":[]},{"level":2,"title":"待解决","slug":"待解决","link":"#待解决","children":[{"level":3,"title":"pnpm 对 peer dependencies 为什么有不一样的处理？","slug":"pnpm-对-peer-dependencies-为什么有不一样的处理","link":"#pnpm-对-peer-dependencies-为什么有不一样的处理","children":[]}]}],"git":{"createdTime":1663568853000,"updatedTime":1730378820000,"contributors":[{"name":"wind-stone","email":"wind-stone@qq.com","commits":1}]},"readingTime":{"minutes":1.56,"words":469},"filePathRelative":"front-end-engineering/environment/package-manager/pnpm/index.md","localizedDate":"September 19, 2022","autoDesc":true}');
export {
  index_html as comp,
  data
};
